<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2020-03-10T14:33:53.853481</updated>
  <id>deaec38d-dc20-4fc7-bebb-229ff2d7d709</id>

  
    <entry>
      <title>bellman_visitor&amp;lt;EventVisitorList&amp;gt; -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/archive/boost_docs/libs/graph/bellman_visitor.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:archive/boost_docs/libs/graph/bellman_visitor.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;bellman_visitor&amp;lt;EventVisitorList&amp;gt;&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;このクラスは、(&lt;code&gt;std::pair&lt;/code&gt; を使って作られる) &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/EventVisitor.html&#34;&gt;EventVisitor&lt;/a&gt; のリストを &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/BellmanFordVisitor.html&#34;&gt;BellmanFordVisitor&lt;/a&gt; に変換するアダプタである。&lt;/p&gt;
&lt;h2&gt;モデル&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/BellmanFordVisitor.html&#34;&gt;BellmanFordVisitor&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;テンプレートパラメータ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;パラメータ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;デフォルト&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EventVisitorList&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::pair&lt;/code&gt; で作られた &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/EventVisitor.html&#34;&gt;EventVisitor&lt;/a&gt; のリスト。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;null_visitor&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;定義場所&lt;/h2&gt;
&lt;p&gt;boost/graph/bellman_ford_shortest_paths.hpp&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;p&gt;このクラスは &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/BellmanFordVisitor.html&#34;&gt;BellmanFordVisitor&lt;/a&gt; に要求される全てのメンバ関数を実装している。それぞれの関数で、適切なイベントが EventVisitorList の中の &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/EventVisitor.html&#34;&gt;EventVisitor&lt;/a&gt; にディスパッチされる。&lt;/p&gt;
&lt;h2&gt;非メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template &amp;lt;class EventVisitorList&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;bellman_visitor&amp;lt;EventVisitorList&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;make_bellman_visitor(EventVisitorList ev_list);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イベントビジタのリストを &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/BellmanFordVisitor.html&#34;&gt;BellmanFordVisitor&lt;/a&gt; に適合させたものを返す。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/visitor_concepts.md.nolink&#34;&gt;Visitorコンセプト&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イベントビジタ: &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/predecessor_recorder.md.nolink&#34;&gt;predecessor_recorder&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/distance_recorder.html&#34;&gt;distance_recorder&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/time_stamper.md.nolink&#34;&gt;time_stamper&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/property_writer.md.nolink&#34;&gt;property_writer&lt;/a&gt;&lt;/code&gt; 。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Copyright © 2000-2001&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_31_0/people/jeremy_siek.htm&#34; target=&#34;_blank&#34;&gt;Jeremy Siek&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:jsiek@osl.iu.edu&#34;&gt;jsiek@osl.iu.edu&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_31_0/people/liequan_lee.htm&#34; target=&#34;_blank&#34;&gt;Lie-Quan Lee&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:llee@cs.indiana.edu&#34;&gt;llee@cs.indiana.edu&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.osl.iu.edu/~lums&#34; target=&#34;_blank&#34;&gt;Andrew Lumsdaine&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:lums@osl.iu.edu&#34;&gt;lums@osl.iu.edu&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Japanese Translation Copyright © 2003 &lt;a href=&#34;mailto:gimite@mx12.freecom.ne.jp&#34;&gt;Hiroshi Ichikawa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オリジナルの、及びこの著作権表示が全ての複製の中に現れる限り、この文書の複製、利用、変更、販売そして配布を認める。このドキュメントは「あるがまま」に提供されており、いかなる明示的、暗黙的保証も行わない。また、いかなる目的に対しても、その利用が適していることを関知しない。&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bfs_visitor&amp;lt;EventVisitorList&amp;gt; -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/archive/boost_docs/libs/graph/bfs_visitor.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:archive/boost_docs/libs/graph/bfs_visitor.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/archive/boost_docs/libs/graph/bfs_visitor.md b/archive/boost_docs/libs/graph/bfs_visitor.md
index 9044b54..bd4ccdf 100644
--- a/archive/boost_docs/libs/graph/bfs_visitor.md
+++ b/archive/boost_docs/libs/graph/bfs_visitor.md
@@ -1,4 +1,4 @@
-# bfs_visitor&amp;lt;EventVisitorList&amp;gt;
+# bfs_visitor&amp;amp;lt;EventVisitorList&amp;amp;gt;
 このクラスは、(`std::pair` を使って作られる) [EventVisitor](EventVisitor.md) のリストを [BFSVisitor](BFSVisitor.md) に変換するアダプタである。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bgl_named_params&amp;lt;Param, Type, Rest&amp;gt; -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/archive/boost_docs/libs/graph/bgl_named_params.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:archive/boost_docs/libs/graph/bgl_named_params.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/archive/boost_docs/libs/graph/bgl_named_params.md b/archive/boost_docs/libs/graph/bgl_named_params.md
index 905b497..8b4819a 100644
--- a/archive/boost_docs/libs/graph/bgl_named_params.md
+++ b/archive/boost_docs/libs/graph/bgl_named_params.md
@@ -1,4 +1,4 @@
-# bgl_named_params&amp;lt;Param, Type, Rest&amp;gt;
+# bgl_named_params&amp;amp;lt;Param, Type, Rest&amp;amp;gt;
 多くの Boost.Graph アルゴリズムは長いパラメータ列を持ち、その多くはデフォルト値を持つ。これがいくつかの問題を起こす。 1つは、 C++ がテンプレート関数のデフォルト値を扱う仕組みを持っていないことだ。しかし、異なる数のパラメータを持つ複数のバージョンのアルゴリズムを作り、各バージョンが一部のパラメータにデフォルト値を与えることで、この問題は克服される。これは Boost.Graph の以前のバージョンで使われていたアプローチだ。しかし、この解決法はまだ、いくつかの理由で不十分だ。
 
 - パラメータのデフォルト値は特定の順序でしか使えない。デフォルト値の順序がユーザの状況に合わなければ、ユーザは全てのパラメータを与えるという手段をとらなければならない。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>dfs_visitor&amp;lt;EventVisitorList&amp;gt; -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/archive/boost_docs/libs/graph/dfs_visitor.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:archive/boost_docs/libs/graph/dfs_visitor.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;dfs_visitor&amp;lt;EventVisitorList&amp;gt;&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;このクラスは、(&lt;code&gt;std::pair&lt;/code&gt; を使って作られる) &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/EventVisitor.html&#34;&gt;EventVisitor&lt;/a&gt; のリストを &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/DFSVisitor.html&#34;&gt;DFSVisitor&lt;/a&gt; に変換するアダプタである。&lt;/p&gt;
&lt;h2&gt;コード例&lt;/h2&gt;
&lt;p&gt;例は &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/EventVisitor.html&#34;&gt;EventVisitor&lt;/a&gt; を参照。&lt;/p&gt;
&lt;h2&gt;モデル&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/DFSVisitor.html&#34;&gt;DFSVisitor&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;テンプレートパラメータ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;パラメータ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;デフォルト&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EventVisitorList&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::pair&lt;/code&gt; で作られた EventVisitor のリスト。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;null_visitor&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;定義場所&lt;/h2&gt;
&lt;p&gt;boost/graph/depth_first_search.hpp&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;p&gt;このクラスは DFSVisitor に要求される全てのメンバ関数を実装している。それぞれの関数で、適切なイベントが &lt;code&gt;EventVisitorList&lt;/code&gt; の中の EventVisitor にディスパッチされる。&lt;/p&gt;
&lt;h2&gt;非メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template &amp;lt;class EventVisitorList&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;dfs_visitor&amp;lt;EventVisitorList&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;make_dfs_visitor(EventVisitorList ev_list);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イベントビジタのリストを DFS ビジタに適合させたものを返す。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/visitor_concepts.md.nolink&#34;&gt;Visitorコンセプト&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イベントビジタ: &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/predecessor_recorder.md.nolink&#34;&gt;predecessor_recorder&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/distance_recorder.html&#34;&gt;distance_recorder&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/time_stamper.md.nolink&#34;&gt;time_stamper&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/property_writer.md.nolink&#34;&gt;property_writer&lt;/a&gt;&lt;/code&gt; 。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Copyright © 2000-2001&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_31_0/people/jeremy_siek.htm&#34; target=&#34;_blank&#34;&gt;Jeremy Siek&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:jsiek@osl.iu.edu&#34;&gt;jsiek@osl.iu.edu&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_31_0/people/liequan_lee.htm&#34; target=&#34;_blank&#34;&gt;Lie-Quan Lee&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:llee@cs.indiana.edu&#34;&gt;llee@cs.indiana.edu&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.osl.iu.edu/~lums&#34; target=&#34;_blank&#34;&gt;Andrew Lumsdaine&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:lums@osl.iu.edu&#34;&gt;lums@osl.iu.edu&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Japanese Translation Copyright © 2003 &lt;a href=&#34;mailto:takashi-it@po6.nsk.ne.jp&#34;&gt;Takashi Itou&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オリジナルの、及びこの著作権表示が全ての複製の中に現れる限り、この文書の複製、利用、変更、販売そして配布を認める。このドキュメントは「あるがまま」に提供されており、いかなる明示的、暗黙的保証も行わない。また、いかなる目的に対しても、その利用が適していることを関知しない。&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>dijkstra_visitor&amp;lt;EventVisitorList&amp;gt; -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/archive/boost_docs/libs/graph/dijkstra_visitor.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:archive/boost_docs/libs/graph/dijkstra_visitor.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/archive/boost_docs/libs/graph/dijkstra_visitor.md b/archive/boost_docs/libs/graph/dijkstra_visitor.md
index 9f28769..34a34c7 100644
--- a/archive/boost_docs/libs/graph/dijkstra_visitor.md
+++ b/archive/boost_docs/libs/graph/dijkstra_visitor.md
@@ -1,4 +1,4 @@
-# dijkstra_visitor&amp;lt;EventVisitorList&amp;gt;
+# dijkstra_visitor&amp;amp;lt;EventVisitorList&amp;amp;gt;
 このクラスは、(`std::pair` を使って作られる) [EventVisitor](EventVisitor.md) のリストを [DijkstraVisitor](DijkstraVisitor.md) に変換するアダプタである。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>distance_recorder&amp;lt;DistanceMap, EventTag&amp;gt; -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/archive/boost_docs/libs/graph/distance_recorder.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:archive/boost_docs/libs/graph/distance_recorder.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;distance_recorder&amp;lt;DistanceMap, EventTag&amp;gt;&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;これは、グラフ探索中に、ある始点から各頂点までの距離を (&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/property_map.md.nolink&#34;&gt;property map&lt;/a&gt; を使って) 記録する &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/EventVisitor.html&#34;&gt;EventVisitor&lt;/a&gt; である。辺 &lt;code&gt;e = (u,v)&lt;/code&gt; に対して実行されると、 &lt;code&gt;v&lt;/code&gt; への距離は &lt;code&gt;u&lt;/code&gt; への距離より大きくなる。 &lt;code&gt;distance_recorder&lt;/code&gt; は &lt;code&gt;on_tree_edge&lt;/code&gt; や &lt;code&gt;on_relax_edge&lt;/code&gt; イベントでよく使われる。頂点イベントには使用できない。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/bfs_visitor.html&#34;&gt;bfs_visitor&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/dfs_visitor.html&#34;&gt;dfs_visitor&lt;/a&gt;&lt;/code&gt; などのアルゴリズム別のアダプタでラップすることで、 &lt;code&gt;distance_recorder&lt;/code&gt; を グラフアルゴリズムで使えるようになる。また、&lt;code&gt;std::pair&lt;/code&gt; を使って他のイベントビジタと結合して、 EventVisitorList を作れる。&lt;/p&gt;
&lt;h2&gt;コード例&lt;/h2&gt;
&lt;p&gt;例は &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/bfs_visitor.html&#34;&gt;bfs_visitor&lt;/a&gt;&lt;/code&gt; を参照。&lt;/p&gt;
&lt;h2&gt;モデル&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/EventVisitor.html&#34;&gt;EventVisitor&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;定義場所&lt;/h2&gt;
&lt;p&gt;boost/graph/visitors.hpp&lt;/p&gt;
&lt;h2&gt;テンプレートパラメータ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;パラメータ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;デフォルト&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DistanceMap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;キーの型と値の型がグラフの頂点記述子型である &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/property_map/WritablePropertyMap.md.nolink&#34;&gt;WritablePropertyMap&lt;/a&gt; &lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/distance_recorder.html#translate_note_1&#34;&gt;[訳注1]&lt;/a&gt;。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EventTag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;グラフアルゴリズム中、いつ &lt;code&gt;distance_recorder&lt;/code&gt; が呼び出されるかを指定するタグ。 &lt;code&gt;EventTag&lt;/code&gt; は辺イベントでなければならない。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;distance_recorder::event_filter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータ &lt;code&gt;EventTag&lt;/code&gt; と同じ型。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;メンバ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;distance_recorder(DistanceMap pa);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;距離プロパティマップ &lt;code&gt;pa&lt;/code&gt; を使って &lt;code&gt;distance_recorder&lt;/code&gt; オブジェクトを構築する。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template &amp;lt;class Edge, class Graph&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;void operator()(Edge e, const Graph&amp;amp; g);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;辺 &lt;code&gt;e = (u,v)&lt;/code&gt; を渡されると、 &lt;code&gt;u&lt;/code&gt; への距離に 1 を足したものを &lt;code&gt;v&lt;/code&gt; への距離として記録する。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;非メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template &amp;lt;class DistanceMap, class Tag&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;distance_recorder&amp;lt;DistanceMap, Tag&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;record_distances(DistanceMap pa, Tag);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;distance_recorder&lt;/code&gt; を作る便利な方法。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/visitor_concepts.md.nolink&#34;&gt;Visitorコンセプト&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イベントビジタ: &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/predecessor_recorder.md.nolink&#34;&gt;predecessor_recorder&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/time_stamper.md.nolink&#34;&gt;time_stamper&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/property_writer.md.nolink&#34;&gt;property_writer&lt;/a&gt;&lt;/code&gt; 。&lt;/p&gt;
&lt;h2&gt;訳注&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://boostjp.github.io/archive/boost_docs/libs/graph/distance_recorder.html#translate_note_1&#34; id=&#34;translate_note_1&#34;&gt;[訳注1]&lt;/a&gt; 値の型は整数である。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Copyright © 2000-2001&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_31_0/people/jeremy_siek.htm&#34; target=&#34;_blank&#34;&gt;Jeremy Siek&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:jsiek@osl.iu.edu&#34;&gt;jsiek@osl.iu.edu&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_31_0/people/liequan_lee.htm&#34; target=&#34;_blank&#34;&gt;Lie-Quan Lee&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:llee@cs.indiana.edu&#34;&gt;llee@cs.indiana.edu&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.osl.iu.edu/~lums&#34; target=&#34;_blank&#34;&gt;Andrew Lumsdaine&lt;/a&gt;, Indiana University (&lt;a href=&#34;mailto:lums@osl.iu.edu&#34;&gt;lums@osl.iu.edu&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Japanese Translation Copyright © 2003 &lt;a href=&#34;mailto:gimite@mx12.freecom.ne.jp&#34;&gt;Hiroshi Ichikawa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オリジナルの、及びこの著作権表示が全ての複製の中に現れる限り、この文書の複製、利用、変更、販売そして配布を認める。このドキュメントは「あるがまま」に提供されており、いかなる明示的、暗黙的保証も行わない。また、いかなる目的に対しても、その利用が適していることを関知しない。&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>edge_list&amp;lt;EdgeIterator, ValueType, DiffType&amp;gt; -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/archive/boost_docs/libs/graph/edge_list.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:archive/boost_docs/libs/graph/edge_list.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/archive/boost_docs/libs/graph/edge_list.md b/archive/boost_docs/libs/graph/edge_list.md
index b21c0e1..60dd73a 100644
--- a/archive/boost_docs/libs/graph/edge_list.md
+++ b/archive/boost_docs/libs/graph/edge_list.md
@@ -1,4 +1,4 @@
-# edge_list&amp;lt;EdgeIterator, ValueType, DiffType&amp;gt;
+# edge_list&amp;amp;lt;EdgeIterator, ValueType, DiffType&amp;amp;gt;
 `edge_list` クラスは辺イテレータのペアを [EdgeListGraph](EdgeListGraph.md) をモデルとするクラスに変えるアダプタである。辺イテレータの `value_type` は `std::pair` (もしくは少なくとも `first` メンバと `second` メンバを持っている) でなければならない。ペアの `first_type` と `second_type` は同じでなければならず、それらはグラフの `vertex_descriptor` のために使われるだろう。 `ValueType` と `DiffType` のテンプレート・パラメータは、コンパイラが部分特殊化版をサポートしていない時にのみ必要である。そうでなければデフォルトは正しい型になる。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Header &amp;lt;boost/io/ios_state.hpp&amp;gt; -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/archive/boost_docs/libs/io/ios_state.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:archive/boost_docs/libs/io/ios_state.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/archive/boost_docs/libs/io/ios_state.md b/archive/boost_docs/libs/io/ios_state.md
index def27dd..2f4ad2d 100644
--- a/archive/boost_docs/libs/io/ios_state.md
+++ b/archive/boost_docs/libs/io/ios_state.md
@@ -1,4 +1,4 @@
-# Header &amp;lt;boost/io/ios_state.hpp&amp;gt;
+# Header &amp;amp;lt;boost/io/ios_state.hpp&amp;amp;gt;
 
 boost/io/ios_state.hppは、C++の入出力ストリームシステムにおけるオブジェクトのストリーム状態を保持することを保証する。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.46.0 リリースノート -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/document/version/1_46_0.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:document/version/1_46_0.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_46_0.md b/document/version/1_46_0.md
index 1631992..b090e14 100644
--- a/document/version/1_46_0.md
+++ b/document/version/1_46_0.md
@@ -163,7 +163,7 @@
 ## &amp;lt;a id=&amp;#34;proto&amp;#34; href=&amp;#34;#proto&amp;#34;&amp;gt;Proto&amp;lt;/a&amp;gt;
 
 - ※破壊的変更： `&amp;lt;boost/proto/core.hpp&amp;gt;` で定義されていた `functional::pop_front` と `functional::reverse` を `&amp;lt;boost/proto/functional&amp;gt;` に移動。
-- 多くのFusionアルゴリズムのラッパー(`fusion::at`等)と、標準ユーティリティライクな `make_pair`, `first`, `second` を 新たな `&amp;lt;boost/proto/functional&amp;gt;&amp;gt; ディレクトリに追加。
+- 多くのFusionアルゴリズムのラッパー(`fusion::at`等)と、標準ユーティリティライクな `make_pair`, `first`, `second` を 新たな `&amp;lt;boost/proto/functional&amp;gt;` ディレクトリに追加。
 - 文法から個別に変換を指定するのを許可。
 - `proto::matches` は、ドメイン固有式(domain-specific expression)を保存するラッパー。
 - `proto::and_` 内での `operator,` の ADL 問題を修正。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.56.0リリースノート -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/document/version/1_56_0.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:document/version/1_56_0.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.56.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_56_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_56_0.qbk&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;モジュール化&lt;/h2&gt;
&lt;p&gt;Boostのバージョン管理を、Subversionから、Gitのサブモジュールを使用するシステムに移行した。ディレクトリの構成が、以前と少し異なる。&lt;/p&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新モジュール&lt;/h2&gt;
&lt;p&gt;以下のモジュールは、既存のコードから抽出されたもの。ヘッダのパスは今までと同じ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assert&lt;ul&gt;
&lt;li&gt;カスタマイズ可能なassertマクロ。Peter Dimovによってメンテナンスされる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Core&lt;ul&gt;
&lt;li&gt;他のライブラリから使用される、最小の依存関係を持つコアユーティリティ。Peter Dimov、Glen Fernandes、Andrey Semashevによってメンテナンスされる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lexical_Cast&lt;ul&gt;
&lt;li&gt;Kevlin Henney氏による、テキストと整数間の汎用的な変換。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Throw_Exception&lt;ul&gt;
&lt;li&gt;Emil Dotchevski氏による、Boostから例外を送出するための一般的なインフラストラクチャ。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WinApi&lt;ul&gt;
&lt;li&gt;Boost内部で使用する、&lt;code&gt;&amp;lt;windows.h&amp;gt;&lt;/code&gt;を必要としない宣言。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_56_0/doc/html/align.html&#34; target=&#34;_blank&#34;&gt;Align&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Glen Fernandes氏による、メモリアラインメントの関数、アロケータ、アダプタ。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_56_0/doc/html/boost_typeindex.html&#34; target=&#34;_blank&#34;&gt;Type_Index&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Antony Polukhin氏による、実行時とコンパイル時両方で使用できる、コピー可能なtype info。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#accumulators&#34;&gt;Accumulators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#assign&#34;&gt;Assign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#circular-buffer&#34;&gt;Circular Buffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#concept-check&#34;&gt;Concept Check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#dynamic-bitset&#34;&gt;Dynamic Bitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#mpl&#34;&gt;MPL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#multi-array&#34;&gt;Multi Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#multi-index&#34;&gt;Multi-Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#thread&#34;&gt;Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#tti&#34;&gt;TTI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#uuid&#34;&gt;UUID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;非推奨ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TR1&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#accumulators&#34; id=&#34;accumulators&#34;&gt;Accumulators&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなアキュムレータとして、&lt;code&gt;rolling_variance&lt;/code&gt;と&lt;code&gt;rolling_moment&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;右辺値参照関係の問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9215&#34; target=&#34;_blank&#34;&gt;#9215&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9462&#34; target=&#34;_blank&#34;&gt;#9462&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;古いコンパイラのサポートを終了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Coroutineの新しいインタフェースで&lt;code&gt;boost::asio::spawn()&lt;/code&gt;が動かなかった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9442&#34; target=&#34;_blank&#34;&gt;#9442&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9928&#34; target=&#34;_blank&#34;&gt;#9928&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_service&lt;/code&gt;のデストラクタによるクリーンナップ処理が走ったとき、&lt;code&gt;boost::asio::spawn()&lt;/code&gt;のコルーチンが正しくアンワインド(スタック巻き戻しによるスタック内のデストラクタ呼び出し)されない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9731&#34; target=&#34;_blank&#34;&gt;#9731&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_service::wrap()&lt;/code&gt;と&lt;code&gt;strand::wrap()&lt;/code&gt;によって生成されるハンドラのための継続フックの移譲を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9741&#34; target=&#34;_blank&#34;&gt;#9741&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;接続志向IPソケットのために、WindowsのI/O完了ポートバックエンドに、使用可能なら&lt;code&gt;ConnectEx()&lt;/code&gt;関数を使用するようにした。&lt;/li&gt;
&lt;li&gt;非Windows(および非IOCP Windows)環境において、&lt;code&gt;io_service&lt;/code&gt;のインスタンスひとつに付き、ひとつの条件変数を使用するよう変更した。これによって、&lt;code&gt;run_one()&lt;/code&gt;が複数スレッドから呼ばれる際の、潜在的な競合状態を解決した。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::chrono&lt;/code&gt;と&lt;code&gt;std::chrono&lt;/code&gt;のクロックをベースにしてタイムアウト時間を計算する際の整数オーバーフローを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9662&#34; target=&#34;_blank&#34;&gt;#9662&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9778&#34; target=&#34;_blank&#34;&gt;#9778&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;kqueueバックエンドの&lt;code&gt;EV_CLEAR&lt;/code&gt;ハンドリングに、さらに変更を加えた。Mac OS Xの&lt;code&gt;close()&lt;/code&gt;システムコールがハングするケースがあったため。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resolver_query_base::flags::operator~&lt;/code&gt;の実装で無限再帰が起こっていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9548&#34; target=&#34;_blank&#34;&gt;#9548&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;膨大な数のソケットを使うWindows上で&lt;code&gt;select&lt;/code&gt;リアクタがより効率的に動作するようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9528&#34; target=&#34;_blank&#34;&gt;#9528&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;WindowsのGCCで起きるtype aliasingの問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9550&#34; target=&#34;_blank&#34;&gt;#9550&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;アドレスサニタイザーの警告を回避するために、バッファのテストをコンパイル時のみ走らせるようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8295&#34; target=&#34;_blank&#34;&gt;#8295&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;最近のWindowsバージョンで、&lt;code&gt;GetQueuedCompletionStatus()&lt;/code&gt;のタイムアウトワークアラウンドを無効にした(commit &lt;a href=&#34;https://github.com/boostorg/asio/commit/9d13af49f80f2f12e3b99c9c8b4219b0c4bfe8eb&#34; target=&#34;_blank&#34;&gt;9d13af4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;リンクローカルなマルチキャストアドレスを使用する際の、文字列ベースのスコープIDをサポートした&lt;/li&gt;
&lt;li&gt;IPv6マルチキャストグループのジョインに、明示的に指定されなければアドレスのスコープIDを使用するよう変更した&lt;/li&gt;
&lt;li&gt;リンクローカルなマルチキャストアドレスのテストがMac OS XとBSD環境で失敗していたので修正&lt;/li&gt;
&lt;li&gt;GCCで無名enumを使用すると発生する問題のワークアラウンドを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10042&#34; target=&#34;_blank&#34;&gt;#10042&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windowsの&lt;code&gt;HANDLE&lt;/code&gt;バックエンドを、&lt;code&gt;ERROR_MORE_DATA&lt;/code&gt;を無視するよう巻き戻した。代わりに、他のもの(&lt;code&gt;error_code&lt;/code&gt;を使うか、&lt;code&gt;system_error&lt;/code&gt;例外の送出)を使ってエラーを伝搬するようにし、転送されたバイト数が返るようにした。部分的なメッセージを処理する必要がある場合は、&lt;code&gt;error_code&lt;/code&gt;のオーバーロードを使用すること(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10034&#34; target=&#34;_blank&#34;&gt;#10034&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signal_set&lt;/code&gt;の実装に含まれるシグナル番号チェックでの、&lt;a href=&#34;http://ja.wikipedia.org/wiki/Off-by-one%E3%82%A8%E3%83%A9%E3%83%BC&#34; target=&#34;_blank&#34;&gt;off-by-oneエラー&lt;/a&gt;を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9324&#34; target=&#34;_blank&#34;&gt;#9324&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Crayコンパイラで動くように、SSE2を組み込み関数ではなくインラインアセンブラを使用するようにした&lt;/li&gt;
&lt;li&gt;最新のVisual C++とWindows SDKで非推奨マークが付いているWinsockの機能を使用停止(commit &lt;a href=&#34;https://github.com/boostorg/asio/commit/cc9730e493c015e8ae089da1b8438fb6477710f7&#34; target=&#34;_blank&#34;&gt;cc9730e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;AIXのGCCで単体テストを通すためのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;多くのドキュメントの細かい部分を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8295&#34; target=&#34;_blank&#34;&gt;#8295&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9605&#34; target=&#34;_blank&#34;&gt;#9605&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9771&#34; target=&#34;_blank&#34;&gt;#9771&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#assign&#34; id=&#34;assign&#34;&gt;Assign&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11での曖昧さを解決(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3073&#34; target=&#34;_blank&#34;&gt;#3073&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリを再設計した。内部的なリファクタリングのほか、さまざまなバグの修正、機能テストマクロの不適切な値やオーバーフローハンドリングの割り込みといったことも含む。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;memory_order&lt;/code&gt;列挙型の値を変更した。列挙型の値はインタフェースの一部ではないが、ユーザーのインタフェースとして使用する場合、ABIが壊れる可能性がある。&lt;/li&gt;
&lt;li&gt;MSVCのWindows x64向けに、128ビットのアトミック操作を実装した。ターゲットCPUにcmpxchg16b命令が存在していることを想定している。初期のいくつかのAMD CPUはこの命令をサポートしていない。そのようなターゲットのためには、&lt;code&gt;BOOST_ATOMIC_NO_CMPXCHG16B&lt;/code&gt;マクロを定義する。&lt;/li&gt;
&lt;li&gt;実験的に、MSVCのWindows ARMターゲットのサポートを実装した。&lt;/li&gt;
&lt;li&gt;実験的に、GCCのDEC Alphaターゲットのサポートを実装した。&lt;/li&gt;
&lt;li&gt;GCCのARMv6とそれ以降のサポートを改善した。全てのアトミック操作を、CASベースのループの代わりに、アセンブラブロックで実装した。ARMv7で64ビット操作をサポートした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_FLAG_INIT&lt;/code&gt;マクロと&lt;code&gt;atomic_flag&lt;/code&gt;の初期化の、オプショナルなサポートを実装した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8158&#34; target=&#34;_blank&#34;&gt;#8158&lt;/a&gt;)。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;constexpr&lt;/code&gt;デフォルトコンストラクタによる初期化に依存する。以下の記事を参照：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zakkas783.tumblr.com/post/25490513807/constant-initialization&#34; target=&#34;_blank&#34;&gt;Constant Initialization - 雑貨’s tumblr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SPARCv9ターゲットのコンパイルを修正した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9446&#34; target=&#34;_blank&#34;&gt;#9446&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;PowerPCターゲットのコンパイルを修正した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9447&#34; target=&#34;_blank&#34;&gt;#9447&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;x86とx86-64に対するClangでのいくつかの互換性問題を修正した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9610&#34; target=&#34;_blank&#34;&gt;#9610&lt;/a&gt;、&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9842&#34; target=&#34;_blank&#34;&gt;#9842&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;WindowsのIA64プラットフォームに特化したコードを削除した。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;Circular Buffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11のアロケータモデルをサポート(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9970&#34; target=&#34;_blank&#34;&gt;#9970&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;古いコンパイラのサポートを終了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#concept-check&#34; id=&#34;concept-check&#34;&gt;Concept Check&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5012&#34; target=&#34;_blank&#34;&gt;#5012&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#container&#34; id=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DLMallocベースの拡張アロケータを追加&lt;ul&gt;
&lt;li&gt;参照：「&lt;a href=&#34;http://faithandbrave.hateblo.jp/entry/2014/04/21/141406&#34; target=&#34;_blank&#34;&gt;Boost.Containerにrealloc相当の機能が入る予定&lt;/a&gt;」&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::container::allocator&amp;lt;T, 2&amp;gt;&lt;/code&gt;を使用することで(2はバージョン)、&lt;code&gt;vector&lt;/code&gt;の内部実装に&lt;code&gt;realloc()&lt;/code&gt;相当の機能が使われるようになる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::container::node_allocator&lt;/code&gt;を追加。これは、シンプルな分離ストレージのアロケータ。明示的に要求しない限り、システムにメモリを返さない、Boost.Poolと同じようなアプローチをとっている。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::container::adaptive_pool&lt;/code&gt;を追加。これは、&lt;code&gt;node_allocator&lt;/code&gt;が低コストでシステムにメモリを返せるようにするためのもの。&lt;/li&gt;
&lt;li&gt;これらの機能を使うには、Boost.Containerのビルドが必要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ツリーベースの順序付き連想コンテナのカスタマイズ性を改善した。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(multi)map&lt;/code&gt;および&lt;code&gt;(multi)set&lt;/code&gt;の実装に、AVL tree、Scapegoat tree、Splay treeを使用できるようにした。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VS2005でcontainer/memory_util.hppをインクルードしたあとに&lt;code&gt;swap()&lt;/code&gt;を使うとコンパイルエラーになる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9338&#34; target=&#34;_blank&#34;&gt;#9338&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vector::resize()&lt;/code&gt;のパフォーマンス問題を解決(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9637&#34; target=&#34;_blank&#34;&gt;#9637&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;の構築を最適化(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9648&#34; target=&#34;_blank&#34;&gt;#9648&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stable_vector&lt;/code&gt;のイテレータから&lt;code&gt;iterator_range&lt;/code&gt;を作れない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9801&#34; target=&#34;_blank&#34;&gt;#9801&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vector::resize(size, default_init)&lt;/code&gt;のドキュメントでvalue initializedされると書かれていたので、default initializedに修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9915&#34; target=&#34;_blank&#34;&gt;#9915&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ほとんどのコンテナの代入演算子で、アロケータの伝搬が間違っていたのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9916&#34; target=&#34;_blank&#34;&gt;#9916&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flat_map::insert(ordered_unique_range_t...)&lt;/code&gt;に&lt;code&gt;move_iterator&lt;/code&gt;を渡せない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9931&#34; target=&#34;_blank&#34;&gt;#9931&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vector&lt;/code&gt;の中で、重複メモリ範囲で&lt;code&gt;memcpy()&lt;/code&gt;を行っていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9955&#34; target=&#34;_blank&#34;&gt;#9955&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;：&lt;code&gt;fcontext_t&lt;/code&gt;型を、構造体から、&lt;code&gt;void*&lt;/code&gt;の別名に変更&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fcontext_t&lt;/code&gt;型に関連する&lt;code&gt;make_fcontext()&lt;/code&gt;関数のシグニチャの一部が、&lt;code&gt;fcontext_t*&lt;/code&gt;から&lt;code&gt;fcontext_t&lt;/code&gt;に変わる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux環境において、コンテキストに使用するスタックがexecutable stackではないことを示すマーカーを付けた。これにより、executable stackを作る権限が必要なくなる。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8826&#34; target=&#34;_blank&#34;&gt;#8826&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;iOSとWindows 8環境において、Boost.Contextの例外を捕捉できない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9437&#34; target=&#34;_blank&#34;&gt;#9437&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;x32 ABIをサポート(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9445&#34; target=&#34;_blank&#34;&gt;#9445&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;powerpc_64leをサポート(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9522&#34; target=&#34;_blank&#34;&gt;#9522&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;powerpc_64 le/beの、エンディアン周りのバグを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9743&#34; target=&#34;_blank&#34;&gt;#9743&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Mac OS X + clangに対するx86のバグ修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9774&#34; target=&#34;_blank&#34;&gt;#9774&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#coroutine&#34; id=&#34;coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;symmetric_coroutine&lt;/code&gt;をサポート。&lt;/li&gt;
&lt;li&gt;Boost.Coroutineがサポートするアーキテクチャのリストを、ドキュメントに記載した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9551&#34; target=&#34;_blank&#34;&gt;#9551&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;複数スレッドで&lt;code&gt;pull_coroutine&lt;/code&gt;を使用する際に発生する、&lt;code&gt;protected_stack_allocator&lt;/code&gt;での競合状態を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9355&#34; target=&#34;_blank&#34;&gt;#9355&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;POSIX実装のstack_allocator内で&lt;code&gt;mmap&lt;/code&gt;のエラーチェックをしていなかったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9734&#34; target=&#34;_blank&#34;&gt;#9734&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mmap&lt;/code&gt;後に&lt;code&gt;memset&lt;/code&gt;で0を埋める必要はなかったので削除(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9735&#34; target=&#34;_blank&#34;&gt;#9735&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;coroutineのイテレータが&lt;code&gt;const&lt;/code&gt;修飾版の&lt;code&gt;operator==&lt;/code&gt;を持っていなかったので追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9760&#34; target=&#34;_blank&#34;&gt;#9760&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mmap()&lt;/code&gt;の戻り値を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10070&#34; target=&#34;_blank&#34;&gt;#10070&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;protected_stack_allocator&lt;/code&gt;でファイル記述子は必要なかったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10157&#34; target=&#34;_blank&#34;&gt;#10157&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#chrono&#34; id=&#34;chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HP ux上で、&lt;code&gt;pthread_getcpuclockid()&lt;/code&gt;が定義されていないために、コンパイルエラーになる問題を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6918&#34; target=&#34;_blank&#34;&gt;#6918&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windowsで起動時に&lt;code&gt;steady_clock::now()&lt;/code&gt;を呼ぶと、アサーション失敗になる問題を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8006&#34; target=&#34;_blank&#34;&gt;#8006&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chrono::process_cpu_clock&lt;/code&gt;のtime pointでの1000の係数が、Linux上で間違っていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9337&#34; target=&#34;_blank&#34;&gt;#9337&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;process_cpu_clock::time_point&lt;/code&gt;の出力フォーマットが{real;user;system}の3つになっているはずが、V2ではrealのみが出力されていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9342&#34; target=&#34;_blank&#34;&gt;#9342&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::chrono::floor()&lt;/code&gt;／&lt;code&gt;round()&lt;/code&gt;に負のdurationを渡した結果が間違っていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9419&#34; target=&#34;_blank&#34;&gt;#9419&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_clock&lt;/code&gt;がMac OS X向けに定義されていなかった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9698&#34; target=&#34;_blank&#34;&gt;#9698&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::this_thread::sleep_for()&lt;/code&gt;が、Win32上でときどき、すぐに返ってしまう問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9720&#34; target=&#34;_blank&#34;&gt;#9720&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;gcc-mingwは多くの問題があったため、Boost.Buildから削除された。代わりに&lt;code&gt;&amp;lt;toolset&amp;gt;gcc,&amp;lt;target-os&amp;gt;windows&lt;/code&gt;を使うよう修正した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9859&#34; target=&#34;_blank&#34;&gt;#9859&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Solaris上で&lt;code&gt;timegm()&lt;/code&gt;関数が定義されていないためにコンパイルエラーをが起こっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9918&#34; target=&#34;_blank&#34;&gt;#9918&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::numeric_limits&lt;/code&gt;の静的メンバ関数が&lt;code&gt;constexpr&lt;/code&gt;実装になっていなかった場合にコンパイルエラーが起こっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9811&#34; target=&#34;_blank&#34;&gt;#9811&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;process_cpu_clocks&lt;/code&gt;が32ビット環境でオーバーフローする問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10069&#34; target=&#34;_blank&#34;&gt;#10069&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;QNX上で&lt;code&gt;timegm()&lt;/code&gt;関数が定義されていないためにコンパイルエラーが起こっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10151&#34; target=&#34;_blank&#34;&gt;#10151&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;Dynamic Bitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ムーブコンストラクタのサポートを追加&lt;/li&gt;
&lt;li&gt;MSVC2013の警告を修正&lt;/li&gt;
&lt;li&gt;C++11の最小アロケータ要件をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noexcept&lt;/code&gt;仕様に対応&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可変引数テンプレートを使用した、&lt;code&gt;flyweight&amp;lt;T&amp;gt;&lt;/code&gt;で&lt;code&gt;T::T()&lt;/code&gt;への完全転送をサポートした。(以前まではエミュレーションをしていた)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::initializer_list&lt;/code&gt;を受け取るコンストラクタと代入演算子をサポート。元となる型&lt;code&gt;T&lt;/code&gt;のコンストラクタ引数として使用する。&lt;/li&gt;
&lt;li&gt;DLLモジュール間の静的初期化で発生する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9553&#34; target=&#34;_blank&#34;&gt;#9553&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;メンテナンス関係の細かい修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FusionをGPUで使用可能にした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;buffer()&lt;/code&gt;を追加。これは、ジオメトリの膨張／収縮(inflating/deflating)を行う。(&lt;code&gt;buffer()&lt;/code&gt;アルゴリズム自体は以前からあったが、Boxを大きくするのみだった。)&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;remove_spikes()&lt;/code&gt;を追加。これは、Ring、Polygon、もしくはMulti Polygonからスパイクを削除するアルゴリズム。&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;point_on_surface()&lt;/code&gt;を追加。このアルゴリズムは、Polygonのサーフェイス(インテリア)上のPointを生成する。&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;is_simple()&lt;/code&gt;を追加。このアルゴリズムは、ジオメトリがOGC標準に従ってシンプルなら&lt;code&gt;true&lt;/code&gt;を返す。&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;is_valid()&lt;/code&gt;を追加。このアルゴリズムは、ジオメトリがOGC標準に従って適格なら&lt;code&gt;true&lt;/code&gt;を返す。&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;crosses()&lt;/code&gt;を追加。このアルゴリズムは、OGC標準に従って空間的関係をチェックする。&lt;/li&gt;
&lt;li&gt;集合演算アルゴリズム(&lt;code&gt;difference()&lt;/code&gt;, &lt;code&gt;intersection()&lt;/code&gt;, &lt;code&gt;sym_difference()&lt;/code&gt;, &lt;code&gt;union_()&lt;/code&gt;)に対して、入力としてPointと見なせる型の組、および線形ジオメトリをサポートした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;distance()&lt;/code&gt;アルゴリズムと&lt;code&gt;comparable_distance()&lt;/code&gt;アルゴリズムを、全てのジオメトリの組み合わせに対応した。&lt;/li&gt;
&lt;li&gt;空間関係のアルゴリズム(&lt;code&gt;covered_by()&lt;/code&gt;, &lt;code&gt;touches()&lt;/code&gt;, &lt;code&gt;within()&lt;/code&gt;, etc...)に、線形ジオメトリと面積ジオメトリのサポートを追加。&lt;/li&gt;
&lt;li&gt;様々なアルゴリズムの入力ジオメトリとして、&lt;code&gt;boost::variant&lt;/code&gt;をサポート。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;に、インデックス付きセグメントのサポートを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;の&lt;code&gt;nearest()&lt;/code&gt;に、述語のサポートを追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重なっているポリゴンに対する多くのアルゴリズムの結果がおかしくなる問題を、&lt;code&gt;disjoint()&lt;/code&gt;の実装に&lt;code&gt;point_on_surface()&lt;/code&gt;を使用することで解決した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8310&#34; target=&#34;_blank&#34;&gt;#8310&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;自己交差がないポリゴンから自己交差が作られてしまう問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9081&#34; target=&#34;_blank&#34;&gt;#9081&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;make_qbk.pyの実行がエラーになってドキュメント生成に失敗する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9245&#34; target=&#34;_blank&#34;&gt;#9245&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(sym_)difference()&lt;/code&gt;が成功しない問題を、堅牢な型への再スケーリングによって修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9563&#34; target=&#34;_blank&#34;&gt;#9563&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ほぼ水平のSegmentに対してwinding戦略を付けた&lt;code&gt;within()&lt;/code&gt;の実行結果がおかしい問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9628&#34; target=&#34;_blank&#34;&gt;#9628&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;スパイクのみのポリゴンの、スパイクを削除するようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9871&#34; target=&#34;_blank&#34;&gt;#9871&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;WKTのドキュメントがなかったので追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9947&#34; target=&#34;_blank&#34;&gt;#9947&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;LinestringとBoxに対するdifferenceがintersectionを返す問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10019&#34; target=&#34;_blank&#34;&gt;#10019&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;boost/geometry/arithmetic.hppのコンセプトチェックがおかしかったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10077&#34; target=&#34;_blank&#34;&gt;#10077&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;intersects(polygon)&lt;/code&gt;が自己交差のPointを返していたので修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;equals()&lt;/code&gt;が、OGC標準の非シンプルなジオメトリに対して不正な結果を返していたので修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touches()&lt;/code&gt;が、CCW面積ジオメトリに対して正しく動作していなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;のnearestクエリが、非デカルト(cartesian)座標系において間違った結果を返していたので修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;にInterprocessのアロケータを使うと、いくつかのケースでクラッシュしていたので修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#hash&#34; id=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual C++ 6.0向けのワークアラウンドをいくつか削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash_combine()&lt;/code&gt;の継続的な改善。これは、以前からドキュメント化されていたアルゴリズムの変更。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#interprocess&#34; id=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;Linux上で&lt;code&gt;message_queue&lt;/code&gt;がデッドロックする問題を修正(#Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9221&#34; target=&#34;_blank&#34;&gt;#9221&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;いくつかのコンピュータではCommon AppDataのレジストリが空であるため、Interprocessが動かない問題を修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9226&#34; target=&#34;_blank&#34;&gt;#9226&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WaitForSingleObject(mutex)&lt;/code&gt;を呼び出しているところで、&lt;code&gt;WAIT_ABANDONED&lt;/code&gt;をハンドリングするよう修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9284&#34; target=&#34;_blank&#34;&gt;#9284&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CreateMutex()&lt;/code&gt;を呼び出しているところで、失敗値を&lt;code&gt;winapi::invalid_handle_value(-1)&lt;/code&gt;と比較していたが、実際の失敗値は&lt;code&gt;NULL&lt;/code&gt;なので、比較する値を修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9285&#34; target=&#34;_blank&#34;&gt;#9285&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timed_wait&lt;/code&gt;が寿命切れをチェックしていなかったので修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9288&#34; target=&#34;_blank&#34;&gt;#9288&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;AndroidはXSI共有メモリオブジェクトをサポートしていないので、ワークアラウンドを修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9408&#34; target=&#34;_blank&#34;&gt;#9408&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;managed_external_buffer&lt;/code&gt;オブジェクトの構築でクラッシュする問題を修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9729&#34; target=&#34;_blank&#34;&gt;#9729&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windowsでイベントログが破損しているとbooststampの生成に失敗する問題を修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9767&#34; target=&#34;_blank&#34;&gt;#9767&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Android NDK GCC 4.8でコンパイルに失敗する問題を修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9835&#34; target=&#34;_blank&#34;&gt;#9835&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windowsで共有フォルダが使用可能でない場合に、&lt;code&gt;get_tmp_base_dir()&lt;/code&gt;が失敗する問題を修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9911&#34; target=&#34;_blank&#34;&gt;#9911&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init_atomic_func()&lt;/code&gt;と&lt;code&gt;fini_atomic_func()&lt;/code&gt;での、変数の未初期化警告を修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9946&#34; target=&#34;_blank&#34;&gt;#9946&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;segment_manager::find(unique_instance_t*)&lt;/code&gt;がコンパイルに失敗する問題を修正(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10011&#34; target=&#34;_blank&#34;&gt;#10011&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cray C++ Compilerのサポートを追加(GitHub &lt;a href=&#34;https://github.com/boostorg/interprocess/pull/2&#34; target=&#34;_blank&#34;&gt;#2&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MinGW環境のために、&lt;code&gt;interprocess_exception&lt;/code&gt;例外を送出する部分を修正。エラー内容の取得とthrowを同一行に書くと、&lt;code&gt;GetLastError()&lt;/code&gt;がリセットされてしまうため、2行に分離した(GitHub &lt;a href=&#34;https://github.com/boostorg/interprocess/pull/3&#34; target=&#34;_blank&#34;&gt;#3&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;ABI破壊&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;message_queue&lt;/code&gt;に、&lt;code&gt;BOOST_INTERPROCESS_MSG_QUEUE_CIRCULAR_INDEX&lt;/code&gt;オプションを追加した(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9221&#34; target=&#34;_blank&#34;&gt;#9221&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;try_lock()&lt;/code&gt;の&lt;code&gt;(timed_)lock&lt;/code&gt;コードをリファクタリングし、統一化した。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;condition_variable&lt;/code&gt;のデストラクタの挙動として、POSIXのセマンティクスを許可。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_INTERPROCESS_SHARED_DIR_PATH&lt;/code&gt;オプションを追加。これは、共有メモリオブジェクトの実装としてメモリマップドファイルが使われた場合に、使用する共有ディレクトリの場所を指定するためのもの。&lt;/li&gt;
&lt;li&gt;他のライブラリと同じように、&lt;code&gt;BOOST_USE_WINDOWS_H&lt;/code&gt;をサポートした。これが定義されている場合、&lt;code&gt;&amp;lt;windows.h&amp;gt;&lt;/code&gt;や他のWindows SDKの構造体を使用し、そうでなければ、重いヘッダーの負担を軽減する構造体を定義して使用する。(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10021&#34; target=&#34;_blank&#34;&gt;#10021&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;windows_shared_memory&lt;/code&gt;に&lt;code&gt;get_size()&lt;/code&gt;メンバ関数を追加した(Trac &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10021&#34; target=&#34;_blank&#34;&gt;#10021&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#intrusive&#34; id=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Doxygenによって生成されるリファレンスを改善し、先行宣言のヘッダーを修正、更新した。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;ABI破壊&lt;/strong&gt;&lt;/span&gt; 1.55.0で導入したABIレギュレッションを修正した。主にMSVCコンパイラ周りで。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 以前から非推奨としていた機能を削除した。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;splay&lt;/code&gt;コンテナから&lt;code&gt;xxx_dont_splay()&lt;/code&gt;関数を削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splay&lt;/code&gt;コンテナから&lt;code&gt;splay_set_base_hook&lt;/code&gt;と&lt;code&gt;splay_set_member_hook&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splaytree_algorithms&lt;/code&gt;の関数の追加パラメータ「&lt;code&gt;bool splay = true&lt;/code&gt;」を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;Visual Studio 2010/2012で&lt;code&gt;has_member_function_callable_with_construct_impl&lt;/code&gt;がコンパイルエラーになっていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8468&#34; target=&#34;_blank&#34;&gt;#8468&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9332&#34; target=&#34;_blank&#34;&gt;#9332&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list_impl::iterator_to()&lt;/code&gt;メンバ関数内で使用する&lt;code&gt;value_traits&lt;/code&gt;を、ステートフルにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9650&#34; target=&#34;_blank&#34;&gt;#9650&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;最近のSun CC CompilerでIntrusiveのコンパイルができなくなっていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9746&#34; target=&#34;_blank&#34;&gt;#9736&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;safe_link(or auto_unlink)を付けたintrusive listが、解放後のメモリを操作していた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9940&#34; target=&#34;_blank&#34;&gt;#9940&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9949&#34; target=&#34;_blank&#34;&gt;#9949&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const_cast&lt;/code&gt;の使用をやめた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9948&#34; target=&#34;_blank&#34;&gt;#9948&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;デフォルトフックから派生しない場合の、侵入フックのテストを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9961&#34; target=&#34;_blank&#34;&gt;#9961&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ツリーの再バランスコードの冗長な代入を回避して、最適化した&lt;/li&gt;
&lt;li&gt;64ビット環境の&lt;code&gt;suggested_upper_bucket_count()&lt;/code&gt;と&lt;code&gt;suggested_lower_bucket_count()&lt;/code&gt;用に、64ビットの素数値を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8468&#34; target=&#34;_blank&#34;&gt;#8468&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;古いSun CC Compilerのworkaroundを削除。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;try_lexical_convert()&lt;/code&gt;関数を追加。この関数は変換失敗時に&lt;code&gt;false&lt;/code&gt;を返し、出力パラメータの型にDefault Constructibleを要求しない(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6700&#34; target=&#34;_blank&#34;&gt;#6700&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;先頭が0の文字列を&lt;code&gt;bool&lt;/code&gt;に変換する処理を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9659&#34; target=&#34;_blank&#34;&gt;#9659&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;Boost 1.47.0まで&lt;code&gt;boost::lexical_cast&amp;lt;bool&amp;gt;(&#34;00&#34;)&lt;/code&gt;は成功し&lt;code&gt;false&lt;/code&gt;を返していたが、それ以降で&lt;code&gt;bad_lexical_cast&lt;/code&gt;例外を送出していた。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;より小さなバイナリを生成し、コンパイラの作業をよりシンプルにする変更を行った(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9046&#34; target=&#34;_blank&#34;&gt;#9046&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;このライブラリを、Boost Conversion Libraryから分離した。&lt;/li&gt;
&lt;li&gt;警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8991&#34; target=&#34;_blank&#34;&gt;#8991&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;全体的な変更：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windowsターゲットにおいて、このライブラリはデフォルトでWindows XP向けにコンパイルするようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;record&lt;/code&gt;と&lt;code&gt;record_view&lt;/code&gt;の添字演算子に&lt;code&gt;attribute_name&lt;/code&gt;引数を追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_formatting_ostream&lt;/code&gt;で、一時オブジェクトを出力できるようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9389&#34; target=&#34;_blank&#34;&gt;#9389&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;フォーマット文字列に、名前付きスコープの関数名とソースファイル名を入れられるようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9263&#34; target=&#34;_blank&#34;&gt;#9263&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;named scope formatterに、不完全および空のmarkerのサポートを追加した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9123&#34; target=&#34;_blank&#34;&gt;#9123&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;不完全な名前付きスコープリストのデフォルトの出力フォーマットを変更した：末尾のスコープ区切り文字を省略するようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::regex&lt;/code&gt;のサポートを追加。&lt;/li&gt;
&lt;li&gt;Boost.Logのデフォルトで、Boost.Regexを内部的な正規表現に使用するようにした。この正規表現バックエンドは、マクロで変更できる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;バグ修正：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AVX2を有効にしたCPU(たとえばIntelのHaswell)での&lt;code&gt;dump&lt;/code&gt;マニピュレータを修正&lt;/li&gt;
&lt;li&gt;ロガークラスの&lt;code&gt;get_attribute()&lt;/code&gt;メンバ関数のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;同期／非同期sinkフロントエンドの&lt;code&gt;locked_backend()&lt;/code&gt;関数の実装で発生していたデータ競合を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;block_on_overflow&lt;/code&gt;戦略を使用した非同期sinkの&lt;code&gt;enqueue()&lt;/code&gt;メンバ関数での、ロギングスレッドの無限ブロックを修正より詳細な変更は、ChangeLogを参照：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/release/libs/log/doc/html/log/changelog.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; メンテナンス用の機能を、libs/math/include_privateディレクトリ以下に移動した。影響を受けるヘッダは以下：&lt;ul&gt;
&lt;li&gt;boost/math/tools/test_data.hpp&lt;/li&gt;
&lt;li&gt;boost/math/tools/remez.hpp&lt;/li&gt;
&lt;li&gt;boost/math/constants/generate.hpp&lt;/li&gt;
&lt;li&gt;boost/math/tools/solve.hpp&lt;/li&gt;
&lt;li&gt;boost/math/tools/test.hpp&lt;/li&gt;
&lt;li&gt;もしこれらの機能を引き続き使いたい場合は、libs/math/include_privateディレクトリへのパスを通せばよい。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 分布関数と特殊関数が、overflow errorを吐き出す変わりに、正の無限大の値を返すよう修正し、ドキュメントに挙動を明記した。これまでoverflow errorが発生したときのデフォルトの動作は&lt;code&gt;std::overflow_error&lt;/code&gt;例外の送出だったが、例外を送出するかしないかは、関数ごとに違っていた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10111&#34; target=&#34;_blank&#34;&gt;#10111&lt;/a&gt;)。&lt;ul&gt;
&lt;li&gt;影響がある特殊関数は以下：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gamma_p_inva()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gamma_q_inva()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta_inva()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibetac_inva()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta_invb()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibetac_invb()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gamma_p_inv()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gamma_q_inv()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;影響がある分布関数は以下：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pareto_distribution&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beta_distribution&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geometric_distribution&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;negative_binomial_distribution&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;binomial_distribution&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chi_squared_distribution&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gamma_distribution&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inverse_chi_squared_distribution&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inverse_gamma_distribution&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;round()&lt;/code&gt;と&lt;code&gt;trunc()&lt;/code&gt;の引数として、整数を受け取れるようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10066&#34; target=&#34;_blank&#34;&gt;#10066&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;0階導関数(zero derivative)をハンドリングするよう、Halleyのイテレーションを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10046&#34; target=&#34;_blank&#34;&gt;#10046&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;geometric distribution (幾何分布)の内部処理で、渡されたポリシーを使っていない箇所があったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9833&#34; target=&#34;_blank&#34;&gt;#9833&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;negative binomial distribution (負の二項分布)のコーナーケースを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9834&#34; target=&#34;_blank&#34;&gt;#9834&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Mac OSでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;スターリングの近似を使うために、&lt;code&gt;tgamma&lt;/code&gt;と&lt;code&gt;lgamma&lt;/code&gt;の精度を任意に変更できる&lt;code&gt;bernoulli_numbers&lt;/code&gt;を追加(Nikhar Agrawal氏作)&lt;/li&gt;
&lt;li&gt;ベッセル関数の最初の導関数を追加(Anton Bikineev氏作)：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cyl_bessel_j_prime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cyl_neumann_prime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cyl_bessel_i_prime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cyl_bessel_k_prime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sph_bessel_prime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sph_neumann_prime&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Studentのt分布のサンプルコードにあったバグを修正。sample meanの透過性テストも一緒に修正。&lt;/li&gt;
&lt;li&gt;より良いルート探索コードに使えるmax_iterパラメータをドキュメントに記載した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9225&#34; target=&#34;_blank&#34;&gt;#9225&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;型の定数を有効／無効にするオプションを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9240&#34; target=&#34;_blank&#34;&gt;#9240&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ベッセルのI0とI1における、負数のハンドリングを整理した(それと、もう使っていないコードを削除した)。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9512&#34; target=&#34;_blank&#34;&gt;#9512&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tgamma&lt;/code&gt;と&lt;code&gt;lgamma&lt;/code&gt;に非常に小さい値が渡された場合でもハンドリングできるよう修正した。これらはspuriousオーバーフローを生成しないようになった。(Rocco Romeoに感謝)&lt;/li&gt;
&lt;li&gt;「&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9672&#34; target=&#34;_blank&#34;&gt;#9672 Laplace distribution(ラプラス分布)のPDFとCDFがdomain error例外を送出する&lt;/a&gt;」ランダムな変量(variate)を無限にした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rising_factorial&lt;/code&gt;、&lt;code&gt;falling_factorial&lt;/code&gt;、&lt;code&gt;tgamma_delta_ratio&lt;/code&gt;にあったいくつかのコーナーケースを修正した。Rocco Romeoに感謝。&lt;/li&gt;
&lt;li&gt;使っていなかった定数&lt;code&gt;pow23_four_minus_pi&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#move&#34; id=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_MOVE_RET&lt;/code&gt;マクロを追加&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;MSVC向けの設定マクロがundefされていなかった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9482&#34; target=&#34;_blank&#34;&gt;#9482&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントに&lt;code&gt;BOOST_RV_REF_START&lt;/code&gt;というマクロが記載されていたが、&lt;code&gt;BOOST_RV_REF_BEG&lt;/code&gt;の間違いだったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9045&#34; target=&#34;_blank&#34;&gt;#9045&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;アラインメント指定された型に対して、Boost.Moveが自前実装している&lt;code&gt;is_convertible&lt;/code&gt;がコンパイルエラーになっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8420&#34; target=&#34;_blank&#34;&gt;#8420&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#mpl&#34; id=&#34;mpl&#34;&gt;MPL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::mpl::for_each&lt;/code&gt;を、GPUで使用可能にした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#multi-array&#34; id=&#34;multi-array&#34;&gt;Multi Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;operator()&lt;/code&gt;がCollectionコンセプトをチェックしているが、実際にはRandomAccessCollectionを要求していた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5664&#34; target=&#34;_blank&#34;&gt;#5664&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Visual C++ 2010デバッグモードでのコンパイルエラーを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4874&#34; target=&#34;_blank&#34;&gt;#4874&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fortran_storage_ordering&lt;/code&gt;のサンプルコードが間違っていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3581&#34; target=&#34;_blank&#34;&gt;#3581&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;コンセプトが&lt;code&gt;detail&lt;/code&gt;名前空間に置かれていたので、&lt;code&gt;detail&lt;/code&gt;の外に出した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4032&#34; target=&#34;_blank&#34;&gt;#4032&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++標準文書へのリンクが壊れていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9212&#34; target=&#34;_blank&#34;&gt;#9212&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCCの-Wundefオプションで発生する&lt;code&gt;BOOST_MULTI_ARRAY_NO_GENERATORS&lt;/code&gt;関係の警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8368&#34; target=&#34;_blank&#34;&gt;#8368&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;erase(iterator)のオーバーロードが、次を指すイテレータを返す必要があるためにパフォーマンスが遅かった(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4264&#34; target=&#34;_blank&#34;&gt;#4264&lt;/a&gt;を参照)。&lt;a href=&#34;http://lwg.github.io/issues/lwg-closed.html#579&#34; target=&#34;_blank&#34;&gt;LWG issue #579&lt;/a&gt;の解決策に基いて、ひとつ以上の要素メモリを使用することを犠牲にして、eraseのインタフェースを維持したままこの問題を解決した。実際には、非順序連想コンテナに対する計算量の要件は、hashed indicesで以下のように改善した：&lt;ul&gt;
&lt;li&gt;与えられた要素の削除を、無条件に定数時間にした&lt;/li&gt;
&lt;li&gt;最悪ケースの計算量はO(n)ではなく、O(n&lt;sub&gt;dist&lt;/sub&gt;)となる。n&lt;sub&gt;dist&lt;/sub&gt;は、そのインデックスにおける要素数とは同等でない数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;hashed indiciesの&lt;code&gt;iterator&lt;/code&gt;と&lt;code&gt;local iterator&lt;/code&gt;の内部表現が、新しいデータ構造に依存して変更される。これはシリアライズに影響を与えるため、対応するシリアライズのバージョンが0から1に上がる。hashed indiciesの&lt;code&gt;(local) iterator&lt;/code&gt;を含む古いアーカイブは、1.56.0のBoost.Multi-Indexに読み込める。&lt;/li&gt;
&lt;li&gt;hashed indiciesに&lt;code&gt;reserve&lt;/code&gt;メンバ関数を追加。&lt;/li&gt;
&lt;li&gt;hashed indiciesの等値／非等値のチェックを、C++標準規格の[unord.req]仕様に合わせた。&lt;/li&gt;
&lt;li&gt;Boost.Multi-Indexの&lt;code&gt;public&lt;/code&gt;インタフェースを、&lt;code&gt;noexcept&lt;/code&gt;に対応した。(&lt;code&gt;noexcept&lt;/code&gt;が使用可能なコンパイラで)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multi_index_container&lt;/code&gt;への挿入失敗のパフォーマンスを改善した。&lt;/li&gt;
&lt;li&gt;MSVC 7.0以前のサポートを目的とした内部コードを削除した。この修正によって、コンパイル時間がわずかに速くなる可能性がある。&lt;/li&gt;
&lt;li&gt;右辺値を挿入できなかったバグを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9665&#34; target=&#34;_blank&#34;&gt;#9665&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_BIND_NO_PLACEHOLDERS&lt;/code&gt;に対応し、名前空間修飾なしのプレースホルダーを直接使用しないように修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9798&#34; target=&#34;_blank&#34;&gt;#9798&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;メンテナンス上の細かい修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#multi-precision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;浮動小数点数型から&lt;code&gt;rational&lt;/code&gt;への変換を&lt;code&gt;implicit&lt;/code&gt;にした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10082&#34; target=&#34;_blank&#34;&gt;#10082&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;checked_cpp_rational&lt;/code&gt; typedefの定義を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt;の、文字列からの代入でのバグを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9936&#34; target=&#34;_blank&#34;&gt;#9936&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;2進浮動小数点のバックエンドとして、&lt;code&gt;cpp_bin_float&lt;/code&gt;を追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt;の文字列からの代入で発生するバグを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9936&#34; target=&#34;_blank&#34;&gt;#9936&lt;/a&gt;)。&lt;ul&gt;
&lt;li&gt;符号がクリアされない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MSVCのコンパイラintrinsicをインクルードするよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9336&#34; target=&#34;_blank&#34;&gt;#9336&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントの誤字を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9432&#34; target=&#34;_blank&#34;&gt;#9432&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gmp_rational&lt;/code&gt;をムーブコピーできるよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9497&#34; target=&#34;_blank&#34;&gt;#9497&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;numeric_limits&lt;/code&gt;の値のリストをドキュメントに追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#odeint&#34; id=&#34;odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;適切な代数と操作を自動検出するディスパッチャーを追加&lt;/li&gt;
&lt;li&gt;Eigen、Boost.Multiarray、Boost.MPI、Boost.Compute、Blaze、NT2のサポートを追加&lt;/li&gt;
&lt;li&gt;代数インタフェースを、algebra.norm_inf関数を使用するよう変更した&lt;/li&gt;
&lt;li&gt;ODEの解をイテレートするためのイテレータを追加。これは、積分(integrate)関数の代わりに使用できる。&lt;/li&gt;
&lt;li&gt;Velocity-Verletメソッドを追加&lt;/li&gt;
&lt;li&gt;小さなバグ修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;右辺値参照のサポートを追加。&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;が、ムーブ可能でコピー不可な&lt;code&gt;T&lt;/code&gt;型を扱えるようになった。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swap&lt;/code&gt;を改善した。(ムーブ操作を使うようにした)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace()&lt;/code&gt;メンバ関数を追加。これは &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/1841&#34; target=&#34;_blank&#34;&gt;#1841&lt;/a&gt; でリクエストされたもの。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;optional&lt;/code&gt;をムーブ可能にした。&lt;code&gt;std::move_if_noexcept&lt;/code&gt;と組み合わせられる、条件付きの&lt;code&gt;noexcept&lt;/code&gt;仕様にした。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; プラットフォームがサポートしていれば、safe boolイディオムの代わりに&lt;code&gt;explicit operator bool()&lt;/code&gt;を使用するようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4227&#34; target=&#34;_blank&#34;&gt;#4227&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;optional&lt;/code&gt;オブジェクトを誤って不適切にシリアライズしないように、&lt;code&gt;operator&amp;lt;&amp;lt;(ostream&amp;amp;, optional const&amp;amp;)&lt;/code&gt;の先行宣言を定義した。&lt;/li&gt;
&lt;li&gt;非推奨なメンバ関数である&lt;code&gt;reset()&lt;/code&gt;の使用を、サンプルコードから削除した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9005&#34; target=&#34;_blank&#34;&gt;#9005&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::none&lt;/code&gt;との比較では、&lt;code&gt;T&lt;/code&gt;にEqualityComparableを要求しないようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;optional&amp;lt;T&amp;amp;&amp;amp;&amp;gt;&lt;/code&gt;を明確に禁止した。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;optional&amp;lt;T&amp;amp;&amp;gt;&lt;/code&gt;への一時オブジェクトの束縛を、明確に禁止した。&lt;/li&gt;
&lt;li&gt;包含している値にアクセスする新たな手段として、&lt;code&gt;value()&lt;/code&gt;、&lt;code&gt;value_or()&lt;/code&gt;、&lt;code&gt;value_or_eval()&lt;/code&gt;メンバ関数を追加。&lt;/li&gt;
&lt;li&gt;ドキュメントを更新し、再編した。チュートリアルとクイックガイドの項を追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#preprocessor&#34; id=&#34;preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可変引数マクロを使用する場合のタプル機能を、配列機能と一致するものとして追加した。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#program-options&#34; id=&#34;program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全てのグループ間でのヘルプメッセージの縦位置を合わせた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6114&#34; target=&#34;_blank&#34;&gt;#6114&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ハイフン区切りされたオプション名が、エラーメッセージ内で切り捨てられる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8009&#34; target=&#34;_blank&#34;&gt;#8009&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#regex&#34; id=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_regex&amp;lt;&amp;gt;::mark_count()&lt;/code&gt;の挙動を、ドキュメントに一致するよう修正した。&lt;code&gt;basic_regex&amp;lt;&amp;gt;::subexpression(n)&lt;/code&gt;も同様に、一致するよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8903&#34; target=&#34;_blank&#34;&gt;#8903&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;ドキュメントの誤字を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9283&#34; target=&#34;_blank&#34;&gt;#9283&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ロケールによって生成された照合文字列へのnul埋め込みが失敗した場合の、照合コードのバグを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9451&#34; target=&#34;_blank&#34;&gt;#9451&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Threadライブラリの非推奨なミューテックスを使っていたのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9461&#34; target=&#34;_blank&#34;&gt;#9461&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;不正なUTF-8シーケンスの、より良いチェッカーを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9473&#34; target=&#34;_blank&#34;&gt;#9473&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#smart-pointers&#34; id=&#34;smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make_shared&lt;/code&gt;と&lt;code&gt;allocate_shared&lt;/code&gt;のオーバーロードを更新し、C++言語規格に&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3939.html&#34; target=&#34;_blank&#34;&gt;N3939&lt;/a&gt;で提案されている配列型(&lt;code&gt;T[]&lt;/code&gt;, &lt;code&gt;T[N]&lt;/code&gt;)に対応した。&lt;/li&gt;
&lt;li&gt;C++標準の欠陥レポート&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#2070&#34; target=&#34;_blank&#34;&gt;LWG #2070&lt;/a&gt;に対応し、&lt;code&gt;make_shared&lt;/code&gt;と&lt;code&gt;allocate_shared&lt;/code&gt;におけるスカラ型と配列型の実装を修正した。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#thread&#34; id=&#34;thread&#34;&gt;Thread&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;実験的な新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;when_any()&lt;/code&gt;関数を追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/7446&#34; target=&#34;_blank&#34;&gt;#7446&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;when_all()&lt;/code&gt;関数を追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/7447&#34; target=&#34;_blank&#34;&gt;#7447&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async()&lt;/code&gt;関数に、スケジューラをとるパラメータを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7448&#34; target=&#34;_blank&#34;&gt;#7448&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;並行キューとして、&lt;code&gt;sync_queue&lt;/code&gt;と&lt;code&gt;sync_bounded_queue&lt;/code&gt;を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8274&#34; target=&#34;_blank&#34;&gt;#8274&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool&lt;/code&gt; executorを追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8513&#34; target=&#34;_blank&#34;&gt;#8513&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;latch&lt;/code&gt;クラスを追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8518&#34; target=&#34;_blank&#34;&gt;#8518&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;future&lt;/code&gt;／&lt;code&gt;shared_future&lt;/code&gt;の&lt;code&gt;then()&lt;/code&gt;メンバ関数に、スケジューラをとるパラメータを追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8516&#34; target=&#34;_blank&#34;&gt;#8516&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;with_lock_guard()&lt;/code&gt;関数を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9058&#34; target=&#34;_blank&#34;&gt;#9058&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;動的なexecutorと、executorアダプタを追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9571&#34; target=&#34;_blank&#34;&gt;#9571&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windowsの64ビット環境上で、&lt;code&gt;GetTickCount()&lt;/code&gt;関数の代わりに、&lt;code&gt;GetTickCount64()&lt;/code&gt;関数を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8070&#34; target=&#34;_blank&#34;&gt;#8070&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scoped_thread&lt;/code&gt;がmsvc-12.0でコンパイルエラーになる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9333&#34; target=&#34;_blank&#34;&gt;#9333&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;intel-linux-14.0.1上で&lt;code&gt;scoped_thread&lt;/code&gt;がコンパイルエラーになる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9341&#34; target=&#34;_blank&#34;&gt;#9341&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;msvc-10,11,12上で、&lt;code&gt;async(Executor, ...)&lt;/code&gt;のコンパイルに失敗する問題を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9366&#34; target=&#34;_blank&#34;&gt;#9366&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;msvc-10,11,12上で、executorのテストを通した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9402&#34; target=&#34;_blank&#34;&gt;#9402&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make_future&lt;/code&gt;のテストを通した(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9404&#34; target=&#34;_blank&#34;&gt;#9404&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Synchronizationドキュメントの細かい修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9471&#34; target=&#34;_blank&#34;&gt;#9471&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;future_waiter::add()&lt;/code&gt;がクラッシュする問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9535&#34; target=&#34;_blank&#34;&gt;#9535&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;try_lock_for()&lt;/code&gt;に0ミリ秒を指定した場合、Windows上でプログラムが終了しない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9618&#34; target=&#34;_blank&#34;&gt;#9618&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt;クラスのデストラクタの説明が不明瞭だったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9625&#34; target=&#34;_blank&#34;&gt;#9625&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt;クラスに、アンドキュメントな&lt;code&gt;public&lt;/code&gt;メンバ関数&lt;code&gt;start_thread()&lt;/code&gt;があったので、&lt;code&gt;private&lt;/code&gt;に移動(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9632&#34; target=&#34;_blank&#34;&gt;#9632&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MinGW上で、&lt;code&gt;boost::thread::physical_concurrency()&lt;/code&gt;関数がコンパイルエラーになる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9673&#34; target=&#34;_blank&#34;&gt;#9673&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::condition_variable::timed_wait()&lt;/code&gt;にBoost.DateTimeの無限時間を指定すると、意図と違ってすぐに目覚めてしまう問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9708&#34; target=&#34;_blank&#34;&gt;#9708&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;future::then()&lt;/code&gt;に指定した関数が、2回呼ばれてしまう問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9711&#34; target=&#34;_blank&#34;&gt;#9711&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;gcc-mingwは多くの問題があったため、Boost.Buildから削除された。代わりに&lt;code&gt;&amp;lt;toolset&amp;gt;gcc,&amp;lt;target-os&amp;gt;windows&lt;/code&gt;を使うよう修正した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9867&#34; target=&#34;_blank&#34;&gt;#9867&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;future&lt;/code&gt;のドキュメントの誤字を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10008&#34; target=&#34;_blank&#34;&gt;#10008&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;call_once()&lt;/code&gt;内でヌルポインタにアクセスする可能性があったのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10058&#34; target=&#34;_blank&#34;&gt;#10058&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;call_once()&lt;/code&gt;の右辺値参照エミュレーションでの可変引数バージョンがコンパイルエラーになっていた問題を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10125&#34; target=&#34;_blank&#34;&gt;#10125&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;call_once()&lt;/code&gt;の&lt;code&gt;(Function, once_flag&amp;amp;)&lt;/code&gt;のオーバーロードを非推奨化(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10126&#34; target=&#34;_blank&#34;&gt;#10126&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;AIXのgcc上の&lt;code&gt;pthread_delay_np()&lt;/code&gt;関数はパラメータが異なっているため、コンパイルエラーになっていた問題を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10147&#34; target=&#34;_blank&#34;&gt;#10147&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;PowerPC上での&lt;code&gt;thread::physical_concurrency()&lt;/code&gt;が常に0を返していたので、修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10155&#34; target=&#34;_blank&#34;&gt;#10155&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;when_any()&lt;/code&gt;と&lt;code&gt;when_all()&lt;/code&gt;に&lt;code&gt;inline&lt;/code&gt;を付け忘れていて、シンボルの重複定義でリンクエラーになっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10184&#34; target=&#34;_blank&#34;&gt;#10184&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#tti&#34; id=&#34;tti&#34;&gt;TTI&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sun Solaris Studio C++ compilerのサポートを強化した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9441&#34; target=&#34;_blank&#34;&gt;#9441&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;テンプレート引数としてクラスではない型が渡される、全ての状況をサポートした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9444&#34; target=&#34;_blank&#34;&gt;#9444&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;小さなドキュメントと警告の修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9377&#34; target=&#34;_blank&#34;&gt;#9377&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9719&#34; target=&#34;_blank&#34;&gt;#9719&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;整数のバケットに、常に素数を使用するようにした。連続した整数を挿入するときのパフォーマンスを改善(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9282&#34; target=&#34;_blank&#34;&gt;#9282&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11標準仕様に基づき、アロケータのみを使用してメモリ確保するようにした。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかのコンポーネントを、Boost.Coreモジュールに移動した。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;empty_deleter&lt;/code&gt;を非推奨とした。代わりにBoost.Coreの&lt;code&gt;null_deleter&lt;/code&gt;を使用すること。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;base_from_member&lt;/code&gt;ユーティリティで、左辺値参照のメンバ型をサポートした。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7577&#34; target=&#34;_blank&#34;&gt;#7577&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#uuid&#34; id=&#34;uuid&#34;&gt;UUID&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;基本的なC++11機能のサポートを追加。&lt;/li&gt;
&lt;li&gt;SSE最適化バージョンの関数を実装した。これには、&lt;code&gt;swap&lt;/code&gt;や比較演算子も含まれる。SSE版は、コンパイラによって自動的に有効になるが、明示的に有効／無効を設定できる(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8509&#34; target=&#34;_blank&#34;&gt;#8509&lt;/a&gt;)。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_UUID_NO_SIMD&lt;/code&gt;、&lt;code&gt;BOOST_UUID_USE_SSE2&lt;/code&gt;、&lt;code&gt;BOOST_UUID_USE_SSE3&lt;/code&gt;、&lt;code&gt;BOOST_UUID_USE_SSE41&lt;/code&gt;のいずれかをdefineする。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;いくつかの警告を黙らせた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8495&#34; target=&#34;_blank&#34;&gt;#8495&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8697&#34; target=&#34;_blank&#34;&gt;#8697&lt;/a&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_PLAT_*&lt;/code&gt;のプラットフォーム定義に、MinGWとWindowsのバリエーションを追加。&lt;/li&gt;
&lt;li&gt;Windows 8のモバイルデバイスをターゲットとするWindowsで、ARMアーキテクチャを検出できるようにした。&lt;/li&gt;
&lt;li&gt;64ビットARMの検出を改善。&lt;/li&gt;
&lt;li&gt;オペレーティング・システムとして、iOSの検出を追加。&lt;/li&gt;
&lt;li&gt;いくつかのプラットフォームでのエンディアン検出を改善。&lt;/li&gt;
&lt;li&gt;プラットフォームとコンパイラを検出するための、エミュレーション機能を追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; サポートしているコンパイラでは、可変引数テンプレートを使用するようにした。これによってバイナリが小さくなり、コンパイル速度も改善することを期待できるが、いくつかのケースで既存のメタプログラミングコードを破壊する可能性がある。とくに、&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_55_0/doc/html/BOOST_VARIANT_ENUM_PARAMS.html&#34; target=&#34;_blank&#34;&gt;BOOST_VARIANT_ENUM_PARAMS&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_55_0/doc/html/BOOST_VARIANT_ENUM_SHIFTED_PARAMS.html&#34; target=&#34;_blank&#34;&gt;BOOST_VARIANT_ENUM_SHIFTED_PARAMS&lt;/a&gt;&lt;/code&gt;が使われなくなったことについて注意が必要だ。可変引数テンプレートを使用する場合、&lt;code&gt;BOOST_VARIANT_DO_NOT_USE_VARIADIC_TEMPLATES&lt;/code&gt;が無効になる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;polymorphic_get()&lt;/code&gt;関数を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9479&#34; target=&#34;_blank&#34;&gt;#9479&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ムーブのみ可能な型をビジターから返せるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;variant::swap()&lt;/code&gt;を最適化し、&lt;code&gt;move_swap()&lt;/code&gt;との曖昧さを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2839&#34; target=&#34;_blank&#34;&gt;#2839&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ムーブ代入演算子、デフォルトコンストラクタ、ムーブコンストラクタに条件付きの&lt;code&gt;noexcept&lt;/code&gt;を追加し、&lt;code&gt;variant&lt;/code&gt;を&lt;code&gt;move_if_noexcept()&lt;/code&gt;フレンドリーにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-fvisibility=hidden&lt;/code&gt;フラグが設定されていても、例外をモジュール間で見えるようにした。&lt;/li&gt;
&lt;li&gt;古いコンパイラのサポートを終了した。&lt;/li&gt;
&lt;li&gt;警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3020&#34; target=&#34;_blank&#34;&gt;#3020&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;＜ライブラリ名＞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt; (必要であれば分類分けをする)
- ＜追加、変更、削除内容＞ (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/0&#34; target=&#34;_blank&#34;&gt;#0&lt;/a&gt;) (←svn.boost.orgのissuesへのリンク)
- ＜追加、変更、削除内容＞ (&lt;a href=&#34;https://svn.boost.org/trac/boost/changeset/0&#34; target=&#34;_blank&#34;&gt;r0&lt;/a&gt;) (←svn.boost.orgのcommitへのリンク)&lt;b&gt;バグ修正&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;： 赤文字+ボールドではっきりと分かるように&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;ABI変更&lt;/strong&gt;&lt;/span&gt;： これも赤文字で&lt;/li&gt;
&lt;li&gt;[訳注] 本家ノートの記述が不十分であると考えるときは、適宜注釈を入れる&lt;/li&gt;
&lt;li&gt;参照： &lt;a href=&#34;http://blog.example.com/path/to/references&#34; target=&#34;_blank&#34;&gt;必要であれば外部の文献へのリンクを挿入する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.3, 3.2, 3.1, 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++98: 3.3.16&lt;/li&gt;
&lt;li&gt;Clang, C++11, libc++: 3.4.2&lt;/li&gt;
&lt;li&gt;Clang, C++1y: 3.3.16&lt;/li&gt;
&lt;li&gt;GCC: 4.8.2, 4.8.1, 4.7.3, 4.6.4, 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++98: 4.9.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.8.2&lt;/li&gt;
&lt;li&gt;GCC, C++1y: 4.9.0&lt;/li&gt;
&lt;li&gt;Intel: 13.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 5.1&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 5.1&lt;/li&gt;
&lt;li&gt;GCC: 4.2.1&lt;/li&gt;
&lt;li&gt;Intel: 12.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw: 4.9.0, 4.8.2, 4.7.3, 4.7.2, 4.6.3, 4.5.4, 4.4.7&lt;/li&gt;
&lt;li&gt;Visual C++: 12.0, 11.0, 10.0, 9.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC: 4.2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.3, 3.2, 3.1, 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++98: 3.3.16&lt;/li&gt;
&lt;li&gt;Clang, C++11, libc++: 3.4.2&lt;/li&gt;
&lt;li&gt;Clang, C++1y: 3.3.16&lt;/li&gt;
&lt;li&gt;Clang, C++14, libc++: trunk&lt;/li&gt;
&lt;li&gt;GCC: 4.8.2, 4.8.1, 4.7.3, 4.6.4, 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++98: 4.9.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.9.0, 4.8.2&lt;/li&gt;
&lt;li&gt;GCC, C++1y: 4.9.0&lt;/li&gt;
&lt;li&gt;Intel: 13.1, 13.0, 12.1, 11.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 5.1&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Clang: trunk&lt;/li&gt;
&lt;li&gt;Clang, C++11: trunk&lt;/li&gt;
&lt;li&gt;GCC: 4.2.1&lt;/li&gt;
&lt;li&gt;Intel: 12.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw: 4.9.0, 4.8.2, 4.7.2, 4.6.3, 4.5.4, 4.4.7&lt;/li&gt;
&lt;li&gt;Visual C++: 12.0, 11.0, 10.0, 9.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC: 4.2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC, ARM: 4.4.2&lt;/li&gt;
&lt;li&gt;QCC, x86: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;Akira Takahashi&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.66.0リリースノート -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/document/version/1_66_0.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:document/version/1_66_0.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_66_0.md b/document/version/1_66_0.md
index 8bc2e51..cbb4440 100644
--- a/document/version/1_66_0.md
+++ b/document/version/1_66_0.md
@@ -223,7 +223,7 @@ Visual Studio 2017 Update 5がリリースされた直後にBoostのリリース
 
 ## &amp;lt;a id=&amp;#34;optional&amp;#34; href=&amp;#34;#optional&amp;#34;&amp;gt;Optional&amp;lt;/a&amp;gt;
 
-- 新しいコンパイラでは、Tがスカラー型の場合 optional&amp;lt;T&amp;gt; がトリビアルコピー可能となった。これは、これまでとは異なるストレージ(aligned_storage ではなく、単なる T)を用いることで実現している。 我々はコンパイラが default宣言 された関数をサポートすることを必須としている
+- 新しいコンパイラでは、Tがスカラー型の場合 `optional&amp;lt;T&amp;gt;` がトリビアルコピー可能となった。これは、これまでとは異なるストレージ(aligned_storage ではなく、単なる T)を用いることで実現している。 我々はコンパイラが default宣言 された関数をサポートすることを必須としている
 - GCC が `-Wmaybe-uninitialized` の警告を誤って出すのを防止するため、 `operator==` の実装を変更
 
 ## &amp;lt;a id=&amp;#34;poly-collection&amp;#34; href=&amp;#34;#poly-collection&amp;#34;&amp;gt;PolyCollection&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:document/version/1_67_0.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の問題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FreeBSDでのコンパイルエラーを修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_67_0/0001-Fiber-Use-pthread_setaffinity_np-on-FreeBSD-as-well.patch&#34; target=&#34;_blank&#34;&gt;0001-Fiber-Use-pthread_setaffinity_np-on-FreeBSD-as-well.patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_67_0/0002-Wave-Avoid-using-wrong-T_DIVIDE-on-BSDs.patch&#34; target=&#34;_blank&#34;&gt;0002-Wave-Avoid-using-wrong-T_DIVIDE-on-BSDs.patch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pythonの自動リンクを修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_67_0/0003-Python-Fix-auto-linking-logic-Windows-only.patch&#34; target=&#34;_blank&#34;&gt;0003-Python-Fix-auto-linking-logic-Windows-only.patch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/contract&#34; target=&#34;_blank&#34;&gt;Contract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++用の契約プログラミングライブラリ。契約プログラミングの全ての機能をサポートしている： サブ契約、クラスの不変条件、事後条件 (古い値と戻り値)、事前条件、表明失敗時の挙動をカスタマイズ (例として、例外を投げるかプログラムを異常終了させるか)、コンパイルに含めるかどうかと表明のチェックをオプショナルに、などなど。作者Lorenzo Caminiti氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/hof&#34; target=&#34;_blank&#34;&gt;HOF&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;高階関数 (Higher-order functions) のライブラリ。作者Paul Fultz II氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34;&gt;Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::get_option&lt;/code&gt;にconst修飾を付け忘れていたので追加&lt;/li&gt;
&lt;li&gt;GCCのいくつかのバージョンで発生するパースエラーを回避&lt;/li&gt;
&lt;li&gt;チュートリアルのサンプルコードが壊れていたので修正&lt;/li&gt;
&lt;li&gt;実験的な機能を追加。experimentalな機能は、予告なく変更される可能性があるので注意&lt;ul&gt;
&lt;li&gt;&lt;code&gt;experimental::detached&lt;/code&gt; : 非同期操作の完了をハンドリングしない指定。完了ハンドラの代わりに指定する&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_socket.async_send(my_buffer, boost::asio::experimental::detached);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::redirect_error&lt;/code&gt; : &lt;code&gt;error_code&lt;/code&gt;をキャプチャして完了ハンドラに紐付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::co_spawn&lt;/code&gt; : コルーチン仕様を統合する機能&lt;/li&gt;
&lt;li&gt;最新機能を使用して、タイムアウトのサンプルコードを更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asio::deadline_timer&lt;/code&gt;よりも&lt;code&gt;asio::steady_timer&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asio::streambuf&lt;/code&gt;よりも&lt;code&gt;asio::dynamic_buffer&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;ブロッキングするクライアントでは、時間指定するasio::io_context::run_for()`関数を使用するようにした&lt;/li&gt;
&lt;li&gt;タイムアウトときのブロッキングで、カスタムの完了トークンの使用法を示す例を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_NO_DEPRECATED&lt;/code&gt;が定義されたときの、ユニットテストのコンパイルを修正&lt;/li&gt;
&lt;li&gt;Networking TSとの互換性のため、socket iostreamsではデフォルトでchronoを使用するよう変更&lt;/li&gt;
&lt;li&gt;サンプルコードを更新し、Boost.DateTimeよりもchronoを使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_dynamic_buffer&lt;/code&gt;トレイトでの、メンバ関数検出の誤りを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;の、非推奨化された&lt;code&gt;handler_type&lt;/code&gt;との非互換を修正&lt;/li&gt;
&lt;li&gt;SSLストリームの実装において、不足していたムーブ最適化を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_resolver_results::value_type&lt;/code&gt; typedefの誤りを修正&lt;/li&gt;
&lt;li&gt;いくつかのOpenSSLバージョンで、&lt;code&gt;SSL_OP_NO_COMPRESSION&lt;/code&gt;が定義されたときのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;バンドル内の複数の証明書を処理するよう&lt;code&gt;add_certificate_authority&lt;/code&gt;を変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::result_of&lt;/code&gt;の代わりに&lt;code&gt;std::invoke_result&lt;/code&gt;を使用し、MSVCの非推奨化による警告を修正&lt;/li&gt;
&lt;li&gt;C++17以降で&lt;code&gt;std::string_view&lt;/code&gt;、C++14で&lt;code&gt;std::experimental::string_view&lt;/code&gt;を使用するよう変更。C++17モードで&lt;code&gt;BOOST_ASIO_DISABLE_STD_STRING_VIEW&lt;/code&gt;を定義すると、強制的に (利用可能だと仮定している) &lt;code&gt;std::experimental::string_view&lt;/code&gt;を使用する&lt;/li&gt;
&lt;li&gt;テンプレート引数&lt;code&gt;DynamicBuffer&lt;/code&gt;が、&lt;code&gt;enable_if&lt;/code&gt;で使用する前に確実にdecayされるようにした&lt;/li&gt;
&lt;li&gt;新しいMoveConstructibleな完了ハンドラからレガシーな完了ハンドラ (まだCopyConstructibleが要求される) を区別できるよう、ドキュメントを変更&lt;/li&gt;
&lt;li&gt;bufferのデバッグサポートでの、戻り値を無視したことによる警告を黙らせた&lt;/li&gt;
&lt;li&gt;参照パラメータを含む完了ハンドラのシグニチャで、&lt;code&gt;basic_yield_context&lt;/code&gt;が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spawn()&lt;/code&gt;で起動されたスタックフルコルーチンが、関数とハンドラ引数のdecayされたコピーを確実に正しく格納するよう修正&lt;/li&gt;
&lt;li&gt;Androidでのいくつかの互換性問題を修正&lt;/li&gt;
&lt;li&gt;Jamfileでのクロスコンパイルをサポート&lt;/li&gt;
&lt;li&gt;サンプルコードの、いくつかの移植性の問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、&lt;code&gt;websocket::stream&lt;/code&gt; が assertエラーか未定義な振る舞いを起こす重大な欠陥を修正している。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;完全な変更のリストについては、&lt;a href=&#34;http://www.boost.org/doc/libs/develop/libs/beast/doc/html/beast/release_notes.html&#34; target=&#34;_blank&#34;&gt;公式ページ&lt;/a&gt; を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost内の依存関係を簡潔にするためにfunctionalモジュールから分離された&lt;/li&gt;
&lt;li&gt;新しいモジュール名と対応させるためにヘッダーを別のディレクトリへ移した。以前のパスでも依然として動作する&lt;/li&gt;
&lt;li&gt;次の標準ライブラリへ対応した&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_condition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::variant&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::monostate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13501&#34; target=&#34;_blank&#34;&gt;Trac #13501&lt;/a&gt; &lt;code&gt;vector&amp;lt;bool&amp;gt;&lt;/code&gt;を明確にサポート。libc++でも動作する&lt;/li&gt;
&lt;li&gt;より詳細には&lt;a href=&#34;https://www.boost.org/doc/html/hash/changes.html#hash.changes.boost_1_67_0&#34; target=&#34;_blank&#34;&gt;change log&lt;/a&gt;を参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;/&lt;a href=&#34;https://github.com/boostorg/context/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;
  OSX 32bit下においてEAX/EDXを使って&lt;code&gt;transfer_t&lt;/code&gt;を正しく返すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; &lt;code&gt;__sanitizer_finish_switch_fiber&lt;/code&gt;を呼び出すタイミングが正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt; WindowsでのClangにおいてビルド出来ない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;execution_context&lt;/code&gt;(v1)がMSVCでエラーとなる問題を修正&lt;/li&gt;
&lt;li&gt;既知のバグ : all.hppのインクルード + &lt;code&gt;&amp;lt;context-impl&amp;gt;ucontext/winfib&lt;/code&gt; で「&lt;code&gt;forced_unwind&lt;/code&gt;: is not a member of &lt;code&gt;boost::context::detail&lt;/code&gt;」というエラーになる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;to_address&lt;/code&gt;と&lt;code&gt;pointer_traits&lt;/code&gt;に、C++2aの設計を反映させた (&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r2.html&#34; target=&#34;_blank&#34;&gt;P0653R2&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; プル型コルーチンの起動直後に投げられた例外が再送されなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; &lt;code&gt;GetLastError()&lt;/code&gt;がエラー値を返すような状況下での問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; : &lt;code&gt;condition_variable::wait_for&lt;/code&gt; を使っている場合に assert エラー &lt;code&gt;&#34;! ctx-&amp;gt;ready_is_linked()&#34;&lt;/code&gt; が起きる点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; : ビルド時に &lt;code&gt;&#39;stdexception&#39; file not found&lt;/code&gt; エラーが起きる不具合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/141&#34; target=&#34;_blank&#34;&gt;GitHub #141&lt;/a&gt; : boost::fibers::async が例外を投げる問題に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/146&#34; target=&#34;_blank&#34;&gt;GitHub #146&lt;/a&gt; : remote-ready-queue spinlock に対する不要なロックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/153&#34; target=&#34;_blank&#34;&gt;GitHub #153&lt;/a&gt; : &lt;code&gt;context::set_ready()&lt;/code&gt; を &lt;code&gt;context::schedule()&lt;/code&gt; に置き換えるようにドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; : &lt;code&gt;[buffered|unbuffered]_channels&lt;/code&gt; の iterator に関するドキュメントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; : &lt;code&gt;this_fiber&lt;/code&gt; が boost::fibers 名前空間のメンバとしてドキュメントに記されている (訳注: 正しくは &lt;code&gt;boost::&lt;/code&gt; 名前空間の直下) 点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; : &lt;code&gt;examples/barrier.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; : &lt;code&gt;work_stealing&lt;/code&gt; クラスを動作させるために、&lt;code&gt;BOOST_FIBERS_DECL&lt;/code&gt; マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/162&#34; target=&#34;_blank&#34;&gt;GitHub #162&lt;/a&gt; : タイムアウト待ちの場合に、use-counter (訳注: 正確には &lt;code&gt;use_count_&lt;/code&gt; 内部変数) をインクリメントするルーチンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; : &lt;code&gt;scheduler::schedule()&lt;/code&gt; コンストラクタにおける &lt;code&gt;ctx-&amp;gt;wait_is_linked()&lt;/code&gt; アサーションを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/167&#34; target=&#34;_blank&#34;&gt;GitHub #167&lt;/a&gt; : future が作成された場合のみ、&lt;code&gt;shared_state::owner_destroyed()&lt;/code&gt; を呼び出すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; : ドキュメントが最新でなかったので追随&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;main()&lt;/code&gt;関数の前でパス操作したときにクラッシュする問題に対して、静的変数の初期化を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/164&#34; target=&#34;_blank&#34;&gt;GitHub #164&lt;/a&gt; MSVC 2017でコンパイルエラーとなるため&lt;code&gt;fusion::map&lt;/code&gt;でのSFINAEをテンプレートパラメータへと移した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; &lt;code&gt;fusion::vector&lt;/code&gt;がCWG 945に対応していないコンパイラでエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; エラーメッセージをわかりやすくするためシーケンスコンバータに要素数の事前チェクを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://GitHub.com/boostorg/fusion/pull/171&#34; target=&#34;_blank&#34;&gt;GitHub #171&lt;/a&gt; &lt;code&gt;fusion::tag_of&lt;/code&gt;と&lt;code&gt;fusion::is_native_fusion_sequence&lt;/code&gt;に不完全型を渡せるようにした。
  これは挙動の変更ではなく、Boost.TypeTraitsの変更への追従となっている&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新たな地図投影 (map projection) とSRS変換 (SRS transformation) を追加 (部分的にインタフェース変更が発生する可能性があるのでアンドキュメント)&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;densify()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;から直接&lt;code&gt;allocator&lt;/code&gt;を使用するのではなく、&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;を介するようにした (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;C++03でムーブセマンティクスをエミュレーションするために、&lt;code&gt;rtree&lt;/code&gt;のデフォルトアロケータを&lt;code&gt;boost::container::new_allocator&lt;/code&gt; (と&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;) に変更した&lt;/li&gt;
&lt;li&gt;Area strategiesのインタフェースを変更した。これは破壊的変更になる可能性がある&lt;/li&gt;
&lt;li&gt;半径 (Radius) と球体 (Sphere) をspherical strategiesに渡せるようにした&lt;/li&gt;
&lt;li&gt;sphericalとgeographicの&lt;code&gt;distance()&lt;/code&gt;戦略にPoint-BoxとBox-Boxの組み合わせを追加&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyの出力が、2点か (closed polygonの) 3点のringを破棄するが、それらを生成しないようにした&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、空のinterior ringsと空のpolygonsを出力から外すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13386&#34; target=&#34;_blank&#34;&gt;Trac #13386&lt;/a&gt; いくつかのGCCバージョン向けのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13381&#34; target=&#34;_blank&#34;&gt;Trac #13381&lt;/a&gt; Visual C++ 2015での&lt;code&gt;matrix_transformer&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13436&#34; target=&#34;_blank&#34;&gt;Trac #13436&lt;/a&gt; &lt;code&gt;boost::geometry::model::polygon&lt;/code&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length()&lt;/code&gt;アルゴリズムに、不足していた戦略解決を追加した。これはVariantのサポートに影響する&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、closing pointをsimplifyするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;振る舞いの変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、通常では入力のringを回転させてから、凸包 (convex hull) 上の非collinear pointを選択するようsimplifyする。これは出力を改善する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースに加えて、&lt;code&gt;unique_ptr&lt;/code&gt;のインタフェースサポートを追加。C++17をサポートするために、非推奨の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースを削除オプションとして&lt;code&gt;BOOST_LOCALE_HIDE_AUTO_PTR&lt;/code&gt;を定義できる&lt;/li&gt;
&lt;li&gt;ICU &amp;gt; 60.1でのテスト問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6851&#34; target=&#34;_blank&#34;&gt;Trac #6851&lt;/a&gt; Solarisでのビルドを修正&lt;/li&gt;
&lt;li&gt;最適化付きビルドでのFreeBSD/clangの問題を修正&lt;/li&gt;
&lt;li&gt;MSVCのテストで失敗していた、コードページ932 (CP932) のcodecvt問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12572&#34; target=&#34;_blank&#34;&gt;Trac #12572&lt;/a&gt; 国名の正規化をするところでのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12453&#34; target=&#34;_blank&#34;&gt;Trac #12453&lt;/a&gt; &lt;code&gt;libs/locale/src/shared/message.cpp&lt;/code&gt;のコードにムダが多かった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icu/date_time&lt;/code&gt;で失敗するケースで&lt;code&gt;throw&lt;/code&gt;が抜けていたのを修正&lt;/li&gt;
&lt;li&gt;Boost.Thread v4でのビルドを再度修正&lt;/li&gt;
&lt;li&gt;ICUバックエンドの年フォーマットの代わりにYear of week (年の何週目か) を使用するよう修正&lt;/li&gt;
&lt;li&gt;ICU 56.1以上のフォーマットテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ネイティブのモンテカルロ・インテグレーションをサポート&lt;/li&gt;
&lt;li&gt;チェビシェフ補間 (Chebyshev interpolation) のルーチンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Trac #13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13109&#34; target=&#34;_blank&#34;&gt;Trac #13109&lt;/a&gt; 多倍長整数を縮小型に変換する際、大きすぎる値 (もしくは小さすぎる値) を小さな型に変換すると、変換先の型の最大値 (もしくは最小値) となる。これは意図した動作ではあったが、&lt;code&gt;uint128_t&lt;/code&gt;については未定義動作としてそうなっていた。今回の変更では、このライブラリの全ての整数型でこの動作となる。下位Nビットの値が本当に必要であれば、&lt;code&gt;static_cast&amp;lt;unsigned&amp;gt;(~static_cast&amp;lt;unsigned&amp;gt;(0) &amp;amp; my_value)&lt;/code&gt; このようにマスクすることが必要となる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13148&#34; target=&#34;_blank&#34;&gt;Trac #13148&lt;/a&gt; 10進数を有理数型に変換する際のバグを修正 (値ゼロは特別にハンドリングする必要があった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13301&#34; target=&#34;_blank&#34;&gt;Trac #13301&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;から組み込みのより大きい整数型に変換する際のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;に対する&lt;code&gt;exp()&lt;/code&gt;関数の、ヒューリスティックな使用でのパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13264&#34; target=&#34;_blank&#34;&gt;Trac #13264&lt;/a&gt; 指数型が&lt;code&gt;int&lt;/code&gt;より大きい場合の、&lt;code&gt;floor&lt;/code&gt;/&lt;code&gt;ceil&lt;/code&gt;と&lt;code&gt;cpp_bin_float&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; 変換先の型が&lt;code&gt;*this&lt;/code&gt;の型から直接的に構築できる場合に、明示的な型変換演算子を無効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13124&#34; target=&#34;_blank&#34;&gt;Trac #13124&lt;/a&gt; MPIR-3.0の新たな変更に対応した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; 問題 (訳注: &lt;code&gt;Optional&amp;lt;X&amp;gt;&lt;/code&gt; が、T という名前が付いた enum を持っていると VS2015 でコンパイルできない) を修正&lt;/li&gt;
&lt;li&gt;コンパイル時に &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt; が出る問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34; id=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8187&#34; target=&#34;_blank&#34;&gt;Trac #8187&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt;
  ドキュメントとコード例の修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12733&#34; target=&#34;_blank&#34;&gt;Trac #12733&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt;
  C++11で配列型を使用した式がコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt;
  Protoのビルトインを使用し最近のMSVCにおけるラムダ式のコンパイルエラーを修正&lt;ul&gt;
&lt;li&gt;訳者註: C++11のラムダ式ではなく&lt;code&gt;phoenix::lambda&lt;/code&gt;のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; C++17で非推奨となった&lt;code&gt;std::iteratror&lt;/code&gt;の使用をやめた。Daniela Engertに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリ名 (.aや.lib) に、Pythonバージョン名がサフィックスとして付くようになった。例として、Python 2.7用にコンパイルすると、&lt;code&gt;boost_python27&lt;/code&gt;と&lt;code&gt;boost_numpy27&lt;/code&gt;という名前のライブラリファイルが生成される。関連するBoost.Buildの修正と組み合わせることで、複数のPythonバージョンを一度のビルドプロセスでビルドできるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spirit X3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/spirit/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;with_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; &lt;code&gt;x3::variant&lt;/code&gt;と&lt;code&gt;forward_ast&lt;/code&gt;に&lt;code&gt;noexcept&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/248&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;error_handler::position()&lt;/code&gt;がCR+LFの間違ってカウントしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; &lt;code&gt;parse_into_container&lt;/code&gt;内での&lt;code&gt;unused_type&lt;/code&gt;属性の使用を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/289&#34; target=&#34;_blank&#34;&gt;GitHub #289&lt;/a&gt; 連想コンテナに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/308&#34; target=&#34;_blank&#34;&gt;GitHub #308&lt;/a&gt; VS2015 Update 3向けのワークアラウンドを追加してサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/313&#34; target=&#34;_blank&#34;&gt;GitHub #313&lt;/a&gt; インクルードガード名がQiと衝突していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/316&#34; target=&#34;_blank&#34;&gt;GitHub #316&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12928&#34; target=&#34;_blank&#34;&gt;Trac #12928&lt;/a&gt; rangeに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/330&#34; target=&#34;_blank&#34;&gt;GitHub #330&lt;/a&gt; &lt;code&gt;fusion::map&lt;/code&gt;のサポートを再度有効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/337&#34; target=&#34;_blank&#34;&gt;GitHub #337&lt;/a&gt; &lt;code&gt;string(&#34;...&#34;)&lt;/code&gt;と&lt;code&gt;attr(&#34;...&#34;)&lt;/code&gt;からの単一要素シーケンスへの&lt;code&gt;move_to&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/340&#34; target=&#34;_blank&#34;&gt;GitHub #340&lt;/a&gt; シーケンスのアンラップの代わりに、単一要素ビューの間接参照を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/351&#34; target=&#34;_blank&#34;&gt;GitHub #351&lt;/a&gt; &lt;code&gt;parse_nan()&lt;/code&gt;での範囲外イテレータの間接参照を防止&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/355&#34; target=&#34;_blank&#34;&gt;GitHub #355&lt;/a&gt; コンテナが空か判定するために、直接&lt;code&gt;empty()&lt;/code&gt;メンバ関数を使用するのではなく、トレイトを介するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit V2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/256&#34; target=&#34;_blank&#34;&gt;GitHub #256&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11493&#34; target=&#34;_blank&#34;&gt;Trac #11493&lt;/a&gt; &lt;code&gt;qi::keyword&lt;/code&gt;ディレクティブのテストがC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/259&#34; target=&#34;_blank&#34;&gt;GitHub #259&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/284&#34; target=&#34;_blank&#34;&gt;GitHub #284&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5270&#34; target=&#34;_blank&#34;&gt;Trac #5270&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のスコープバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/310&#34; target=&#34;_blank&#34;&gt;GitHub #310&lt;/a&gt; シーケンシャルなOR演算子の未定義動作を修正。パーサーの実行順序がコンパイラに依存していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;が持つ&lt;code&gt;types&lt;/code&gt;型に実装が依存していたが、その型が定義されなくなったために発生していたコンパイルエラーを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/314&#34; target=&#34;_blank&#34;&gt;GitHub #314&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13311&#34; target=&#34;_blank&#34;&gt;Trac #13311&lt;/a&gt; &lt;code&gt;BOOST_SPIRIT_NO_PREDEFINED_TERMINALS&lt;/code&gt;を定義した際に発生していたコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/361&#34; target=&#34;_blank&#34;&gt;GitHub #361&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8268&#34; target=&#34;_blank&#34;&gt;Trac #8268&lt;/a&gt; &lt;code&gt;hold_any&lt;/code&gt;にコピー代入演算子が抜けていたので追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Qi&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/201&#34; target=&#34;_blank&#34;&gt;GitHub #201&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; 実数パーサー内での符号付き整数のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/304&#34; target=&#34;_blank&#34;&gt;GitHub #304&lt;/a&gt; &lt;code&gt;get_current_line&lt;/code&gt;と&lt;code&gt;get_line_start&lt;/code&gt;を修正し、&lt;code&gt;get_line_end&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/319&#34; target=&#34;_blank&#34;&gt;GitHub #319&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12473&#34; target=&#34;_blank&#34;&gt;Trac #12473&lt;/a&gt; 順列パーサー (permutation parser, &lt;code&gt;A ^ B&lt;/code&gt;) を常に&lt;code&gt;optional&lt;/code&gt;で初期化するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/358&#34; target=&#34;_blank&#34;&gt;GitHub #358&lt;/a&gt; ユーザー定義の実数ポリシーによって&lt;code&gt;parse_frac_n&lt;/code&gt;が負数を返さないことを保証するため、&lt;code&gt;assert&lt;/code&gt;を追加。静的解析による誤検出も防いだ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Karma&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/261&#34; target=&#34;_blank&#34;&gt;Github #261&lt;/a&gt; &lt;code&gt;no_buffering_policy&lt;/code&gt;にコピーコンストラクタがなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Lex&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; &lt;code&gt;-fsanitize=undefined&lt;/code&gt;で検出された、&lt;code&gt;enum&lt;/code&gt;の範囲外の値が代入されたことにより警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/324&#34; target=&#34;_blank&#34;&gt;GitHub #324&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11540&#34; target=&#34;_blank&#34;&gt;Trac #11540&lt;/a&gt; 改行コード文字にエスケープが抜けていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Classic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; &lt;code&gt;std::complex&lt;/code&gt;を使用しているところで、&lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;のインクルードが抜けていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/274&#34; target=&#34;_blank&#34;&gt;GitHub #274&lt;/a&gt; &lt;code&gt;remove_reference&lt;/code&gt;を名前空間修飾なしで使っていたところを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/275&#34; target=&#34;_blank&#34;&gt;GitHub #275&lt;/a&gt; &lt;code&gt;match&amp;lt;T &amp;amp;&amp;gt;&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/323&#34; target=&#34;_blank&#34;&gt;GitHub #323&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12639&#34; target=&#34;_blank&#34;&gt;Trac #12639&lt;/a&gt; &lt;code&gt;BOOST_DISABLE_THREADS&lt;/code&gt;を定義した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/336&#34; target=&#34;_blank&#34;&gt;GitHub #336&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7371&#34; target=&#34;_blank&#34;&gt;Trac #7371&lt;/a&gt; scannerのインクリメント対象が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; Windows OS における Async safe な ファイルダンプ機能は、いくつかのプラットフォームでハングするため、このバージョンで無効とされた。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;依存関係を減らすため、ContainerHash ライブラリを使うようになった&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub #40&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.7 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;後方互換性を壊す変更&lt;ul&gt;
&lt;li&gt;同一のテストスイートに対して、同じ名前でテストケースを追加するとエラーを報告するようになった。詳細は Changes log を参照すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;色付きの出力がデフォルトで有効になり、Windows でも利用可能になった&lt;/li&gt;
&lt;li&gt;コマンドラインヘルプが改良され、わかりやすくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt; マクロが、 &lt;code&gt;std::tuple&lt;/code&gt; に含まれるシーケンス型も受け入れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12092&#34; target=&#34;_blank&#34;&gt;#12092&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12596&#34; target=&#34;_blank&#34;&gt;#12596&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12597&#34; target=&#34;_blank&#34;&gt;#12597&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12969&#34; target=&#34;_blank&#34;&gt;#12969&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13058&#34; target=&#34;_blank&#34;&gt;#13058&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13149&#34; target=&#34;_blank&#34;&gt;#13149&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13170&#34; target=&#34;_blank&#34;&gt;#13170&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13181&#34; target=&#34;_blank&#34;&gt;#13181&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13371&#34; target=&#34;_blank&#34;&gt;#13371&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13387&#34; target=&#34;_blank&#34;&gt;#13387&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13398&#34; target=&#34;_blank&#34;&gt;#13398&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13407&#34; target=&#34;_blank&#34;&gt;#13407&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13435&#34; target=&#34;_blank&#34;&gt;#13435&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13443&#34; target=&#34;_blank&#34;&gt;#13443&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull request: &lt;a href=&#34;https://github.com/boostorg/test/pull/112&#34; target=&#34;_blank&#34;&gt;#112&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/118&#34; target=&#34;_blank&#34;&gt;#118&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/121&#34; target=&#34;_blank&#34;&gt;#121&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/122&#34; target=&#34;_blank&#34;&gt;#122&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/125&#34; target=&#34;_blank&#34;&gt;#125&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/127&#34; target=&#34;_blank&#34;&gt;#127&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34; id=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;依存関係を減らすために、ContainerHashライブラリを使用するようにした&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/type_index/issues/17&#34; target=&#34;_blank&#34;&gt;GitHub #17&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34; id=&#34;type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなトレイト&lt;code&gt;detected&lt;/code&gt;, &lt;code&gt;detected_or&lt;/code&gt;, &lt;code&gt;is_detected&lt;/code&gt;, &lt;code&gt;is_detected_convertible&lt;/code&gt;, &lt;code&gt;is_detected_exact&lt;/code&gt;, &lt;code&gt;is_complete&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;2項演算子の検出コードを大きく改善した&lt;/li&gt;
&lt;li&gt;完全型を引数の要件とするトレイトのために、完全性を検証するアサーションを追加。これによって、不完全型から誤った結果が出力されることを防げるようになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12212&#34; target=&#34;_blank&#34;&gt;Trac #12212&lt;/a&gt; MPL互換性の小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12003&#34; target=&#34;_blank&#34;&gt;Trac #12003&lt;/a&gt; &lt;code&gt;is_constructible&lt;/code&gt;が (可変引数テンプレートで) 完全に実装されたことを表すマクロ&lt;code&gt;BOOST_TT_IS_CONSTRUCTIBLE_CONFORMING&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17の&lt;code&gt;noexcept&lt;/code&gt;仕様で正しく動作するよう、&lt;code&gt;is_function&lt;/code&gt;と&lt;code&gt;is_member_function_pointer&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_default_constructible&lt;/code&gt;と&lt;code&gt;std::pair&lt;/code&gt;向けのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;C++11より前の言語バージョン向けに、&lt;code&gt;is_nothrow_swappable&lt;/code&gt;の実装を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;boost::next&lt;/code&gt;と&lt;code&gt;boost::prior&lt;/code&gt;をIteratorモジュールに移動したため、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;に含まれないようになった。代わりに&lt;code&gt;&amp;lt;boost/next_prior.hpp&amp;gt;&lt;/code&gt;をインクルードすること。ほかの機能を使用する場合でも、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;ヘッダをインクルードすることは推奨しない。特定機能のヘッダをインクルードをする方がよいだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34; id=&#34;units&#34;&gt;Units&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10270&#34; target=&#34;_blank&#34;&gt;Trac #10270&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/units/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; scaled units (大きさの情報を持つ単位型) に対する&lt;code&gt;sqrt&lt;/code&gt;がコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/units/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;サポートを追加&lt;/li&gt;
&lt;li&gt;小さなドキュメント修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/uuid/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; &lt;code&gt;random_generator&lt;/code&gt;がコピー可能でなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; プリプロセッサによる関数引数の生成やメタ関数生成の代わりに、可変引数テンプレートを使用するようにした。初期の修正を提供してくれたNikita Kniazev氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub 40&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13288&#34; target=&#34;_blank&#34;&gt;Trac #13288&lt;/a&gt; &lt;code&gt;apply_visitor&lt;/code&gt;からビジターへ引数を完全転送するよう修正。Paweł Dac氏に感謝&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/variant/pull/41&#34; target=&#34;_blank&#34;&gt;GitHub #41&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.2.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.9.2, 5.4.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.2.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>型特性 -- 新しい Markdown でエラーになってしまってたのを修正した</title>
      <link href="https://boostjp.github.io/tips/type_traits.html"/>
      <id>d9ae0f1db112268845535a26bf0ca3be9b1a3944:tips/type_traits.md</id>
      <updated>2020-03-05T10:52:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/tips/type_traits.md b/tips/type_traits.md
index 10ab14a..49a2312 100644
--- a/tips/type_traits.md
+++ b/tips/type_traits.md
@@ -650,7 +650,7 @@ is_abstract&amp;lt;abc const&amp;gt;::value == true
 インクルード：
 
 - `&amp;lt;boost/type_traits/is_const.hpp&amp;gt;`
-- `&amp;lt;boost/type_traits.hpp&amp;gt;@
+- `&amp;lt;boost/type_traits.hpp&amp;gt;`
 
 例：
 ```cpp
@@ -982,7 +982,9 @@ add_lvalue_reference&amp;lt;void&amp;gt;::type       : void
 インクルード：
 
 - `boost/type_traits/add_rvalue_reference.hpp`
-- `boost/type_traits.hpp`例：
+- `boost/type_traits.hpp`
+
+例：
 
 ```cpp
 add_rvalue_reference&amp;lt;int&amp;gt;::type        : int&amp;amp;&amp;amp;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>melpon</name>
        <email>shigemasa7watanabe+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リリースノート -- 1.73.0のリリースノートページを用意</title>
      <link href="https://boostjp.github.io/document/version.html"/>
      <id>73c2ed09dccb0df693e1dd38d46b03ef10f6dd2c:document/version.md</id>
      <updated>2020-01-23T16:14:26+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;以下は、Boostの各バージョンのリリースノートを翻訳、情報補完したドキュメントです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html&#34;&gt;雛形ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html&#34;&gt;1.73.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html&#34;&gt;1.72.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html&#34;&gt;1.71.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html&#34;&gt;1.70.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html&#34;&gt;1.69.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html&#34;&gt;1.68.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html&#34;&gt;1.67.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_66_0.html&#34;&gt;1.66.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_1.html&#34;&gt;1.65.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html&#34;&gt;1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html&#34;&gt;1.64.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_63_0.html&#34;&gt;1.63.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_62_0.html&#34;&gt;1.62.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_61_0.html&#34;&gt;1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html&#34;&gt;1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html&#34;&gt;1.59.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html&#34;&gt;1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_57_0.html&#34;&gt;1.57.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html&#34;&gt;1.56.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html&#34;&gt;1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_54_0.html&#34;&gt;1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_53_0.html&#34;&gt;1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_52_0.html&#34;&gt;1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_51_0.html&#34;&gt;1.51.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_50_0.html&#34;&gt;1.50.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_49_0.html&#34;&gt;1.49.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_48_0.html&#34;&gt;1.48.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_47_0.html&#34;&gt;1.47.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_1.html&#34;&gt;1.46.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_0.html&#34;&gt;1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_45_0.html&#34;&gt;1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.73.0リリースノート -- 1.73.0のリリースノートページを用意</title>
      <link href="https://boostjp.github.io/document/version/1_73_0.html"/>
      <id>73c2ed09dccb0df693e1dd38d46b03ef10f6dd2c:document/version/1_73_0.md</id>
      <updated>2020-01-23T16:14:26+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.73.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_73_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_73_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#one&#34;&gt;One&lt;/a&gt; # example&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#two&#34;&gt;Two&lt;/a&gt; # example&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#three&#34;&gt;Three&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#one&#34; id=&#34;One&#34;&gt;One&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;blahblahblah&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#two&#34; id=&#34;Two&#34;&gt;Two&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;something&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt; ticket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/XXX/pull/XX&#34; target=&#34;_blank&#34;&gt;pull request XX&lt;/a&gt; GitHub PR&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#three&#34; id=&#34;Three&#34;&gt;Three&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Feature: &lt;code&gt;boost::xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trailing &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>