<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2018-11-14T10:36:52.753541</updated>
  <id>79772cfc-6dd7-428b-b0cd-b8e17503efe8</id>

  
    <entry>
      <title>Boost 1.69.0リリースノート -- リンクミスを修正</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>1631f0bebca34085c69d83a77608acd3a8b2dc11:document/version/1_69_0.md</id>
      <updated>2018-11-14T19:30:14+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34;&gt;YAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、隠れた可視性 (hidden visibility) をもつ共有ライブラリで構築された&lt;code&gt;boost::any&lt;/code&gt;変数が、隠れた可視性をもつ他の共有ライブラリで使用、破棄できるようになった&lt;/li&gt;
&lt;li&gt;メンテナンス： いくつかの依存ライブラリを落として、ドキュメントを修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34; id=&#34;yap&#34;&gt;YAP&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC++ version 14.15 (Visual Studio 2017 version 15.8) のサポートに対する小さな変更&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.69.0リリースノート -- 1.69.0リリースノート : Anyを追加 (close #291)</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>e090ef0f53f4a4ed9fbbae6e467b75673a76ac21:document/version/1_69_0.md</id>
      <updated>2018-11-14T19:26:56+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34;&gt;YAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、隠れた可視性 (hidden visibility) をもつ共有ライブラリで構築された&lt;code&gt;boost::any&lt;/code&gt;変数が、隠れた可視性をもつ他の共有ライブラリで使用、破棄できるようになった&lt;/li&gt;
&lt;li&gt;メンテナンス： いくつかの依存ライブラリを落として、ドキュメントを修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/yap&#34; id=&#34;yap&#34;&gt;YAP&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC++ version 14.15 (Visual Studio 2017 version 15.8) のサポートに対する小さな変更&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.69.0リリースノート -- 1.69.0リリースノート : YAPを追加 (close #315)</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>03a3a5f8efeb17f71ed830d9cf50c1bd93c54eb0:document/version/1_69_0.md</id>
      <updated>2018-11-14T19:22:41+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34;&gt;YAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/yap&#34; id=&#34;yap&#34;&gt;YAP&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC++ version 14.15 (Visual Studio 2017 version 15.8) のサポートに対する小さな変更&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.69.0リリースノート -- 1.69.0リリースノート : Vairantを追加 (close #314)</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>760bdd26e8d49c40d49b14b1c23b14ae300f8937:document/version/1_69_0.md</id>
      <updated>2018-11-14T19:21:23+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.69.0リリースノート -- 1.69.0リリースノート : Utilityを追加 (close #313)</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>f148f3ddfb5bfdc3915803770552719f995145a4:document/version/1_69_0.md</id>
      <updated>2018-11-14T19:18:24+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>