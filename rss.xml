<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2019-06-26T05:27:38.097816</updated>
  <id>34f4e388-559d-490d-a7db-3ea400538f50</id>

  
    <entry>
      <title>Boost 1.71.0リリースノート -- 1.71.0リリースノート : Multi-indexを追加 (close #364)</title>
      <link href="https://boostjp.github.io/document/version/1_71_0.html"/>
      <id>ff6de39ffac402f74beb97593e62877df97ff053:document/version/1_71_0.md</id>
      <updated>2019-06-26T14:23:27+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.71.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_71_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_71_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_71_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_71_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#dynamic-bitset&#34;&gt;Dynamic Bitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;Dynamic Bitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt; MSVCでハードウェア支援のあるpopcountを有効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;boost::hash&lt;/code&gt;と&lt;code&gt;std::hash&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/48&#34; target=&#34;_blank&#34;&gt;GitHub #48&lt;/a&gt; デフォルトコンストラクタを非explicitにし、コピー初期化構文を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multi_index/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; 参照修飾とCV修飾の組み合わせをサポートするため、&lt;code&gt;mem_fun&lt;/code&gt;と&lt;code&gt;const_mem_fun&lt;/code&gt;のバリエーションを追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cv_mem_fun&lt;/code&gt; (&lt;code&gt;R mf() const volatile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cref_mem_fun&lt;/code&gt; (&lt;code&gt;R mf() const&amp;amp;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cvref_mem_fun&lt;/code&gt; (&lt;code&gt;R mf() const volatile&amp;amp;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;volatile_mem_fun&lt;/code&gt; (&lt;code&gt;R mf() volatile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ref_mem_fun&lt;/code&gt; (&lt;code&gt;R mf() &amp;amp;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vref_mem_fun&lt;/code&gt; (&lt;code&gt;R mf() volatile&amp;amp;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multi_index/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; &lt;code&gt;key&lt;/code&gt;が&lt;code&gt;noexcept&lt;/code&gt;付き関数を正しくハンドリングできるようにした&lt;ul&gt;
&lt;li&gt;C++17で例外仕様が型の一部になった影響&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/exception_spec_be_part_of_the_type_system.html&#34; target=&#34;_blank&#34;&gt;C++17 例外仕様を型システムの一部にする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.71.0リリースノート -- 1.71.0リリースノート : Dynamic Bitsetを追加 (close #362)</title>
      <link href="https://boostjp.github.io/document/version/1_71_0.html"/>
      <id>79cf40883d6da04771eb715c15da2dafeba5fa4e:document/version/1_71_0.md</id>
      <updated>2019-06-26T14:11:56+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.71.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_71_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_71_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_71_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_71_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#dynamic-bitset&#34;&gt;Dynamic Bitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;Dynamic Bitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt; MSVCでハードウェア支援のあるpopcountを有効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;boost::hash&lt;/code&gt;と&lt;code&gt;std::hash&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/48&#34; target=&#34;_blank&#34;&gt;GitHub #48&lt;/a&gt; デフォルトコンストラクタを非explicitにし、コピー初期化構文を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.71.0リリースノート -- 1.71.0リリースノート : FlyweightとPolyCollectionを追加</title>
      <link href="https://boostjp.github.io/document/version/1_71_0.html"/>
      <id>5b7f4f02ce68d4ba02643ebb80efa78c93d05433:document/version/1_71_0.md</id>
      <updated>2019-06-26T13:51:26+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.71.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_71_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_71_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_71_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_71_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リリースノート -- 1.71.0のリリースノートページを用意</title>
      <link href="https://boostjp.github.io/document/version.html"/>
      <id>690c87fb8430116cacdf9fc168ab20d389dd7aec:document/version.md</id>
      <updated>2019-06-26T13:48:10+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;以下は、Boostの各バージョンのリリースノートを翻訳、情報補完したドキュメントです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html&#34;&gt;雛形ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html&#34;&gt;1.71.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html&#34;&gt;1.70.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html&#34;&gt;1.69.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html&#34;&gt;1.68.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html&#34;&gt;1.67.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_66_0.html&#34;&gt;1.66.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_1.html&#34;&gt;1.65.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html&#34;&gt;1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html&#34;&gt;1.64.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_63_0.html&#34;&gt;1.63.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_62_0.html&#34;&gt;1.62.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_61_0.html&#34;&gt;1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html&#34;&gt;1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html&#34;&gt;1.59.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html&#34;&gt;1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_57_0.html&#34;&gt;1.57.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html&#34;&gt;1.56.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html&#34;&gt;1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_54_0.html&#34;&gt;1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_53_0.html&#34;&gt;1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_52_0.html&#34;&gt;1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_51_0.html&#34;&gt;1.51.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_50_0.html&#34;&gt;1.50.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_49_0.html&#34;&gt;1.49.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_48_0.html&#34;&gt;1.48.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_47_0.html&#34;&gt;1.47.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_1.html&#34;&gt;1.46.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_0.html&#34;&gt;1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_45_0.html&#34;&gt;1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.71.0リリースノート -- 1.71.0のリリースノートページを用意</title>
      <link href="https://boostjp.github.io/document/version/1_71_0.html"/>
      <id>690c87fb8430116cacdf9fc168ab20d389dd7aec:document/version/1_71_0.md</id>
      <updated>2019-06-26T13:48:10+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.71.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_71_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_71_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_71_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_71_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#one&#34;&gt;One&lt;/a&gt; # example&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#two&#34;&gt;Two&lt;/a&gt; # example&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#three&#34;&gt;Three&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#one&#34; id=&#34;One&#34;&gt;One&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;blahblahblah&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#two&#34; id=&#34;Two&#34;&gt;Two&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;something&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt; ticket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/XXX/pull/XX&#34; target=&#34;_blank&#34;&gt;pull request XX&lt;/a&gt; GitHub PR&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html#three&#34; id=&#34;Three&#34;&gt;Three&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Feature: &lt;code&gt;boost::xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trailing &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.70.0リリースノート -- 1.70.0リリースノート : リリース後に判明したバグについてパッチを記載</title>
      <link href="https://boostjp.github.io/document/version/1_70_0.html"/>
      <id>f763f9014cce0797fcafc1b49fd9f100542fc997:document/version/1_70_0.md</id>
      <updated>2019-05-07T12:01:29+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.70.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_70_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_70_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_70_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_70_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の問題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Beast&lt;ul&gt;
&lt;li&gt;アイドル状態のpingタイムアウト発生時の、ムーブ元executorを修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_70_0/0001-beast-fix-moved-from-executor.patch&#34; target=&#34;_blank&#34;&gt;0001-beast-fix-moved-from-executor.patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1599&#34; target=&#34;_blank&#34;&gt;GitHub #1599&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/outcome/&#34; target=&#34;_blank&#34;&gt;Outcome&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++の例外処理を (直接的に) 使用することが適切ではない状況のための、関数の失敗をハンドリングし、報告するためのツールセット。作者Niall Douglas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/histogram/&#34; target=&#34;_blank&#34;&gt;Histogram&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14向けの、便利なインタフェースを持つ高速で拡張可能な多次元ヒストグラム。作者Hans Dembinski&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#type-index&#34;&gt;Type-Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#ublas&#34;&gt;uBLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このリリースは、多くの新機能、バグ修正、パフォーマンス向上、ドキュメントの改善が含まれる。主な変更点は以下の通り：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(ソケットとかの) I/Oオブジェクトで、カスタムのI/O executorを使用する機能を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;initiate&lt;/code&gt;静的メンバ関数に、&lt;code&gt;async_result&lt;/code&gt;を使用する形式を追加&lt;/li&gt;
&lt;li&gt;Coroutines TSのサポートを更新し、&lt;code&gt;asio&lt;/code&gt;名前空間に昇格させた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CopyConstructible&lt;/code&gt;な新たなコンセプト&lt;code&gt;DynamicBuffer_v2&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;ユーザー定義の非同期操作を実装するのを簡単にする&lt;code&gt;async_compose&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;ヘルパ関数&lt;code&gt;make_strand&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;completion condition typeの要件を緩和し、コピー構築可能ではなくムーブ構築可能だけ要求するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local::basic_endpoint&lt;/code&gt;クラスのコンストラクタに、&lt;code&gt;string_view&lt;/code&gt;をとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;さまざまな関数に&lt;code&gt;noexcept&lt;/code&gt;修飾を追加&lt;/li&gt;
&lt;li&gt;コンフィグレーションの&lt;code&gt;#define&lt;/code&gt;として&lt;code&gt;BOOST_ASIO_DISABLE_VISIBILITY&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;polymorphic executorで関数オブジェクトを型消去 (type erase) する際に使用するメモリをリサイクルするようにした&lt;/li&gt;
&lt;li&gt;データグラム指向ソケット (datagram-oriented socket) で切り詰め (truncation) (&lt;code&gt;error::message_size&lt;/code&gt;) が発生したときに、receive関数が転送されたバイト数を正しく返すよう変更&lt;/li&gt;
&lt;li&gt;バックエンドが&lt;code&gt;pthread_cond_timedwait&lt;/code&gt;を使用する場合の、絶対アウトの計算を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EndpointSequence&lt;/code&gt;イテレータ型を推論するよう範囲ベースの非同期接続操作を変更&lt;/li&gt;
&lt;li&gt;暗黙の変換を防ぐよう&lt;code&gt;buffer_sequence_begin&lt;/code&gt;と&lt;code&gt;buffer_sequence_end&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;ローカル操作が完了する前にSSLハンドシェイクのエラーがピアに伝播されることを保証&lt;/li&gt;
&lt;li&gt;SSLシャットダウン時の&lt;code&gt;eof&lt;/code&gt;エラーは実際には成功しているので、エラーを抑制&lt;/li&gt;
&lt;li&gt;OpenSSLが関連するエラーなしに&lt;code&gt;SSL_ERROR_SYSCALL&lt;/code&gt;を出力する際のフォールバッグエラーコードを追加&lt;/li&gt;
&lt;li&gt;readとwriteの合成非同期操作がbuffer sequence objectsをムーブするよう変更&lt;/li&gt;
&lt;li&gt;macOS固有での&lt;code&gt;OSMemoryBarrier&lt;/code&gt;が非推奨になったことによる警告を修正&lt;/li&gt;
&lt;li&gt;MSVC 11.0での、readとwriteの合成操作を使用した際に発生するコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dispatch&lt;/code&gt;、&lt;code&gt;post&lt;/code&gt;、&lt;code&gt;defer&lt;/code&gt;のドキュメントを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_executor&lt;/code&gt;を使用した際の、Windows固有のメモリリークの可能性があったところを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;より詳細な変更は、&lt;a href=&#34;https://www.boost.org/doc/libs/1_70_0/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;大きいアップデート&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/quickref.html&#34; target=&#34;_blank&#34;&gt;https://www.boost.org/libs/beast/doc/html/beast/quickref.html&lt;/a&gt; ページの☆マークが付いているところが重要&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;助力求む！&lt;ul&gt;
&lt;li&gt;Beastを使っている会社の方は、どのように使用しているのかを&lt;a href=&#34;https://github.com/boostorg/beast/wiki/Companies-and-Individuals-Using-Beast&#34; target=&#34;_blank&#34;&gt;こちらのページ&lt;/a&gt;から教えてほしい&lt;/li&gt;
&lt;li&gt;バグ、機能リクエスト、その他フィードバックは、&lt;a href=&#34;https://github.com/boostorg/beast/issues/new&#34; target=&#34;_blank&#34;&gt;こちらから報告&lt;/a&gt;してほしい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cppalliance.org/slack/&#34; target=&#34;_blank&#34;&gt;C++ Slack Workspace&lt;/a&gt;の #beast チャンネルと #boost チャンネルに参加してほしい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast&#34; target=&#34;_blank&#34;&gt;リポジトリ&lt;/a&gt;への☆も忘れずに！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;チュートリアルをさらに充実させ、活かせるコードを増やした&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/using_io/asio_refresher.html&#34; target=&#34;_blank&#34;&gt;Networking Refresher&lt;/a&gt;はゼロから教える&lt;/li&gt;
&lt;li&gt;[Asynchronous Echo (非同期Echo)]((https://www.boost.org/libs/beast/doc/html/beast/using_io/writing_composed_operations/echo.html)の例を更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/using_io/writing_composed_operations/detect_ssl.html&#34; target=&#34;_blank&#34;&gt;Detect SSL (SSL検知)&lt;/a&gt;の合成操作チュートリアルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/example/websocket/server/chat-multi&#34; target=&#34;_blank&#34;&gt;websocket-chat-multi&lt;/a&gt;は、&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/example/websocket/server/chat-multi/chat_client.html&#34; target=&#34;_blank&#34;&gt;JavaScriptのブラウザクライアント&lt;/a&gt;と組み合わせたマルチスレッドのチャットサーバー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/ref/boost__beast__basic_stream.html&#34; target=&#34;_blank&#34;&gt;basic_stream&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/ref/boost__beast__tcp_stream.html&#34; target=&#34;_blank&#34;&gt;tcp_stream&lt;/a&gt;&lt;/code&gt;は、以下を提供する：&lt;ul&gt;
&lt;li&gt;タイムアウト： 期限切れに対して&lt;code&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/ref/boost__beast__error.html&#34; target=&#34;_blank&#34;&gt;error::timeout&lt;/a&gt;&lt;/code&gt;を使用して、&lt;code&gt;async_read_some&lt;/code&gt;、&lt;code&gt;async_write_some&lt;/code&gt;で検知する&lt;/li&gt;
&lt;li&gt;トラフィックシェーピング (Traffic-shaping) ポリシーとして、&lt;code&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/ref/boost__beast__simple_rate_policy.html&#34; target=&#34;_blank&#34;&gt;simple&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/ref/boost__beast__unlimited_rate_policy.html&#34; target=&#34;_blank&#34;&gt;unlimited&lt;/a&gt;&lt;/code&gt;もしくはユーザー定義のための&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/concepts/RatePolicy.html&#34; target=&#34;_blank&#34;&gt;RatePolicyコンセプト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1322r0.html&#34; target=&#34;_blank&#34;&gt;P1322R0&lt;/a&gt;を使用して、ソケットに直接strandを置けるようにした。呼び出し側で&lt;code&gt;bind_executor&lt;/code&gt;は必要ない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基本クラス群&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/ref/boost__beast__async_base.html&#34; target=&#34;_blank&#34;&gt;async_base&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/ref/boost__beast__stable_async_base.html&#34; target=&#34;_blank&#34;&gt;stable_async_base&lt;/a&gt;&lt;/code&gt;は、全ての合成操作ボイラープレートをハンドリングできる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/ref/boost__beast__ssl_stream.html&#34; target=&#34;_blank&#34;&gt;ssl_stream&lt;/a&gt;&lt;/code&gt;は、flat write optimizationを使用して、ムーブ可能かつ代入可能にした&lt;/li&gt;
&lt;li&gt;全ての非同期操作は、Coroutines TSとの効率的な統合のためにAsioの&lt;code&gt;async_initiate&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;コンパイルの高速化のためには、&lt;code&gt;BOOST_BEAST_SPLIT_COMPILATION&lt;/code&gt;をdefineして&lt;code&gt;boost/beast/src.hpp&lt;/code&gt;を.cppファイルでインクルードすること&lt;/li&gt;
&lt;li&gt;完全な変更点は、&lt;a href=&#34;https://www.boost.org/libs/beast/doc/html/beast/release_notes.html&#34; target=&#34;_blank&#34;&gt;リリースノート&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt; &lt;code&gt;pthread_cancel&lt;/code&gt;でクラッシュしないようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/91&#34; target=&#34;_blank&#34;&gt;GitHub #91&lt;/a&gt; &lt;code&gt;ucontext&lt;/code&gt;の生成に失敗したときに、スタックをクリーンアップするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/97&#34; target=&#34;_blank&#34;&gt;GitHub #97&lt;/a&gt; &lt;code&gt;stack_context&lt;/code&gt;に不足していた&lt;code&gt;BOST_CONTEXT_DECL&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt; &lt;code&gt;jump_i386_sysv_macho&lt;/code&gt;でx87 control wordにゴミを書き込んでいたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; 新たなマクロ&lt;code&gt;BOOST_DLL_USE_STD_FS&lt;/code&gt;を追加。これを値1でdefineすると、C++17標準の&lt;code&gt;std::filesystem::path&lt;/code&gt;、&lt;code&gt;std::system_error&lt;/code&gt;、&lt;code&gt;std::error_code&lt;/code&gt;を使用するようになる。例外の型が&lt;code&gt;boost::system::system_error&lt;/code&gt;から&lt;code&gt;std::system_error&lt;/code&gt;に変わるので、&lt;code&gt;catch&lt;/code&gt;節を必ず更新すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; 動的読み込み可能かの検出と装飾ロジック (decoration logic) を大幅に書き直した。これにより、読み込み失敗した際により正確なエラーが報告されるようになった。プラットフォームに関連したクエリや検出を行わず、ライブラリへの修飾パス (decorated path) を返す&lt;code&gt;shared_library::decorate()&lt;/code&gt;関数を追加した。より良い結果を得るためには、&lt;code&gt;shared_library::load()&lt;/code&gt;関数と、&lt;code&gt;shared_library&lt;/code&gt;クラスのコンストラクタを使用することを推奨する (作業してくれたLoïc Touraine氏に多大な感謝)&lt;/li&gt;
&lt;li&gt;CI強化、ドキュメント更新、誤字修正、移植性に関する多くの修正と整理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub #35&lt;/a&gt; 古いCPUで未定義動作が起きたため、MSVCではハードウェア支援のあるpopcountを無効にした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/191&#34; target=&#34;_blank&#34;&gt;GitHub #191&lt;/a&gt; 未使用変数の警告を無視&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/196&#34; target=&#34;_blank&#34;&gt;Github #196&lt;/a&gt; &lt;code&gt;remote_ready_splk_&lt;/code&gt;がロック取得の高い競争状態にあったのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;クラスの実装での、&lt;code&gt;std::string::end()&lt;/code&gt;を間接参照しているいくつかの箇所を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;(recursive_)directory_iterator&lt;/code&gt;のコンストラクタと、&lt;code&gt;error_code&lt;/code&gt;への参照をとる操作において、メモリ不足状態でプログラムが強制終了してしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12759&#34; target=&#34;_blank&#34;&gt;Trac #12759&lt;/a&gt; &lt;code&gt;path&lt;/code&gt;クラスの静的メンバ変数の定義が不足していたことにより発生していたリンクエラーを修正&lt;/li&gt;
&lt;li&gt;Linux上のdirectory iteratorのインクリメントで、未初期化データが使用される可能性があったのを修正&lt;/li&gt;
&lt;li&gt;directory iteratorにムーブサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/55&#34; target=&#34;_blank&#34;&gt;GitHub #55&lt;/a&gt; &lt;code&gt;directory_entry&lt;/code&gt;クラス用の、file statusを問い合わせるオーバーロードを追加。これによって、directory iteratorを間接参照した結果からfile statusを問い合わせる際に、比較的負荷の高いOSクエリを回避できる&lt;/li&gt;
&lt;li&gt;ファイルシステムが壊れたり改ざんされたりしたときに起こり得るメモリ枯渇を避けるために、&lt;code&gt;current_path()&lt;/code&gt;と&lt;code&gt;read_symlink()&lt;/code&gt;を実装を見直した。これらの関数には、OSが受け付けるパスサイズに内部的な制限があり、現在が16MiBである&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy_file()&lt;/code&gt;関数が使用する内部バッファのサイズを増やした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/526&#34; target=&#34;_blank&#34;&gt;GitHub #526&lt;/a&gt; &lt;code&gt;line_interpolate()&lt;/code&gt;アルゴリズム (線形補間) を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解決した問題&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/450&#34; target=&#34;_blank&#34;&gt;GitHub #450&lt;/a&gt; geodesic direct formulasでの負の距離をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/466&#34; target=&#34;_blank&#34;&gt;GitHub #466&lt;/a&gt; spherical/geographicでの&lt;code&gt;disjoint(box, polygon)&lt;/code&gt;が誤った結果を出力する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/547&#34; target=&#34;_blank&#34;&gt;GitHub #547&lt;/a&gt; &lt;code&gt;zip_iterator&lt;/code&gt;での&lt;code&gt;rtree&lt;/code&gt;の構築で未定義動作が起こる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/560&#34; target=&#34;_blank&#34;&gt;GitHUb #560&lt;/a&gt; &lt;code&gt;karney_direct&lt;/code&gt; formulaが不正確だった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/577&#34; target=&#34;_blank&#34;&gt;GitHub #577&lt;/a&gt; interprocessアロケータと組み合わせたrtreeがClangでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/579&#34; target=&#34;_blank&#34;&gt;GitHub #579&lt;/a&gt; spherical/geographicでの&lt;code&gt;disjoint(segment, box)&lt;/code&gt;が誤った結果になる問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/538&#34; target=&#34;_blank&#34;&gt;GitHub #538&lt;/a&gt; msvc-12での配列初期化の欠陥に対するワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/553&#34; target=&#34;_blank&#34;&gt;GitHub #553&lt;/a&gt; 回転楕円体 (spheroid) が地理的 (geometric) な比較戦略で正しく動作するよう修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/570&#34; target=&#34;_blank&#34;&gt;GitHub #570&lt;/a&gt; spherical/geographicでのジオメトリ間の距離の計算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/571&#34; target=&#34;_blank&#34;&gt;GitHub #571&lt;/a&gt; geographicの距離の計算でNaNが出力されることがあった問題を修正&lt;/li&gt;
&lt;li&gt;gcc-4.6、msvc-10, 11, 12でのrtreeのコンパイルエラーに対するワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;動作の変更&lt;ul&gt;
&lt;li&gt;いくつかのジオメトリの組み合わせの&lt;code&gt;envelope&lt;/code&gt;で、strategyによって期待される結果が異なるようになる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/integer/pull/11&#34; target=&#34;_blank&#34;&gt;GitHub #11&lt;/a&gt; 拡張ユークリッドの互除法 (Extended Euclidean Algorithm) と、モジュラ逆数関数 (Modular Multiplicative Inverse function) を追加 (Nick Thompson氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;text file sink backendでファイルを収集するまえに別のログファイル名を生成する機能をサポートした。これによって既存のログファイルのファイル名にタイムスタンプやファイルカウンタを付加することができ、その結果として汎用的なファイルコレクションを可能にする&lt;ul&gt;
&lt;li&gt;この機能を有効にするには、text file sink backendに対象ファイルのname patternを設定する必要がある。名前付きパラメータ&lt;code&gt;target_file_name&lt;/code&gt;を使用して、&lt;code&gt;text_file_backend::set_target_file_name_pattern()&lt;/code&gt;メンバ関数を呼び出すか、settingsで&lt;code&gt;TargetFileName&lt;/code&gt; sinkパラメータを使用する&lt;/li&gt;
&lt;li&gt;このname patternは、ファイルへの書き込みが終了して収集する際に、新しいファイル名を生成するために使用する。例として、元のファイル名として&lt;code&gt;app.log&lt;/code&gt;を付けた場合、収集してrotateできるようにするため&lt;code&gt;&#34;app-2019-01-05.log&#34;&lt;/code&gt;のようなタイムスタンプやファイルカウンタを付加した衝突しない名前にできる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;Lanczos smoothing derivatives (ランチョスのスムージング導関数) を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;numerical_differentiation.hpp&lt;/code&gt;を&lt;code&gt;boost/math/tools/&lt;/code&gt;から&lt;code&gt;boost/math/differentiation/finite_difference.hpp&lt;/code&gt;に移動&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mean&lt;/code&gt; (平均)、&lt;code&gt;variance&lt;/code&gt; (分散)、&lt;code&gt;skewness&lt;/code&gt; (歪度)、&lt;code&gt;kurtosis&lt;/code&gt; (尖度)、&lt;code&gt;median&lt;/code&gt; (中央値)、Gini coefficient (ジニ係数)、median absolute deviation (MAD、中央値絶対誤差) を&lt;code&gt;tools/univariate_statistics.hpp&lt;/code&gt;に追加&lt;/li&gt;
&lt;li&gt;correlation coefficients (相関係数) とcovariance (共分散) を&lt;code&gt;tools/bivariate_statistics.hpp&lt;/code&gt;に追加&lt;/li&gt;
&lt;li&gt;absolute Gini coefficient (絶対ジニ係数)、Hoyer sparsity (ホイヤーのスパース性)、oracle SNR、M&lt;sub&gt;2&lt;/sub&gt;M&lt;sub&gt;4&lt;/sub&gt; SNR estimatorを&lt;code&gt;tools/signal_statistics.hpp&lt;/code&gt;に追加&lt;/li&gt;
&lt;li&gt;total variation (TV)、l0、l1、l2、sup norms (supノルム)、それと同様に対応するdistance (距離) 関数を&lt;code&gt;tools/norms.hpp&lt;/code&gt;に追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;polynomials&lt;/code&gt;向けにムーブコンストラクタを追加、complex coefficients (複素係数)、&lt;code&gt;.prime()&lt;/code&gt;と&lt;code&gt;.integrate()&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quadratic_roots&lt;/code&gt;を&lt;code&gt;tools/roots.hpp&lt;/code&gt;に追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roots.hpp&lt;/code&gt;のニュートン法に、complex値の関数を追加&lt;/li&gt;
&lt;li&gt;Catmull-Rom interpolator (Catmull-Rom補間器) を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; ： &lt;code&gt;mp_invoke&lt;/code&gt;を&lt;code&gt;mp_invoke_q&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mp_similar&lt;/code&gt;を追加。型リストが全て同じ型であれば&lt;code&gt;mp_true&lt;/code&gt;、そうでなければ&lt;code&gt;mp_false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mp_set_union&lt;/code&gt;、&lt;code&gt;mp_set_intersection&lt;/code&gt;、&lt;code&gt;mp_set_difference&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mp_not_fn&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mp_transform_first&lt;/code&gt;、&lt;code&gt;mp_transform_second&lt;/code&gt;、&lt;code&gt;mp_transform_third&lt;/code&gt;を追加。それぞれ、型リストの先頭要素、その次の要素、さらにその次の要素に変換メタ関数を適用する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mp_filter&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mp_eval_if_not&lt;/code&gt;、&lt;code&gt;mp_eval_or&lt;/code&gt;、&lt;code&gt;mp_valid_q&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mp_back&lt;/code&gt;、&lt;code&gt;mp_pop_back&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アロケータメンバの同名の型として&lt;code&gt;size_type&lt;/code&gt;と&lt;code&gt;difference_type&lt;/code&gt;を定義した。これは多くの状況ではなにも変わりはないが、アロケータの定義によってコンテナの内部構造をある程度制御できるようになった&lt;ul&gt;
&lt;li&gt;本件の動機については、&lt;a href=&#34;https://github.com/boostorg/multi_index/issues/17&#34; target=&#34;_blank&#34;&gt;GitHub #17&lt;/a&gt;を参照。現時点でこの変更は、リファレンスには記載しておらず、準公式の扱いになっている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Optionalとの互換性チェックでの、traitsクラスのさまざまな変換問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt; 変換可能性をチェックする際、古い型では&lt;code&gt;std::numeric_limits&lt;/code&gt;のインスタンス化が起こらないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/103&#34; target=&#34;_blank&#34;&gt;GitHub #103&lt;/a&gt; 任意精度整数を考慮して、可変精度コードを更新&lt;/li&gt;
&lt;li&gt;XML serialization archivesのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/113&#34; target=&#34;_blank&#34;&gt;GitHub #113&lt;/a&gt; &lt;code&gt;mpf_float&lt;/code&gt;と&lt;code&gt;mpfr_float&lt;/code&gt;の、iostreamの固定精度フォーマットしたときのバグを修正&lt;/li&gt;
&lt;li&gt;ネイティブのMPFRをよりハンドリングしやすくするため、特殊関数 (コンストラクタとか) にオーバーロードを追加&lt;/li&gt;
&lt;li&gt;常に失敗する可能性があった、ジェネリックな&lt;code&gt;exp&lt;/code&gt;関数のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/110&#34; target=&#34;_blank&#34;&gt;GitHub #110&lt;/a&gt; 浮動小数点数から整数へのジェネリックな変換で、未定義動作を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Billy O&#39;Neal氏によって、&lt;code&gt;rooted_allocator&lt;/code&gt;の機能不足 (比較演算子と&lt;code&gt;is_always_equal&lt;/code&gt;) が報告された (&lt;a href=&#34;https://github.com/boostorg/poly_collection/pull/9&#34; target=&#34;_blank&#34;&gt;GitHub #9&lt;/a&gt;) 後、状態を持つアロケータ (stateful allocators) と、アロケータの状態伝搬トレイト (allocator propagation traits) のハンドリングを改善&lt;/li&gt;
&lt;li&gt;内部のキャッシュ構造での、潜在的な重大バグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/432&#34; target=&#34;_blank&#34;&gt;GitHub #432&lt;/a&gt; 非推奨ヘッダ&lt;code&gt;boost/detail/iterator.hpp&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;li&gt;X3&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/429&#34; target=&#34;_blank&#34;&gt;GitHub #429&lt;/a&gt; 整数パーサーがユーザー定義型を扱えるようにした&lt;ul&gt;
&lt;li&gt;注： &lt;code&gt;check_overflow&lt;/code&gt;トレイトのデフォルト実装で、&lt;code&gt;boost::integer_traits&amp;lt;T&amp;gt;::is_integral&lt;/code&gt;の代わりに&lt;code&gt;std::numeric_limits&amp;lt;T&amp;gt;::is_bounded&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/439&#34; target=&#34;_blank&#34;&gt;GitHub #439&lt;/a&gt; plain parsing内のシーケンスを削除した。これによってコンパイルエラーは発生するが、代わりにシーケンスを (静かに) パースでき、最後の値 (last value) をとれる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_SPIRIT_INSTANTIATE&lt;/code&gt;による&lt;code&gt;parse_rule&lt;/code&gt;の以下の状況でのインスタンス化を修正：&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/455&#34; target=&#34;_blank&#34;&gt;GitHub #455&lt;/a&gt; ruleがattributeをもたないとき&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/456&#34; target=&#34;_blank&#34;&gt;GitHub #456&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/457&#34; target=&#34;_blank&#34;&gt;GitHub #457&lt;/a&gt; ruleが定義された型ではない属性のとき&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/issues/453&#34; target=&#34;_blank&#34;&gt;GitHub #453&lt;/a&gt; レグレッションを報告してくれた&lt;a href=&#34;https://github.com/Xeverous&#34; target=&#34;_blank&#34;&gt;Xeverous&lt;/a&gt;氏に多大な感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/issues/444&#34; target=&#34;_blank&#34;&gt;GitHub #444&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/449&#34; target=&#34;_blank&#34;&gt;GitHub #449&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/452&#34; target=&#34;_blank&#34;&gt;GitHub #452&lt;/a&gt; rule内の、属性の不要な統合 (synthesization) と、変換なし属性の参照渡しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/issues/415&#34; target=&#34;_blank&#34;&gt;GitHub #415&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/458&#34; target=&#34;_blank&#34;&gt;GitHub #458&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8699&#34; target=&#34;_blank&#34;&gt;Trac #8699&lt;/a&gt; 壊れていた1.0#INFパーサーを削除。あまりドキュメント化されておらず、動作もしていなかった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/460&#34; target=&#34;_blank&#34;&gt;GitHub #460&lt;/a&gt; アンドキュメントだった&lt;code&gt;make_attribute&lt;/code&gt;トレイトは、バグ (&lt;a href=&#34;https://github.com/boostorg/spirit/pull/449&#34; target=&#34;_blank&#34;&gt;GitHub #449&lt;/a&gt;) があったのと、属性変換をシンプルにするために削除した&lt;ul&gt;
&lt;li&gt;属性変換のためにこの機能を使用していたのであれば、このリリースからはもう必要ないはず&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; 整数パーサーが&lt;code&gt;std::numeric_limits&amp;lt;T&amp;gt;::digits10&lt;/code&gt;値を考慮するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; &lt;code&gt;(Min % Base) == 0&lt;/code&gt;コーナーケースでのアンダーフローチェックを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/470&#34; target=&#34;_blank&#34;&gt;GitHub #470&lt;/a&gt; &lt;code&gt;IgnoreOverflowDigits=true&lt;/code&gt;な整数パーサーでの出力値のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/472&#34; target=&#34;_blank&#34;&gt;GitHub #472&lt;/a&gt; コンテナ属性要素 (Container attribute elements) がコピーはされていたが、ムーブされていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/480&#34; target=&#34;_blank&#34;&gt;GitHub #480&lt;/a&gt; &lt;code&gt;transform_attribute&lt;/code&gt;での特殊な参照ハンドリングを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;V2&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/349&#34; target=&#34;_blank&#34;&gt;GitHub #349&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/482&#34; target=&#34;_blank&#34;&gt;GitHub #482&lt;/a&gt; Boost.Endianとのマクロ名と名前空間の衝突を修正&lt;/li&gt;
&lt;li&gt;utree&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/423&#34; target=&#34;_blank&#34;&gt;GtiHub #423&lt;/a&gt; 負の値の左シフトによるタグ取得での未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/462&#34; target=&#34;_blank&#34;&gt;GitHub #462&lt;/a&gt; double conversionを修正 (&lt;code&gt;spirit::string -&amp;gt; std::string -&amp;gt; spirit::string&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Qi&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/427&#34; target=&#34;_blank&#34;&gt;GitHub #427&lt;/a&gt; rule skipper型問題のためにstatic assertを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/429&#34; target=&#34;_blank&#34;&gt;GitHub #429&lt;/a&gt; &lt;code&gt;check_overflow&lt;/code&gt;トレイトのデフォルト実装で、&lt;code&gt;boost::integer_traits&amp;lt;T&amp;gt;::is_integral&lt;/code&gt;の代わりに&lt;code&gt;std::numeric_limits&amp;lt;T&amp;gt;::is_bounded&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/429&#34; target=&#34;_blank&#34;&gt;GitHub #429&lt;/a&gt; 整数パーサーがユーザー定義型を扱えるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/issues/415&#34; target=&#34;_blank&#34;&gt;GitHub #415&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/458&#34; target=&#34;_blank&#34;&gt;GitHub #458&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8699&#34; target=&#34;_blank&#34;&gt;Trac #8699&lt;/a&gt; 壊れていた1.0#INFパーサーを削除。あまりドキュメント化されておらず、動作もしていなかった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/460&#34; target=&#34;_blank&#34;&gt;GitHub #460&lt;/a&gt; アンドキュメントだった&lt;code&gt;make_attribute&lt;/code&gt;トレイトは、バグ (&lt;a href=&#34;https://github.com/boostorg/spirit/pull/449&#34; target=&#34;_blank&#34;&gt;GitHub #449&lt;/a&gt;) があったのと、属性変換をシンプルにするために削除した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/467&#34; target=&#34;_blank&#34;&gt;GitHub #467&lt;/a&gt; &lt;code&gt;pre&lt;/code&gt;/&lt;code&gt;post&lt;/code&gt;/&lt;code&gt;fail&lt;/code&gt;の変換トレイトを直接使用するようにしたので、ユーティリティ関数&lt;code&gt;pre_transform&lt;/code&gt;、&lt;code&gt;post_transform&lt;/code&gt;、&lt;code&gt;fail_transform&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; 整数パーサーが&lt;code&gt;std::numeric_limits&amp;lt;T&amp;gt;::digits10&lt;/code&gt;値を考慮するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; &lt;code&gt;(Min % Base) == 0&lt;/code&gt;コーナーケースでのアンダーフローチェックを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/470&#34; target=&#34;_blank&#34;&gt;GitHub #470&lt;/a&gt; &lt;code&gt;IgnoreOverflowDigits=true&lt;/code&gt;な整数パーサーでの出力値のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/480&#34; target=&#34;_blank&#34;&gt;GitHub #480&lt;/a&gt; &lt;code&gt;transform_attribute&lt;/code&gt;での特殊な参照ハンドリングを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lex&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/420&#34; target=&#34;_blank&#34;&gt;GitHub #420&lt;/a&gt; ユーザー指定のトークン型をともなうlexerのデフォルトコンストラクタでの未定義動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Classic&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/422&#34; target=&#34;_blank&#34;&gt;GitHub #422&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9737&#34; target=&#34;_blank&#34;&gt;Trac #9737&lt;/a&gt; 元となるイテレータ (underlying iterator) の間接参照演算子が非const参照型を返すときに、&lt;code&gt;position_iterator&lt;/code&gt;がローカル変数への参照を形成してしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 32-bit ARM向けのビルドを修正 (修正を提供してくれたIvan Ponomarev氏に感謝 &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントの誤字修正、警告修正、更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Test v3.10&lt;/li&gt;
&lt;li&gt;詳細な変更は&lt;a href=&#34;https://www.boost.org/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Chang Log&lt;/a&gt;を参照&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;Boost.Test &lt;code&gt;minimal.hpp&lt;/code&gt;で、非推奨警告を表示するようにした&lt;/li&gt;
&lt;li&gt;浮動小数点数の比較を変更したので、このリリースより前の浮動小数点数比較を使用したテストが失敗する可能性がある&lt;/li&gt;
&lt;li&gt;内部的なAPI &lt;code&gt;unit_test_log_formatter&lt;/code&gt;を変更。詳細はライブラリ個別のchange logを参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;浮動小数点数の比較を拡張し、非浮動小数点数と算術オペランドをとれるようにした。&lt;code&gt;BOOST_TEST(3.0001 == 3)&lt;/code&gt;このように使用できる (浮動小数点数と整数の比較、かつ演算子を直接指定できる)&lt;/li&gt;
&lt;li&gt;カスタムデータセットの宣言で、&lt;code&gt;sample&lt;/code&gt;型フィールドの指定が必須ではなくなった&lt;/li&gt;
&lt;li&gt;テンプレートテストケースを、&lt;code&gt;std::tuple&lt;/code&gt;によって可変引数定義できるよう拡張した&lt;/li&gt;
&lt;li&gt;時間テストのためにWindowsサポート&lt;/li&gt;
&lt;li&gt;テストスイートに対する時間テスト&lt;/li&gt;
&lt;li&gt;Boost.Timerに対する依存を削除&lt;/li&gt;
&lt;li&gt;スコープ付きのコンテキスト宣言のために新たなマクロ&lt;code&gt;BOOST_TEST_INFO_SCOPE&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_CONTEXT&lt;/code&gt;の構文を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;Trac&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/7397&#34; target=&#34;_blank&#34;&gt;#7397&lt;/a&gt; 1.48.0で非推奨化されたBoost.Timerの機能を使用していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/9434&#34; target=&#34;_blank&#34;&gt;#9434&lt;/a&gt; 異なる種類のシンボルで&lt;code&gt;boost::timer&lt;/code&gt;名前空間を再宣言してコンパイルエラーになっていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13106&#34; target=&#34;_blank&#34;&gt;#13106&lt;/a&gt; libs/test/tools/console_test_runnerのコンパイルに失敗していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13418&#34; target=&#34;_blank&#34;&gt;#13418&lt;/a&gt; &lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE()&lt;/code&gt;に可変引数を許可したい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GitHub Issues&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/133&#34; target=&#34;_blank&#34;&gt;#133&lt;/a&gt; Windowsでテストのタイムアウトを指定するとスキップされてしまう&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/138&#34; target=&#34;_blank&#34;&gt;#138&lt;/a&gt; &lt;code&gt;BOOST_DATA_TEST_CASE&lt;/code&gt;で&lt;code&gt;expected_failures&lt;/code&gt;が動作しない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/141&#34; target=&#34;_blank&#34;&gt;#141&lt;/a&gt; Boost.Mp11とBoost.Hanaの型リストをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/157&#34; target=&#34;_blank&#34;&gt;#157&lt;/a&gt; テスト名のCV修飾&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/160&#34; target=&#34;_blank&#34;&gt;#160&lt;/a&gt; GCC 8.2.0で最適化を有効にした際の&lt;code&gt;-Wformat-overflow&lt;/code&gt;での警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/174&#34; target=&#34;_blank&#34;&gt;#174&lt;/a&gt; GCC 8でのみ、終了時にUBSANで問題が検出される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/176&#34; target=&#34;_blank&#34;&gt;#176&lt;/a&gt; snippet_dataset1_3が壊れている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/177&#34; target=&#34;_blank&#34;&gt;#177&lt;/a&gt; 文字配列の等値比較テストがLLVMで失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/180&#34; target=&#34;_blank&#34;&gt;#180&lt;/a&gt; MSVCで到達しないコードによる警告がでていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/181&#34; target=&#34;_blank&#34;&gt;#181&lt;/a&gt; doc_example22(と23)が失敗していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/194&#34; target=&#34;_blank&#34;&gt;#194&lt;/a&gt; &lt;code&gt;master_test_suite&lt;/code&gt;の二重宣言を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/196&#34; target=&#34;_blank&#34;&gt;#196&lt;/a&gt; JUnitレポートで、エラーが失敗として報告される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/198&#34; target=&#34;_blank&#34;&gt;#198&lt;/a&gt; b2とcmakeでの定義から動的リンクを作れるよう認識させた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/199&#34; target=&#34;_blank&#34;&gt;#199&lt;/a&gt; 1.69.0にアップグレードしたあと、&lt;code&gt;type_mismatch&lt;/code&gt;実行時エラーが出力される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/202&#34; target=&#34;_blank&#34;&gt;#202&lt;/a&gt; 非推奨となっていた&lt;code&gt;boost/timer.hpp&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/203&#34; target=&#34;_blank&#34;&gt;#203&lt;/a&gt; データセットとフィクスチャの両方をともなうテストケースが柔軟なインタフェースを持っていない。&lt;code&gt;BOOST_DATA_TEST_CASE_F&lt;/code&gt;にフィクスチャを指定したときに&lt;code&gt;setup()&lt;/code&gt;と&lt;code&gt;teardown()&lt;/code&gt;が呼び出されなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/204&#34; target=&#34;_blank&#34;&gt;#204&lt;/a&gt; データセットを伴うテストケースでタイムアウトを扱いたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GitHub Pull Request&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/171&#34; target=&#34;_blank&#34;&gt;#171&lt;/a&gt; テストランナーが出力するライブラリ名を正しくした。s/Boost.test/Boost.Test/&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/172&#34; target=&#34;_blank&#34;&gt;#172&lt;/a&gt; &lt;code&gt;NDEBUG&lt;/code&gt;定義時の未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/182&#34; target=&#34;_blank&#34;&gt;#182&lt;/a&gt; C++17でもコンパイルできるように、直接&lt;code&gt;std::bind1st()&lt;/code&gt;を使用していたところを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/183&#34; target=&#34;_blank&#34;&gt;#183&lt;/a&gt; 不要なセミコロンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/184&#34; target=&#34;_blank&#34;&gt;#184&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/190&#34; target=&#34;_blank&#34;&gt;#190&lt;/a&gt; cygwinのGCC 7.3での&lt;code&gt;master_test_suite&lt;/code&gt;での警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/195&#34; target=&#34;_blank&#34;&gt;#195&lt;/a&gt; MinGW GCC 5.3でのコンパイル問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/197&#34; target=&#34;_blank&#34;&gt;#197&lt;/a&gt; &lt;code&gt;BOOST_TEST_CONTEXT&lt;/code&gt;がスコープを導入するのがわかりにくかったので、波カッコ構文でスコープを導入できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/205&#34; target=&#34;_blank&#34;&gt;#205&lt;/a&gt; MinGW環境で&lt;code&gt;vsnprintf&lt;/code&gt;がないためコンパイルエラーが起きていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#type-index&#34; id=&#34;type-index&#34;&gt;Type-Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/28&#34; target=&#34;_blank&#34;&gt;Github #28&lt;/a&gt; GHS C++コンパイラのサポートを追加 (パッチを提供してくれたBrandon Castellano氏に多大な感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; 文字列と型の比較を最適化 (パッチを提供してくれたAndrey Semashev氏に多大な感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; clang-winでのコンパイルを修正 (パッチを提供してくれたPeter Dimov氏に多大な感謝)&lt;/li&gt;
&lt;li&gt;CIを強化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#type-traits&#34; id=&#34;type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;要素数が判明している配列型かを判定する&lt;code&gt;std::is_bounded_array&lt;/code&gt;、要素数が不明な配列型かを判定する&lt;code&gt;std::unbounded_array&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1357r1.pdf&#34; target=&#34;_blank&#34;&gt;P1357R1 Traits for [Un]bounded Arrays&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;指定した型から目的の型に参照の情報をコピーする&lt;code&gt;copy_reference&lt;/code&gt;と、CV修飾と参照をコピーする&lt;code&gt;copy_cv_ref&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;copy_reference&amp;lt;int, char&amp;amp;&amp;gt;::type == int&amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy_cv_ref&amp;lt;int, const char&amp;amp;&amp;gt;::type == const int&amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/clr&lt;/code&gt;オプション付きMSVCのサポートを改善&lt;/li&gt;
&lt;li&gt;コンパイラ互換の雑多な修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#ublas&#34; id=&#34;ublas&#34;&gt;uBLAS&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/ublas/pull/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; C++17以上で使用できるテンソルフレームワークを追加 (Cem Bassoy氏に多大な感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/ublas/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; 基礎的なOpenCLサポートを追加 (Fady Essam氏に多大な感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/ublas/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; 基礎的なベンチマークスイートを統合 (Stefan Seefeld氏に多大な感謝)&lt;/li&gt;
&lt;li&gt;CIインテグレーションと強化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;整理と内部的な改善。Nikita Kniazev氏 (&lt;a href=&#34;https://github.com/boostorg/variant/pull/55&#34; target=&#34;_blank&#34;&gt;GitHub #55&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt;)、Louis Dionne氏 (&lt;a href=&#34;https://github.com/boostorg/variant/pull/51&#34; target=&#34;_blank&#34;&gt;GitHub #51&lt;/a&gt;)に感謝&lt;/li&gt;
&lt;li&gt;CIを強化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>