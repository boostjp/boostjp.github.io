<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2017-07-07T23:03:26.127813</updated>
  <id>5bfcba0a-5d72-4290-a50e-0a57412335c5</id>

  
    <entry>
      <title>Boost 1.65.0リリースノート -- 1.65.0リリースノート : 新ライブラリとしてPolyCollectionを追加 (#158)</title>
      <link href="https://boostjp.github.io/document/version/1_65_0.html"/>
      <id>a5fead2f3df2a5e3d222838d4c60a9b36f526e7d:document/version/1_65_0.md</id>
      <updated>2017-07-07T14:12:42+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.65.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_65_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_65_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/poly_collection&#34; target=&#34;_blank&#34;&gt;PolyCollection&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Joaquín M López Muñoz氏による、多相オブジェクトに対して高速に動作するコンテナのライブラリ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#one&#34;&gt;One&lt;/a&gt; # example&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#two&#34;&gt;Two&lt;/a&gt; # example&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#three&#34;&gt;Three&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#one&#34; name=&#34;One&#34;&gt;One&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;blahblahblah&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#two&#34; name=&#34;Two&#34;&gt;Two&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;something&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt; ticket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/XXX/pull/XX&#34; target=&#34;_blank&#34;&gt;pull request XX&lt;/a&gt; GitHub PR&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#three&#34; name=&#34;Three&#34;&gt;Three&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Feature: &lt;code&gt;boost::xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trailing &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リリースノート -- Boost 1.65.0のリリースノートページを用意した #157</title>
      <link href="https://boostjp.github.io/document/version.html"/>
      <id>f9f2a80bffeb95577aaec8b34d33fdf76691ad6b:document/version.md</id>
      <updated>2017-07-06T16:45:02+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;以下は、Boostの各バージョンのリリースノートを翻訳、情報補完したドキュメントです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html&#34;&gt;雛形ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html&#34;&gt;1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html&#34;&gt;1.64.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_63_0.html&#34;&gt;1.63.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_62_0.html&#34;&gt;1.62.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_61_0.html&#34;&gt;1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html&#34;&gt;1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html&#34;&gt;1.59.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html&#34;&gt;1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_57_0.html&#34;&gt;1.57.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html&#34;&gt;1.56.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html&#34;&gt;1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_54_0.html&#34;&gt;1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_53_0.html&#34;&gt;1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_52_0.html&#34;&gt;1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_51_0.html&#34;&gt;1.51.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_50_0.html&#34;&gt;1.50.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_49_0.html&#34;&gt;1.49.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_48_0.html&#34;&gt;1.48.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_47_0.html&#34;&gt;1.47.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_1.html&#34;&gt;1.46.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_0.html&#34;&gt;1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_45_0.html&#34;&gt;1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.65.0リリースノート -- Boost 1.65.0のリリースノートページを用意した #157</title>
      <link href="https://boostjp.github.io/document/version/1_65_0.html"/>
      <id>f9f2a80bffeb95577aaec8b34d33fdf76691ad6b:document/version/1_65_0.md</id>
      <updated>2017-07-06T16:45:02+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.65.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_65_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_65_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#one&#34;&gt;One&lt;/a&gt; # example&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#two&#34;&gt;Two&lt;/a&gt; # example&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#three&#34;&gt;Three&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#one&#34; name=&#34;One&#34;&gt;One&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;blahblahblah&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#two&#34; name=&#34;Two&#34;&gt;Two&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;something&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt; ticket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/XXX/pull/XX&#34; target=&#34;_blank&#34;&gt;pull request XX&lt;/a&gt; GitHub PR&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#three&#34; name=&#34;Three&#34;&gt;Three&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Feature: &lt;code&gt;boost::xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trailing &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>C++Now! -- 「C++Now! 2017」作成</title>
      <link href="https://boostjp.github.io/cppnow.html"/>
      <id>7d9319baa01b0cf62d746b87ca22179d54522526:cppnow.md</id>
      <updated>2017-06-12T05:51:06+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;C++Now!&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;2012年から、BoostConという名前で開催されていたカンファレンスがC++Now!という名前に変わりました。ここでは、C++Now!のセッション概要の翻訳、およびセッション資料のまとめを記載していきます。&lt;/p&gt;
&lt;p&gt;BoostConは以下のページを参照してください：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/boostcon.html&#34;&gt;BoostCon - boostjp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;各年のセッション概要翻訳&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/cppnow/2012.html&#34;&gt;C++Now! 2012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/cppnow/2013.html&#34;&gt;C++Now! 2013&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/cppnow/2014.html&#34;&gt;C++Now! 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/cppnow/2015.html&#34;&gt;C++Now! 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/cppnow/2016.html&#34;&gt;C++Now! 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/cppnow/2017.html&#34;&gt;C++Now! 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>E Kawashima</name>
        <email>e-kwsm@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>C++Now! 2017 -- 「C++Now! 2017」作成</title>
      <link href="https://boostjp.github.io/cppnow/2017.html"/>
      <id>7d9319baa01b0cf62d746b87ca22179d54522526:cppnow/2017.md</id>
      <updated>2017-06-12T05:51:06+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;C++Now! 2017&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://cppnow2017.sched.com&#34; target=&#34;_blank&#34;&gt;https://cppnow2017.sched.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;セッションリスト&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rust: Hack Without Fear!&lt;/li&gt;
&lt;li&gt;C++17 Features&lt;/li&gt;
&lt;li&gt;Expression Templates Everywhere with C++14 and Yap&lt;/li&gt;
&lt;li&gt;&lt;code&gt;constexpr&lt;/code&gt; ALL the things!&lt;/li&gt;
&lt;li&gt;Rethinking Strings&lt;/li&gt;
&lt;li&gt;Networking TS Workshop (part 1 of 2)&lt;/li&gt;
&lt;li&gt;Networking TS Workshop (part 2 of 2)&lt;/li&gt;
&lt;li&gt;C++11’s Quiet Little Gem: &lt;code&gt;&amp;lt;system_error&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Local (&#34;Arena&#34;) Memory Allocators&lt;/li&gt;
&lt;li&gt;Containers &amp;amp; Strings: Why the Implementation Matters&lt;/li&gt;
&lt;li&gt;Haskell taketh away: limiting side effects for parallel programming&lt;/li&gt;
&lt;li&gt;(Ab)using C++17&lt;/li&gt;
&lt;li&gt;Good FIFOs Make Good Thread Neighbors&lt;/li&gt;
&lt;li&gt;Postmodern Immutable Data Structures&lt;/li&gt;
&lt;li&gt;Type Based Template Metaprogramming is Not Dead&lt;/li&gt;
&lt;li&gt;A vision for C++20 and &lt;code&gt;std2&lt;/code&gt; (part 1 of 3)&lt;/li&gt;
&lt;li&gt;Fun with Boost.Hana&lt;/li&gt;
&lt;li&gt;Composite Arithmetic Types Are &amp;gt; the + of Their Parts&lt;/li&gt;
&lt;li&gt;An easy to use RPC framework implemented in C++11/14&lt;/li&gt;
&lt;li&gt;Mocking C++ (full-length version)&lt;/li&gt;
&lt;li&gt;The Mathematical Underpinnings of Promises in C++&lt;/li&gt;
&lt;li&gt;Multithreading Using Lockless Lists and RCU&lt;/li&gt;
&lt;li&gt;Call: A Library that Will Change the Way You Think about Function Invocations (part 1 of 2)&lt;/li&gt;
&lt;li&gt;Call: A Library that Will Change the Way You Think about Function Invocations (part 2 of 2)&lt;/li&gt;
&lt;li&gt;Postmodern C++&lt;/li&gt;
&lt;li&gt;Promises in C++: The Universal Glue for Asynchronous Programs&lt;/li&gt;
&lt;li&gt;A look at C++ through the glasses of a language tool&lt;/li&gt;
&lt;li&gt;Boost vs Qt: What Could They Learn From Each Other?&lt;/li&gt;
&lt;li&gt;A vision for C++20 and &lt;code&gt;std2&lt;/code&gt; (part 2 of 3)&lt;/li&gt;
&lt;li&gt;Practical (?) Applications of Reflection&lt;/li&gt;
&lt;li&gt;Towards Painless Testing&lt;/li&gt;
&lt;li&gt;Sorting in less than O(n log n): Generalizing and optimizing radix sort&lt;/li&gt;
&lt;li&gt;Parallel Programming with RaftLib: streaming/data-flow concurrency via concise C++ iostream-like operators&lt;/li&gt;
&lt;li&gt;Implementing &lt;code&gt;variant&lt;/code&gt; visitation using lambdas&lt;/li&gt;
&lt;li&gt;Testing the Limits of Allocator Awareness&lt;/li&gt;
&lt;li&gt;Competitive Advantage with D&lt;/li&gt;
&lt;li&gt;Effective CMake&lt;/li&gt;
&lt;li&gt;The &#39;Detection Idiom:&#39; A Better Way to SFINAE&lt;/li&gt;
&lt;li&gt;C++ Core Guidelines - Modernize your C++ Code Base&lt;/li&gt;
&lt;li&gt;Restoring Your Sanity: An Approach to Dealing with Reference Types in the Generic Programming Paradigm&lt;/li&gt;
&lt;li&gt;Locally Atomic Capabilities and How to Count Them&lt;/li&gt;
&lt;li&gt;The Holy Grail - A Hash Array Mapped Trie for C++&lt;/li&gt;
&lt;li&gt;A vision for C++20 and &lt;code&gt;std2&lt;/code&gt; (part 3 of 3)&lt;/li&gt;
&lt;li&gt;No raw &lt;code&gt;std::thread&lt;/code&gt;! - Live Tweet Analysis in C++&lt;/li&gt;
&lt;li&gt;Customization Points That Suck Less&lt;/li&gt;
&lt;li&gt;clang-useful: Building useful tools with LLVM and clang for fun and profit&lt;/li&gt;
&lt;li&gt;Performance analysis and optimization of C++ standard libraries&lt;/li&gt;
&lt;li&gt;Type-safe Programming&lt;/li&gt;
&lt;li&gt;The Lesser-Known Multicore Synchronization Primitives&lt;/li&gt;
&lt;li&gt;CHAP: A memory analyzer for un-instrumented cores&lt;/li&gt;
&lt;li&gt;Nbdl: Generic Library for Managing State Seamlessly Across Network&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セッション資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostcon/cppnow_presentations_2017&#34; target=&#34;_blank&#34;&gt;C++Now! Presentations 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>E Kawashima</name>
        <email>e-kwsm@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>C++Now! 2016 -- C++Now 2016 のセッションリストを修正</title>
      <link href="https://boostjp.github.io/cppnow/2016.html"/>
      <id>ac1cadd4d4cb8cfc63aaeaeb12858706efd39421:cppnow/2016.md</id>
      <updated>2017-06-12T05:46:48+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;C++Now! 2016&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://cppnow2016.sched.com&#34; target=&#34;_blank&#34;&gt;https://cppnow2016.sched.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;セッションリスト&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Better Code&lt;/li&gt;
&lt;li&gt;Typegrind: Type Preserving Heap Profiler for C++&lt;/li&gt;
&lt;li&gt;C++14 Dependency Injection&lt;/li&gt;
&lt;li&gt;Proper Inheritance (Part 1)&lt;/li&gt;
&lt;li&gt;CopperSpice: The Next Generation of Signals&lt;/li&gt;
&lt;li&gt;Proper Inheritance (Part 2)&lt;/li&gt;
&lt;li&gt;Practical Performance Practices&lt;/li&gt;
&lt;li&gt;Metaprogramming for Dummies&lt;/li&gt;
&lt;li&gt;Monoids, Monads and Applicative Functors: Repeated Software Patterns&lt;/li&gt;
&lt;li&gt;C++14 Version of Boost.MSM-eUML&lt;/li&gt;
&lt;li&gt;Diet for your Templates: Reducing Code Bloat in your Templated Library&lt;/li&gt;
&lt;li&gt;Variants: Past, Present, and Future&lt;/li&gt;
&lt;li&gt;Come Stream With Me: Build Performant, Simple, Parallel Applications in C++ Using RaftLib&lt;/li&gt;
&lt;li&gt;Documenting C++ Using the Right Tools&lt;/li&gt;
&lt;li&gt;array_ref: Multidimensional Array References for the C++ Standard Library&lt;/li&gt;
&lt;li&gt;Implementing a Lock-Free atomic_shared_ptr&lt;/li&gt;
&lt;li&gt;Friendship in Service of Testing&lt;/li&gt;
&lt;li&gt;Pulling Visitors&lt;/li&gt;
&lt;li&gt;Thread-safe Observer Pattern: You&#39;re Doing It Wrong&lt;/li&gt;
&lt;li&gt;Metaprogramming for the Brave&lt;/li&gt;
&lt;li&gt;Implementation of a Multithreaded Compile-Time ECS in C++14&lt;/li&gt;
&lt;li&gt;Design Patterns in the 21st Century&lt;/li&gt;
&lt;li&gt;Let&#39;s Make a Web Match-3 Game in C++14&lt;/li&gt;
&lt;li&gt;Multithreading is the Answer. What was the Question? (Part 1)&lt;/li&gt;
&lt;li&gt;Variadic Expansion in Examples&lt;/li&gt;
&lt;li&gt;IoC++: An IoC Framework for C++&lt;/li&gt;
&lt;li&gt;Multithreading is the Answer. What was the Question? (Part 2)&lt;/li&gt;
&lt;li&gt;Preprocessor-Aware Automated Refactoring&lt;/li&gt;
&lt;li&gt;Extending C++ with Co-Array Semantics&lt;/li&gt;
&lt;li&gt;Progress on Contract Support for C++17&lt;/li&gt;
&lt;li&gt;Implementing Static Control Flow in C++14&lt;/li&gt;
&lt;li&gt;The Effective Structured Data Marshalling/Demarshalling Through Boost.Fusion Introspection in a High Performance Web Service&lt;/li&gt;
&lt;li&gt;Why And How To Add Scripting&lt;/li&gt;
&lt;li&gt;The Design of a New C++ Build Toolchain&lt;/li&gt;
&lt;li&gt;C++ Performance in Practice: Align, Vectorise, Cache, Jump!&lt;/li&gt;
&lt;li&gt;Goodbye Metaprogramming, and Hello Functional: Living in a Post-Metaprogramming Era in C++&lt;/li&gt;
&lt;li&gt;Understanding Boost.Build&lt;/li&gt;
&lt;li&gt;Simple Hand Written Parsers&lt;/li&gt;
&lt;li&gt;An Interesting Lock-free Queue: Part 2 of N&lt;/li&gt;
&lt;li&gt;HPX and GPU Parallelized STL&lt;/li&gt;
&lt;li&gt;The Fiber Library&lt;/li&gt;
&lt;li&gt;What is the Basic Interface?&lt;/li&gt;
&lt;li&gt;The CPU Cache: Instruction Re-Ordering Made Obvious&lt;/li&gt;
&lt;li&gt;No Sane Compiler would Optimize Atomics&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セッション資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostcon/cppnow_presentations_2016&#34; target=&#34;_blank&#34;&gt;C++Now! Presentations 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>E Kawashima</name>
        <email>e-kwsm@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>C++Now! 2016 -- C++Now 2016 のセッションリストを修正</title>
      <link href="https://boostjp.github.io/cppnow/2016.html"/>
      <id>f27f1709b46db6bdd94e7efb059d82828040e962:cppnow/2016.md</id>
      <updated>2017-06-12T05:28:51+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;C++Now! 2016&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://cppnow2016.sched.com&#34; target=&#34;_blank&#34;&gt;https://cppnow2016.sched.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;セッションリスト&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rust: Hack Without Fear!&lt;/li&gt;
&lt;li&gt;C++17 Features&lt;/li&gt;
&lt;li&gt;Expression Templates Everywhere with C++14 and Yap&lt;/li&gt;
&lt;li&gt;&lt;code&gt;constexpr&lt;/code&gt; ALL the things!&lt;/li&gt;
&lt;li&gt;Rethinking Strings&lt;/li&gt;
&lt;li&gt;Networking TS Workshop (part 1 of 2)&lt;/li&gt;
&lt;li&gt;Networking TS Workshop (part 2 of 2)&lt;/li&gt;
&lt;li&gt;C++11’s Quiet Little Gem: &lt;code&gt;&amp;lt;system_error&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Local (&#34;Arena&#34;) Memory Allocators&lt;/li&gt;
&lt;li&gt;Containers &amp;amp; Strings: Why the Implementation Matters&lt;/li&gt;
&lt;li&gt;Haskell taketh away: limiting side effects for parallel programming&lt;/li&gt;
&lt;li&gt;(Ab)using C++17&lt;/li&gt;
&lt;li&gt;Good FIFOs Make Good Thread Neighbors&lt;/li&gt;
&lt;li&gt;Postmodern Immutable Data Structures&lt;/li&gt;
&lt;li&gt;Type Based Template Metaprogramming is Not Dead&lt;/li&gt;
&lt;li&gt;A vision for C++20 and &lt;code&gt;std2&lt;/code&gt; (part 1 of 3)&lt;/li&gt;
&lt;li&gt;Fun with Boost.Hana&lt;/li&gt;
&lt;li&gt;Composite Arithmetic Types Are &amp;gt; the + of Their Parts&lt;/li&gt;
&lt;li&gt;An easy to use RPC framework implemented in C++11/14&lt;/li&gt;
&lt;li&gt;Mocking C++ (full-length version)&lt;/li&gt;
&lt;li&gt;The Mathematical Underpinnings of Promises in C++&lt;/li&gt;
&lt;li&gt;Multithreading Using Lockless Lists and RCU&lt;/li&gt;
&lt;li&gt;Call: A Library that Will Change the Way You Think about Function Invocations (part 1 of 2)&lt;/li&gt;
&lt;li&gt;Call: A Library that Will Change the Way You Think about Function Invocations (part 2 of 2)&lt;/li&gt;
&lt;li&gt;Postmodern C++&lt;/li&gt;
&lt;li&gt;Promises in C++: The Universal Glue for Asynchronous Programs&lt;/li&gt;
&lt;li&gt;A look at C++ through the glasses of a language tool&lt;/li&gt;
&lt;li&gt;Boost vs Qt: What Could They Learn From Each Other?&lt;/li&gt;
&lt;li&gt;A vision for C++20 and &lt;code&gt;std2&lt;/code&gt; (part 2 of 3)&lt;/li&gt;
&lt;li&gt;Practical (?) Applications of Reflection&lt;/li&gt;
&lt;li&gt;Towards Painless Testing&lt;/li&gt;
&lt;li&gt;Sorting in less than O(n log n): Generalizing and optimizing radix sort&lt;/li&gt;
&lt;li&gt;Parallel Programming with RaftLib: streaming/data-flow concurrency via concise C++ iostream-like operators&lt;/li&gt;
&lt;li&gt;Implementing &lt;code&gt;variant&lt;/code&gt; visitation using lambdas&lt;/li&gt;
&lt;li&gt;Testing the Limits of Allocator Awareness&lt;/li&gt;
&lt;li&gt;Competitive Advantage with D&lt;/li&gt;
&lt;li&gt;Effective CMake&lt;/li&gt;
&lt;li&gt;The &#39;Detection Idiom:&#39; A Better Way to SFINAE&lt;/li&gt;
&lt;li&gt;C++ Core Guidelines - Modernize your C++ Code Base&lt;/li&gt;
&lt;li&gt;Restoring Your Sanity: An Approach to Dealing with Reference Types in the Generic Programming Paradigm&lt;/li&gt;
&lt;li&gt;Locally Atomic Capabilities and How to Count Them&lt;/li&gt;
&lt;li&gt;The Holy Grail - A Hash Array Mapped Trie for C++&lt;/li&gt;
&lt;li&gt;A vision for C++20 and &lt;code&gt;std2&lt;/code&gt; (part 3 of 3)&lt;/li&gt;
&lt;li&gt;No raw &lt;code&gt;std::thread&lt;/code&gt;! - Live Tweet Analysis in C++&lt;/li&gt;
&lt;li&gt;Customization Points That Suck Less&lt;/li&gt;
&lt;li&gt;clang-useful: Building useful tools with LLVM and clang for fun and profit&lt;/li&gt;
&lt;li&gt;Performance analysis and optimization of C++ standard libraries&lt;/li&gt;
&lt;li&gt;Type-safe Programming&lt;/li&gt;
&lt;li&gt;The Lesser-Known Multicore Synchronization Primitives&lt;/li&gt;
&lt;li&gt;CHAP: A memory analyzer for un-instrumented cores&lt;/li&gt;
&lt;li&gt;Nbdl: Generic Library for Managing State Seamlessly Across Network&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セッション資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostcon/cppnow_presentations_2016&#34; target=&#34;_blank&#34;&gt;C++Now! Presentations 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>E Kawashima</name>
        <email>e-kwsm@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>