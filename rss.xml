<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2023-04-13T02:16:11.821251</updated>
  <id>cb69b736-fc31-4314-8cc0-eb57990bacd0</id>

  
    <entry>
      <title>Boost 1.82.0リリースノート -- 1.82.0 : 既知の問題を追加</title>
      <link href="https://boostjp.github.io/document/version/1_82_0.html"/>
      <id>5d2c51488b95dc9e9752d85cd92c9912ef06e29c:document/version/1_82_0.md</id>
      <updated>2023-04-13T11:14:38+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.82.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_82_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_82_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の問題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Filesystem&lt;ul&gt;
&lt;li&gt;OpenBSD で共有ライブラリのコンパイラフラグ &lt;code&gt;-Wl,--no-undefined&lt;/code&gt; のサポートが壊れているため、コンパイルに失敗することがある。&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/283&#34; target=&#34;_blank&#34;&gt;GitHub #283&lt;/a&gt;、および&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_82_0/0001-filesystem-fix-openbsd-build.patch&#34; target=&#34;_blank&#34;&gt;パッチ&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C++03サポートの終了&lt;/h2&gt;
&lt;p&gt;以下のライブラリは、いまから2リリース後の1.84.0でC++03のサポートを終了する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Align&lt;/li&gt;
&lt;li&gt;Any&lt;/li&gt;
&lt;li&gt;Asio&lt;/li&gt;
&lt;li&gt;Atomic&lt;/li&gt;
&lt;li&gt;Bind&lt;/li&gt;
&lt;li&gt;Chrono&lt;/li&gt;
&lt;li&gt;ContainerHash&lt;/li&gt;
&lt;li&gt;Conversion&lt;/li&gt;
&lt;li&gt;DLL&lt;/li&gt;
&lt;li&gt;Endian&lt;/li&gt;
&lt;li&gt;Filesystem&lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Functional&lt;/li&gt;
&lt;li&gt;Io&lt;/li&gt;
&lt;li&gt;LexicalCast&lt;/li&gt;
&lt;li&gt;Log&lt;/li&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Ratio&lt;/li&gt;
&lt;li&gt;SmartPtr&lt;/li&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;Stacktrace&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;Timer&lt;/li&gt;
&lt;li&gt;TypeIndex&lt;/li&gt;
&lt;li&gt;Typeof&lt;/li&gt;
&lt;li&gt;Unordered&lt;/li&gt;
&lt;li&gt;Variant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリース（1.82）と次のリリース（1.83）は、上記のライブラリとその依存関係の大部分でC++03をサポートする最後のリリースとなる。&lt;/p&gt;
&lt;p&gt;古いバージョンのコンパイラでは、サポート不足やバグのためにC++11が部分的にしか実装されていないことが多いため、どのコンパイラがC++11の要件を満たしているとみなされるかは、ライブラリによって異なる場合がある。&lt;/p&gt;
&lt;p&gt;しかし、一般的なルールとして、コンパイラがC++11のキーワードや構文をまったく認識しない場合（例：&lt;code&gt;noexcept&lt;/code&gt;の使用、&lt;code&gt;constexpr&lt;/code&gt;の使用、&lt;code&gt;=delete&lt;/code&gt;された関数を定義すると即コンパイルエラー）、コンパイラがC++11必須のヘッダーをまったく提供しない場合（例：&lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt; や &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; をインクルードしようとすると失敗する）、あるいはコンパイラがC++11の機能やヘッダを提供するがまったく使用できない場合、このコンパイラはC++11コンパイラとはみなされない。&lt;/p&gt;
&lt;p&gt;このため、例えば14.0 (2015) 以前のMicrosoft Visual C++や、4.8以前のGCCは除外される。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mysql&#34; target=&#34;_blank&#34;&gt;MySql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.AsioベースのMySQLデータベースサーバーのC++11クライアント (作者Reuben Perez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/any/pull/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 非推奨の &lt;code&gt;utility/enable_if.hpp&lt;/code&gt; の代わりに &lt;code&gt;core/enable_if.hpp&lt;/code&gt; ヘッダを使用するようになった。PRをくれたMichael Ford氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;操作が即座に完了した場合の完了ハンドラの実行をカスタマイズする機能を追加&lt;/li&gt;
&lt;li&gt;バッファタイプにユーザー定義のリテラルを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_SEQPACKET&lt;/code&gt; で &lt;code&gt;AF_UNIX&lt;/code&gt; を表現するために新しいプロトコルタイプ &lt;code&gt;local::seq_packet_protocol&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signal_set::add&lt;/code&gt; のオプション引数で &lt;code&gt;sigaction()&lt;/code&gt; フラグを公開&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocator_binder&lt;/code&gt;, &lt;code&gt;executor_binder&lt;/code&gt;, &lt;code&gt;cancellation_slot_binder&lt;/code&gt; を変更して、特殊でない連想子 (unspecialised associators) の検出をサポートするようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;associated_cancellation_slot&amp;lt;reference_wrapper&amp;gt;::get()&lt;/code&gt; のあいまいさを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::exception_ptr&lt;/code&gt; を含む完了シグネチャの &lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt; 処理を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::channel&amp;lt;&amp;gt;&lt;/code&gt; の &lt;code&gt;try_send&lt;/code&gt; が &lt;code&gt;cancel&lt;/code&gt; の後に失敗するのを修正&lt;/li&gt;
&lt;li&gt;プールに内部スレッドがない場合の &lt;code&gt;thread_pool::join()&lt;/code&gt; のデッドロックを修正&lt;/li&gt;
&lt;li&gt;io_uring を使用した際のパイプの &lt;code&gt;release()&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;バックエンドのデータ初期化およびクリーンアップの問題を修正&lt;/li&gt;
&lt;li&gt;実行コンテキストのオーバーロードである &lt;code&gt;get_associated_executor()&lt;/code&gt; のぶら下がり参照の問題を修正&lt;/li&gt;
&lt;li&gt;バッファリングされたメッセージは &lt;code&gt;experimental::channel&amp;lt;&amp;gt;&lt;/code&gt; が閉じられても受信できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ANY_COMPLETION_HANDLER&lt;/code&gt; の代入演算子を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any_completion_handler&lt;/code&gt;のコンストラクタが誤ってコピーされるのを防ぐために、コンストラクタを制限した&lt;/li&gt;
&lt;li&gt;OpenSSL のオプションに &lt;code&gt;uint64_t&lt;/code&gt; を使用するように変更した（OpenSSL 3 に対応）&lt;/li&gt;
&lt;li&gt;複数の完了シグネチャを持つ &lt;code&gt;deferred&lt;/code&gt; の相互運用性を修正&lt;/li&gt;
&lt;li&gt;C++11 と C++14 の部分的なサポートを追加するためにチャネルを修正した&lt;/li&gt;
&lt;li&gt;パッケージ化された非同期処理を待つ際に、&lt;code&gt;co_composed&lt;/code&gt;と&lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt;コルーチンのソースロケーションを追跡するハンドラの欠落をサポートした&lt;/li&gt;
&lt;li&gt;いくつかの「潜在的なヌル参照」警告とシャドウ変数警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const_buffers_1&lt;/code&gt; と &lt;code&gt;mutable_buffers_1&lt;/code&gt; を使用したときの &lt;code&gt;asio::buffer&lt;/code&gt; オーバーロードの選択を修正&lt;/li&gt;
&lt;li&gt;古い Windows をターゲットにしていない限り、現在の Windows バージョンのランタイムチェックを無効にした&lt;/li&gt;
&lt;li&gt;バッファードストリームラッパーと&lt;code&gt;ssl::stream&amp;lt;&amp;gt;&lt;/code&gt;のようなムーブ構築可能なストリームとの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::async_accept&lt;/code&gt; の戻り値の型が推論されるラムダとの互換性を修正&lt;/li&gt;
&lt;li&gt;レガシーな完了トークンの &lt;code&gt;as_tuple&lt;/code&gt; との互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redirect_error&lt;/code&gt; と新しい完了トークンとの互換性を修正&lt;/li&gt;
&lt;li&gt;デストラクタからのエスケープが許可されるべき例外による Windows 特有のプログラム終了の可能性を修正した&lt;/li&gt;
&lt;li&gt;ブール式の不用意な &lt;code&gt;co_await&lt;/code&gt; を防止した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::use_coro&lt;/code&gt;の結果処理とカスタムアロケータのサポートを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_async_operation&lt;/code&gt; と &lt;code&gt;completion_signature_of&lt;/code&gt; の可変引数テンプレートエミュレーション修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;のmove-from結果の不正な再利用を修正した&lt;/li&gt;
&lt;li&gt;カスタムアロケータを使用した &lt;code&gt;experimental::coro&lt;/code&gt; を修正した&lt;/li&gt;
&lt;li&gt;Windows のストリーム指向ファイルでの &lt;code&gt;seek_cur&lt;/code&gt; の挙動を修正した&lt;/li&gt;
&lt;li&gt;ドキュメントに様々な追加と修正を行った&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AVX をサポートする x86 ターゲット用にコンパイルされた場合、128 ビットのアトミックロードとストアにベクタ命令が使用されるようになった&lt;/li&gt;
&lt;li&gt;32-bit x86 ターゲットでは、&lt;code&gt;memory_order_seq_cst&lt;/code&gt;セマンティクスを持つ 64-bit アトミックロードとストアは、メモリ順序付け命令を発行するようになった&lt;/li&gt;
&lt;li&gt;Boost.Atomic 1.73 で非推奨となった &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage()&lt;/code&gt; アクセッサと &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage_type&lt;/code&gt; 型を削除。代わりに &lt;code&gt;atomic&amp;lt;T&amp;gt;::value()&lt;/code&gt; と &lt;code&gt;atomic&amp;lt;T&amp;gt;::value_type&lt;/code&gt; を使用することを推奨&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;での&lt;code&gt;error_code&lt;/code&gt;の使用を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcp_stream&lt;/code&gt; が、タイマーの正しい実行形式を使用するよう修正&lt;/li&gt;
&lt;li&gt;error_categories が数値の ID を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt; にシークをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_value&lt;/code&gt;の&lt;code&gt;std::nullopt_t&lt;/code&gt;に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_tuple_like&lt;/code&gt;と、&lt;code&gt;hash_value&lt;/code&gt;のtuple-like型に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;のハッシュ化として、品質と速度の両方の改善のために&lt;code&gt;&lt;a href=&#34;https://github.com/pdimov/mulxp_hash&#34; target=&#34;_blank&#34;&gt;mulxp1_hash&lt;/a&gt;&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/core/snprintf.hpp&lt;/code&gt; ヘッダーを追加し、&lt;code&gt;snprintf&lt;/code&gt;、&lt;code&gt;vsnprintf&lt;/code&gt; およびそれらの &lt;code&gt;wchar_t&lt;/code&gt; 対応のポータブル定義を追加&lt;/li&gt;
&lt;li&gt;非推奨のヘッダ &lt;code&gt;boost/core/is_same.hpp&lt;/code&gt; と &lt;code&gt;boost::core::is_same&lt;/code&gt; は将来のリリースで削除される予定&lt;ul&gt;
&lt;li&gt;代わりに Boost.TypeTraits または C++ 標準ライブラリの型付けを使用することを推奨する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::ref&lt;/code&gt; のメンバ関数と関連するメンバ関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::swap&lt;/code&gt; 関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた。これは、型が例外を投げないスワップ操作をサポートしているかどうかによって異なる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::core::launder&lt;/code&gt; のポータブルな実装を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alignof&lt;/code&gt; のポータブルな実装である &lt;code&gt;BOOST_CORE_ALIGNOF&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::max_align_t&lt;/code&gt; の移植版である &lt;code&gt;boost::core::max_align_t&lt;/code&gt; と、 &lt;code&gt;max_align_t&lt;/code&gt; のアライメントである &lt;code&gt;boost::core::max_align&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;C++17 の &lt;code&gt;std::pmr::memory_resource&lt;/code&gt; と同等の移植性を持つ &lt;code&gt;boost::core::memory_resource&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/serialization.hpp&lt;/code&gt; を追加。これは、ライブラリがシリアライゼーションのヘッダを含めずに型の Boost.Serialization サポートを実装できるようにするプリミティブのコレクションであり、それによってライブラリがシリアライゼーションに依存するようにする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::data&lt;/code&gt;の実装である&lt;code&gt;boost::data&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::size&lt;/code&gt;の実装である&lt;code&gt;boost::size&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::span&lt;/code&gt; を更新し、 &lt;code&gt;std::initializer_list&lt;/code&gt; から範囲を作成するために &lt;code&gt;boost::data&lt;/code&gt; を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::identity&lt;/code&gt;の実装である &lt;code&gt;boost::identity&lt;/code&gt; を追加しました。この機能は Boost.Functional から移動した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; &lt;code&gt;size_t&lt;/code&gt;から&lt;code&gt;uint32_t&lt;/code&gt;への暗黙変換を回避。Travers Biddle氏のPull Requestに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; パス変換のコンストラクタ引数が寛容すぎるために発生するコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; [v4] &lt;code&gt;path::remove_filename&lt;/code&gt; が末尾のディレクトリセパレータを保持するようになった&lt;/li&gt;
&lt;li&gt;パスからファイル名とそれに先立つディレクトリセパレータを削除する &lt;code&gt;path::remove_filename_and_trailing_separators&lt;/code&gt; を追加。この動作は Filesystem v3 の &lt;code&gt;path::remove_filename&lt;/code&gt; と似ているが、v4 でも使用可能&lt;/li&gt;
&lt;li&gt;パス中のファイル名を置換する &lt;code&gt;path::replace_filename&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt; ODR 違反を避けるために、ライブラリのバージョン選択の実装を更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/282&#34; target=&#34;_blank&#34;&gt;GitHub #282&lt;/a&gt; Windowsにおいて、SMBv1共有のファイルの属性を照会する際の回避策を追加。以前は、SMBv1共有のディレクトリは、通常のファイルとして報告される可能性があった。これは、SMBv2以降には影響しない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;大きな改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1045&#34; target=&#34;_blank&#34;&gt;GitHub #1045&lt;/a&gt; (multi)linestringsと(multi)polygons向けにgeographic bufferをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1114&#34; target=&#34;_blank&#34;&gt;GitHub #1114&lt;/a&gt; 距離比較 : dynamic geometriesのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1046&#34; target=&#34;_blank&#34;&gt;GitHub #1046&lt;/a&gt; &lt;code&gt;covered_by()&lt;/code&gt;に&lt;code&gt;box&lt;/code&gt;をサポートし、ジオメトリの組み合わせが増えた&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convered_by(box, areal)&lt;/code&gt; (cartesian CSのみ)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;convered_by(geometry, box)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/705&#34; target=&#34;_blank&#34;&gt;GitHub #705&lt;/a&gt; WKT : タブと改行を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; union向けの修正&lt;/li&gt;
&lt;li&gt;サンプルコードに対して様々な修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;空の多角形のWKT出力表現が&lt;code&gt;POLYGON()&lt;/code&gt;になり、他のジオメトリとの整合性が取れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail::span&lt;/code&gt; と &lt;code&gt;detail::make_span&lt;/code&gt; を &lt;code&gt;boost::core&lt;/code&gt; の実装に置き換えた&lt;/li&gt;
&lt;li&gt;ドキュメントを改善&lt;/li&gt;
&lt;li&gt;いくつかのケースで &lt;code&gt;std::min&lt;/code&gt; と &lt;code&gt;std::max&lt;/code&gt; の使い方を保護&lt;ul&gt;
&lt;li&gt;Han Jiang 氏による貢献 (min,max マクロは一般的な Windows ヘッダーによって不正に設定されるので、回避する必要がある)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;今後、ライブラリ内で保護されていないmin,maxトークンの使用を検出するテストを追加&lt;/li&gt;
&lt;li&gt;最新の clang-14 と gcc-11+ の推論ガイドをサポートするように修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set_at_pointer&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;呼び出し元が提供するシリアライザーストレージをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;向けに欠落要素のための&lt;code&gt;value_to&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;エスケープ文字の内部でパーサーが中断する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sentinel()&lt;/code&gt;がユニークなポインタを返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/144&#34; target=&#34;_blank&#34;&gt;GitHub #144&lt;/a&gt; &lt;code&gt;get_system_locale&lt;/code&gt; およびその依存ファイルは、POSIX で定義された &lt;code&gt;$LC_CTYPE&lt;/code&gt; よりも &lt;code&gt;$LC_ALL&lt;/code&gt; を正しく優先するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;utf8_codecvt::out&lt;/code&gt; は末尾の (UTF) サロゲートに対して &lt;code&gt;partial&lt;/code&gt; を返すようになった&lt;/li&gt;
&lt;li&gt;ロケールを解析するために &lt;code&gt;boost::locale::util::locale_data&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::locale::info::encoding()&lt;/code&gt; の結果が大文字であることをドキュメント化。例として&lt;code&gt;&#34;utf-8&#34;&lt;/code&gt;ではなく&lt;code&gt;&#34;UTF-8&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; M49の国コード（&lt;code&gt;en_001&lt;/code&gt;や&lt;code&gt;en_150&lt;/code&gt;など）に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; &lt;code&gt;en_US_POSIX&lt;/code&gt; を &lt;code&gt;C&lt;/code&gt; ロケールのエイリアスとして扱うようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt; セグメンテーションのサポートがない場合（ICUがない場合）のエラーを改善した&lt;/li&gt;
&lt;li&gt;コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多項式評価のためのEstrin&#39;s methodを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/939&#34; target=&#34;_blank&#34;&gt;GitHub #939&lt;/a&gt; 非心分布 (non-central distributions) のさまざまな問題を修正し、より大きな非心分布に対応できるようにした&lt;/li&gt;
&lt;li&gt;CMake install targetを追加&lt;/li&gt;
&lt;li&gt;例外のない環境で使用できないものを無効化するために &lt;code&gt;special_functions.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;C++14で条件番号の計算 (condition number calculation) が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/923&#34; target=&#34;_blank&#34;&gt;GitHub #923&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt; テーブル駆動関数を修正し、コードが実際には &lt;code&gt;constexpr&lt;/code&gt; でない場合に大幅な速度低下を避けるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/894&#34; target=&#34;_blank&#34;&gt;GitHub #894&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の境界処理を改善&lt;/li&gt;
&lt;li&gt;Linux arm64、s390x、Apple M1 のテストを追加し、128ビット&lt;code&gt;long double&lt;/code&gt;を扱うテストケースを修正&lt;/li&gt;
&lt;li&gt;無限大とNaNをより良く扱うために&lt;code&gt;constexpr&lt;/code&gt;数学関数を改善&lt;/li&gt;
&lt;li&gt;積分器 (integrators) をconst-correctにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/898&#34; target=&#34;_blank&#34;&gt;GitHub #898&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の積分器がアンダーフローする問題を修正&lt;/li&gt;
&lt;li&gt;いくつかのプラットフォームがまだサポートしていないため、&lt;code&gt;std::cbrt&lt;/code&gt;を使用しないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/892&#34; target=&#34;_blank&#34;&gt;GitHub #892&lt;/a&gt; 非心t (non-central T) が偽 (spurious) の &lt;code&gt;FE_INVALID&lt;/code&gt; 例外を発生させるのを止めた&lt;/li&gt;
&lt;li&gt;二項分布のエッジケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/884&#34; target=&#34;_blank&#34;&gt;GitHub #884&lt;/a&gt; &lt;code&gt;ibeta&lt;/code&gt;の非常に小さな引数の取り扱いを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta&lt;/code&gt;での無限大とNaNの取り扱いを改善 [@https://github.com/boostorg/math/issues/878 874]を参照してください.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/781&#34; target=&#34;_blank&#34;&gt;GitHub #781&lt;/a&gt; &lt;code&gt;powm1&lt;/code&gt;のエラーハンドリングを改善&lt;/li&gt;
&lt;li&gt;指数が超大きい (super large)、または小さいときに、root finder bracketingをより速くブラケットするよう改善&lt;/li&gt;
&lt;li&gt;root finderのエッジケースを修正&lt;/li&gt;
&lt;li&gt;多くの雑多な警告を修正&lt;/li&gt;
&lt;li&gt;C++17を必要とする機能を使用する際にアサーションを追加し、古い標準バージョンでコンパイラを起動したときのエラーメッセージを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シリアライズで&lt;code&gt;collection_size_type&lt;/code&gt;の代わりに&lt;code&gt;unsigned long&lt;/code&gt;を使用するようにし、この変更にともなって&lt;code&gt;multi_index_container&lt;/code&gt;のシリアライズバージョンを2から3に上げた。&lt;code&gt;collection_size_type&lt;/code&gt;の値を特別扱いするカスタムアーカイブ型では、古いアーカイブの読み込みに失敗することがある。そのような場合は、読み出し操作の後方互換性を確保するためにマクロ &lt;code&gt;BOOST_MULTI_INDEX_ENABLE_SERIALIZATION_COMPATIBILITY_V2&lt;/code&gt; をグローバル定義する&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たに先行宣言のヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/479&#34; target=&#34;_blank&#34;&gt;GitHub #479&lt;/a&gt; Eigenとの相互運用性を更新し、Eigenの詳細に依存しないよう修正&lt;/li&gt;
&lt;li&gt;Cmake install targetを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; スタンドアロンの場合の文字列からの&lt;code&gt;cpp_dec_float&lt;/code&gt;構築を修正し、より良いエラーハンドリングを実現した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; C++17モードでの冗長な定義を削除&lt;/li&gt;
&lt;li&gt;スタンドアローンの &lt;code&gt;itrunc&lt;/code&gt; と &lt;code&gt;ltrunc&lt;/code&gt; のエラーハンドリングを修正&lt;/li&gt;
&lt;li&gt;8進数文字列の解析時に初期化されない可能性があるストレージを修正&lt;/li&gt;
&lt;li&gt;arm64 と s390x の CI テストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; &lt;code&gt;powm&lt;/code&gt; のために不足していた式テンプレートの展開コードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convert_string&lt;/code&gt;に&lt;code&gt;(std::)string&lt;/code&gt;のインスタンスをとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;std::filesystem&lt;/code&gt;もしくは&lt;code&gt;boost::filesystem&lt;/code&gt;) のストリームへの (UTF-8) &lt;code&gt;quoted&lt;/code&gt;出力を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost::pfr::is_implicitly_reflectable&lt;/code&gt; を実装し、集成体をリフレクト可能か否かに特殊化させる機構を実装。Denis Mikhailov氏のPRに感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::pfr::get&lt;/code&gt; を集成体の要素の型に対して実装&lt;/li&gt;
&lt;li&gt;リフレクションのライブラリサポートを検出するために &lt;code&gt;BOOST_PFR_ENABLED&lt;/code&gt; マクロを実装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/114&#34; target=&#34;_blank&#34;&gt;GitHub #114&lt;/a&gt; 終端文字の欠落を修正。PR をくれた Denis Mikhailov 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/118&#34; target=&#34;_blank&#34;&gt;GitHub #118&lt;/a&gt; 古いコンパイラでの &lt;code&gt;boost/pfr/config.hpp&lt;/code&gt; のコンパイルを修正。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/119&#34; target=&#34;_blank&#34;&gt;GitHub #119&lt;/a&gt; 古いコンパイラで壊れた C++17 構造化束縛の回避策を追加。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/117&#34; target=&#34;_blank&#34;&gt;GitHub #117&lt;/a&gt; &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt;の警告を回避。Markus F.X.J. Oberhumer 氏による PR に感謝&lt;/li&gt;
&lt;li&gt;複数のタイプミスを修正。Denis Mikhailov氏の修正に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; 不足していた &lt;code&gt;#pragma once&lt;/code&gt; を追加。PR をくれた &lt;a href=&#34;https://github.com/caozhanhao&#34; target=&#34;_blank&#34;&gt;caozhanhao&lt;/a&gt; 氏に感謝&lt;/li&gt;
&lt;li&gt;ドキュメントの複数の修正と改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;V2 に外部プロセスの管理機能を追加（まだ実験中）&lt;/li&gt;
&lt;li&gt;V1 では &lt;code&gt;wait_for&lt;/code&gt; と &lt;code&gt;wait_until&lt;/code&gt; を非推奨とした。これらは将来的に削除される予定です！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; ドキュメントとコメントの誤字を修正。PRをくれたChocobo1氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_FORCE_STATIC&lt;/code&gt; が定義されている場合の &lt;code&gt;backtrace_create_state&lt;/code&gt; のマルチスレッドフラグの検出を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34; id=&#34;static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Coreの&lt;code&gt;string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の相互運用をできるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sprintf&lt;/code&gt;の非推奨の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_cstring::rfind&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;GitHub ActionsでのCIを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ノードベースで、オープンアドレッシングなコンテナ&lt;code&gt;boost::unordered_node_map&lt;/code&gt;と&lt;code&gt;boost::unordered_node_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2363r5.html&#34; target=&#34;_blank&#34;&gt;P2363&lt;/a&gt;で規定された異種混合ルックアップ (heterogeneous lookup) の拡張メンバ関数を追加&lt;/li&gt;
&lt;li&gt;オープンアドレッシングコンテナのpost-mixing前の処理を、定数による拡張乗算 (extended multiplication by a constant) に基づく新しいアルゴリズムに置き換えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;内部で、スタックローカル型がコンテナのアロケータを使用して適切に構築されず、&lt;code&gt;uses-allocator&lt;/code&gt; 構築を壊していたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34; id=&#34;url&#34;&gt;URL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自動的に%のエンコーディングを行う&lt;code&gt;url::format&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;URL routerの例を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_params&lt;/code&gt;便利関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_view&lt;/code&gt;への暗黙変換をサポート&lt;/li&gt;
&lt;li&gt;パースコンストラクタをimplicitにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_token::arg&lt;/code&gt;が仮想デストラクタとslice protectionを持つようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_URL_DISABLE_THREADS&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;改善とバグ修正：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt;が再定義された警告を修正&lt;/li&gt;
&lt;li&gt;欠落 (absent) と空 (empty) のコンポーネントの差分比較&lt;/li&gt;
&lt;li&gt;空ポートのようなセグメントを持つ &lt;code&gt;hier_part_rule&lt;/code&gt; を検出&lt;/li&gt;
&lt;li&gt;root上で正規化した場合のセグメント比較&lt;/li&gt;
&lt;li&gt;hier-part path-rootless は無効なセグメントを考慮するよう修正&lt;/li&gt;
&lt;li&gt;オーバーフローした場合に、ポート番号を0にするよう修正&lt;/li&gt;
&lt;li&gt;ipv4 から文字列のオーバーフローを検出するアルゴリズム&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; 非推奨の &lt;code&gt;utility/addressof&lt;/code&gt; の代わりに &lt;code&gt;core/addressof&lt;/code&gt; を使用するようになった。PR をくれた Michael Ford 氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.9.4をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.82.0リリースノート -- 1.82.0 : Asioを追加</title>
      <link href="https://boostjp.github.io/document/version/1_82_0.html"/>
      <id>c8d6259622539c4d8f662cfd15ee06b3abc2cdfb:document/version/1_82_0.md</id>
      <updated>2023-04-12T15:47:37+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.82.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_82_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_82_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C++03サポートの終了&lt;/h2&gt;
&lt;p&gt;以下のライブラリは、いまから2リリース後の1.84.0でC++03のサポートを終了する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Align&lt;/li&gt;
&lt;li&gt;Any&lt;/li&gt;
&lt;li&gt;Asio&lt;/li&gt;
&lt;li&gt;Atomic&lt;/li&gt;
&lt;li&gt;Bind&lt;/li&gt;
&lt;li&gt;Chrono&lt;/li&gt;
&lt;li&gt;ContainerHash&lt;/li&gt;
&lt;li&gt;Conversion&lt;/li&gt;
&lt;li&gt;DLL&lt;/li&gt;
&lt;li&gt;Endian&lt;/li&gt;
&lt;li&gt;Filesystem&lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Functional&lt;/li&gt;
&lt;li&gt;Io&lt;/li&gt;
&lt;li&gt;LexicalCast&lt;/li&gt;
&lt;li&gt;Log&lt;/li&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Ratio&lt;/li&gt;
&lt;li&gt;SmartPtr&lt;/li&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;Stacktrace&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;Timer&lt;/li&gt;
&lt;li&gt;TypeIndex&lt;/li&gt;
&lt;li&gt;Typeof&lt;/li&gt;
&lt;li&gt;Unordered&lt;/li&gt;
&lt;li&gt;Variant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリース（1.82）と次のリリース（1.83）は、上記のライブラリとその依存関係の大部分でC++03をサポートする最後のリリースとなる。&lt;/p&gt;
&lt;p&gt;古いバージョンのコンパイラでは、サポート不足やバグのためにC++11が部分的にしか実装されていないことが多いため、どのコンパイラがC++11の要件を満たしているとみなされるかは、ライブラリによって異なる場合がある。&lt;/p&gt;
&lt;p&gt;しかし、一般的なルールとして、コンパイラがC++11のキーワードや構文をまったく認識しない場合（例：&lt;code&gt;noexcept&lt;/code&gt;の使用、&lt;code&gt;constexpr&lt;/code&gt;の使用、&lt;code&gt;=delete&lt;/code&gt;された関数を定義すると即コンパイルエラー）、コンパイラがC++11必須のヘッダーをまったく提供しない場合（例：&lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt; や &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; をインクルードしようとすると失敗する）、あるいはコンパイラがC++11の機能やヘッダを提供するがまったく使用できない場合、このコンパイラはC++11コンパイラとはみなされない。&lt;/p&gt;
&lt;p&gt;このため、例えば14.0 (2015) 以前のMicrosoft Visual C++や、4.8以前のGCCは除外される。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mysql&#34; target=&#34;_blank&#34;&gt;MySql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.AsioベースのMySQLデータベースサーバーのC++11クライアント (作者Reuben Perez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/any/pull/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 非推奨の &lt;code&gt;utility/enable_if.hpp&lt;/code&gt; の代わりに &lt;code&gt;core/enable_if.hpp&lt;/code&gt; ヘッダを使用するようになった。PRをくれたMichael Ford氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;操作が即座に完了した場合の完了ハンドラの実行をカスタマイズする機能を追加&lt;/li&gt;
&lt;li&gt;バッファタイプにユーザー定義のリテラルを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_SEQPACKET&lt;/code&gt; で &lt;code&gt;AF_UNIX&lt;/code&gt; を表現するために新しいプロトコルタイプ &lt;code&gt;local::seq_packet_protocol&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signal_set::add&lt;/code&gt; のオプション引数で &lt;code&gt;sigaction()&lt;/code&gt; フラグを公開&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocator_binder&lt;/code&gt;, &lt;code&gt;executor_binder&lt;/code&gt;, &lt;code&gt;cancellation_slot_binder&lt;/code&gt; を変更して、特殊でない連想子 (unspecialised associators) の検出をサポートするようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;associated_cancellation_slot&amp;lt;reference_wrapper&amp;gt;::get()&lt;/code&gt; のあいまいさを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::exception_ptr&lt;/code&gt; を含む完了シグネチャの &lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt; 処理を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::channel&amp;lt;&amp;gt;&lt;/code&gt; の &lt;code&gt;try_send&lt;/code&gt; が &lt;code&gt;cancel&lt;/code&gt; の後に失敗するのを修正&lt;/li&gt;
&lt;li&gt;プールに内部スレッドがない場合の &lt;code&gt;thread_pool::join()&lt;/code&gt; のデッドロックを修正&lt;/li&gt;
&lt;li&gt;io_uring を使用した際のパイプの &lt;code&gt;release()&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;バックエンドのデータ初期化およびクリーンアップの問題を修正&lt;/li&gt;
&lt;li&gt;実行コンテキストのオーバーロードである &lt;code&gt;get_associated_executor()&lt;/code&gt; のぶら下がり参照の問題を修正&lt;/li&gt;
&lt;li&gt;バッファリングされたメッセージは &lt;code&gt;experimental::channel&amp;lt;&amp;gt;&lt;/code&gt; が閉じられても受信できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ANY_COMPLETION_HANDLER&lt;/code&gt; の代入演算子を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any_completion_handler&lt;/code&gt;のコンストラクタが誤ってコピーされるのを防ぐために、コンストラクタを制限した&lt;/li&gt;
&lt;li&gt;OpenSSL のオプションに &lt;code&gt;uint64_t&lt;/code&gt; を使用するように変更した（OpenSSL 3 に対応）&lt;/li&gt;
&lt;li&gt;複数の完了シグネチャを持つ &lt;code&gt;deferred&lt;/code&gt; の相互運用性を修正&lt;/li&gt;
&lt;li&gt;C++11 と C++14 の部分的なサポートを追加するためにチャネルを修正した&lt;/li&gt;
&lt;li&gt;パッケージ化された非同期処理を待つ際に、&lt;code&gt;co_composed&lt;/code&gt;と&lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt;コルーチンのソースロケーションを追跡するハンドラの欠落をサポートした&lt;/li&gt;
&lt;li&gt;いくつかの「潜在的なヌル参照」警告とシャドウ変数警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const_buffers_1&lt;/code&gt; と &lt;code&gt;mutable_buffers_1&lt;/code&gt; を使用したときの &lt;code&gt;asio::buffer&lt;/code&gt; オーバーロードの選択を修正&lt;/li&gt;
&lt;li&gt;古い Windows をターゲットにしていない限り、現在の Windows バージョンのランタイムチェックを無効にした&lt;/li&gt;
&lt;li&gt;バッファードストリームラッパーと&lt;code&gt;ssl::stream&amp;lt;&amp;gt;&lt;/code&gt;のようなムーブ構築可能なストリームとの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::async_accept&lt;/code&gt; の戻り値の型が推論されるラムダとの互換性を修正&lt;/li&gt;
&lt;li&gt;レガシーな完了トークンの &lt;code&gt;as_tuple&lt;/code&gt; との互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redirect_error&lt;/code&gt; と新しい完了トークンとの互換性を修正&lt;/li&gt;
&lt;li&gt;デストラクタからのエスケープが許可されるべき例外による Windows 特有のプログラム終了の可能性を修正した&lt;/li&gt;
&lt;li&gt;ブール式の不用意な &lt;code&gt;co_await&lt;/code&gt; を防止した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::use_coro&lt;/code&gt;の結果処理とカスタムアロケータのサポートを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_async_operation&lt;/code&gt; と &lt;code&gt;completion_signature_of&lt;/code&gt; の可変引数テンプレートエミュレーション修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;のmove-from結果の不正な再利用を修正した&lt;/li&gt;
&lt;li&gt;カスタムアロケータを使用した &lt;code&gt;experimental::coro&lt;/code&gt; を修正した&lt;/li&gt;
&lt;li&gt;Windows のストリーム指向ファイルでの &lt;code&gt;seek_cur&lt;/code&gt; の挙動を修正した&lt;/li&gt;
&lt;li&gt;ドキュメントに様々な追加と修正を行った&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AVX をサポートする x86 ターゲット用にコンパイルされた場合、128 ビットのアトミックロードとストアにベクタ命令が使用されるようになった&lt;/li&gt;
&lt;li&gt;32-bit x86 ターゲットでは、&lt;code&gt;memory_order_seq_cst&lt;/code&gt;セマンティクスを持つ 64-bit アトミックロードとストアは、メモリ順序付け命令を発行するようになった&lt;/li&gt;
&lt;li&gt;Boost.Atomic 1.73 で非推奨となった &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage()&lt;/code&gt; アクセッサと &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage_type&lt;/code&gt; 型を削除。代わりに &lt;code&gt;atomic&amp;lt;T&amp;gt;::value()&lt;/code&gt; と &lt;code&gt;atomic&amp;lt;T&amp;gt;::value_type&lt;/code&gt; を使用することを推奨&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;での&lt;code&gt;error_code&lt;/code&gt;の使用を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcp_stream&lt;/code&gt; が、タイマーの正しい実行形式を使用するよう修正&lt;/li&gt;
&lt;li&gt;error_categories が数値の ID を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt; にシークをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_value&lt;/code&gt;の&lt;code&gt;std::nullopt_t&lt;/code&gt;に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_tuple_like&lt;/code&gt;と、&lt;code&gt;hash_value&lt;/code&gt;のtuple-like型に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;のハッシュ化として、品質と速度の両方の改善のために&lt;code&gt;&lt;a href=&#34;https://github.com/pdimov/mulxp_hash&#34; target=&#34;_blank&#34;&gt;mulxp1_hash&lt;/a&gt;&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/core/snprintf.hpp&lt;/code&gt; ヘッダーを追加し、&lt;code&gt;snprintf&lt;/code&gt;、&lt;code&gt;vsnprintf&lt;/code&gt; およびそれらの &lt;code&gt;wchar_t&lt;/code&gt; 対応のポータブル定義を追加&lt;/li&gt;
&lt;li&gt;非推奨のヘッダ &lt;code&gt;boost/core/is_same.hpp&lt;/code&gt; と &lt;code&gt;boost::core::is_same&lt;/code&gt; は将来のリリースで削除される予定&lt;ul&gt;
&lt;li&gt;代わりに Boost.TypeTraits または C++ 標準ライブラリの型付けを使用することを推奨する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::ref&lt;/code&gt; のメンバ関数と関連するメンバ関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::swap&lt;/code&gt; 関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた。これは、型が例外を投げないスワップ操作をサポートしているかどうかによって異なる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::core::launder&lt;/code&gt; のポータブルな実装を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alignof&lt;/code&gt; のポータブルな実装である &lt;code&gt;BOOST_CORE_ALIGNOF&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::max_align_t&lt;/code&gt; の移植版である &lt;code&gt;boost::core::max_align_t&lt;/code&gt; と、 &lt;code&gt;max_align_t&lt;/code&gt; のアライメントである &lt;code&gt;boost::core::max_align&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;C++17 の &lt;code&gt;std::pmr::memory_resource&lt;/code&gt; と同等の移植性を持つ &lt;code&gt;boost::core::memory_resource&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/serialization.hpp&lt;/code&gt; を追加。これは、ライブラリがシリアライゼーションのヘッダを含めずに型の Boost.Serialization サポートを実装できるようにするプリミティブのコレクションであり、それによってライブラリがシリアライゼーションに依存するようにする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::data&lt;/code&gt;の実装である&lt;code&gt;boost::data&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::size&lt;/code&gt;の実装である&lt;code&gt;boost::size&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::span&lt;/code&gt; を更新し、 &lt;code&gt;std::initializer_list&lt;/code&gt; から範囲を作成するために &lt;code&gt;boost::data&lt;/code&gt; を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::identity&lt;/code&gt;の実装である &lt;code&gt;boost::identity&lt;/code&gt; を追加しました。この機能は Boost.Functional から移動した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; &lt;code&gt;size_t&lt;/code&gt;から&lt;code&gt;uint32_t&lt;/code&gt;への暗黙変換を回避。Travers Biddle氏のPull Requestに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; パス変換のコンストラクタ引数が寛容すぎるために発生するコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; [v4] &lt;code&gt;path::remove_filename&lt;/code&gt; が末尾のディレクトリセパレータを保持するようになった&lt;/li&gt;
&lt;li&gt;パスからファイル名とそれに先立つディレクトリセパレータを削除する &lt;code&gt;path::remove_filename_and_trailing_separators&lt;/code&gt; を追加。この動作は Filesystem v3 の &lt;code&gt;path::remove_filename&lt;/code&gt; と似ているが、v4 でも使用可能&lt;/li&gt;
&lt;li&gt;パス中のファイル名を置換する &lt;code&gt;path::replace_filename&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt; ODR 違反を避けるために、ライブラリのバージョン選択の実装を更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/282&#34; target=&#34;_blank&#34;&gt;GitHub #282&lt;/a&gt; Windowsにおいて、SMBv1共有のファイルの属性を照会する際の回避策を追加。以前は、SMBv1共有のディレクトリは、通常のファイルとして報告される可能性があった。これは、SMBv2以降には影響しない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;大きな改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1045&#34; target=&#34;_blank&#34;&gt;GitHub #1045&lt;/a&gt; (multi)linestringsと(multi)polygons向けにgeographic bufferをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1114&#34; target=&#34;_blank&#34;&gt;GitHub #1114&lt;/a&gt; 距離比較 : dynamic geometriesのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1046&#34; target=&#34;_blank&#34;&gt;GitHub #1046&lt;/a&gt; &lt;code&gt;covered_by()&lt;/code&gt;に&lt;code&gt;box&lt;/code&gt;をサポートし、ジオメトリの組み合わせが増えた&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convered_by(box, areal)&lt;/code&gt; (cartesian CSのみ)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;convered_by(geometry, box)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/705&#34; target=&#34;_blank&#34;&gt;GitHub #705&lt;/a&gt; WKT : タブと改行を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; union向けの修正&lt;/li&gt;
&lt;li&gt;サンプルコードに対して様々な修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;空の多角形のWKT出力表現が&lt;code&gt;POLYGON()&lt;/code&gt;になり、他のジオメトリとの整合性が取れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail::span&lt;/code&gt; と &lt;code&gt;detail::make_span&lt;/code&gt; を &lt;code&gt;boost::core&lt;/code&gt; の実装に置き換えた&lt;/li&gt;
&lt;li&gt;ドキュメントを改善&lt;/li&gt;
&lt;li&gt;いくつかのケースで &lt;code&gt;std::min&lt;/code&gt; と &lt;code&gt;std::max&lt;/code&gt; の使い方を保護&lt;ul&gt;
&lt;li&gt;Han Jiang 氏による貢献 (min,max マクロは一般的な Windows ヘッダーによって不正に設定されるので、回避する必要がある)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;今後、ライブラリ内で保護されていないmin,maxトークンの使用を検出するテストを追加&lt;/li&gt;
&lt;li&gt;最新の clang-14 と gcc-11+ の推論ガイドをサポートするように修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set_at_pointer&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;呼び出し元が提供するシリアライザーストレージをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;向けに欠落要素のための&lt;code&gt;value_to&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;エスケープ文字の内部でパーサーが中断する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sentinel()&lt;/code&gt;がユニークなポインタを返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/144&#34; target=&#34;_blank&#34;&gt;GitHub #144&lt;/a&gt; &lt;code&gt;get_system_locale&lt;/code&gt; およびその依存ファイルは、POSIX で定義された &lt;code&gt;$LC_CTYPE&lt;/code&gt; よりも &lt;code&gt;$LC_ALL&lt;/code&gt; を正しく優先するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;utf8_codecvt::out&lt;/code&gt; は末尾の (UTF) サロゲートに対して &lt;code&gt;partial&lt;/code&gt; を返すようになった&lt;/li&gt;
&lt;li&gt;ロケールを解析するために &lt;code&gt;boost::locale::util::locale_data&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::locale::info::encoding()&lt;/code&gt; の結果が大文字であることをドキュメント化。例として&lt;code&gt;&#34;utf-8&#34;&lt;/code&gt;ではなく&lt;code&gt;&#34;UTF-8&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; M49の国コード（&lt;code&gt;en_001&lt;/code&gt;や&lt;code&gt;en_150&lt;/code&gt;など）に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; &lt;code&gt;en_US_POSIX&lt;/code&gt; を &lt;code&gt;C&lt;/code&gt; ロケールのエイリアスとして扱うようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt; セグメンテーションのサポートがない場合（ICUがない場合）のエラーを改善した&lt;/li&gt;
&lt;li&gt;コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多項式評価のためのEstrin&#39;s methodを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/939&#34; target=&#34;_blank&#34;&gt;GitHub #939&lt;/a&gt; 非心分布 (non-central distributions) のさまざまな問題を修正し、より大きな非心分布に対応できるようにした&lt;/li&gt;
&lt;li&gt;CMake install targetを追加&lt;/li&gt;
&lt;li&gt;例外のない環境で使用できないものを無効化するために &lt;code&gt;special_functions.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;C++14で条件番号の計算 (condition number calculation) が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/923&#34; target=&#34;_blank&#34;&gt;GitHub #923&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt; テーブル駆動関数を修正し、コードが実際には &lt;code&gt;constexpr&lt;/code&gt; でない場合に大幅な速度低下を避けるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/894&#34; target=&#34;_blank&#34;&gt;GitHub #894&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の境界処理を改善&lt;/li&gt;
&lt;li&gt;Linux arm64、s390x、Apple M1 のテストを追加し、128ビット&lt;code&gt;long double&lt;/code&gt;を扱うテストケースを修正&lt;/li&gt;
&lt;li&gt;無限大とNaNをより良く扱うために&lt;code&gt;constexpr&lt;/code&gt;数学関数を改善&lt;/li&gt;
&lt;li&gt;積分器 (integrators) をconst-correctにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/898&#34; target=&#34;_blank&#34;&gt;GitHub #898&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の積分器がアンダーフローする問題を修正&lt;/li&gt;
&lt;li&gt;いくつかのプラットフォームがまだサポートしていないため、&lt;code&gt;std::cbrt&lt;/code&gt;を使用しないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/892&#34; target=&#34;_blank&#34;&gt;GitHub #892&lt;/a&gt; 非心t (non-central T) が偽 (spurious) の &lt;code&gt;FE_INVALID&lt;/code&gt; 例外を発生させるのを止めた&lt;/li&gt;
&lt;li&gt;二項分布のエッジケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/884&#34; target=&#34;_blank&#34;&gt;GitHub #884&lt;/a&gt; &lt;code&gt;ibeta&lt;/code&gt;の非常に小さな引数の取り扱いを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta&lt;/code&gt;での無限大とNaNの取り扱いを改善 [@https://github.com/boostorg/math/issues/878 874]を参照してください.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/781&#34; target=&#34;_blank&#34;&gt;GitHub #781&lt;/a&gt; &lt;code&gt;powm1&lt;/code&gt;のエラーハンドリングを改善&lt;/li&gt;
&lt;li&gt;指数が超大きい (super large)、または小さいときに、root finder bracketingをより速くブラケットするよう改善&lt;/li&gt;
&lt;li&gt;root finderのエッジケースを修正&lt;/li&gt;
&lt;li&gt;多くの雑多な警告を修正&lt;/li&gt;
&lt;li&gt;C++17を必要とする機能を使用する際にアサーションを追加し、古い標準バージョンでコンパイラを起動したときのエラーメッセージを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シリアライズで&lt;code&gt;collection_size_type&lt;/code&gt;の代わりに&lt;code&gt;unsigned long&lt;/code&gt;を使用するようにし、この変更にともなって&lt;code&gt;multi_index_container&lt;/code&gt;のシリアライズバージョンを2から3に上げた。&lt;code&gt;collection_size_type&lt;/code&gt;の値を特別扱いするカスタムアーカイブ型では、古いアーカイブの読み込みに失敗することがある。そのような場合は、読み出し操作の後方互換性を確保するためにマクロ &lt;code&gt;BOOST_MULTI_INDEX_ENABLE_SERIALIZATION_COMPATIBILITY_V2&lt;/code&gt; をグローバル定義する&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たに先行宣言のヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/479&#34; target=&#34;_blank&#34;&gt;GitHub #479&lt;/a&gt; Eigenとの相互運用性を更新し、Eigenの詳細に依存しないよう修正&lt;/li&gt;
&lt;li&gt;Cmake install targetを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; スタンドアロンの場合の文字列からの&lt;code&gt;cpp_dec_float&lt;/code&gt;構築を修正し、より良いエラーハンドリングを実現した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; C++17モードでの冗長な定義を削除&lt;/li&gt;
&lt;li&gt;スタンドアローンの &lt;code&gt;itrunc&lt;/code&gt; と &lt;code&gt;ltrunc&lt;/code&gt; のエラーハンドリングを修正&lt;/li&gt;
&lt;li&gt;8進数文字列の解析時に初期化されない可能性があるストレージを修正&lt;/li&gt;
&lt;li&gt;arm64 と s390x の CI テストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; &lt;code&gt;powm&lt;/code&gt; のために不足していた式テンプレートの展開コードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convert_string&lt;/code&gt;に&lt;code&gt;(std::)string&lt;/code&gt;のインスタンスをとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;std::filesystem&lt;/code&gt;もしくは&lt;code&gt;boost::filesystem&lt;/code&gt;) のストリームへの (UTF-8) &lt;code&gt;quoted&lt;/code&gt;出力を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost::pfr::is_implicitly_reflectable&lt;/code&gt; を実装し、集成体をリフレクト可能か否かに特殊化させる機構を実装。Denis Mikhailov氏のPRに感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::pfr::get&lt;/code&gt; を集成体の要素の型に対して実装&lt;/li&gt;
&lt;li&gt;リフレクションのライブラリサポートを検出するために &lt;code&gt;BOOST_PFR_ENABLED&lt;/code&gt; マクロを実装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/114&#34; target=&#34;_blank&#34;&gt;GitHub #114&lt;/a&gt; 終端文字の欠落を修正。PR をくれた Denis Mikhailov 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/118&#34; target=&#34;_blank&#34;&gt;GitHub #118&lt;/a&gt; 古いコンパイラでの &lt;code&gt;boost/pfr/config.hpp&lt;/code&gt; のコンパイルを修正。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/119&#34; target=&#34;_blank&#34;&gt;GitHub #119&lt;/a&gt; 古いコンパイラで壊れた C++17 構造化束縛の回避策を追加。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/117&#34; target=&#34;_blank&#34;&gt;GitHub #117&lt;/a&gt; &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt;の警告を回避。Markus F.X.J. Oberhumer 氏による PR に感謝&lt;/li&gt;
&lt;li&gt;複数のタイプミスを修正。Denis Mikhailov氏の修正に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; 不足していた &lt;code&gt;#pragma once&lt;/code&gt; を追加。PR をくれた &lt;a href=&#34;https://github.com/caozhanhao&#34; target=&#34;_blank&#34;&gt;caozhanhao&lt;/a&gt; 氏に感謝&lt;/li&gt;
&lt;li&gt;ドキュメントの複数の修正と改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;V2 に外部プロセスの管理機能を追加（まだ実験中）&lt;/li&gt;
&lt;li&gt;V1 では &lt;code&gt;wait_for&lt;/code&gt; と &lt;code&gt;wait_until&lt;/code&gt; を非推奨とした。これらは将来的に削除される予定です！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; ドキュメントとコメントの誤字を修正。PRをくれたChocobo1氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_FORCE_STATIC&lt;/code&gt; が定義されている場合の &lt;code&gt;backtrace_create_state&lt;/code&gt; のマルチスレッドフラグの検出を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34; id=&#34;static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Coreの&lt;code&gt;string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の相互運用をできるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sprintf&lt;/code&gt;の非推奨の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_cstring::rfind&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;GitHub ActionsでのCIを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ノードベースで、オープンアドレッシングなコンテナ&lt;code&gt;boost::unordered_node_map&lt;/code&gt;と&lt;code&gt;boost::unordered_node_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2363r5.html&#34; target=&#34;_blank&#34;&gt;P2363&lt;/a&gt;で規定された異種混合ルックアップ (heterogeneous lookup) の拡張メンバ関数を追加&lt;/li&gt;
&lt;li&gt;オープンアドレッシングコンテナのpost-mixing前の処理を、定数による拡張乗算 (extended multiplication by a constant) に基づく新しいアルゴリズムに置き換えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;内部で、スタックローカル型がコンテナのアロケータを使用して適切に構築されず、&lt;code&gt;uses-allocator&lt;/code&gt; 構築を壊していたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34; id=&#34;url&#34;&gt;URL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自動的に%のエンコーディングを行う&lt;code&gt;url::format&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;URL routerの例を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_params&lt;/code&gt;便利関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_view&lt;/code&gt;への暗黙変換をサポート&lt;/li&gt;
&lt;li&gt;パースコンストラクタをimplicitにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_token::arg&lt;/code&gt;が仮想デストラクタとslice protectionを持つようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_URL_DISABLE_THREADS&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;改善とバグ修正：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt;が再定義された警告を修正&lt;/li&gt;
&lt;li&gt;欠落 (absent) と空 (empty) のコンポーネントの差分比較&lt;/li&gt;
&lt;li&gt;空ポートのようなセグメントを持つ &lt;code&gt;hier_part_rule&lt;/code&gt; を検出&lt;/li&gt;
&lt;li&gt;root上で正規化した場合のセグメント比較&lt;/li&gt;
&lt;li&gt;hier-part path-rootless は無効なセグメントを考慮するよう修正&lt;/li&gt;
&lt;li&gt;オーバーフローした場合に、ポート番号を0にするよう修正&lt;/li&gt;
&lt;li&gt;ipv4 から文字列のオーバーフローを検出するアルゴリズム&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; 非推奨の &lt;code&gt;utility/addressof&lt;/code&gt; の代わりに &lt;code&gt;core/addressof&lt;/code&gt; を使用するようになった。PR をくれた Michael Ford 氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.9.4をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.82.0リリースノート -- リンクミスを修正</title>
      <link href="https://boostjp.github.io/document/version/1_82_0.html"/>
      <id>aa9e52b68b1ff53cdaef9f1af0313874db953d6e:document/version/1_82_0.md</id>
      <updated>2023-04-06T17:27:14+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.82.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_82_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_82_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C++03サポートの終了&lt;/h2&gt;
&lt;p&gt;以下のライブラリは、いまから2リリース後の1.84.0でC++03のサポートを終了する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Align&lt;/li&gt;
&lt;li&gt;Any&lt;/li&gt;
&lt;li&gt;Atomic&lt;/li&gt;
&lt;li&gt;Bind&lt;/li&gt;
&lt;li&gt;Chrono&lt;/li&gt;
&lt;li&gt;ContainerHash&lt;/li&gt;
&lt;li&gt;Conversion&lt;/li&gt;
&lt;li&gt;DLL&lt;/li&gt;
&lt;li&gt;Endian&lt;/li&gt;
&lt;li&gt;Filesystem&lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Functional&lt;/li&gt;
&lt;li&gt;Io&lt;/li&gt;
&lt;li&gt;LexicalCast&lt;/li&gt;
&lt;li&gt;Log&lt;/li&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Ratio&lt;/li&gt;
&lt;li&gt;SmartPtr&lt;/li&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;Stacktrace&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;Timer&lt;/li&gt;
&lt;li&gt;TypeIndex&lt;/li&gt;
&lt;li&gt;Typeof&lt;/li&gt;
&lt;li&gt;Unordered&lt;/li&gt;
&lt;li&gt;Variant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリース（1.82）と次のリリース（1.83）は、上記のライブラリとその依存関係の大部分でC++03をサポートする最後のリリースとなる。&lt;/p&gt;
&lt;p&gt;古いバージョンのコンパイラでは、サポート不足やバグのためにC++11が部分的にしか実装されていないことが多いため、どのコンパイラがC++11の要件を満たしているとみなされるかは、ライブラリによって異なる場合がある。&lt;/p&gt;
&lt;p&gt;しかし、一般的なルールとして、コンパイラがC++11のキーワードや構文をまったく認識しない場合（例：&lt;code&gt;noexcept&lt;/code&gt;の使用、&lt;code&gt;constexpr&lt;/code&gt;の使用、&lt;code&gt;=delete&lt;/code&gt;された関数を定義すると即コンパイルエラー）、コンパイラがC++11必須のヘッダーをまったく提供しない場合（例：&lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt; や &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; をインクルードしようとすると失敗する）、あるいはコンパイラがC++11の機能やヘッダを提供するがまったく使用できない場合、このコンパイラはC++11コンパイラとはみなされない。&lt;/p&gt;
&lt;p&gt;このため、例えば14.0 (2015) 以前のMicrosoft Visual C++や、4.8以前のGCCは除外される。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mysql&#34; target=&#34;_blank&#34;&gt;MySql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.AsioベースのMySQLデータベースサーバーのC++11クライアント (作者Reuben Perez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/any/pull/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 非推奨の &lt;code&gt;utility/enable_if.hpp&lt;/code&gt; の代わりに &lt;code&gt;core/enable_if.hpp&lt;/code&gt; ヘッダを使用するようになった。PRをくれたMichael Ford氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AVX をサポートする x86 ターゲット用にコンパイルされた場合、128 ビットのアトミックロードとストアにベクタ命令が使用されるようになった&lt;/li&gt;
&lt;li&gt;32-bit x86 ターゲットでは、&lt;code&gt;memory_order_seq_cst&lt;/code&gt;セマンティクスを持つ 64-bit アトミックロードとストアは、メモリ順序付け命令を発行するようになった&lt;/li&gt;
&lt;li&gt;Boost.Atomic 1.73 で非推奨となった &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage()&lt;/code&gt; アクセッサと &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage_type&lt;/code&gt; 型を削除。代わりに &lt;code&gt;atomic&amp;lt;T&amp;gt;::value()&lt;/code&gt; と &lt;code&gt;atomic&amp;lt;T&amp;gt;::value_type&lt;/code&gt; を使用することを推奨&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;での&lt;code&gt;error_code&lt;/code&gt;の使用を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcp_stream&lt;/code&gt; が、タイマーの正しい実行形式を使用するよう修正&lt;/li&gt;
&lt;li&gt;error_categories が数値の ID を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt; にシークをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_value&lt;/code&gt;の&lt;code&gt;std::nullopt_t&lt;/code&gt;に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_tuple_like&lt;/code&gt;と、&lt;code&gt;hash_value&lt;/code&gt;のtuple-like型に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;のハッシュ化として、品質と速度の両方の改善のために&lt;code&gt;&lt;a href=&#34;https://github.com/pdimov/mulxp_hash&#34; target=&#34;_blank&#34;&gt;mulxp1_hash&lt;/a&gt;&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/core/snprintf.hpp&lt;/code&gt; ヘッダーを追加し、&lt;code&gt;snprintf&lt;/code&gt;、&lt;code&gt;vsnprintf&lt;/code&gt; およびそれらの &lt;code&gt;wchar_t&lt;/code&gt; 対応のポータブル定義を追加&lt;/li&gt;
&lt;li&gt;非推奨のヘッダ &lt;code&gt;boost/core/is_same.hpp&lt;/code&gt; と &lt;code&gt;boost::core::is_same&lt;/code&gt; は将来のリリースで削除される予定&lt;ul&gt;
&lt;li&gt;代わりに Boost.TypeTraits または C++ 標準ライブラリの型付けを使用することを推奨する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::ref&lt;/code&gt; のメンバ関数と関連するメンバ関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::swap&lt;/code&gt; 関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた。これは、型が例外を投げないスワップ操作をサポートしているかどうかによって異なる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::core::launder&lt;/code&gt; のポータブルな実装を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alignof&lt;/code&gt; のポータブルな実装である &lt;code&gt;BOOST_CORE_ALIGNOF&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::max_align_t&lt;/code&gt; の移植版である &lt;code&gt;boost::core::max_align_t&lt;/code&gt; と、 &lt;code&gt;max_align_t&lt;/code&gt; のアライメントである &lt;code&gt;boost::core::max_align&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;C++17 の &lt;code&gt;std::pmr::memory_resource&lt;/code&gt; と同等の移植性を持つ &lt;code&gt;boost::core::memory_resource&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/serialization.hpp&lt;/code&gt; を追加。これは、ライブラリがシリアライゼーションのヘッダを含めずに型の Boost.Serialization サポートを実装できるようにするプリミティブのコレクションであり、それによってライブラリがシリアライゼーションに依存するようにする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::data&lt;/code&gt;の実装である&lt;code&gt;boost::data&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::size&lt;/code&gt;の実装である&lt;code&gt;boost::size&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::span&lt;/code&gt; を更新し、 &lt;code&gt;std::initializer_list&lt;/code&gt; から範囲を作成するために &lt;code&gt;boost::data&lt;/code&gt; を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::identity&lt;/code&gt;の実装である &lt;code&gt;boost::identity&lt;/code&gt; を追加しました。この機能は Boost.Functional から移動した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; &lt;code&gt;size_t&lt;/code&gt;から&lt;code&gt;uint32_t&lt;/code&gt;への暗黙変換を回避。Travers Biddle氏のPull Requestに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; パス変換のコンストラクタ引数が寛容すぎるために発生するコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; [v4] &lt;code&gt;path::remove_filename&lt;/code&gt; が末尾のディレクトリセパレータを保持するようになった&lt;/li&gt;
&lt;li&gt;パスからファイル名とそれに先立つディレクトリセパレータを削除する &lt;code&gt;path::remove_filename_and_trailing_separators&lt;/code&gt; を追加。この動作は Filesystem v3 の &lt;code&gt;path::remove_filename&lt;/code&gt; と似ているが、v4 でも使用可能&lt;/li&gt;
&lt;li&gt;パス中のファイル名を置換する &lt;code&gt;path::replace_filename&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt; ODR 違反を避けるために、ライブラリのバージョン選択の実装を更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/282&#34; target=&#34;_blank&#34;&gt;GitHub #282&lt;/a&gt; Windowsにおいて、SMBv1共有のファイルの属性を照会する際の回避策を追加。以前は、SMBv1共有のディレクトリは、通常のファイルとして報告される可能性があった。これは、SMBv2以降には影響しない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;大きな改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1045&#34; target=&#34;_blank&#34;&gt;GitHub #1045&lt;/a&gt; (multi)linestringsと(multi)polygons向けにgeographic bufferをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1114&#34; target=&#34;_blank&#34;&gt;GitHub #1114&lt;/a&gt; 距離比較 : dynamic geometriesのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1046&#34; target=&#34;_blank&#34;&gt;GitHub #1046&lt;/a&gt; &lt;code&gt;covered_by()&lt;/code&gt;に&lt;code&gt;box&lt;/code&gt;をサポートし、ジオメトリの組み合わせが増えた&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convered_by(box, areal)&lt;/code&gt; (cartesian CSのみ)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;convered_by(geometry, box)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/705&#34; target=&#34;_blank&#34;&gt;GitHub #705&lt;/a&gt; WKT : タブと改行を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; union向けの修正&lt;/li&gt;
&lt;li&gt;サンプルコードに対して様々な修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;空の多角形のWKT出力表現が&lt;code&gt;POLYGON()&lt;/code&gt;になり、他のジオメトリとの整合性が取れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail::span&lt;/code&gt; と &lt;code&gt;detail::make_span&lt;/code&gt; を &lt;code&gt;boost::core&lt;/code&gt; の実装に置き換えた&lt;/li&gt;
&lt;li&gt;ドキュメントを改善&lt;/li&gt;
&lt;li&gt;いくつかのケースで &lt;code&gt;std::min&lt;/code&gt; と &lt;code&gt;std::max&lt;/code&gt; の使い方を保護&lt;ul&gt;
&lt;li&gt;Han Jiang 氏による貢献 (min,max マクロは一般的な Windows ヘッダーによって不正に設定されるので、回避する必要がある)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;今後、ライブラリ内で保護されていないmin,maxトークンの使用を検出するテストを追加&lt;/li&gt;
&lt;li&gt;最新の clang-14 と gcc-11+ の推論ガイドをサポートするように修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set_at_pointer&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;呼び出し元が提供するシリアライザーストレージをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;向けに欠落要素のための&lt;code&gt;value_to&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;エスケープ文字の内部でパーサーが中断する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sentinel()&lt;/code&gt;がユニークなポインタを返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/144&#34; target=&#34;_blank&#34;&gt;GitHub #144&lt;/a&gt; &lt;code&gt;get_system_locale&lt;/code&gt; およびその依存ファイルは、POSIX で定義された &lt;code&gt;$LC_CTYPE&lt;/code&gt; よりも &lt;code&gt;$LC_ALL&lt;/code&gt; を正しく優先するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;utf8_codecvt::out&lt;/code&gt; は末尾の (UTF) サロゲートに対して &lt;code&gt;partial&lt;/code&gt; を返すようになった&lt;/li&gt;
&lt;li&gt;ロケールを解析するために &lt;code&gt;boost::locale::util::locale_data&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::locale::info::encoding()&lt;/code&gt; の結果が大文字であることをドキュメント化。例として&lt;code&gt;&#34;utf-8&#34;&lt;/code&gt;ではなく&lt;code&gt;&#34;UTF-8&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; M49の国コード（&lt;code&gt;en_001&lt;/code&gt;や&lt;code&gt;en_150&lt;/code&gt;など）に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; &lt;code&gt;en_US_POSIX&lt;/code&gt; を &lt;code&gt;C&lt;/code&gt; ロケールのエイリアスとして扱うようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt; セグメンテーションのサポートがない場合（ICUがない場合）のエラーを改善した&lt;/li&gt;
&lt;li&gt;コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多項式評価のためのEstrin&#39;s methodを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/939&#34; target=&#34;_blank&#34;&gt;GitHub #939&lt;/a&gt; 非心分布 (non-central distributions) のさまざまな問題を修正し、より大きな非心分布に対応できるようにした&lt;/li&gt;
&lt;li&gt;CMake install targetを追加&lt;/li&gt;
&lt;li&gt;例外のない環境で使用できないものを無効化するために &lt;code&gt;special_functions.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;C++14で条件番号の計算 (condition number calculation) が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/923&#34; target=&#34;_blank&#34;&gt;GitHub #923&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt; テーブル駆動関数を修正し、コードが実際には &lt;code&gt;constexpr&lt;/code&gt; でない場合に大幅な速度低下を避けるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/894&#34; target=&#34;_blank&#34;&gt;GitHub #894&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の境界処理を改善&lt;/li&gt;
&lt;li&gt;Linux arm64、s390x、Apple M1 のテストを追加し、128ビット&lt;code&gt;long double&lt;/code&gt;を扱うテストケースを修正&lt;/li&gt;
&lt;li&gt;無限大とNaNをより良く扱うために&lt;code&gt;constexpr&lt;/code&gt;数学関数を改善&lt;/li&gt;
&lt;li&gt;積分器 (integrators) をconst-correctにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/898&#34; target=&#34;_blank&#34;&gt;GitHub #898&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の積分器がアンダーフローする問題を修正&lt;/li&gt;
&lt;li&gt;いくつかのプラットフォームがまだサポートしていないため、&lt;code&gt;std::cbrt&lt;/code&gt;を使用しないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/892&#34; target=&#34;_blank&#34;&gt;GitHub #892&lt;/a&gt; 非心t (non-central T) が偽 (spurious) の &lt;code&gt;FE_INVALID&lt;/code&gt; 例外を発生させるのを止めた&lt;/li&gt;
&lt;li&gt;二項分布のエッジケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/884&#34; target=&#34;_blank&#34;&gt;GitHub #884&lt;/a&gt; &lt;code&gt;ibeta&lt;/code&gt;の非常に小さな引数の取り扱いを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta&lt;/code&gt;での無限大とNaNの取り扱いを改善 [@https://github.com/boostorg/math/issues/878 874]を参照してください.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/781&#34; target=&#34;_blank&#34;&gt;GitHub #781&lt;/a&gt; &lt;code&gt;powm1&lt;/code&gt;のエラーハンドリングを改善&lt;/li&gt;
&lt;li&gt;指数が超大きい (super large)、または小さいときに、root finder bracketingをより速くブラケットするよう改善&lt;/li&gt;
&lt;li&gt;root finderのエッジケースを修正&lt;/li&gt;
&lt;li&gt;多くの雑多な警告を修正&lt;/li&gt;
&lt;li&gt;C++17を必要とする機能を使用する際にアサーションを追加し、古い標準バージョンでコンパイラを起動したときのエラーメッセージを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シリアライズで&lt;code&gt;collection_size_type&lt;/code&gt;の代わりに&lt;code&gt;unsigned long&lt;/code&gt;を使用するようにし、この変更にともなって&lt;code&gt;multi_index_container&lt;/code&gt;のシリアライズバージョンを2から3に上げた。&lt;code&gt;collection_size_type&lt;/code&gt;の値を特別扱いするカスタムアーカイブ型では、古いアーカイブの読み込みに失敗することがある。そのような場合は、読み出し操作の後方互換性を確保するためにマクロ &lt;code&gt;BOOST_MULTI_INDEX_ENABLE_SERIALIZATION_COMPATIBILITY_V2&lt;/code&gt; をグローバル定義する&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たに先行宣言のヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/479&#34; target=&#34;_blank&#34;&gt;GitHub #479&lt;/a&gt; Eigenとの相互運用性を更新し、Eigenの詳細に依存しないよう修正&lt;/li&gt;
&lt;li&gt;Cmake install targetを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; スタンドアロンの場合の文字列からの&lt;code&gt;cpp_dec_float&lt;/code&gt;構築を修正し、より良いエラーハンドリングを実現した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; C++17モードでの冗長な定義を削除&lt;/li&gt;
&lt;li&gt;スタンドアローンの &lt;code&gt;itrunc&lt;/code&gt; と &lt;code&gt;ltrunc&lt;/code&gt; のエラーハンドリングを修正&lt;/li&gt;
&lt;li&gt;8進数文字列の解析時に初期化されない可能性があるストレージを修正&lt;/li&gt;
&lt;li&gt;arm64 と s390x の CI テストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; &lt;code&gt;powm&lt;/code&gt; のために不足していた式テンプレートの展開コードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convert_string&lt;/code&gt;に&lt;code&gt;(std::)string&lt;/code&gt;のインスタンスをとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;std::filesystem&lt;/code&gt;もしくは&lt;code&gt;boost::filesystem&lt;/code&gt;) のストリームへの (UTF-8) &lt;code&gt;quoted&lt;/code&gt;出力を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost::pfr::is_implicitly_reflectable&lt;/code&gt; を実装し、集成体をリフレクト可能か否かに特殊化させる機構を実装。Denis Mikhailov氏のPRに感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::pfr::get&lt;/code&gt; を集成体の要素の型に対して実装&lt;/li&gt;
&lt;li&gt;リフレクションのライブラリサポートを検出するために &lt;code&gt;BOOST_PFR_ENABLED&lt;/code&gt; マクロを実装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/114&#34; target=&#34;_blank&#34;&gt;GitHub #114&lt;/a&gt; 終端文字の欠落を修正。PR をくれた Denis Mikhailov 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/118&#34; target=&#34;_blank&#34;&gt;GitHub #118&lt;/a&gt; 古いコンパイラでの &lt;code&gt;boost/pfr/config.hpp&lt;/code&gt; のコンパイルを修正。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/119&#34; target=&#34;_blank&#34;&gt;GitHub #119&lt;/a&gt; 古いコンパイラで壊れた C++17 構造化束縛の回避策を追加。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/117&#34; target=&#34;_blank&#34;&gt;GitHub #117&lt;/a&gt; &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt;の警告を回避。Markus F.X.J. Oberhumer 氏による PR に感謝&lt;/li&gt;
&lt;li&gt;複数のタイプミスを修正。Denis Mikhailov氏の修正に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; 不足していた &lt;code&gt;#pragma once&lt;/code&gt; を追加。PR をくれた &lt;a href=&#34;https://github.com/caozhanhao&#34; target=&#34;_blank&#34;&gt;caozhanhao&lt;/a&gt; 氏に感謝&lt;/li&gt;
&lt;li&gt;ドキュメントの複数の修正と改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;V2 に外部プロセスの管理機能を追加（まだ実験中）&lt;/li&gt;
&lt;li&gt;V1 では &lt;code&gt;wait_for&lt;/code&gt; と &lt;code&gt;wait_until&lt;/code&gt; を非推奨とした。これらは将来的に削除される予定です！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; ドキュメントとコメントの誤字を修正。PRをくれたChocobo1氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_FORCE_STATIC&lt;/code&gt; が定義されている場合の &lt;code&gt;backtrace_create_state&lt;/code&gt; のマルチスレッドフラグの検出を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34; id=&#34;static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Coreの&lt;code&gt;string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の相互運用をできるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sprintf&lt;/code&gt;の非推奨の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_cstring::rfind&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;GitHub ActionsでのCIを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ノードベースで、オープンアドレッシングなコンテナ&lt;code&gt;boost::unordered_node_map&lt;/code&gt;と&lt;code&gt;boost::unordered_node_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2363r5.html&#34; target=&#34;_blank&#34;&gt;P2363&lt;/a&gt;で規定された異種混合ルックアップ (heterogeneous lookup) の拡張メンバ関数を追加&lt;/li&gt;
&lt;li&gt;オープンアドレッシングコンテナのpost-mixing前の処理を、定数による拡張乗算 (extended multiplication by a constant) に基づく新しいアルゴリズムに置き換えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;内部で、スタックローカル型がコンテナのアロケータを使用して適切に構築されず、&lt;code&gt;uses-allocator&lt;/code&gt; 構築を壊していたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34; id=&#34;url&#34;&gt;URL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自動的に%のエンコーディングを行う&lt;code&gt;url::format&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;URL routerの例を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_params&lt;/code&gt;便利関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_view&lt;/code&gt;への暗黙変換をサポート&lt;/li&gt;
&lt;li&gt;パースコンストラクタをimplicitにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_token::arg&lt;/code&gt;が仮想デストラクタとslice protectionを持つようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_URL_DISABLE_THREADS&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;改善とバグ修正：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt;が再定義された警告を修正&lt;/li&gt;
&lt;li&gt;欠落 (absent) と空 (empty) のコンポーネントの差分比較&lt;/li&gt;
&lt;li&gt;空ポートのようなセグメントを持つ &lt;code&gt;hier_part_rule&lt;/code&gt; を検出&lt;/li&gt;
&lt;li&gt;root上で正規化した場合のセグメント比較&lt;/li&gt;
&lt;li&gt;hier-part path-rootless は無効なセグメントを考慮するよう修正&lt;/li&gt;
&lt;li&gt;オーバーフローした場合に、ポート番号を0にするよう修正&lt;/li&gt;
&lt;li&gt;ipv4 から文字列のオーバーフローを検出するアルゴリズム&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; 非推奨の &lt;code&gt;utility/addressof&lt;/code&gt; の代わりに &lt;code&gt;core/addressof&lt;/code&gt; を使用するようになった。PR をくれた Michael Ford 氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.9.4をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.82.0リリースノート -- 1.82.0 : Beta後に追加されたリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version/1_82_0.html"/>
      <id>075dd4033e19289d15efa1fd8443247bcb910df7:document/version/1_82_0.md</id>
      <updated>2023-04-06T16:55:39+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.82.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_82_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_82_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C++03サポートの終了&lt;/h2&gt;
&lt;p&gt;以下のライブラリは、いまから2リリース後の1.84.0でC++03のサポートを終了する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Align&lt;/li&gt;
&lt;li&gt;Any&lt;/li&gt;
&lt;li&gt;Atomic&lt;/li&gt;
&lt;li&gt;Bind&lt;/li&gt;
&lt;li&gt;Chrono&lt;/li&gt;
&lt;li&gt;ContainerHash&lt;/li&gt;
&lt;li&gt;Conversion&lt;/li&gt;
&lt;li&gt;DLL&lt;/li&gt;
&lt;li&gt;Endian&lt;/li&gt;
&lt;li&gt;Filesystem&lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Functional&lt;/li&gt;
&lt;li&gt;Io&lt;/li&gt;
&lt;li&gt;LexicalCast&lt;/li&gt;
&lt;li&gt;Log&lt;/li&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Ratio&lt;/li&gt;
&lt;li&gt;SmartPtr&lt;/li&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;Stacktrace&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;Timer&lt;/li&gt;
&lt;li&gt;TypeIndex&lt;/li&gt;
&lt;li&gt;Typeof&lt;/li&gt;
&lt;li&gt;Unordered&lt;/li&gt;
&lt;li&gt;Variant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリース（1.82）と次のリリース（1.83）は、上記のライブラリとその依存関係の大部分でC++03をサポートする最後のリリースとなる。&lt;/p&gt;
&lt;p&gt;古いバージョンのコンパイラでは、サポート不足やバグのためにC++11が部分的にしか実装されていないことが多いため、どのコンパイラがC++11の要件を満たしているとみなされるかは、ライブラリによって異なる場合がある。&lt;/p&gt;
&lt;p&gt;しかし、一般的なルールとして、コンパイラがC++11のキーワードや構文をまったく認識しない場合（例：&lt;code&gt;noexcept&lt;/code&gt;の使用、&lt;code&gt;constexpr&lt;/code&gt;の使用、&lt;code&gt;=delete&lt;/code&gt;された関数を定義すると即コンパイルエラー）、コンパイラがC++11必須のヘッダーをまったく提供しない場合（例：&lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt; や &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; をインクルードしようとすると失敗する）、あるいはコンパイラがC++11の機能やヘッダを提供するがまったく使用できない場合、このコンパイラはC++11コンパイラとはみなされない。&lt;/p&gt;
&lt;p&gt;このため、例えば14.0 (2015) 以前のMicrosoft Visual C++や、4.8以前のGCCは除外される。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mysql&#34; target=&#34;_blank&#34;&gt;MySql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.AsioベースのMySQLデータベースサーバーのC++11クライアント (作者Reuben Perez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/any/pull/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 非推奨の &lt;code&gt;utility/enable_if.hpp&lt;/code&gt; の代わりに &lt;code&gt;core/enable_if.hpp&lt;/code&gt; ヘッダを使用するようになった。PRをくれたMichael Ford氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AVX をサポートする x86 ターゲット用にコンパイルされた場合、128 ビットのアトミックロードとストアにベクタ命令が使用されるようになった&lt;/li&gt;
&lt;li&gt;32-bit x86 ターゲットでは、&lt;code&gt;memory_order_seq_cst&lt;/code&gt;セマンティクスを持つ 64-bit アトミックロードとストアは、メモリ順序付け命令を発行するようになった&lt;/li&gt;
&lt;li&gt;Boost.Atomic 1.73 で非推奨となった &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage()&lt;/code&gt; アクセッサと &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage_type&lt;/code&gt; 型を削除。代わりに &lt;code&gt;atomic&amp;lt;T&amp;gt;::value()&lt;/code&gt; と &lt;code&gt;atomic&amp;lt;T&amp;gt;::value_type&lt;/code&gt; を使用することを推奨&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;での&lt;code&gt;error_code&lt;/code&gt;の使用を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcp_stream&lt;/code&gt; が、タイマーの正しい実行形式を使用するよう修正&lt;/li&gt;
&lt;li&gt;error_categories が数値の ID を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt; にシークをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_value&lt;/code&gt;の&lt;code&gt;std::nullopt_t&lt;/code&gt;に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_tuple_like&lt;/code&gt;と、&lt;code&gt;hash_value&lt;/code&gt;のtuple-like型に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;のハッシュ化として、品質と速度の両方の改善のために&lt;code&gt;&lt;a href=&#34;https://github.com/pdimov/mulxp_hash&#34; target=&#34;_blank&#34;&gt;mulxp1_hash&lt;/a&gt;&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/core/snprintf.hpp&lt;/code&gt; ヘッダーを追加し、&lt;code&gt;snprintf&lt;/code&gt;、&lt;code&gt;vsnprintf&lt;/code&gt; およびそれらの &lt;code&gt;wchar_t&lt;/code&gt; 対応のポータブル定義を追加&lt;/li&gt;
&lt;li&gt;非推奨のヘッダ &lt;code&gt;boost/core/is_same.hpp&lt;/code&gt; と &lt;code&gt;boost::core::is_same&lt;/code&gt; は将来のリリースで削除される予定&lt;ul&gt;
&lt;li&gt;代わりに Boost.TypeTraits または C++ 標準ライブラリの型付けを使用することを推奨する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::ref&lt;/code&gt; のメンバ関数と関連するメンバ関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::swap&lt;/code&gt; 関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた。これは、型が例外を投げないスワップ操作をサポートしているかどうかによって異なる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::core::launder&lt;/code&gt; のポータブルな実装を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alignof&lt;/code&gt; のポータブルな実装である &lt;code&gt;BOOST_CORE_ALIGNOF&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::max_align_t&lt;/code&gt; の移植版である &lt;code&gt;boost::core::max_align_t&lt;/code&gt; と、 &lt;code&gt;max_align_t&lt;/code&gt; のアライメントである &lt;code&gt;boost::core::max_align&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;C++17 の &lt;code&gt;std::pmr::memory_resource&lt;/code&gt; と同等の移植性を持つ &lt;code&gt;boost::core::memory_resource&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/serialization.hpp&lt;/code&gt; を追加。これは、ライブラリがシリアライゼーションのヘッダを含めずに型の Boost.Serialization サポートを実装できるようにするプリミティブのコレクションであり、それによってライブラリがシリアライゼーションに依存するようにする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::data&lt;/code&gt;の実装である&lt;code&gt;boost::data&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::size&lt;/code&gt;の実装である&lt;code&gt;boost::size&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::span&lt;/code&gt; を更新し、 &lt;code&gt;std::initializer_list&lt;/code&gt; から範囲を作成するために &lt;code&gt;boost::data&lt;/code&gt; を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::identity&lt;/code&gt;の実装である &lt;code&gt;boost::identity&lt;/code&gt; を追加しました。この機能は Boost.Functional から移動した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; &lt;code&gt;size_t&lt;/code&gt;から&lt;code&gt;uint32_t&lt;/code&gt;への暗黙変換を回避。Travers Biddle氏のPull Requestに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; パス変換のコンストラクタ引数が寛容すぎるために発生するコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; [v4] &lt;code&gt;path::remove_filename&lt;/code&gt; が末尾のディレクトリセパレータを保持するようになった&lt;/li&gt;
&lt;li&gt;パスからファイル名とそれに先立つディレクトリセパレータを削除する &lt;code&gt;path::remove_filename_and_trailing_separators&lt;/code&gt; を追加。この動作は Filesystem v3 の &lt;code&gt;path::remove_filename&lt;/code&gt; と似ているが、v4 でも使用可能&lt;/li&gt;
&lt;li&gt;パス中のファイル名を置換する &lt;code&gt;path::replace_filename&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt; ODR 違反を避けるために、ライブラリのバージョン選択の実装を更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/282&#34; target=&#34;_blank&#34;&gt;GitHub #282&lt;/a&gt; Windowsにおいて、SMBv1共有のファイルの属性を照会する際の回避策を追加。以前は、SMBv1共有のディレクトリは、通常のファイルとして報告される可能性があった。これは、SMBv2以降には影響しない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;大きな改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1045&#34; target=&#34;_blank&#34;&gt;GitHub #1045&lt;/a&gt; (multi)linestringsと(multi)polygons向けにgeographic bufferをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1114&#34; target=&#34;_blank&#34;&gt;GitHub #1114&lt;/a&gt; 距離比較 : dynamic geometriesのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1046&#34; target=&#34;_blank&#34;&gt;GitHub #1046&lt;/a&gt; &lt;code&gt;covered_by()&lt;/code&gt;に&lt;code&gt;box&lt;/code&gt;をサポートし、ジオメトリの組み合わせが増えた&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convered_by(box, areal)&lt;/code&gt; (cartesian CSのみ)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;convered_by(geometry, box)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/705&#34; target=&#34;_blank&#34;&gt;GitHub #705&lt;/a&gt; WKT : タブと改行を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; union向けの修正&lt;/li&gt;
&lt;li&gt;サンプルコードに対して様々な修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;空の多角形のWKT出力表現が&lt;code&gt;POLYGON()&lt;/code&gt;になり、他のジオメトリとの整合性が取れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail::span&lt;/code&gt; と &lt;code&gt;detail::make_span&lt;/code&gt; を &lt;code&gt;boost::core&lt;/code&gt; の実装に置き換えた&lt;/li&gt;
&lt;li&gt;ドキュメントを改善&lt;/li&gt;
&lt;li&gt;いくつかのケースで &lt;code&gt;std::min&lt;/code&gt; と &lt;code&gt;std::max&lt;/code&gt; の使い方を保護&lt;ul&gt;
&lt;li&gt;Han Jiang 氏による貢献 (min,max マクロは一般的な Windows ヘッダーによって不正に設定されるので、回避する必要がある)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;今後、ライブラリ内で保護されていないmin,maxトークンの使用を検出するテストを追加&lt;/li&gt;
&lt;li&gt;最新の clang-14 と gcc-11+ の推論ガイドをサポートするように修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set_at_pointer&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;呼び出し元が提供するシリアライザーストレージをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;向けに欠落要素のための&lt;code&gt;value_to&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;エスケープ文字の内部でパーサーが中断する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sentinel()&lt;/code&gt;がユニークなポインタを返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/144&#34; target=&#34;_blank&#34;&gt;GitHub #144&lt;/a&gt; &lt;code&gt;get_system_locale&lt;/code&gt; およびその依存ファイルは、POSIX で定義された &lt;code&gt;$LC_CTYPE&lt;/code&gt; よりも &lt;code&gt;$LC_ALL&lt;/code&gt; を正しく優先するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;utf8_codecvt::out&lt;/code&gt; は末尾の (UTF) サロゲートに対して &lt;code&gt;partial&lt;/code&gt; を返すようになった&lt;/li&gt;
&lt;li&gt;ロケールを解析するために &lt;code&gt;boost::locale::util::locale_data&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::locale::info::encoding()&lt;/code&gt; の結果が大文字であることをドキュメント化。例として&lt;code&gt;&#34;utf-8&#34;&lt;/code&gt;ではなく&lt;code&gt;&#34;UTF-8&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; M49の国コード（&lt;code&gt;en_001&lt;/code&gt;や&lt;code&gt;en_150&lt;/code&gt;など）に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; &lt;code&gt;en_US_POSIX&lt;/code&gt; を &lt;code&gt;C&lt;/code&gt; ロケールのエイリアスとして扱うようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt; セグメンテーションのサポートがない場合（ICUがない場合）のエラーを改善した&lt;/li&gt;
&lt;li&gt;コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多項式評価のためのEstrin&#39;s methodを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/939&#34; target=&#34;_blank&#34;&gt;GitHub #939&lt;/a&gt; 非心分布 (non-central distributions) のさまざまな問題を修正し、より大きな非心分布に対応できるようにした&lt;/li&gt;
&lt;li&gt;CMake install targetを追加&lt;/li&gt;
&lt;li&gt;例外のない環境で使用できないものを無効化するために &lt;code&gt;special_functions.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;C++14で条件番号の計算 (condition number calculation) が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/923&#34; target=&#34;_blank&#34;&gt;GitHub #923&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt; テーブル駆動関数を修正し、コードが実際には &lt;code&gt;constexpr&lt;/code&gt; でない場合に大幅な速度低下を避けるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/894&#34; target=&#34;_blank&#34;&gt;GitHub #894&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の境界処理を改善&lt;/li&gt;
&lt;li&gt;Linux arm64、s390x、Apple M1 のテストを追加し、128ビット&lt;code&gt;long double&lt;/code&gt;を扱うテストケースを修正&lt;/li&gt;
&lt;li&gt;無限大とNaNをより良く扱うために&lt;code&gt;constexpr&lt;/code&gt;数学関数を改善&lt;/li&gt;
&lt;li&gt;積分器 (integrators) をconst-correctにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/898&#34; target=&#34;_blank&#34;&gt;GitHub #898&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の積分器がアンダーフローする問題を修正&lt;/li&gt;
&lt;li&gt;いくつかのプラットフォームがまだサポートしていないため、&lt;code&gt;std::cbrt&lt;/code&gt;を使用しないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/892&#34; target=&#34;_blank&#34;&gt;GitHub #892&lt;/a&gt; 非心t (non-central T) が偽 (spurious) の &lt;code&gt;FE_INVALID&lt;/code&gt; 例外を発生させるのを止めた&lt;/li&gt;
&lt;li&gt;二項分布のエッジケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/884&#34; target=&#34;_blank&#34;&gt;GitHub #884&lt;/a&gt; &lt;code&gt;ibeta&lt;/code&gt;の非常に小さな引数の取り扱いを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta&lt;/code&gt;での無限大とNaNの取り扱いを改善 [@https://github.com/boostorg/math/issues/878 874]を参照してください.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/781&#34; target=&#34;_blank&#34;&gt;GitHub #781&lt;/a&gt; &lt;code&gt;powm1&lt;/code&gt;のエラーハンドリングを改善&lt;/li&gt;
&lt;li&gt;指数が超大きい (super large)、または小さいときに、root finder bracketingをより速くブラケットするよう改善&lt;/li&gt;
&lt;li&gt;root finderのエッジケースを修正&lt;/li&gt;
&lt;li&gt;多くの雑多な警告を修正&lt;/li&gt;
&lt;li&gt;C++17を必要とする機能を使用する際にアサーションを追加し、古い標準バージョンでコンパイラを起動したときのエラーメッセージを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シリアライズで&lt;code&gt;collection_size_type&lt;/code&gt;の代わりに&lt;code&gt;unsigned long&lt;/code&gt;を使用するようにし、この変更にともなって&lt;code&gt;multi_index_container&lt;/code&gt;のシリアライズバージョンを2から3に上げた。&lt;code&gt;collection_size_type&lt;/code&gt;の値を特別扱いするカスタムアーカイブ型では、古いアーカイブの読み込みに失敗することがある。そのような場合は、読み出し操作の後方互換性を確保するためにマクロ &lt;code&gt;BOOST_MULTI_INDEX_ENABLE_SERIALIZATION_COMPATIBILITY_V2&lt;/code&gt; をグローバル定義する&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たに先行宣言のヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/479&#34; target=&#34;_blank&#34;&gt;GitHub #479&lt;/a&gt; Eigenとの相互運用性を更新し、Eigenの詳細に依存しないよう修正&lt;/li&gt;
&lt;li&gt;Cmake install targetを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; スタンドアロンの場合の文字列からの&lt;code&gt;cpp_dec_float&lt;/code&gt;構築を修正し、より良いエラーハンドリングを実現した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; C++17モードでの冗長な定義を削除&lt;/li&gt;
&lt;li&gt;スタンドアローンの &lt;code&gt;itrunc&lt;/code&gt; と &lt;code&gt;ltrunc&lt;/code&gt; のエラーハンドリングを修正&lt;/li&gt;
&lt;li&gt;8進数文字列の解析時に初期化されない可能性があるストレージを修正&lt;/li&gt;
&lt;li&gt;arm64 と s390x の CI テストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; &lt;code&gt;powm&lt;/code&gt; のために不足していた式テンプレートの展開コードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convert_string&lt;/code&gt;に&lt;code&gt;(std::)string&lt;/code&gt;のインスタンスをとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;std::filesystem&lt;/code&gt;もしくは&lt;code&gt;boost::filesystem&lt;/code&gt;) のストリームへの (UTF-8) &lt;code&gt;quoted&lt;/code&gt;出力を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost::pfr::is_implicitly_reflectable&lt;/code&gt; を実装し、集成体をリフレクト可能か否かに特殊化させる機構を実装。Denis Mikhailov氏のPRに感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::pfr::get&lt;/code&gt; を集成体の要素の型に対して実装&lt;/li&gt;
&lt;li&gt;リフレクションのライブラリサポートを検出するために &lt;code&gt;BOOST_PFR_ENABLED&lt;/code&gt; マクロを実装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/114&#34; target=&#34;_blank&#34;&gt;GitHub #114&lt;/a&gt; 終端文字の欠落を修正。PR をくれた Denis Mikhailov 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/118&#34; target=&#34;_blank&#34;&gt;GitHub #118&lt;/a&gt; 古いコンパイラでの &lt;code&gt;boost/pfr/config.hpp&lt;/code&gt; のコンパイルを修正。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/119&#34; target=&#34;_blank&#34;&gt;GitHub #119&lt;/a&gt; 古いコンパイラで壊れた C++17 構造化束縛の回避策を追加。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/117&#34; target=&#34;_blank&#34;&gt;GitHub #117&lt;/a&gt; &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt;の警告を回避。Markus F.X.J. Oberhumer 氏による PR に感謝&lt;/li&gt;
&lt;li&gt;複数のタイプミスを修正。Denis Mikhailov氏の修正に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; 不足していた &lt;code&gt;#pragma once&lt;/code&gt; を追加。PR をくれた &lt;a href=&#34;https://github.com/caozhanhao&#34; target=&#34;_blank&#34;&gt;caozhanhao&lt;/a&gt; 氏に感謝&lt;/li&gt;
&lt;li&gt;ドキュメントの複数の修正と改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;V2 に外部プロセスの管理機能を追加（まだ実験中）&lt;/li&gt;
&lt;li&gt;V1 では &lt;code&gt;wait_for&lt;/code&gt; と &lt;code&gt;wait_until&lt;/code&gt; を非推奨とした。これらは将来的に削除される予定です！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; ドキュメントとコメントの誤字を修正。PRをくれたChocobo1氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_FORCE_STATIC&lt;/code&gt; が定義されている場合の &lt;code&gt;backtrace_create_state&lt;/code&gt; のマルチスレッドフラグの検出を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34; id=&#34;static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Coreの&lt;code&gt;string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の相互運用をできるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sprintf&lt;/code&gt;の非推奨の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_cstring::rfind&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;GitHub ActionsでのCIを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ノードベースで、オープンアドレッシングなコンテナ&lt;code&gt;boost::unordered_node_map&lt;/code&gt;と&lt;code&gt;boost::unordered_node_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2363r5.html&#34; target=&#34;_blank&#34;&gt;P2363&lt;/a&gt;で規定された異種混合ルックアップ (heterogeneous lookup) の拡張メンバ関数を追加&lt;/li&gt;
&lt;li&gt;オープンアドレッシングコンテナのpost-mixing前の処理を、定数による拡張乗算 (extended multiplication by a constant) に基づく新しいアルゴリズムに置き換えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;内部で、スタックローカル型がコンテナのアロケータを使用して適切に構築されず、&lt;code&gt;uses-allocator&lt;/code&gt; 構築を壊していたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34; id=&#34;url&#34;&gt;URL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自動的に%のエンコーディングを行う&lt;code&gt;url::format&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;URL routerの例を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_params&lt;/code&gt;便利関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_view&lt;/code&gt;への暗黙変換をサポート&lt;/li&gt;
&lt;li&gt;パースコンストラクタをimplicitにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_token::arg&lt;/code&gt;が仮想デストラクタとslice protectionを持つようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_URL_DISABLE_THREADS&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;改善とバグ修正：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt;が再定義された警告を修正&lt;/li&gt;
&lt;li&gt;欠落 (absent) と空 (empty) のコンポーネントの差分比較&lt;/li&gt;
&lt;li&gt;空ポートのようなセグメントを持つ &lt;code&gt;hier_part_rule&lt;/code&gt; を検出&lt;/li&gt;
&lt;li&gt;root上で正規化した場合のセグメント比較&lt;/li&gt;
&lt;li&gt;hier-part path-rootless は無効なセグメントを考慮するよう修正&lt;/li&gt;
&lt;li&gt;オーバーフローした場合に、ポート番号を0にするよう修正&lt;/li&gt;
&lt;li&gt;ipv4 から文字列のオーバーフローを検出するアルゴリズム&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[GitHub #105] 非推奨の &lt;code&gt;utility/addressof&lt;/code&gt; の代わりに &lt;code&gt;core/addressof&lt;/code&gt; を使用するようになった。PR をくれた Michael Ford 氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.9.4をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リリースノート -- 1.82.0 : いまある分を追加</title>
      <link href="https://boostjp.github.io/document/version.html"/>
      <id>368ecfc3cdbfea89419afc4349eb2632c78959f6:document/version.md</id>
      <updated>2023-03-10T16:35:14+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;以下は、Boostの各バージョンのリリースノートを翻訳、情報補完したドキュメントです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html&#34;&gt;雛形ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html&#34;&gt;1.82.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html&#34;&gt;1.81.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html&#34;&gt;1.80.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html&#34;&gt;1.79.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_78_0.html&#34;&gt;1.78.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_77_0.html&#34;&gt;1.77.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html&#34;&gt;1.76.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_75_0.html&#34;&gt;1.75.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_74_0.html&#34;&gt;1.74.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html&#34;&gt;1.73.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html&#34;&gt;1.72.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html&#34;&gt;1.71.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html&#34;&gt;1.70.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html&#34;&gt;1.69.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html&#34;&gt;1.68.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html&#34;&gt;1.67.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_66_0.html&#34;&gt;1.66.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_1.html&#34;&gt;1.65.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html&#34;&gt;1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html&#34;&gt;1.64.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_63_0.html&#34;&gt;1.63.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_62_0.html&#34;&gt;1.62.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_61_0.html&#34;&gt;1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html&#34;&gt;1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html&#34;&gt;1.59.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html&#34;&gt;1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_57_0.html&#34;&gt;1.57.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html&#34;&gt;1.56.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html&#34;&gt;1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_54_0.html&#34;&gt;1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_53_0.html&#34;&gt;1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_52_0.html&#34;&gt;1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_51_0.html&#34;&gt;1.51.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_50_0.html&#34;&gt;1.50.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_49_0.html&#34;&gt;1.49.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_48_0.html&#34;&gt;1.48.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_47_0.html&#34;&gt;1.47.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_1.html&#34;&gt;1.46.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_0.html&#34;&gt;1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_45_0.html&#34;&gt;1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.82.0リリースノート -- 1.82.0 : いまある分を追加</title>
      <link href="https://boostjp.github.io/document/version/1_82_0.html"/>
      <id>368ecfc3cdbfea89419afc4349eb2632c78959f6:document/version/1_82_0.md</id>
      <updated>2023-03-10T16:35:14+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.82.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_82_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_82_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C++03サポートの終了&lt;/h2&gt;
&lt;p&gt;以下のライブラリは、いまから2リリース後の1.84.0でC++03のサポートを終了する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Align&lt;/li&gt;
&lt;li&gt;Bind&lt;/li&gt;
&lt;li&gt;Chrono&lt;/li&gt;
&lt;li&gt;ContainerHash&lt;/li&gt;
&lt;li&gt;Endian&lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Functional&lt;/li&gt;
&lt;li&gt;Io&lt;/li&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Ratio&lt;/li&gt;
&lt;li&gt;SmartPtr&lt;/li&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;Timer&lt;/li&gt;
&lt;li&gt;Typeof&lt;/li&gt;
&lt;li&gt;Unordered&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリース（1.82）と次のリリース（1.83）は、上記のライブラリとその依存関係の大部分でC++03をサポートする最後のリリースとなる。&lt;/p&gt;
&lt;p&gt;古いバージョンのコンパイラでは、サポート不足やバグのためにC++11が部分的にしか実装されていないことが多いため、どのコンパイラがC++11の要件を満たしているとみなされるかは、ライブラリによって異なる場合がある。&lt;/p&gt;
&lt;p&gt;しかし、一般的なルールとして、コンパイラがC++11のキーワードや構文をまったく認識しない場合（例：&lt;code&gt;noexcept&lt;/code&gt;の使用、&lt;code&gt;constexpr&lt;/code&gt;の使用、&lt;code&gt;=delete&lt;/code&gt;された関数を定義すると即コンパイルエラー）、コンパイラがC++11必須のヘッダーをまったく提供しない場合（例：&lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt; や &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; をインクルードしようとすると失敗する）、あるいはコンパイラがC++11の機能やヘッダを提供するがまったく使用できない場合、このコンパイラはC++11コンパイラとはみなされない。&lt;/p&gt;
&lt;p&gt;このため、例えば14.0 (2015) 以前のMicrosoft Visual C++や、4.8以前のGCCは除外される。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mysql&#34; target=&#34;_blank&#34;&gt;MySql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.AsioベースのMySQLデータベースサーバーのC++11クライアント (作者Reuben Perez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_value&lt;/code&gt;の&lt;code&gt;std::nullopt_t&lt;/code&gt;に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_tuple_like&lt;/code&gt;と、&lt;code&gt;hash_value&lt;/code&gt;のtuple-like型に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;のハッシュ化として、品質と速度の両方の改善のために&lt;code&gt;&lt;a href=&#34;https://github.com/pdimov/mulxp_hash&#34; target=&#34;_blank&#34;&gt;mulxp1_hash&lt;/a&gt;&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多項式評価のためのEstrin&#39;s methodを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/939&#34; target=&#34;_blank&#34;&gt;GitHub #939&lt;/a&gt; 非心分布 (non-central distributions) のさまざまな問題を修正し、より大きな非心分布に対応できるようにした&lt;/li&gt;
&lt;li&gt;CMake install targetを追加&lt;/li&gt;
&lt;li&gt;例外のない環境で使用できないものを無効化するために &lt;code&gt;special_functions.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;C++14で条件番号の計算 (condition number calculation) が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/923&#34; target=&#34;_blank&#34;&gt;GitHub #923&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt; テーブル駆動関数を修正し、コードが実際には &lt;code&gt;constexpr&lt;/code&gt; でない場合に大幅な速度低下を避けるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/894&#34; target=&#34;_blank&#34;&gt;GitHub #894&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の境界処理を改善&lt;/li&gt;
&lt;li&gt;Linux arm64、s390x、Apple M1 のテストを追加し、128ビット&lt;code&gt;long double&lt;/code&gt;を扱うテストケースを修正&lt;/li&gt;
&lt;li&gt;無限大とNaNをより良く扱うために&lt;code&gt;constexpr&lt;/code&gt;数学関数を改善&lt;/li&gt;
&lt;li&gt;積分器 (integrators) をconst-correctにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/898&#34; target=&#34;_blank&#34;&gt;GitHub #898&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の積分器がアンダーフローする問題を修正&lt;/li&gt;
&lt;li&gt;いくつかのプラットフォームがまだサポートしていないため、&lt;code&gt;std::cbrt&lt;/code&gt;を使用しないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/892&#34; target=&#34;_blank&#34;&gt;GitHub #892&lt;/a&gt; 非心t (non-central T) が偽 (spurious) の &lt;code&gt;FE_INVALID&lt;/code&gt; 例外を発生させるのを止めた&lt;/li&gt;
&lt;li&gt;二項分布のエッジケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/884&#34; target=&#34;_blank&#34;&gt;GitHub #884&lt;/a&gt; &lt;code&gt;ibeta&lt;/code&gt;の非常に小さな引数の取り扱いを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta&lt;/code&gt;での無限大とNaNの取り扱いを改善 [@https://github.com/boostorg/math/issues/878 874]を参照してください.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/781&#34; target=&#34;_blank&#34;&gt;GitHub #781&lt;/a&gt; &lt;code&gt;powm1&lt;/code&gt;のエラーハンドリングを改善&lt;/li&gt;
&lt;li&gt;指数が超大きい (super large)、または小さいときに、root finder bracketingをより速くブラケットするよう改善&lt;/li&gt;
&lt;li&gt;root finderのエッジケースを修正&lt;/li&gt;
&lt;li&gt;多くの雑多な警告を修正&lt;/li&gt;
&lt;li&gt;C++17を必要とする機能を使用する際にアサーションを追加し、古い標準バージョンでコンパイラを起動したときのエラーメッセージを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シリアライズで&lt;code&gt;collection_size_type&lt;/code&gt;の代わりに&lt;code&gt;unsigned long&lt;/code&gt;を使用するようにし、この変更にともなって&lt;code&gt;multi_index_container&lt;/code&gt;のシリアライズバージョンを2から3に上げた。&lt;code&gt;collection_size_type&lt;/code&gt;の値を特別扱いするカスタムアーカイブ型では、古いアーカイブの読み込みに失敗することがある。そのような場合は、読み出し操作の後方互換性を確保するためにマクロ &lt;code&gt;BOOST_MULTI_INDEX_ENABLE_SERIALIZATION_COMPATIBILITY_V2&lt;/code&gt; をグローバル定義する&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たに先行宣言のヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/479&#34; target=&#34;_blank&#34;&gt;GitHub #479&lt;/a&gt; Eigenとの相互運用性を更新し、Eigenの詳細に依存しないよう修正&lt;/li&gt;
&lt;li&gt;Cmake install targetを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; スタンドアロンの場合の文字列からの&lt;code&gt;cpp_dec_float&lt;/code&gt;構築を修正し、より良いエラーハンドリングを実現した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; C++17モードでの冗長な定義を削除&lt;/li&gt;
&lt;li&gt;スタンドアローンの &lt;code&gt;itrunc&lt;/code&gt; と &lt;code&gt;ltrunc&lt;/code&gt; のエラーハンドリングを修正&lt;/li&gt;
&lt;li&gt;8進数文字列の解析時に初期化されない可能性があるストレージを修正&lt;/li&gt;
&lt;li&gt;arm64 と s390x の CI テストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; &lt;code&gt;powm&lt;/code&gt; のために不足していた式テンプレートの展開コードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#static_string&#34; id=&#34;static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Coreの&lt;code&gt;string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の相互運用をできるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sprintf&lt;/code&gt;の非推奨の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_cstring::rfind&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;GitHub ActionsでのCIを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ノードベースで、オープンアドレッシングなコンテナ&lt;code&gt;boost::unordered_node_map&lt;/code&gt;と&lt;code&gt;boost::unordered_node_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2363r5.html&#34; target=&#34;_blank&#34;&gt;P2363&lt;/a&gt;で規定された異種混合ルックアップ (heterogeneous lookup) の拡張メンバ関数を追加&lt;/li&gt;
&lt;li&gt;オープンアドレッシングコンテナのpost-mixing前の処理を、定数による拡張乗算 (extended multiplication by a constant) に基づく新しいアルゴリズムに置き換えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;内部で、スタックローカル型がコンテナのアロケータを使用して適切に構築されず、&lt;code&gt;uses-allocator&lt;/code&gt; 構築を壊していたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#url&#34; id=&#34;url&#34;&gt;URL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自動的に%のエンコーディングを行う&lt;code&gt;url::format&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;URL routerの例を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_params&lt;/code&gt;便利関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_view&lt;/code&gt;への暗黙変換をサポート&lt;/li&gt;
&lt;li&gt;パースコンストラクタをimplicitにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_token::arg&lt;/code&gt;が仮想デストラクタとslice protectionを持つようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_URL_DISABLE_THREADS&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;改善とバグ修正：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt;が再定義された警告を修正&lt;/li&gt;
&lt;li&gt;欠落 (absent) と空 (empty) のコンポーネントの差分比較&lt;/li&gt;
&lt;li&gt;空ポートのようなセグメントを持つ &lt;code&gt;hier_part_rule&lt;/code&gt; を検出&lt;/li&gt;
&lt;li&gt;root上で正規化した場合のセグメント比較&lt;/li&gt;
&lt;li&gt;hier-part path-rootless は無効なセグメントを考慮するよう修正&lt;/li&gt;
&lt;li&gt;オーバーフローした場合に、ポート番号を0にするよう修正&lt;/li&gt;
&lt;li&gt;ipv4 から文字列のオーバーフローを検出するアルゴリズム&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.9.4をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>