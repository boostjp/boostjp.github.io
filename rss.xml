<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2018-04-12T04:27:22.902542</updated>
  <id>250801d3-d422-4758-94e3-3fb334d8fc1f</id>

  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : Asioの追加リリースノートを記載 (close #238)</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>a16f025f9408e2f27516134ef6a545f8277b470c:document/version/1_67_0.md</id>
      <updated>2018-04-12T13:23:23+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/contract&#34; target=&#34;_blank&#34;&gt;Contract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++用の契約プログラミングライブラリ。契約プログラミングの全ての機能をサポートしている： サブ契約、クラスの不変条件、事後条件 (古い値と戻り値)、事前条件、表明失敗時の挙動をカスタマイズ (例として、例外を投げるかプログラムを異常終了させるか)、コンパイルに含めるかどうかと表明のチェックをオプショナルに、などなど。作者Lorenzo Caminiti氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/hof&#34; target=&#34;_blank&#34;&gt;HOF&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;高階関数 (Higher-order functions) のライブラリ。作者Paul Fultz II氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34;&gt;Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::get_option&lt;/code&gt;にconst修飾を付け忘れていたので追加&lt;/li&gt;
&lt;li&gt;GCCのいくつかのバージョンで発生するパースエラーを回避&lt;/li&gt;
&lt;li&gt;チュートリアルのサンプルコードが壊れていたので修正&lt;/li&gt;
&lt;li&gt;実験的な機能を追加。experimentalな機能は、予告なく変更される可能性があるので注意&lt;ul&gt;
&lt;li&gt;&lt;code&gt;experimental::detached&lt;/code&gt; : 非同期操作の完了をハンドリングしない指定。完了ハンドラの代わりに指定する&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_socket.async_send(my_buffer, boost::asio::experimental::detached);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::redirect_error&lt;/code&gt; : &lt;code&gt;error_code&lt;/code&gt;をキャプチャして完了ハンドラに紐付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::co_spawn&lt;/code&gt; : コルーチン仕様を統合する機能&lt;/li&gt;
&lt;li&gt;最新機能を使用して、タイムアウトのサンプルコードを更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asio::deadline_timer&lt;/code&gt;よりも&lt;code&gt;asio::steady_timer&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asio::streambuf&lt;/code&gt;よりも&lt;code&gt;asio::dynamic_buffer&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;ブロッキングするクライアントでは、時間指定するasio::io_context::run_for()`関数を使用するようにした&lt;/li&gt;
&lt;li&gt;タイムアウトときのブロッキングで、カスタムの完了トークンの使用法を示す例を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_NO_DEPRECATED&lt;/code&gt;が定義されたときの、ユニットテストのコンパイルを修正&lt;/li&gt;
&lt;li&gt;Networking TSとの互換性のため、socket iostreamsではデフォルトでchronoを使用するよう変更&lt;/li&gt;
&lt;li&gt;サンプルコードを更新し、Boost.DateTimeよりもchronoを使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_dynamic_buffer&lt;/code&gt;トレイトでの、メンバ関数検出の誤りを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;の、非推奨化された&lt;code&gt;handler_type&lt;/code&gt;との非互換を修正&lt;/li&gt;
&lt;li&gt;SSLストリームの実装において、不足していたムーブ最適化を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_resolver_results::value_type&lt;/code&gt; typedefの誤りを修正&lt;/li&gt;
&lt;li&gt;いくつかのOpenSSLバージョンで、&lt;code&gt;SSL_OP_NO_COMPRESSION&lt;/code&gt;が定義されたときのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;バンドル内の複数の証明書を処理するよう&lt;code&gt;add_certificate_authority&lt;/code&gt;を変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::result_of&lt;/code&gt;の代わりに&lt;code&gt;std::invoke_result&lt;/code&gt;を使用し、MSVCの非推奨化による警告を修正&lt;/li&gt;
&lt;li&gt;C++17以降で&lt;code&gt;std::string_view&lt;/code&gt;、C++14で&lt;code&gt;std::experimental::string_view&lt;/code&gt;を使用するよう変更。C++17モードで&lt;code&gt;BOOST_ASIO_DISABLE_STD_STRING_VIEW&lt;/code&gt;を定義すると、強制的に (利用可能だと仮定している) &lt;code&gt;std::experimental::string_view&lt;/code&gt;を使用する&lt;/li&gt;
&lt;li&gt;テンプレート引数&lt;code&gt;DynamicBuffer&lt;/code&gt;が、&lt;code&gt;enable_if&lt;/code&gt;で使用する前に確実にdecayされるようにした&lt;/li&gt;
&lt;li&gt;新しいMoveConstructibleな完了ハンドラからレガシーな完了ハンドラ (まだCopyConstructibleが要求される) を区別できるよう、ドキュメントを変更&lt;/li&gt;
&lt;li&gt;bufferのデバッグサポートでの、戻り値を無視したことによる警告を黙らせた&lt;/li&gt;
&lt;li&gt;参照パラメータを含む完了ハンドラのシグニチャで、&lt;code&gt;basic_yield_context&lt;/code&gt;が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spawn()&lt;/code&gt;で起動されたスタックフルコルーチンが、関数とハンドラ引数のdecayされたコピーを確実に正しく格納するよう修正&lt;/li&gt;
&lt;li&gt;Androidでのいくつかの互換性問題を修正&lt;/li&gt;
&lt;li&gt;Jamfileでのクロスコンパイルをサポート&lt;/li&gt;
&lt;li&gt;サンプルコードの、いくつかの移植性の問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、&lt;code&gt;websocket::stream&lt;/code&gt; が assertエラーか未定義な振る舞いを起こす重大な欠陥を修正している。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;完全な変更のリストについては、&lt;a href=&#34;http://www.boost.org/doc/libs/develop/libs/beast/doc/html/beast/release_notes.html&#34; target=&#34;_blank&#34;&gt;公式ページ&lt;/a&gt; を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost内の依存関係を簡潔にするためにfunctionalモジュールから分離された&lt;/li&gt;
&lt;li&gt;新しいモジュール名と対応させるためにヘッダーを別のディレクトリへ移した。以前のパスでも依然として動作する&lt;/li&gt;
&lt;li&gt;次の標準ライブラリへ対応した&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_condition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::variant&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::monostate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;より詳細には&lt;a href=&#34;https://www.boost.org/doc/html/hash/changes.html#hash.changes.boost_1_67_0&#34; target=&#34;_blank&#34;&gt;change log&lt;/a&gt;を参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;/&lt;a href=&#34;https://github.com/boostorg/context/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;
  OSX 32bit下においてEAX/EDXを使って&lt;code&gt;transfer_t&lt;/code&gt;を正しく返すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; &lt;code&gt;__sanitizer_finish_switch_fiber&lt;/code&gt;を呼び出すタイミングが正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt; WindowsでのClangにおいてビルド出来ない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;execution_context&lt;/code&gt;(v1)がMSVCでエラーとなる問題を修正&lt;/li&gt;
&lt;li&gt;既知のバグ : all.hppのインクルード + &lt;code&gt;&amp;lt;context-impl&amp;gt;ucontext/winfib&lt;/code&gt; で「&lt;code&gt;forced_unwind&lt;/code&gt;: is not a member of &lt;code&gt;boost::context::detail&lt;/code&gt;」というエラーになる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; プル型コルーチンの起動直後に投げられた例外が再送されなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; &lt;code&gt;GetLastError()&lt;/code&gt;がエラー値を返すような状況下での問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; : &lt;code&gt;condition_variable::wait_for&lt;/code&gt; を使っている場合に assert エラー &lt;code&gt;&#34;! ctx-&amp;gt;ready_is_linked()&#34;&lt;/code&gt; が起きる点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; : ビルド時に &lt;code&gt;&#39;stdexception&#39; file not found&lt;/code&gt; エラーが起きる不具合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/141&#34; target=&#34;_blank&#34;&gt;GitHub #141&lt;/a&gt; : boost::fibers::async が例外を投げる問題に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/146&#34; target=&#34;_blank&#34;&gt;GitHub #146&lt;/a&gt; : remote-ready-queue spinlock に対する不要なロックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/153&#34; target=&#34;_blank&#34;&gt;GitHub #153&lt;/a&gt; : &lt;code&gt;context::set_ready()&lt;/code&gt; を &lt;code&gt;context::schedule()&lt;/code&gt; に置き換えるようにドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; : &lt;code&gt;[buffered|unbuffered]_channels&lt;/code&gt; の iterator に関するドキュメントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; : &lt;code&gt;this_fiber&lt;/code&gt; が boost::fibers 名前空間のメンバとしてドキュメントに記されている (訳注: 正しくは &lt;code&gt;boost::&lt;/code&gt; 名前空間の直下) 点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; : &lt;code&gt;examples/barrier.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; : &lt;code&gt;work_stealing&lt;/code&gt; クラスを動作させるために、&lt;code&gt;BOOST_FIBERS_DECL&lt;/code&gt; マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/162&#34; target=&#34;_blank&#34;&gt;GitHub #162&lt;/a&gt; : タイムアウト待ちの場合に、use-counter (訳注: 正確には &lt;code&gt;use_count_&lt;/code&gt; 内部変数) をインクリメントするルーチンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; : &lt;code&gt;scheduler::schedule()&lt;/code&gt; コンストラクタにおける &lt;code&gt;ctx-&amp;gt;wait_is_linked()&lt;/code&gt; アサーションを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/167&#34; target=&#34;_blank&#34;&gt;GitHub #167&lt;/a&gt; : future が作成された場合のみ、&lt;code&gt;shared_state::owner_destroyed()&lt;/code&gt; を呼び出すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; : ドキュメントが最新でなかったので追随&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;main()&lt;/code&gt;関数の前でパス操作したときにクラッシュする問題に対して、静的変数の初期化を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/164&#34; target=&#34;_blank&#34;&gt;GitHub #164&lt;/a&gt; MSVC 2017でコンパイルエラーとなるため&lt;code&gt;fusion::map&lt;/code&gt;でのSFINAEをテンプレートパラメータへと移した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; &lt;code&gt;fusion::vector&lt;/code&gt;がCWG 945に対応していないコンパイラでエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; エラーメッセージをわかりやすくするためシーケンスコンバータに要素数の事前チェクを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://GitHub.com/boostorg/fusion/pull/171&#34; target=&#34;_blank&#34;&gt;GitHub #171&lt;/a&gt; &lt;code&gt;fusion::tag_of&lt;/code&gt;と&lt;code&gt;fusion::is_native_fusion_sequence&lt;/code&gt;に不完全型を渡せるようにした。
  これは挙動の変更ではなく、Boost.TypeTraitsの変更への追従となっている&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新たな地図投影 (map projection) とSRS変換 (SRS transformation) を追加 (部分的にインタフェース変更が発生する可能性があるのでアンドキュメント)&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;densify()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;から直接&lt;code&gt;allocator&lt;/code&gt;を使用するのではなく、&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;を介するようにした (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;C++03でムーブセマンティクスをエミュレーションするために、&lt;code&gt;rtree&lt;/code&gt;のデフォルトアロケータを&lt;code&gt;boost::container::new_allocator&lt;/code&gt; (と&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;) に変更した&lt;/li&gt;
&lt;li&gt;Area strategiesのインタフェースを変更した。これは破壊的変更になる可能性がある&lt;/li&gt;
&lt;li&gt;半径 (Radius) と球体 (Sphere) をspherical strategiesに渡せるようにした&lt;/li&gt;
&lt;li&gt;sphericalとgeographicの&lt;code&gt;distance()&lt;/code&gt;戦略にPoint-BoxとBox-Boxの組み合わせを追加&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyの出力が、2点か (closed polygonの) 3点のringを破棄するが、それらを生成しないようにした&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、空のinterior ringsと空のpolygonsを出力から外すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13381&#34; target=&#34;_blank&#34;&gt;Trac #13381&lt;/a&gt; Visual C++ 2015での&lt;code&gt;matrix_transformer&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13436&#34; target=&#34;_blank&#34;&gt;Trac #13436&lt;/a&gt; &lt;code&gt;boost::geometry::model::polygon&lt;/code&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length()&lt;/code&gt;アルゴリズムに、不足していた戦略解決を追加した。これはVariantのサポートに影響する&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、closing pointをsimplifyするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;振る舞いの変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、通常では入力のringを回転させてから、凸包 (convex hull) 上の非collinear pointを選択するようsimplifyする。これは出力を改善する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースに加えて、&lt;code&gt;unique_ptr&lt;/code&gt;のインタフェースサポートを追加。C++17をサポートするために、非推奨の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースを削除オプションとして&lt;code&gt;BOOST_LOCALE_HIDE_AUTO_PTR&lt;/code&gt;を定義できる&lt;/li&gt;
&lt;li&gt;ICU &amp;gt; 60.1でのテスト問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6851&#34; target=&#34;_blank&#34;&gt;Trac #6851&lt;/a&gt; Solarisでのビルドを修正&lt;/li&gt;
&lt;li&gt;最適化付きビルドでのFreeBSD/clangの問題を修正&lt;/li&gt;
&lt;li&gt;MSVCのテストで失敗していた、コードページ932 (CP932) のcodecvt問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12572&#34; target=&#34;_blank&#34;&gt;Trac #12572&lt;/a&gt; 国名の正規化をするところでのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12453&#34; target=&#34;_blank&#34;&gt;Trac #12453&lt;/a&gt; &lt;code&gt;libs/locale/src/shared/message.cpp&lt;/code&gt;のコードにムダが多かった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icu/date_time&lt;/code&gt;で失敗するケースで&lt;code&gt;throw&lt;/code&gt;が抜けていたのを修正&lt;/li&gt;
&lt;li&gt;Boost.Thread v4でのビルドを再度修正&lt;/li&gt;
&lt;li&gt;ICUバックエンドの年フォーマットの代わりにYear of week (年の何週目か) を使用するよう修正&lt;/li&gt;
&lt;li&gt;ICU 56.1以上のフォーマットテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ネイティブのモンテカルロ・インテグレーションをサポート&lt;/li&gt;
&lt;li&gt;チェビシェフ補間 (Chebyshev interpolation) のルーチンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Trac #13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13109&#34; target=&#34;_blank&#34;&gt;Trac #13109&lt;/a&gt; 多倍長整数を縮小型に変換する際、大きすぎる値 (もしくは小さすぎる値) を小さな型に変換すると、変換先の型の最大値 (もしくは最小値) となる。これは意図した動作ではあったが、&lt;code&gt;uint128_t&lt;/code&gt;については未定義動作としてそうなっていた。今回の変更では、このライブラリの全ての整数型でこの動作となる。下位Nビットの値が本当に必要であれば、&lt;code&gt;static_cast&amp;lt;unsigned&amp;gt;(~static_cast&amp;lt;unsigned&amp;gt;(0) &amp;amp; my_value)&lt;/code&gt; このようにマスクすることが必要となる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13148&#34; target=&#34;_blank&#34;&gt;Trac #13148&lt;/a&gt; 10進数を有理数型に変換する際のバグを修正 (値ゼロは特別にハンドリングする必要があった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13301&#34; target=&#34;_blank&#34;&gt;Trac #13301&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;から組み込みのより大きい整数型に変換する際のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;に対する&lt;code&gt;exp()&lt;/code&gt;関数の、ヒューリスティックな使用でのパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13264&#34; target=&#34;_blank&#34;&gt;Trac #13264&lt;/a&gt; 指数型が&lt;code&gt;int&lt;/code&gt;より大きい場合の、&lt;code&gt;floor&lt;/code&gt;/&lt;code&gt;ceil&lt;/code&gt;と&lt;code&gt;cpp_bin_float&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; 変換先の型が&lt;code&gt;*this&lt;/code&gt;の型から直接的に構築できる場合に、明示的な型変換演算子を無効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13124&#34; target=&#34;_blank&#34;&gt;Trac #13124&lt;/a&gt; MPIR-3.0の新たな変更に対応した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; 問題 (訳注: Optional&amp;lt;X&amp;gt; が、T という名前が付いた enum を持っていると VS2015 でコンパイルできない) を修正&lt;/li&gt;
&lt;li&gt;コンパイル時に &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt; が出る問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34; id=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8187&#34; target=&#34;_blank&#34;&gt;Trac #8187&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt;
  ドキュメントとコード例の修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12733&#34; target=&#34;_blank&#34;&gt;Trac #12733&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt;
  C++11で配列型を使用した式がコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt;
  Protoのビルトインを使用し最近のMSVCにおけるラムダ式のコンパイルエラーを修正&lt;ul&gt;
&lt;li&gt;訳者註: C++11のラムダ式ではなく&lt;code&gt;phoenix::lambda&lt;/code&gt;のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; C++17で非推奨となった&lt;code&gt;std::iteratror&lt;/code&gt;の使用をやめた。Daniela Engertに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリ名 (.aや.lib) に、Pythonバージョン名がサフィックスとして付くようになった。例として、Python 2.7用にコンパイルすると、&lt;code&gt;boost_python27&lt;/code&gt;と&lt;code&gt;boost_numpy27&lt;/code&gt;という名前のライブラリファイルが生成される。関連するBoost.Buildの修正と組み合わせることで、複数のPythonバージョンを一度のビルドプロセスでビルドできるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spirit X3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/spirit/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;with_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; &lt;code&gt;x3::variant&lt;/code&gt;と&lt;code&gt;forward_ast&lt;/code&gt;に&lt;code&gt;noexcept&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/248&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;error_handler::position()&lt;/code&gt;がCR+LFの間違ってカウントしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; &lt;code&gt;parse_into_container&lt;/code&gt;内での&lt;code&gt;unused_type&lt;/code&gt;属性の使用を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/289&#34; target=&#34;_blank&#34;&gt;GitHub #289&lt;/a&gt; 連想コンテナに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/308&#34; target=&#34;_blank&#34;&gt;GitHub #308&lt;/a&gt; VS2015 Update 3向けのワークアラウンドを追加してサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/313&#34; target=&#34;_blank&#34;&gt;GitHub #313&lt;/a&gt; インクルードガード名がQiと衝突していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/316&#34; target=&#34;_blank&#34;&gt;GitHub #316&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12928&#34; target=&#34;_blank&#34;&gt;Trac #12928&lt;/a&gt; rangeに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/330&#34; target=&#34;_blank&#34;&gt;GitHub #330&lt;/a&gt; &lt;code&gt;fusion::map&lt;/code&gt;のサポートを再度有効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/337&#34; target=&#34;_blank&#34;&gt;GitHub #337&lt;/a&gt; &lt;code&gt;string(&#34;...&#34;)&lt;/code&gt;と&lt;code&gt;attr(&#34;...&#34;)&lt;/code&gt;からの単一要素シーケンスへの&lt;code&gt;move_to&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/340&#34; target=&#34;_blank&#34;&gt;GitHub #340&lt;/a&gt; シーケンスのアンラップの代わりに、単一要素ビューの間接参照を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/351&#34; target=&#34;_blank&#34;&gt;GitHub #351&lt;/a&gt; &lt;code&gt;parse_nan()&lt;/code&gt;での範囲外イテレータの間接参照を防止&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/355&#34; target=&#34;_blank&#34;&gt;GitHub #355&lt;/a&gt; コンテナが空か判定するために、直接&lt;code&gt;empty()&lt;/code&gt;メンバ関数を使用するのではなく、トレイトを介するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit V2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/256&#34; target=&#34;_blank&#34;&gt;GitHub #256&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11493&#34; target=&#34;_blank&#34;&gt;Trac #11493&lt;/a&gt; &lt;code&gt;qi::keyword&lt;/code&gt;ディレクティブのテストがC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/259&#34; target=&#34;_blank&#34;&gt;GitHub #259&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/284&#34; target=&#34;_blank&#34;&gt;GitHub #284&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5270&#34; target=&#34;_blank&#34;&gt;Trac #5270&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のスコープバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/310&#34; target=&#34;_blank&#34;&gt;GitHub #310&lt;/a&gt; シーケンシャルなOR演算子の未定義動作を修正。パーサーの実行順序がコンパイラに依存していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;が持つ&lt;code&gt;types&lt;/code&gt;型に実装が依存していたが、その型が定義されなくなったために発生していたコンパイルエラーを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/314&#34; target=&#34;_blank&#34;&gt;GitHub #314&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13311&#34; target=&#34;_blank&#34;&gt;Trac #13311&lt;/a&gt; &lt;code&gt;BOOST_SPIRIT_NO_PREDEFINED_TERMINALS&lt;/code&gt;を定義した際に発生していたコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/361&#34; target=&#34;_blank&#34;&gt;GitHub #361&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8268&#34; target=&#34;_blank&#34;&gt;Trac #8268&lt;/a&gt; &lt;code&gt;hold_any&lt;/code&gt;にコピー代入演算子が抜けていたので追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Qi&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/201&#34; target=&#34;_blank&#34;&gt;GitHub #201&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; 実数パーサー内での符号付き整数のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/304&#34; target=&#34;_blank&#34;&gt;GitHub #304&lt;/a&gt; &lt;code&gt;get_current_line&lt;/code&gt;と&lt;code&gt;get_line_start&lt;/code&gt;を修正し、&lt;code&gt;get_line_end&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/319&#34; target=&#34;_blank&#34;&gt;GitHub #319&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12473&#34; target=&#34;_blank&#34;&gt;Trac #12473&lt;/a&gt; 順列パーサー (permutation parser, &lt;code&gt;A ^ B&lt;/code&gt;) を常に&lt;code&gt;optional&lt;/code&gt;で初期化するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/358&#34; target=&#34;_blank&#34;&gt;GitHub #358&lt;/a&gt; ユーザー定義の実数ポリシーによって&lt;code&gt;parse_frac_n&lt;/code&gt;が負数を返さないことを保証するため、&lt;code&gt;assert&lt;/code&gt;を追加。静的解析による誤検出も防いだ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Karma&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/261&#34; target=&#34;_blank&#34;&gt;Github #261&lt;/a&gt; &lt;code&gt;no_buffering_policy&lt;/code&gt;にコピーコンストラクタがなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Lex&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; &lt;code&gt;-fsanitize=undefined&lt;/code&gt;で検出された、&lt;code&gt;enum&lt;/code&gt;の範囲外の値が代入されたことにより警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/324&#34; target=&#34;_blank&#34;&gt;GitHub #324&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11540&#34; target=&#34;_blank&#34;&gt;Trac #11540&lt;/a&gt; 改行コード文字にエスケープが抜けていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Classic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; &lt;code&gt;std::complex&lt;/code&gt;を使用しているところで、&lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;のインクルードが抜けていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/274&#34; target=&#34;_blank&#34;&gt;GitHub #274&lt;/a&gt; &lt;code&gt;remove_reference&lt;/code&gt;を名前空間修飾なしで使っていたところを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/275&#34; target=&#34;_blank&#34;&gt;GitHub #275&lt;/a&gt; &lt;code&gt;match&amp;lt;T &amp;amp;&amp;gt;&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/323&#34; target=&#34;_blank&#34;&gt;GitHub #323&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12639&#34; target=&#34;_blank&#34;&gt;Trac #12639&lt;/a&gt; &lt;code&gt;BOOST_DISABLE_THREADS&lt;/code&gt;を定義した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/336&#34; target=&#34;_blank&#34;&gt;GitHub #336&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7371&#34; target=&#34;_blank&#34;&gt;Trac #7371&lt;/a&gt; scannerのインクリメント対象が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; Windows OS における Async safe な ファイルダンプ機能は、いくつかのプラットフォームでハングするため、このバージョンで無効とされた。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;依存関係を減らすため、ContainerHash ライブラリを使うようになった&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub #40&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.7 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;後方互換性を壊す変更&lt;ul&gt;
&lt;li&gt;同一のテストスイートに対して、同じ名前でテストケースを追加するとエラーを報告するようになった。詳細は Changes log を参照すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;色付きの出力がデフォルトで有効になり、Windows でも利用可能になった&lt;/li&gt;
&lt;li&gt;コマンドラインヘルプが改良され、わかりやすくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt; マクロが、 &lt;code&gt;std::tuple&lt;/code&gt; に含まれるシーケンス型も受け入れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12092&#34; target=&#34;_blank&#34;&gt;#12092&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12596&#34; target=&#34;_blank&#34;&gt;#12596&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12597&#34; target=&#34;_blank&#34;&gt;#12597&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12969&#34; target=&#34;_blank&#34;&gt;#12969&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13058&#34; target=&#34;_blank&#34;&gt;#13058&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13149&#34; target=&#34;_blank&#34;&gt;#13149&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13170&#34; target=&#34;_blank&#34;&gt;#13170&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13181&#34; target=&#34;_blank&#34;&gt;#13181&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13371&#34; target=&#34;_blank&#34;&gt;#13371&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13387&#34; target=&#34;_blank&#34;&gt;#13387&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13398&#34; target=&#34;_blank&#34;&gt;#13398&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13407&#34; target=&#34;_blank&#34;&gt;#13407&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13435&#34; target=&#34;_blank&#34;&gt;#13435&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13443&#34; target=&#34;_blank&#34;&gt;#13443&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull request: &lt;a href=&#34;https://github.com/boostorg/test/pull/112&#34; target=&#34;_blank&#34;&gt;#112&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/118&#34; target=&#34;_blank&#34;&gt;#118&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/121&#34; target=&#34;_blank&#34;&gt;#121&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/122&#34; target=&#34;_blank&#34;&gt;#122&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/125&#34; target=&#34;_blank&#34;&gt;#125&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/127&#34; target=&#34;_blank&#34;&gt;#127&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34; id=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;依存関係を減らすために、ContainerHashライブラリを使用するようにした&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/type_index/issues/17&#34; target=&#34;_blank&#34;&gt;GitHub #17&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34; id=&#34;type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなトレイト&lt;code&gt;detected&lt;/code&gt;, &lt;code&gt;detected_or&lt;/code&gt;, &lt;code&gt;is_detected&lt;/code&gt;, &lt;code&gt;is_detected_convertible&lt;/code&gt;, &lt;code&gt;is_detected_exact&lt;/code&gt;, &lt;code&gt;is_complete&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;2項演算子の検出コードを大きく改善した&lt;/li&gt;
&lt;li&gt;完全型を引数の要件とするトレイトのために、完全性を検証するアサーションを追加。これによって、不完全型から誤った結果が出力されることを防げるようになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12212&#34; target=&#34;_blank&#34;&gt;Trac #12212&lt;/a&gt; MPL互換性の小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12003&#34; target=&#34;_blank&#34;&gt;Trac #12003&lt;/a&gt; &lt;code&gt;is_constructible&lt;/code&gt;が (可変引数テンプレートで) 完全に実装されたことを表すマクロ&lt;code&gt;BOOST_TT_IS_CONSTRUCTIBLE_CONFORMING&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17の&lt;code&gt;noexcept&lt;/code&gt;仕様で正しく動作するよう、&lt;code&gt;is_function&lt;/code&gt;と&lt;code&gt;is_member_function_pointer&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_default_constructible&lt;/code&gt;と&lt;code&gt;std::pair&lt;/code&gt;向けのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;C++11より前の言語バージョン向けに、&lt;code&gt;is_nothrow_swappable&lt;/code&gt;の実装を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;boost::next&lt;/code&gt;と&lt;code&gt;boost::prior&lt;/code&gt;をIteratorモジュールに移動したため、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;に含まれないようになった。代わりに&lt;code&gt;&amp;lt;boost/next_prior.hpp&amp;gt;&lt;/code&gt;をインクルードすること。ほかの機能を使用する場合でも、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;ヘッダをインクルードすることは推奨しない。特定機能のヘッダをインクルードをする方がよいだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34; id=&#34;units&#34;&gt;Units&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10270&#34; target=&#34;_blank&#34;&gt;Trac #10270&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/units/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; scaled units (大きさの情報を持つ単位型) に対する&lt;code&gt;sqrt&lt;/code&gt;がコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/units/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;サポートを追加&lt;/li&gt;
&lt;li&gt;小さなドキュメント修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/uuid/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; &lt;code&gt;random_generator&lt;/code&gt;がコピー可能でなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; プリプロセッサによる関数引数の生成やメタ関数生成の代わりに、可変引数テンプレートを使用するようにした。初期の修正を提供してくれたNikita Kniazev氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub 40&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13288&#34; target=&#34;_blank&#34;&gt;Trac #13288&lt;/a&gt; &lt;code&gt;apply_visitor&lt;/code&gt;からビジターへ引数を完全転送するよう修正。Paweł Dac氏に感謝&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/variant/pull/41&#34; target=&#34;_blank&#34;&gt;GitHub #41&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.2.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.9.2, 5.4.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.2.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : Multi-indexのIssueの書き方を、ほかに合わせた</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>537c5288114930bcb122ebe4d7df23627ce0b749:document/version/1_67_0.md</id>
      <updated>2018-04-11T14:19:18+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/contract&#34; target=&#34;_blank&#34;&gt;Contract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++用の契約プログラミングライブラリ。契約プログラミングの全ての機能をサポートしている： サブ契約、クラスの不変条件、事後条件 (古い値と戻り値)、事前条件、表明失敗時の挙動をカスタマイズ (例として、例外を投げるかプログラムを異常終了させるか)、コンパイルに含めるかどうかと表明のチェックをオプショナルに、などなど。作者Lorenzo Caminiti氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/hof&#34; target=&#34;_blank&#34;&gt;HOF&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;高階関数 (Higher-order functions) のライブラリ。作者Paul Fultz II氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34;&gt;Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::get_option&lt;/code&gt;にconst修飾を付け忘れていたので追加&lt;/li&gt;
&lt;li&gt;GCCのいくつかのバージョンで発生するパースエラーを回避&lt;/li&gt;
&lt;li&gt;チュートリアルのサンプルコードが壊れていたので修正&lt;/li&gt;
&lt;li&gt;実験的な機能を追加。experimentalな機能は、予告なく変更される可能性があるので注意&lt;ul&gt;
&lt;li&gt;&lt;code&gt;experimental::detached&lt;/code&gt; : 非同期操作の完了をハンドリングしない指定。完了ハンドラの代わりに指定する&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_socket.async_send(my_buffer, boost::asio::experimental::detached);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::redirect_error&lt;/code&gt; : &lt;code&gt;error_code&lt;/code&gt;をキャプチャして完了ハンドラに紐付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::co_spawn&lt;/code&gt; : コルーチン仕様を統合する機能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、&lt;code&gt;websocket::stream&lt;/code&gt; が assertエラーか未定義な振る舞いを起こす重大な欠陥を修正している。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;完全な変更のリストについては、&lt;a href=&#34;http://www.boost.org/doc/libs/develop/libs/beast/doc/html/beast/release_notes.html&#34; target=&#34;_blank&#34;&gt;公式ページ&lt;/a&gt; を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost内の依存関係を簡潔にするためにfunctionalモジュールから分離された&lt;/li&gt;
&lt;li&gt;新しいモジュール名と対応させるためにヘッダーを別のディレクトリへ移した。以前のパスでも依然として動作する&lt;/li&gt;
&lt;li&gt;次の標準ライブラリへ対応した&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_condition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::variant&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::monostate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;より詳細には&lt;a href=&#34;https://www.boost.org/doc/html/hash/changes.html#hash.changes.boost_1_67_0&#34; target=&#34;_blank&#34;&gt;change log&lt;/a&gt;を参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;/&lt;a href=&#34;https://github.com/boostorg/context/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;
  OSX 32bit下においてEAX/EDXを使って&lt;code&gt;transfer_t&lt;/code&gt;を正しく返すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; &lt;code&gt;__sanitizer_finish_switch_fiber&lt;/code&gt;を呼び出すタイミングが正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt; WindowsでのClangにおいてビルド出来ない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;execution_context&lt;/code&gt;(v1)がMSVCでエラーとなる問題を修正&lt;/li&gt;
&lt;li&gt;既知のバグ : all.hppのインクルード + &lt;code&gt;&amp;lt;context-impl&amp;gt;ucontext/winfib&lt;/code&gt; で「&lt;code&gt;forced_unwind&lt;/code&gt;: is not a member of &lt;code&gt;boost::context::detail&lt;/code&gt;」というエラーになる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; プル型コルーチンの起動直後に投げられた例外が再送されなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; &lt;code&gt;GetLastError()&lt;/code&gt;がエラー値を返すような状況下での問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; : &lt;code&gt;condition_variable::wait_for&lt;/code&gt; を使っている場合に assert エラー &lt;code&gt;&#34;! ctx-&amp;gt;ready_is_linked()&#34;&lt;/code&gt; が起きる点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; : ビルド時に &lt;code&gt;&#39;stdexception&#39; file not found&lt;/code&gt; エラーが起きる不具合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/141&#34; target=&#34;_blank&#34;&gt;GitHub #141&lt;/a&gt; : boost::fibers::async が例外を投げる問題に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/146&#34; target=&#34;_blank&#34;&gt;GitHub #146&lt;/a&gt; : remote-ready-queue spinlock に対する不要なロックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/153&#34; target=&#34;_blank&#34;&gt;GitHub #153&lt;/a&gt; : &lt;code&gt;context::set_ready()&lt;/code&gt; を &lt;code&gt;context::schedule()&lt;/code&gt; に置き換えるようにドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; : &lt;code&gt;[buffered|unbuffered]_channels&lt;/code&gt; の iterator に関するドキュメントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; : &lt;code&gt;this_fiber&lt;/code&gt; が boost::fibers 名前空間のメンバとしてドキュメントに記されている (訳注: 正しくは &lt;code&gt;boost::&lt;/code&gt; 名前空間の直下) 点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; : &lt;code&gt;examples/barrier.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; : &lt;code&gt;work_stealing&lt;/code&gt; クラスを動作させるために、&lt;code&gt;BOOST_FIBERS_DECL&lt;/code&gt; マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/162&#34; target=&#34;_blank&#34;&gt;GitHub #162&lt;/a&gt; : タイムアウト待ちの場合に、use-counter (訳注: 正確には &lt;code&gt;use_count_&lt;/code&gt; 内部変数) をインクリメントするルーチンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; : &lt;code&gt;scheduler::schedule()&lt;/code&gt; コンストラクタにおける &lt;code&gt;ctx-&amp;gt;wait_is_linked()&lt;/code&gt; アサーションを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/167&#34; target=&#34;_blank&#34;&gt;GitHub #167&lt;/a&gt; : future が作成された場合のみ、&lt;code&gt;shared_state::owner_destroyed()&lt;/code&gt; を呼び出すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; : ドキュメントが最新でなかったので追随&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;main()&lt;/code&gt;関数の前でパス操作したときにクラッシュする問題に対して、静的変数の初期化を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/164&#34; target=&#34;_blank&#34;&gt;GitHub #164&lt;/a&gt; MSVC 2017でコンパイルエラーとなるため&lt;code&gt;fusion::map&lt;/code&gt;でのSFINAEをテンプレートパラメータへと移した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; &lt;code&gt;fusion::vector&lt;/code&gt;がCWG 945に対応していないコンパイラでエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; エラーメッセージをわかりやすくするためシーケンスコンバータに要素数の事前チェクを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://GitHub.com/boostorg/fusion/pull/171&#34; target=&#34;_blank&#34;&gt;GitHub #171&lt;/a&gt; &lt;code&gt;fusion::tag_of&lt;/code&gt;と&lt;code&gt;fusion::is_native_fusion_sequence&lt;/code&gt;に不完全型を渡せるようにした。
  これは挙動の変更ではなく、Boost.TypeTraitsの変更への追従となっている&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新たな地図投影 (map projection) とSRS変換 (SRS transformation) を追加 (部分的にインタフェース変更が発生する可能性があるのでアンドキュメント)&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;densify()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;から直接&lt;code&gt;allocator&lt;/code&gt;を使用するのではなく、&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;を介するようにした (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;C++03でムーブセマンティクスをエミュレーションするために、&lt;code&gt;rtree&lt;/code&gt;のデフォルトアロケータを&lt;code&gt;boost::container::new_allocator&lt;/code&gt; (と&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;) に変更した&lt;/li&gt;
&lt;li&gt;Area strategiesのインタフェースを変更した。これは破壊的変更になる可能性がある&lt;/li&gt;
&lt;li&gt;半径 (Radius) と球体 (Sphere) をspherical strategiesに渡せるようにした&lt;/li&gt;
&lt;li&gt;sphericalとgeographicの&lt;code&gt;distance()&lt;/code&gt;戦略にPoint-BoxとBox-Boxの組み合わせを追加&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyの出力が、2点か (closed polygonの) 3点のringを破棄するが、それらを生成しないようにした&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、空のinterior ringsと空のpolygonsを出力から外すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13381&#34; target=&#34;_blank&#34;&gt;Trac #13381&lt;/a&gt; Visual C++ 2015での&lt;code&gt;matrix_transformer&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13436&#34; target=&#34;_blank&#34;&gt;Trac #13436&lt;/a&gt; &lt;code&gt;boost::geometry::model::polygon&lt;/code&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length()&lt;/code&gt;アルゴリズムに、不足していた戦略解決を追加した。これはVariantのサポートに影響する&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、closing pointをsimplifyするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;振る舞いの変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、通常では入力のringを回転させてから、凸包 (convex hull) 上の非collinear pointを選択するようsimplifyする。これは出力を改善する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースに加えて、&lt;code&gt;unique_ptr&lt;/code&gt;のインタフェースサポートを追加。C++17をサポートするために、非推奨の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースを削除オプションとして&lt;code&gt;BOOST_LOCALE_HIDE_AUTO_PTR&lt;/code&gt;を定義できる&lt;/li&gt;
&lt;li&gt;ICU &amp;gt; 60.1でのテスト問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6851&#34; target=&#34;_blank&#34;&gt;Trac #6851&lt;/a&gt; Solarisでのビルドを修正&lt;/li&gt;
&lt;li&gt;最適化付きビルドでのFreeBSD/clangの問題を修正&lt;/li&gt;
&lt;li&gt;MSVCのテストで失敗していた、コードページ932 (CP932) のcodecvt問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12572&#34; target=&#34;_blank&#34;&gt;Trac #12572&lt;/a&gt; 国名の正規化をするところでのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12453&#34; target=&#34;_blank&#34;&gt;Trac #12453&lt;/a&gt; &lt;code&gt;libs/locale/src/shared/message.cpp&lt;/code&gt;のコードにムダが多かった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icu/date_time&lt;/code&gt;で失敗するケースで&lt;code&gt;throw&lt;/code&gt;が抜けていたのを修正&lt;/li&gt;
&lt;li&gt;Boost.Thread v4でのビルドを再度修正&lt;/li&gt;
&lt;li&gt;ICUバックエンドの年フォーマットの代わりにYear of week (年の何週目か) を使用するよう修正&lt;/li&gt;
&lt;li&gt;ICU 56.1以上のフォーマットテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ネイティブのモンテカルロ・インテグレーションをサポート&lt;/li&gt;
&lt;li&gt;チェビシェフ補間 (Chebyshev interpolation) のルーチンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Trac #13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13109&#34; target=&#34;_blank&#34;&gt;Trac #13109&lt;/a&gt; 多倍長整数を縮小型に変換する際、大きすぎる値 (もしくは小さすぎる値) を小さな型に変換すると、変換先の型の最大値 (もしくは最小値) となる。これは意図した動作ではあったが、&lt;code&gt;uint128_t&lt;/code&gt;については未定義動作としてそうなっていた。今回の変更では、このライブラリの全ての整数型でこの動作となる。下位Nビットの値が本当に必要であれば、&lt;code&gt;static_cast&amp;lt;unsigned&amp;gt;(~static_cast&amp;lt;unsigned&amp;gt;(0) &amp;amp; my_value)&lt;/code&gt; このようにマスクすることが必要となる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13148&#34; target=&#34;_blank&#34;&gt;Trac #13148&lt;/a&gt; 10進数を有理数型に変換する際のバグを修正 (値ゼロは特別にハンドリングする必要があった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13301&#34; target=&#34;_blank&#34;&gt;Trac #13301&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;から組み込みのより大きい整数型に変換する際のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;に対する&lt;code&gt;exp()&lt;/code&gt;関数の、ヒューリスティックな使用でのパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13264&#34; target=&#34;_blank&#34;&gt;Trac #13264&lt;/a&gt; 指数型が&lt;code&gt;int&lt;/code&gt;より大きい場合の、&lt;code&gt;floor&lt;/code&gt;/&lt;code&gt;ceil&lt;/code&gt;と&lt;code&gt;cpp_bin_float&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; 変換先の型が&lt;code&gt;*this&lt;/code&gt;の型から直接的に構築できる場合に、明示的な型変換演算子を無効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13124&#34; target=&#34;_blank&#34;&gt;Trac #13124&lt;/a&gt; MPIR-3.0の新たな変更に対応した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; 問題 (訳注: Optional&amp;lt;X&amp;gt; が、T という名前が付いた enum を持っていると VS2015 でコンパイルできない) を修正&lt;/li&gt;
&lt;li&gt;コンパイル時に &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt; が出る問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34; id=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8187&#34; target=&#34;_blank&#34;&gt;Trac #8187&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt;
  ドキュメントとコード例の修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12733&#34; target=&#34;_blank&#34;&gt;Trac #12733&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt;
  C++11で配列型を使用した式がコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt;
  Protoのビルトインを使用し最近のMSVCにおけるラムダ式のコンパイルエラーを修正&lt;ul&gt;
&lt;li&gt;訳者註: C++11のラムダ式ではなく&lt;code&gt;phoenix::lambda&lt;/code&gt;のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; C++17で非推奨となった&lt;code&gt;std::iteratror&lt;/code&gt;の使用をやめた。Daniela Engertに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリ名 (.aや.lib) に、Pythonバージョン名がサフィックスとして付くようになった。例として、Python 2.7用にコンパイルすると、&lt;code&gt;boost_python27&lt;/code&gt;と&lt;code&gt;boost_numpy27&lt;/code&gt;という名前のライブラリファイルが生成される。関連するBoost.Buildの修正と組み合わせることで、複数のPythonバージョンを一度のビルドプロセスでビルドできるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spirit X3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/spirit/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;with_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; &lt;code&gt;x3::variant&lt;/code&gt;と&lt;code&gt;forward_ast&lt;/code&gt;に&lt;code&gt;noexcept&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/248&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;error_handler::position()&lt;/code&gt;がCR+LFの間違ってカウントしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; &lt;code&gt;parse_into_container&lt;/code&gt;内での&lt;code&gt;unused_type&lt;/code&gt;属性の使用を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/289&#34; target=&#34;_blank&#34;&gt;GitHub #289&lt;/a&gt; 連想コンテナに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/308&#34; target=&#34;_blank&#34;&gt;GitHub #308&lt;/a&gt; VS2015 Update 3向けのワークアラウンドを追加してサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/313&#34; target=&#34;_blank&#34;&gt;GitHub #313&lt;/a&gt; インクルードガード名がQiと衝突していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/316&#34; target=&#34;_blank&#34;&gt;GitHub #316&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12928&#34; target=&#34;_blank&#34;&gt;Trac #12928&lt;/a&gt; rangeに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/330&#34; target=&#34;_blank&#34;&gt;GitHub #330&lt;/a&gt; &lt;code&gt;fusion::map&lt;/code&gt;のサポートを再度有効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/337&#34; target=&#34;_blank&#34;&gt;GitHub #337&lt;/a&gt; &lt;code&gt;string(&#34;...&#34;)&lt;/code&gt;と&lt;code&gt;attr(&#34;...&#34;)&lt;/code&gt;からの単一要素シーケンスへの&lt;code&gt;move_to&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/340&#34; target=&#34;_blank&#34;&gt;GitHub #340&lt;/a&gt; シーケンスのアンラップの代わりに、単一要素ビューの間接参照を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/351&#34; target=&#34;_blank&#34;&gt;GitHub #351&lt;/a&gt; &lt;code&gt;parse_nan()&lt;/code&gt;での範囲外イテレータの間接参照を防止&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/355&#34; target=&#34;_blank&#34;&gt;GitHub #355&lt;/a&gt; コンテナが空か判定するために、直接&lt;code&gt;empty()&lt;/code&gt;メンバ関数を使用するのではなく、トレイトを介するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit V2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/256&#34; target=&#34;_blank&#34;&gt;GitHub #256&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11493&#34; target=&#34;_blank&#34;&gt;Trac #11493&lt;/a&gt; &lt;code&gt;qi::keyword&lt;/code&gt;ディレクティブのテストがC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/259&#34; target=&#34;_blank&#34;&gt;GitHub #259&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/284&#34; target=&#34;_blank&#34;&gt;GitHub #284&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5270&#34; target=&#34;_blank&#34;&gt;Trac #5270&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のスコープバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/310&#34; target=&#34;_blank&#34;&gt;GitHub #310&lt;/a&gt; シーケンシャルなOR演算子の未定義動作を修正。パーサーの実行順序がコンパイラに依存していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;が持つ&lt;code&gt;types&lt;/code&gt;型に実装が依存していたが、その型が定義されなくなったために発生していたコンパイルエラーを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/314&#34; target=&#34;_blank&#34;&gt;GitHub #314&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13311&#34; target=&#34;_blank&#34;&gt;Trac #13311&lt;/a&gt; &lt;code&gt;BOOST_SPIRIT_NO_PREDEFINED_TERMINALS&lt;/code&gt;を定義した際に発生していたコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/361&#34; target=&#34;_blank&#34;&gt;GitHub #361&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8268&#34; target=&#34;_blank&#34;&gt;Trac #8268&lt;/a&gt; &lt;code&gt;hold_any&lt;/code&gt;にコピー代入演算子が抜けていたので追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Qi&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/201&#34; target=&#34;_blank&#34;&gt;GitHub #201&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; 実数パーサー内での符号付き整数のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/304&#34; target=&#34;_blank&#34;&gt;GitHub #304&lt;/a&gt; &lt;code&gt;get_current_line&lt;/code&gt;と&lt;code&gt;get_line_start&lt;/code&gt;を修正し、&lt;code&gt;get_line_end&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/319&#34; target=&#34;_blank&#34;&gt;GitHub #319&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12473&#34; target=&#34;_blank&#34;&gt;Trac #12473&lt;/a&gt; 順列パーサー (permutation parser, &lt;code&gt;A ^ B&lt;/code&gt;) を常に&lt;code&gt;optional&lt;/code&gt;で初期化するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/358&#34; target=&#34;_blank&#34;&gt;GitHub #358&lt;/a&gt; ユーザー定義の実数ポリシーによって&lt;code&gt;parse_frac_n&lt;/code&gt;が負数を返さないことを保証するため、&lt;code&gt;assert&lt;/code&gt;を追加。静的解析による誤検出も防いだ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Karma&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/261&#34; target=&#34;_blank&#34;&gt;Github #261&lt;/a&gt; &lt;code&gt;no_buffering_policy&lt;/code&gt;にコピーコンストラクタがなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Lex&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; &lt;code&gt;-fsanitize=undefined&lt;/code&gt;で検出された、&lt;code&gt;enum&lt;/code&gt;の範囲外の値が代入されたことにより警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/324&#34; target=&#34;_blank&#34;&gt;GitHub #324&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11540&#34; target=&#34;_blank&#34;&gt;Trac #11540&lt;/a&gt; 改行コード文字にエスケープが抜けていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Classic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; &lt;code&gt;std::complex&lt;/code&gt;を使用しているところで、&lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;のインクルードが抜けていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/274&#34; target=&#34;_blank&#34;&gt;GitHub #274&lt;/a&gt; &lt;code&gt;remove_reference&lt;/code&gt;を名前空間修飾なしで使っていたところを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/275&#34; target=&#34;_blank&#34;&gt;GitHub #275&lt;/a&gt; &lt;code&gt;match&amp;lt;T &amp;amp;&amp;gt;&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/323&#34; target=&#34;_blank&#34;&gt;GitHub #323&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12639&#34; target=&#34;_blank&#34;&gt;Trac #12639&lt;/a&gt; &lt;code&gt;BOOST_DISABLE_THREADS&lt;/code&gt;を定義した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/336&#34; target=&#34;_blank&#34;&gt;GitHub #336&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7371&#34; target=&#34;_blank&#34;&gt;Trac #7371&lt;/a&gt; scannerのインクリメント対象が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; Windows OS における Async safe な ファイルダンプ機能は、いくつかのプラットフォームでハングするため、このバージョンで無効とされた。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;依存関係を減らすため、ContainerHash ライブラリを使うようになった&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub #40&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.7 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;後方互換性を壊す変更&lt;ul&gt;
&lt;li&gt;同一のテストスイートに対して、同じ名前でテストケースを追加するとエラーを報告するようになった。詳細は Changes log を参照すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;色付きの出力がデフォルトで有効になり、Windows でも利用可能になった&lt;/li&gt;
&lt;li&gt;コマンドラインヘルプが改良され、わかりやすくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt; マクロが、 &lt;code&gt;std::tuple&lt;/code&gt; に含まれるシーケンス型も受け入れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12092&#34; target=&#34;_blank&#34;&gt;#12092&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12596&#34; target=&#34;_blank&#34;&gt;#12596&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12597&#34; target=&#34;_blank&#34;&gt;#12597&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12969&#34; target=&#34;_blank&#34;&gt;#12969&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13058&#34; target=&#34;_blank&#34;&gt;#13058&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13149&#34; target=&#34;_blank&#34;&gt;#13149&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13170&#34; target=&#34;_blank&#34;&gt;#13170&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13181&#34; target=&#34;_blank&#34;&gt;#13181&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13371&#34; target=&#34;_blank&#34;&gt;#13371&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13387&#34; target=&#34;_blank&#34;&gt;#13387&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13398&#34; target=&#34;_blank&#34;&gt;#13398&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13407&#34; target=&#34;_blank&#34;&gt;#13407&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13435&#34; target=&#34;_blank&#34;&gt;#13435&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13443&#34; target=&#34;_blank&#34;&gt;#13443&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull request: &lt;a href=&#34;https://github.com/boostorg/test/pull/112&#34; target=&#34;_blank&#34;&gt;#112&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/118&#34; target=&#34;_blank&#34;&gt;#118&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/121&#34; target=&#34;_blank&#34;&gt;#121&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/122&#34; target=&#34;_blank&#34;&gt;#122&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/125&#34; target=&#34;_blank&#34;&gt;#125&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/127&#34; target=&#34;_blank&#34;&gt;#127&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34; id=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;依存関係を減らすために、ContainerHashライブラリを使用するようにした&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/type_index/issues/17&#34; target=&#34;_blank&#34;&gt;GitHub #17&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34; id=&#34;type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなトレイト&lt;code&gt;detected&lt;/code&gt;, &lt;code&gt;detected_or&lt;/code&gt;, &lt;code&gt;is_detected&lt;/code&gt;, &lt;code&gt;is_detected_convertible&lt;/code&gt;, &lt;code&gt;is_detected_exact&lt;/code&gt;, &lt;code&gt;is_complete&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;2項演算子の検出コードを大きく改善した&lt;/li&gt;
&lt;li&gt;完全型を引数の要件とするトレイトのために、完全性を検証するアサーションを追加。これによって、不完全型から誤った結果が出力されることを防げるようになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12212&#34; target=&#34;_blank&#34;&gt;Trac #12212&lt;/a&gt; MPL互換性の小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12003&#34; target=&#34;_blank&#34;&gt;Trac #12003&lt;/a&gt; &lt;code&gt;is_constructible&lt;/code&gt;が (可変引数テンプレートで) 完全に実装されたことを表すマクロ&lt;code&gt;BOOST_TT_IS_CONSTRUCTIBLE_CONFORMING&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17の&lt;code&gt;noexcept&lt;/code&gt;仕様で正しく動作するよう、&lt;code&gt;is_function&lt;/code&gt;と&lt;code&gt;is_member_function_pointer&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_default_constructible&lt;/code&gt;と&lt;code&gt;std::pair&lt;/code&gt;向けのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;C++11より前の言語バージョン向けに、&lt;code&gt;is_nothrow_swappable&lt;/code&gt;の実装を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;boost::next&lt;/code&gt;と&lt;code&gt;boost::prior&lt;/code&gt;をIteratorモジュールに移動したため、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;に含まれないようになった。代わりに&lt;code&gt;&amp;lt;boost/next_prior.hpp&amp;gt;&lt;/code&gt;をインクルードすること。ほかの機能を使用する場合でも、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;ヘッダをインクルードすることは推奨しない。特定機能のヘッダをインクルードをする方がよいだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34; id=&#34;units&#34;&gt;Units&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10270&#34; target=&#34;_blank&#34;&gt;Trac #10270&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/units/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; scaled units (大きさの情報を持つ単位型) に対する&lt;code&gt;sqrt&lt;/code&gt;がコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/units/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;サポートを追加&lt;/li&gt;
&lt;li&gt;小さなドキュメント修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/uuid/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; &lt;code&gt;random_generator&lt;/code&gt;がコピー可能でなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; プリプロセッサによる関数引数の生成やメタ関数生成の代わりに、可変引数テンプレートを使用するようにした。初期の修正を提供してくれたNikita Kniazev氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub 40&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13288&#34; target=&#34;_blank&#34;&gt;Trac #13288&lt;/a&gt; &lt;code&gt;apply_visitor&lt;/code&gt;からビジターへ引数を完全転送するよう修正。Paweł Dac氏に感謝&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/variant/pull/41&#34; target=&#34;_blank&#34;&gt;GitHub #41&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.2.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.9.2, 5.4.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.2.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : テストコンパイラを記載 (close #245)</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>dd2dfa266285f3bdbc9693a689ed5294969786e1:document/version/1_67_0.md</id>
      <updated>2018-04-11T14:16:01+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/contract&#34; target=&#34;_blank&#34;&gt;Contract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++用の契約プログラミングライブラリ。契約プログラミングの全ての機能をサポートしている： サブ契約、クラスの不変条件、事後条件 (古い値と戻り値)、事前条件、表明失敗時の挙動をカスタマイズ (例として、例外を投げるかプログラムを異常終了させるか)、コンパイルに含めるかどうかと表明のチェックをオプショナルに、などなど。作者Lorenzo Caminiti氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/hof&#34; target=&#34;_blank&#34;&gt;HOF&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;高階関数 (Higher-order functions) のライブラリ。作者Paul Fultz II氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34;&gt;Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::get_option&lt;/code&gt;にconst修飾を付け忘れていたので追加&lt;/li&gt;
&lt;li&gt;GCCのいくつかのバージョンで発生するパースエラーを回避&lt;/li&gt;
&lt;li&gt;チュートリアルのサンプルコードが壊れていたので修正&lt;/li&gt;
&lt;li&gt;実験的な機能を追加。experimentalな機能は、予告なく変更される可能性があるので注意&lt;ul&gt;
&lt;li&gt;&lt;code&gt;experimental::detached&lt;/code&gt; : 非同期操作の完了をハンドリングしない指定。完了ハンドラの代わりに指定する&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_socket.async_send(my_buffer, boost::asio::experimental::detached);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::redirect_error&lt;/code&gt; : &lt;code&gt;error_code&lt;/code&gt;をキャプチャして完了ハンドラに紐付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::co_spawn&lt;/code&gt; : コルーチン仕様を統合する機能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、&lt;code&gt;websocket::stream&lt;/code&gt; が assertエラーか未定義な振る舞いを起こす重大な欠陥を修正している。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;完全な変更のリストについては、&lt;a href=&#34;http://www.boost.org/doc/libs/develop/libs/beast/doc/html/beast/release_notes.html&#34; target=&#34;_blank&#34;&gt;公式ページ&lt;/a&gt; を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost内の依存関係を簡潔にするためにfunctionalモジュールから分離された&lt;/li&gt;
&lt;li&gt;新しいモジュール名と対応させるためにヘッダーを別のディレクトリへ移した。以前のパスでも依然として動作する&lt;/li&gt;
&lt;li&gt;次の標準ライブラリへ対応した&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_condition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::variant&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::monostate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;より詳細には&lt;a href=&#34;https://www.boost.org/doc/html/hash/changes.html#hash.changes.boost_1_67_0&#34; target=&#34;_blank&#34;&gt;change log&lt;/a&gt;を参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;/&lt;a href=&#34;https://github.com/boostorg/context/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;
  OSX 32bit下においてEAX/EDXを使って&lt;code&gt;transfer_t&lt;/code&gt;を正しく返すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; &lt;code&gt;__sanitizer_finish_switch_fiber&lt;/code&gt;を呼び出すタイミングが正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt; WindowsでのClangにおいてビルド出来ない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;execution_context&lt;/code&gt;(v1)がMSVCでエラーとなる問題を修正&lt;/li&gt;
&lt;li&gt;既知のバグ : all.hppのインクルード + &lt;code&gt;&amp;lt;context-impl&amp;gt;ucontext/winfib&lt;/code&gt; で「&lt;code&gt;forced_unwind&lt;/code&gt;: is not a member of &lt;code&gt;boost::context::detail&lt;/code&gt;」というエラーになる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; プル型コルーチンの起動直後に投げられた例外が再送されなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; &lt;code&gt;GetLastError()&lt;/code&gt;がエラー値を返すような状況下での問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; : &lt;code&gt;condition_variable::wait_for&lt;/code&gt; を使っている場合に assert エラー &lt;code&gt;&#34;! ctx-&amp;gt;ready_is_linked()&#34;&lt;/code&gt; が起きる点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; : ビルド時に &lt;code&gt;&#39;stdexception&#39; file not found&lt;/code&gt; エラーが起きる不具合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/141&#34; target=&#34;_blank&#34;&gt;GitHub #141&lt;/a&gt; : boost::fibers::async が例外を投げる問題に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/146&#34; target=&#34;_blank&#34;&gt;GitHub #146&lt;/a&gt; : remote-ready-queue spinlock に対する不要なロックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/153&#34; target=&#34;_blank&#34;&gt;GitHub #153&lt;/a&gt; : &lt;code&gt;context::set_ready()&lt;/code&gt; を &lt;code&gt;context::schedule()&lt;/code&gt; に置き換えるようにドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; : &lt;code&gt;[buffered|unbuffered]_channels&lt;/code&gt; の iterator に関するドキュメントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; : &lt;code&gt;this_fiber&lt;/code&gt; が boost::fibers 名前空間のメンバとしてドキュメントに記されている (訳注: 正しくは &lt;code&gt;boost::&lt;/code&gt; 名前空間の直下) 点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; : &lt;code&gt;examples/barrier.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; : &lt;code&gt;work_stealing&lt;/code&gt; クラスを動作させるために、&lt;code&gt;BOOST_FIBERS_DECL&lt;/code&gt; マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/162&#34; target=&#34;_blank&#34;&gt;GitHub #162&lt;/a&gt; : タイムアウト待ちの場合に、use-counter (訳注: 正確には &lt;code&gt;use_count_&lt;/code&gt; 内部変数) をインクリメントするルーチンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; : &lt;code&gt;scheduler::schedule()&lt;/code&gt; コンストラクタにおける &lt;code&gt;ctx-&amp;gt;wait_is_linked()&lt;/code&gt; アサーションを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/167&#34; target=&#34;_blank&#34;&gt;GitHub #167&lt;/a&gt; : future が作成された場合のみ、&lt;code&gt;shared_state::owner_destroyed()&lt;/code&gt; を呼び出すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; : ドキュメントが最新でなかったので追随&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;main()&lt;/code&gt;関数の前でパス操作したときにクラッシュする問題に対して、静的変数の初期化を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/164&#34; target=&#34;_blank&#34;&gt;GitHub #164&lt;/a&gt; MSVC 2017でコンパイルエラーとなるため&lt;code&gt;fusion::map&lt;/code&gt;でのSFINAEをテンプレートパラメータへと移した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; &lt;code&gt;fusion::vector&lt;/code&gt;がCWG 945に対応していないコンパイラでエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; エラーメッセージをわかりやすくするためシーケンスコンバータに要素数の事前チェクを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://GitHub.com/boostorg/fusion/pull/171&#34; target=&#34;_blank&#34;&gt;GitHub #171&lt;/a&gt; &lt;code&gt;fusion::tag_of&lt;/code&gt;と&lt;code&gt;fusion::is_native_fusion_sequence&lt;/code&gt;に不完全型を渡せるようにした。
  これは挙動の変更ではなく、Boost.TypeTraitsの変更への追従となっている&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新たな地図投影 (map projection) とSRS変換 (SRS transformation) を追加 (部分的にインタフェース変更が発生する可能性があるのでアンドキュメント)&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;densify()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;から直接&lt;code&gt;allocator&lt;/code&gt;を使用するのではなく、&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;を介するようにした (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;C++03でムーブセマンティクスをエミュレーションするために、&lt;code&gt;rtree&lt;/code&gt;のデフォルトアロケータを&lt;code&gt;boost::container::new_allocator&lt;/code&gt; (と&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;) に変更した&lt;/li&gt;
&lt;li&gt;Area strategiesのインタフェースを変更した。これは破壊的変更になる可能性がある&lt;/li&gt;
&lt;li&gt;半径 (Radius) と球体 (Sphere) をspherical strategiesに渡せるようにした&lt;/li&gt;
&lt;li&gt;sphericalとgeographicの&lt;code&gt;distance()&lt;/code&gt;戦略にPoint-BoxとBox-Boxの組み合わせを追加&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyの出力が、2点か (closed polygonの) 3点のringを破棄するが、それらを生成しないようにした&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、空のinterior ringsと空のpolygonsを出力から外すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13381&#34; target=&#34;_blank&#34;&gt;Trac #13381&lt;/a&gt; Visual C++ 2015での&lt;code&gt;matrix_transformer&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13436&#34; target=&#34;_blank&#34;&gt;Trac #13436&lt;/a&gt; &lt;code&gt;boost::geometry::model::polygon&lt;/code&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length()&lt;/code&gt;アルゴリズムに、不足していた戦略解決を追加した。これはVariantのサポートに影響する&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、closing pointをsimplifyするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;振る舞いの変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、通常では入力のringを回転させてから、凸包 (convex hull) 上の非collinear pointを選択するようsimplifyする。これは出力を改善する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースに加えて、&lt;code&gt;unique_ptr&lt;/code&gt;のインタフェースサポートを追加。C++17をサポートするために、非推奨の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースを削除オプションとして&lt;code&gt;BOOST_LOCALE_HIDE_AUTO_PTR&lt;/code&gt;を定義できる&lt;/li&gt;
&lt;li&gt;ICU &amp;gt; 60.1でのテスト問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6851&#34; target=&#34;_blank&#34;&gt;Trac #6851&lt;/a&gt; Solarisでのビルドを修正&lt;/li&gt;
&lt;li&gt;最適化付きビルドでのFreeBSD/clangの問題を修正&lt;/li&gt;
&lt;li&gt;MSVCのテストで失敗していた、コードページ932 (CP932) のcodecvt問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12572&#34; target=&#34;_blank&#34;&gt;Trac #12572&lt;/a&gt; 国名の正規化をするところでのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12453&#34; target=&#34;_blank&#34;&gt;Trac #12453&lt;/a&gt; &lt;code&gt;libs/locale/src/shared/message.cpp&lt;/code&gt;のコードにムダが多かった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icu/date_time&lt;/code&gt;で失敗するケースで&lt;code&gt;throw&lt;/code&gt;が抜けていたのを修正&lt;/li&gt;
&lt;li&gt;Boost.Thread v4でのビルドを再度修正&lt;/li&gt;
&lt;li&gt;ICUバックエンドの年フォーマットの代わりにYear of week (年の何週目か) を使用するよう修正&lt;/li&gt;
&lt;li&gt;ICU 56.1以上のフォーマットテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ネイティブのモンテカルロ・インテグレーションをサポート&lt;/li&gt;
&lt;li&gt;チェビシェフ補間 (Chebyshev interpolation) のルーチンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Ticket 13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13109&#34; target=&#34;_blank&#34;&gt;Trac #13109&lt;/a&gt; 多倍長整数を縮小型に変換する際、大きすぎる値 (もしくは小さすぎる値) を小さな型に変換すると、変換先の型の最大値 (もしくは最小値) となる。これは意図した動作ではあったが、&lt;code&gt;uint128_t&lt;/code&gt;については未定義動作としてそうなっていた。今回の変更では、このライブラリの全ての整数型でこの動作となる。下位Nビットの値が本当に必要であれば、&lt;code&gt;static_cast&amp;lt;unsigned&amp;gt;(~static_cast&amp;lt;unsigned&amp;gt;(0) &amp;amp; my_value)&lt;/code&gt; このようにマスクすることが必要となる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13148&#34; target=&#34;_blank&#34;&gt;Trac #13148&lt;/a&gt; 10進数を有理数型に変換する際のバグを修正 (値ゼロは特別にハンドリングする必要があった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13301&#34; target=&#34;_blank&#34;&gt;Trac #13301&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;から組み込みのより大きい整数型に変換する際のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;に対する&lt;code&gt;exp()&lt;/code&gt;関数の、ヒューリスティックな使用でのパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13264&#34; target=&#34;_blank&#34;&gt;Trac #13264&lt;/a&gt; 指数型が&lt;code&gt;int&lt;/code&gt;より大きい場合の、&lt;code&gt;floor&lt;/code&gt;/&lt;code&gt;ceil&lt;/code&gt;と&lt;code&gt;cpp_bin_float&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; 変換先の型が&lt;code&gt;*this&lt;/code&gt;の型から直接的に構築できる場合に、明示的な型変換演算子を無効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13124&#34; target=&#34;_blank&#34;&gt;Trac #13124&lt;/a&gt; MPIR-3.0の新たな変更に対応した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; 問題 (訳注: Optional&amp;lt;X&amp;gt; が、T という名前が付いた enum を持っていると VS2015 でコンパイルできない) を修正&lt;/li&gt;
&lt;li&gt;コンパイル時に &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt; が出る問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34; id=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8187&#34; target=&#34;_blank&#34;&gt;Trac #8187&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt;
  ドキュメントとコード例の修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12733&#34; target=&#34;_blank&#34;&gt;Trac #12733&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt;
  C++11で配列型を使用した式がコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt;
  Protoのビルトインを使用し最近のMSVCにおけるラムダ式のコンパイルエラーを修正&lt;ul&gt;
&lt;li&gt;訳者註: C++11のラムダ式ではなく&lt;code&gt;phoenix::lambda&lt;/code&gt;のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; C++17で非推奨となった&lt;code&gt;std::iteratror&lt;/code&gt;の使用をやめた。Daniela Engertに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリ名 (.aや.lib) に、Pythonバージョン名がサフィックスとして付くようになった。例として、Python 2.7用にコンパイルすると、&lt;code&gt;boost_python27&lt;/code&gt;と&lt;code&gt;boost_numpy27&lt;/code&gt;という名前のライブラリファイルが生成される。関連するBoost.Buildの修正と組み合わせることで、複数のPythonバージョンを一度のビルドプロセスでビルドできるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spirit X3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/spirit/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;with_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; &lt;code&gt;x3::variant&lt;/code&gt;と&lt;code&gt;forward_ast&lt;/code&gt;に&lt;code&gt;noexcept&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/248&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;error_handler::position()&lt;/code&gt;がCR+LFの間違ってカウントしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; &lt;code&gt;parse_into_container&lt;/code&gt;内での&lt;code&gt;unused_type&lt;/code&gt;属性の使用を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/289&#34; target=&#34;_blank&#34;&gt;GitHub #289&lt;/a&gt; 連想コンテナに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/308&#34; target=&#34;_blank&#34;&gt;GitHub #308&lt;/a&gt; VS2015 Update 3向けのワークアラウンドを追加してサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/313&#34; target=&#34;_blank&#34;&gt;GitHub #313&lt;/a&gt; インクルードガード名がQiと衝突していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/316&#34; target=&#34;_blank&#34;&gt;GitHub #316&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12928&#34; target=&#34;_blank&#34;&gt;Trac #12928&lt;/a&gt; rangeに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/330&#34; target=&#34;_blank&#34;&gt;GitHub #330&lt;/a&gt; &lt;code&gt;fusion::map&lt;/code&gt;のサポートを再度有効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/337&#34; target=&#34;_blank&#34;&gt;GitHub #337&lt;/a&gt; &lt;code&gt;string(&#34;...&#34;)&lt;/code&gt;と&lt;code&gt;attr(&#34;...&#34;)&lt;/code&gt;からの単一要素シーケンスへの&lt;code&gt;move_to&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/340&#34; target=&#34;_blank&#34;&gt;GitHub #340&lt;/a&gt; シーケンスのアンラップの代わりに、単一要素ビューの間接参照を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/351&#34; target=&#34;_blank&#34;&gt;GitHub #351&lt;/a&gt; &lt;code&gt;parse_nan()&lt;/code&gt;での範囲外イテレータの間接参照を防止&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/355&#34; target=&#34;_blank&#34;&gt;GitHub #355&lt;/a&gt; コンテナが空か判定するために、直接&lt;code&gt;empty()&lt;/code&gt;メンバ関数を使用するのではなく、トレイトを介するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit V2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/256&#34; target=&#34;_blank&#34;&gt;GitHub #256&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11493&#34; target=&#34;_blank&#34;&gt;Trac #11493&lt;/a&gt; &lt;code&gt;qi::keyword&lt;/code&gt;ディレクティブのテストがC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/259&#34; target=&#34;_blank&#34;&gt;GitHub #259&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/284&#34; target=&#34;_blank&#34;&gt;GitHub #284&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5270&#34; target=&#34;_blank&#34;&gt;Trac #5270&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のスコープバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/310&#34; target=&#34;_blank&#34;&gt;GitHub #310&lt;/a&gt; シーケンシャルなOR演算子の未定義動作を修正。パーサーの実行順序がコンパイラに依存していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;が持つ&lt;code&gt;types&lt;/code&gt;型に実装が依存していたが、その型が定義されなくなったために発生していたコンパイルエラーを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/314&#34; target=&#34;_blank&#34;&gt;GitHub #314&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13311&#34; target=&#34;_blank&#34;&gt;Trac #13311&lt;/a&gt; &lt;code&gt;BOOST_SPIRIT_NO_PREDEFINED_TERMINALS&lt;/code&gt;を定義した際に発生していたコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/361&#34; target=&#34;_blank&#34;&gt;GitHub #361&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8268&#34; target=&#34;_blank&#34;&gt;Trac #8268&lt;/a&gt; &lt;code&gt;hold_any&lt;/code&gt;にコピー代入演算子が抜けていたので追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Qi&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/201&#34; target=&#34;_blank&#34;&gt;GitHub #201&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; 実数パーサー内での符号付き整数のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/304&#34; target=&#34;_blank&#34;&gt;GitHub #304&lt;/a&gt; &lt;code&gt;get_current_line&lt;/code&gt;と&lt;code&gt;get_line_start&lt;/code&gt;を修正し、&lt;code&gt;get_line_end&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/319&#34; target=&#34;_blank&#34;&gt;GitHub #319&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12473&#34; target=&#34;_blank&#34;&gt;Trac #12473&lt;/a&gt; 順列パーサー (permutation parser, &lt;code&gt;A ^ B&lt;/code&gt;) を常に&lt;code&gt;optional&lt;/code&gt;で初期化するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/358&#34; target=&#34;_blank&#34;&gt;GitHub #358&lt;/a&gt; ユーザー定義の実数ポリシーによって&lt;code&gt;parse_frac_n&lt;/code&gt;が負数を返さないことを保証するため、&lt;code&gt;assert&lt;/code&gt;を追加。静的解析による誤検出も防いだ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Karma&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/261&#34; target=&#34;_blank&#34;&gt;Github #261&lt;/a&gt; &lt;code&gt;no_buffering_policy&lt;/code&gt;にコピーコンストラクタがなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Lex&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; &lt;code&gt;-fsanitize=undefined&lt;/code&gt;で検出された、&lt;code&gt;enum&lt;/code&gt;の範囲外の値が代入されたことにより警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/324&#34; target=&#34;_blank&#34;&gt;GitHub #324&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11540&#34; target=&#34;_blank&#34;&gt;Trac #11540&lt;/a&gt; 改行コード文字にエスケープが抜けていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Classic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; &lt;code&gt;std::complex&lt;/code&gt;を使用しているところで、&lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;のインクルードが抜けていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/274&#34; target=&#34;_blank&#34;&gt;GitHub #274&lt;/a&gt; &lt;code&gt;remove_reference&lt;/code&gt;を名前空間修飾なしで使っていたところを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/275&#34; target=&#34;_blank&#34;&gt;GitHub #275&lt;/a&gt; &lt;code&gt;match&amp;lt;T &amp;amp;&amp;gt;&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/323&#34; target=&#34;_blank&#34;&gt;GitHub #323&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12639&#34; target=&#34;_blank&#34;&gt;Trac #12639&lt;/a&gt; &lt;code&gt;BOOST_DISABLE_THREADS&lt;/code&gt;を定義した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/336&#34; target=&#34;_blank&#34;&gt;GitHub #336&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7371&#34; target=&#34;_blank&#34;&gt;Trac #7371&lt;/a&gt; scannerのインクリメント対象が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; Windows OS における Async safe な ファイルダンプ機能は、いくつかのプラットフォームでハングするため、このバージョンで無効とされた。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;依存関係を減らすため、ContainerHash ライブラリを使うようになった&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub #40&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.7 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;後方互換性を壊す変更&lt;ul&gt;
&lt;li&gt;同一のテストスイートに対して、同じ名前でテストケースを追加するとエラーを報告するようになった。詳細は Changes log を参照すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;色付きの出力がデフォルトで有効になり、Windows でも利用可能になった&lt;/li&gt;
&lt;li&gt;コマンドラインヘルプが改良され、わかりやすくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt; マクロが、 &lt;code&gt;std::tuple&lt;/code&gt; に含まれるシーケンス型も受け入れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12092&#34; target=&#34;_blank&#34;&gt;#12092&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12596&#34; target=&#34;_blank&#34;&gt;#12596&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12597&#34; target=&#34;_blank&#34;&gt;#12597&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12969&#34; target=&#34;_blank&#34;&gt;#12969&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13058&#34; target=&#34;_blank&#34;&gt;#13058&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13149&#34; target=&#34;_blank&#34;&gt;#13149&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13170&#34; target=&#34;_blank&#34;&gt;#13170&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13181&#34; target=&#34;_blank&#34;&gt;#13181&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13371&#34; target=&#34;_blank&#34;&gt;#13371&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13387&#34; target=&#34;_blank&#34;&gt;#13387&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13398&#34; target=&#34;_blank&#34;&gt;#13398&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13407&#34; target=&#34;_blank&#34;&gt;#13407&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13435&#34; target=&#34;_blank&#34;&gt;#13435&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13443&#34; target=&#34;_blank&#34;&gt;#13443&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull request: &lt;a href=&#34;https://github.com/boostorg/test/pull/112&#34; target=&#34;_blank&#34;&gt;#112&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/118&#34; target=&#34;_blank&#34;&gt;#118&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/121&#34; target=&#34;_blank&#34;&gt;#121&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/122&#34; target=&#34;_blank&#34;&gt;#122&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/125&#34; target=&#34;_blank&#34;&gt;#125&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/127&#34; target=&#34;_blank&#34;&gt;#127&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34; id=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;依存関係を減らすために、ContainerHashライブラリを使用するようにした&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/type_index/issues/17&#34; target=&#34;_blank&#34;&gt;GitHub #17&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34; id=&#34;type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなトレイト&lt;code&gt;detected&lt;/code&gt;, &lt;code&gt;detected_or&lt;/code&gt;, &lt;code&gt;is_detected&lt;/code&gt;, &lt;code&gt;is_detected_convertible&lt;/code&gt;, &lt;code&gt;is_detected_exact&lt;/code&gt;, &lt;code&gt;is_complete&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;2項演算子の検出コードを大きく改善した&lt;/li&gt;
&lt;li&gt;完全型を引数の要件とするトレイトのために、完全性を検証するアサーションを追加。これによって、不完全型から誤った結果が出力されることを防げるようになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12212&#34; target=&#34;_blank&#34;&gt;Trac #12212&lt;/a&gt; MPL互換性の小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12003&#34; target=&#34;_blank&#34;&gt;Trac #12003&lt;/a&gt; &lt;code&gt;is_constructible&lt;/code&gt;が (可変引数テンプレートで) 完全に実装されたことを表すマクロ&lt;code&gt;BOOST_TT_IS_CONSTRUCTIBLE_CONFORMING&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17の&lt;code&gt;noexcept&lt;/code&gt;仕様で正しく動作するよう、&lt;code&gt;is_function&lt;/code&gt;と&lt;code&gt;is_member_function_pointer&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_default_constructible&lt;/code&gt;と&lt;code&gt;std::pair&lt;/code&gt;向けのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;C++11より前の言語バージョン向けに、&lt;code&gt;is_nothrow_swappable&lt;/code&gt;の実装を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;boost::next&lt;/code&gt;と&lt;code&gt;boost::prior&lt;/code&gt;をIteratorモジュールに移動したため、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;に含まれないようになった。代わりに&lt;code&gt;&amp;lt;boost/next_prior.hpp&amp;gt;&lt;/code&gt;をインクルードすること。ほかの機能を使用する場合でも、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;ヘッダをインクルードすることは推奨しない。特定機能のヘッダをインクルードをする方がよいだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34; id=&#34;units&#34;&gt;Units&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10270&#34; target=&#34;_blank&#34;&gt;Trac #10270&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/units/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; scaled units (大きさの情報を持つ単位型) に対する&lt;code&gt;sqrt&lt;/code&gt;がコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/units/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;サポートを追加&lt;/li&gt;
&lt;li&gt;小さなドキュメント修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/uuid/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; &lt;code&gt;random_generator&lt;/code&gt;がコピー可能でなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; プリプロセッサによる関数引数の生成やメタ関数生成の代わりに、可変引数テンプレートを使用するようにした。初期の修正を提供してくれたNikita Kniazev氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub 40&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13288&#34; target=&#34;_blank&#34;&gt;Trac #13288&lt;/a&gt; &lt;code&gt;apply_visitor&lt;/code&gt;からビジターへ引数を完全転送するよう修正。Paweł Dac氏に感謝&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/variant/pull/41&#34; target=&#34;_blank&#34;&gt;GitHub #41&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.2.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.9.2, 5.4.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.2.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : Contextの既知のバグを修正 (close #255)</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>1d03f4bfc56e0ff03758032a7b8f1e8bb5d40dbe:document/version/1_67_0.md</id>
      <updated>2018-04-10T13:59:06+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/contract&#34; target=&#34;_blank&#34;&gt;Contract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++用の契約プログラミングライブラリ。契約プログラミングの全ての機能をサポートしている： サブ契約、クラスの不変条件、事後条件 (古い値と戻り値)、事前条件、表明失敗時の挙動をカスタマイズ (例として、例外を投げるかプログラムを異常終了させるか)、コンパイルに含めるかどうかと表明のチェックをオプショナルに、などなど。作者Lorenzo Caminiti氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/hof&#34; target=&#34;_blank&#34;&gt;HOF&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;高階関数 (Higher-order functions) のライブラリ。作者Paul Fultz II氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34;&gt;Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::get_option&lt;/code&gt;にconst修飾を付け忘れていたので追加&lt;/li&gt;
&lt;li&gt;GCCのいくつかのバージョンで発生するパースエラーを回避&lt;/li&gt;
&lt;li&gt;チュートリアルのサンプルコードが壊れていたので修正&lt;/li&gt;
&lt;li&gt;実験的な機能を追加。experimentalな機能は、予告なく変更される可能性があるので注意&lt;ul&gt;
&lt;li&gt;&lt;code&gt;experimental::detached&lt;/code&gt; : 非同期操作の完了をハンドリングしない指定。完了ハンドラの代わりに指定する&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_socket.async_send(my_buffer, boost::asio::experimental::detached);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::redirect_error&lt;/code&gt; : &lt;code&gt;error_code&lt;/code&gt;をキャプチャして完了ハンドラに紐付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::co_spawn&lt;/code&gt; : コルーチン仕様を統合する機能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、&lt;code&gt;websocket::stream&lt;/code&gt; が assertエラーか未定義な振る舞いを起こす重大な欠陥を修正している。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;完全な変更のリストについては、&lt;a href=&#34;http://www.boost.org/doc/libs/develop/libs/beast/doc/html/beast/release_notes.html&#34; target=&#34;_blank&#34;&gt;公式ページ&lt;/a&gt; を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost内の依存関係を簡潔にするためにfunctionalモジュールから分離された&lt;/li&gt;
&lt;li&gt;新しいモジュール名と対応させるためにヘッダーを別のディレクトリへ移した。以前のパスでも依然として動作する&lt;/li&gt;
&lt;li&gt;次の標準ライブラリへ対応した&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_condition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::variant&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::monostate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;より詳細には&lt;a href=&#34;https://www.boost.org/doc/html/hash/changes.html#hash.changes.boost_1_67_0&#34; target=&#34;_blank&#34;&gt;change log&lt;/a&gt;を参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;/&lt;a href=&#34;https://github.com/boostorg/context/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;
  OSX 32bit下においてEAX/EDXを使って&lt;code&gt;transfer_t&lt;/code&gt;を正しく返すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; &lt;code&gt;__sanitizer_finish_switch_fiber&lt;/code&gt;を呼び出すタイミングが正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt; WindowsでのClangにおいてビルド出来ない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;execution_context&lt;/code&gt;(v1)がMSVCでエラーとなる問題を修正&lt;/li&gt;
&lt;li&gt;既知のバグ : all.hppのインクルード + &lt;code&gt;&amp;lt;context-impl&amp;gt;ucontext/winfib&lt;/code&gt; で「&lt;code&gt;forced_unwind&lt;/code&gt;: is not a member of &lt;code&gt;boost::context::detail&lt;/code&gt;」というエラーになる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; プル型コルーチンの起動直後に投げられた例外が再送されなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; &lt;code&gt;GetLastError()&lt;/code&gt;がエラー値を返すような状況下での問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; : &lt;code&gt;condition_variable::wait_for&lt;/code&gt; を使っている場合に assert エラー &lt;code&gt;&#34;! ctx-&amp;gt;ready_is_linked()&#34;&lt;/code&gt; が起きる点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; : ビルド時に &lt;code&gt;&#39;stdexception&#39; file not found&lt;/code&gt; エラーが起きる不具合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/141&#34; target=&#34;_blank&#34;&gt;GitHub #141&lt;/a&gt; : boost::fibers::async が例外を投げる問題に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/146&#34; target=&#34;_blank&#34;&gt;GitHub #146&lt;/a&gt; : remote-ready-queue spinlock に対する不要なロックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/153&#34; target=&#34;_blank&#34;&gt;GitHub #153&lt;/a&gt; : &lt;code&gt;context::set_ready()&lt;/code&gt; を &lt;code&gt;context::schedule()&lt;/code&gt; に置き換えるようにドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; : &lt;code&gt;[buffered|unbuffered]_channels&lt;/code&gt; の iterator に関するドキュメントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; : &lt;code&gt;this_fiber&lt;/code&gt; が boost::fibers 名前空間のメンバとしてドキュメントに記されている (訳注: 正しくは &lt;code&gt;boost::&lt;/code&gt; 名前空間の直下) 点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; : &lt;code&gt;examples/barrier.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; : &lt;code&gt;work_stealing&lt;/code&gt; クラスを動作させるために、&lt;code&gt;BOOST_FIBERS_DECL&lt;/code&gt; マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/162&#34; target=&#34;_blank&#34;&gt;GitHub #162&lt;/a&gt; : タイムアウト待ちの場合に、use-counter (訳注: 正確には &lt;code&gt;use_count_&lt;/code&gt; 内部変数) をインクリメントするルーチンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; : &lt;code&gt;scheduler::schedule()&lt;/code&gt; コンストラクタにおける &lt;code&gt;ctx-&amp;gt;wait_is_linked()&lt;/code&gt; アサーションを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/167&#34; target=&#34;_blank&#34;&gt;GitHub #167&lt;/a&gt; : future が作成された場合のみ、&lt;code&gt;shared_state::owner_destroyed()&lt;/code&gt; を呼び出すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; : ドキュメントが最新でなかったので追随&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;main()&lt;/code&gt;関数の前でパス操作したときにクラッシュする問題に対して、静的変数の初期化を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/164&#34; target=&#34;_blank&#34;&gt;GitHub #164&lt;/a&gt; MSVC 2017でコンパイルエラーとなるため&lt;code&gt;fusion::map&lt;/code&gt;でのSFINAEをテンプレートパラメータへと移した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; &lt;code&gt;fusion::vector&lt;/code&gt;がCWG 945に対応していないコンパイラでエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; エラーメッセージをわかりやすくするためシーケンスコンバータに要素数の事前チェクを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://GitHub.com/boostorg/fusion/pull/171&#34; target=&#34;_blank&#34;&gt;GitHub #171&lt;/a&gt; &lt;code&gt;fusion::tag_of&lt;/code&gt;と&lt;code&gt;fusion::is_native_fusion_sequence&lt;/code&gt;に不完全型を渡せるようにした。
  これは挙動の変更ではなく、Boost.TypeTraitsの変更への追従となっている&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新たな地図投影 (map projection) とSRS変換 (SRS transformation) を追加 (部分的にインタフェース変更が発生する可能性があるのでアンドキュメント)&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;densify()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;から直接&lt;code&gt;allocator&lt;/code&gt;を使用するのではなく、&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;を介するようにした (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;C++03でムーブセマンティクスをエミュレーションするために、&lt;code&gt;rtree&lt;/code&gt;のデフォルトアロケータを&lt;code&gt;boost::container::new_allocator&lt;/code&gt; (と&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;) に変更した&lt;/li&gt;
&lt;li&gt;Area strategiesのインタフェースを変更した。これは破壊的変更になる可能性がある&lt;/li&gt;
&lt;li&gt;半径 (Radius) と球体 (Sphere) をspherical strategiesに渡せるようにした&lt;/li&gt;
&lt;li&gt;sphericalとgeographicの&lt;code&gt;distance()&lt;/code&gt;戦略にPoint-BoxとBox-Boxの組み合わせを追加&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyの出力が、2点か (closed polygonの) 3点のringを破棄するが、それらを生成しないようにした&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、空のinterior ringsと空のpolygonsを出力から外すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13381&#34; target=&#34;_blank&#34;&gt;Trac #13381&lt;/a&gt; Visual C++ 2015での&lt;code&gt;matrix_transformer&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13436&#34; target=&#34;_blank&#34;&gt;Trac #13436&lt;/a&gt; &lt;code&gt;boost::geometry::model::polygon&lt;/code&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length()&lt;/code&gt;アルゴリズムに、不足していた戦略解決を追加した。これはVariantのサポートに影響する&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、closing pointをsimplifyするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;振る舞いの変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、通常では入力のringを回転させてから、凸包 (convex hull) 上の非collinear pointを選択するようsimplifyする。これは出力を改善する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースに加えて、&lt;code&gt;unique_ptr&lt;/code&gt;のインタフェースサポートを追加。C++17をサポートするために、非推奨の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースを削除オプションとして&lt;code&gt;BOOST_LOCALE_HIDE_AUTO_PTR&lt;/code&gt;を定義できる&lt;/li&gt;
&lt;li&gt;ICU &amp;gt; 60.1でのテスト問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6851&#34; target=&#34;_blank&#34;&gt;Trac #6851&lt;/a&gt; Solarisでのビルドを修正&lt;/li&gt;
&lt;li&gt;最適化付きビルドでのFreeBSD/clangの問題を修正&lt;/li&gt;
&lt;li&gt;MSVCのテストで失敗していた、コードページ932 (CP932) のcodecvt問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12572&#34; target=&#34;_blank&#34;&gt;Trac #12572&lt;/a&gt; 国名の正規化をするところでのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12453&#34; target=&#34;_blank&#34;&gt;Trac #12453&lt;/a&gt; &lt;code&gt;libs/locale/src/shared/message.cpp&lt;/code&gt;のコードにムダが多かった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icu/date_time&lt;/code&gt;で失敗するケースで&lt;code&gt;throw&lt;/code&gt;が抜けていたのを修正&lt;/li&gt;
&lt;li&gt;Boost.Thread v4でのビルドを再度修正&lt;/li&gt;
&lt;li&gt;ICUバックエンドの年フォーマットの代わりにYear of week (年の何週目か) を使用するよう修正&lt;/li&gt;
&lt;li&gt;ICU 56.1以上のフォーマットテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ネイティブのモンテカルロ・インテグレーションをサポート&lt;/li&gt;
&lt;li&gt;チェビシェフ補間 (Chebyshev interpolation) のルーチンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Ticket 13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13109&#34; target=&#34;_blank&#34;&gt;Trac #13109&lt;/a&gt; 多倍長整数を縮小型に変換する際、大きすぎる値 (もしくは小さすぎる値) を小さな型に変換すると、変換先の型の最大値 (もしくは最小値) となる。これは意図した動作ではあったが、&lt;code&gt;uint128_t&lt;/code&gt;については未定義動作としてそうなっていた。今回の変更では、このライブラリの全ての整数型でこの動作となる。下位Nビットの値が本当に必要であれば、&lt;code&gt;static_cast&amp;lt;unsigned&amp;gt;(~static_cast&amp;lt;unsigned&amp;gt;(0) &amp;amp; my_value)&lt;/code&gt; このようにマスクすることが必要となる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13148&#34; target=&#34;_blank&#34;&gt;Trac #13148&lt;/a&gt; 10進数を有理数型に変換する際のバグを修正 (値ゼロは特別にハンドリングする必要があった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13301&#34; target=&#34;_blank&#34;&gt;Trac #13301&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;から組み込みのより大きい整数型に変換する際のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;に対する&lt;code&gt;exp()&lt;/code&gt;関数の、ヒューリスティックな使用でのパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13264&#34; target=&#34;_blank&#34;&gt;Trac #13264&lt;/a&gt; 指数型が&lt;code&gt;int&lt;/code&gt;より大きい場合の、&lt;code&gt;floor&lt;/code&gt;/&lt;code&gt;ceil&lt;/code&gt;と&lt;code&gt;cpp_bin_float&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; 変換先の型が&lt;code&gt;*this&lt;/code&gt;の型から直接的に構築できる場合に、明示的な型変換演算子を無効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13124&#34; target=&#34;_blank&#34;&gt;Trac #13124&lt;/a&gt; MPIR-3.0の新たな変更に対応した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; 問題 (訳注: Optional&amp;lt;X&amp;gt; が、T という名前が付いた enum を持っていると VS2015 でコンパイルできない) を修正&lt;/li&gt;
&lt;li&gt;コンパイル時に &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt; が出る問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34; id=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8187&#34; target=&#34;_blank&#34;&gt;Trac #8187&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt;
  ドキュメントとコード例の修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12733&#34; target=&#34;_blank&#34;&gt;Trac #12733&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt;
  C++11で配列型を使用した式がコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt;
  Protoのビルトインを使用し最近のMSVCにおけるラムダ式のコンパイルエラーを修正&lt;ul&gt;
&lt;li&gt;訳者註: C++11のラムダ式ではなく&lt;code&gt;phoenix::lambda&lt;/code&gt;のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; C++17で非推奨となった&lt;code&gt;std::iteratror&lt;/code&gt;の使用をやめた。Daniela Engertに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリ名 (.aや.lib) に、Pythonバージョン名がサフィックスとして付くようになった。例として、Python 2.7用にコンパイルすると、&lt;code&gt;boost_python27&lt;/code&gt;と&lt;code&gt;boost_numpy27&lt;/code&gt;という名前のライブラリファイルが生成される。関連するBoost.Buildの修正と組み合わせることで、複数のPythonバージョンを一度のビルドプロセスでビルドできるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spirit X3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/spirit/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;with_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; &lt;code&gt;x3::variant&lt;/code&gt;と&lt;code&gt;forward_ast&lt;/code&gt;に&lt;code&gt;noexcept&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/248&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;error_handler::position()&lt;/code&gt;がCR+LFの間違ってカウントしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; &lt;code&gt;parse_into_container&lt;/code&gt;内での&lt;code&gt;unused_type&lt;/code&gt;属性の使用を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/289&#34; target=&#34;_blank&#34;&gt;GitHub #289&lt;/a&gt; 連想コンテナに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/308&#34; target=&#34;_blank&#34;&gt;GitHub #308&lt;/a&gt; VS2015 Update 3向けのワークアラウンドを追加してサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/313&#34; target=&#34;_blank&#34;&gt;GitHub #313&lt;/a&gt; インクルードガード名がQiと衝突していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/316&#34; target=&#34;_blank&#34;&gt;GitHub #316&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12928&#34; target=&#34;_blank&#34;&gt;Trac #12928&lt;/a&gt; rangeに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/330&#34; target=&#34;_blank&#34;&gt;GitHub #330&lt;/a&gt; &lt;code&gt;fusion::map&lt;/code&gt;のサポートを再度有効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/337&#34; target=&#34;_blank&#34;&gt;GitHub #337&lt;/a&gt; &lt;code&gt;string(&#34;...&#34;)&lt;/code&gt;と&lt;code&gt;attr(&#34;...&#34;)&lt;/code&gt;からの単一要素シーケンスへの&lt;code&gt;move_to&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/340&#34; target=&#34;_blank&#34;&gt;GitHub #340&lt;/a&gt; シーケンスのアンラップの代わりに、単一要素ビューの間接参照を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/351&#34; target=&#34;_blank&#34;&gt;GitHub #351&lt;/a&gt; &lt;code&gt;parse_nan()&lt;/code&gt;での範囲外イテレータの間接参照を防止&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/355&#34; target=&#34;_blank&#34;&gt;GitHub #355&lt;/a&gt; コンテナが空か判定するために、直接&lt;code&gt;empty()&lt;/code&gt;メンバ関数を使用するのではなく、トレイトを介するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit V2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/256&#34; target=&#34;_blank&#34;&gt;GitHub #256&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11493&#34; target=&#34;_blank&#34;&gt;Trac #11493&lt;/a&gt; &lt;code&gt;qi::keyword&lt;/code&gt;ディレクティブのテストがC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/259&#34; target=&#34;_blank&#34;&gt;GitHub #259&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/284&#34; target=&#34;_blank&#34;&gt;GitHub #284&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5270&#34; target=&#34;_blank&#34;&gt;Trac #5270&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のスコープバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/310&#34; target=&#34;_blank&#34;&gt;GitHub #310&lt;/a&gt; シーケンシャルなOR演算子の未定義動作を修正。パーサーの実行順序がコンパイラに依存していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;が持つ&lt;code&gt;types&lt;/code&gt;型に実装が依存していたが、その型が定義されなくなったために発生していたコンパイルエラーを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/314&#34; target=&#34;_blank&#34;&gt;GitHub #314&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13311&#34; target=&#34;_blank&#34;&gt;Trac #13311&lt;/a&gt; &lt;code&gt;BOOST_SPIRIT_NO_PREDEFINED_TERMINALS&lt;/code&gt;を定義した際に発生していたコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/361&#34; target=&#34;_blank&#34;&gt;GitHub #361&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8268&#34; target=&#34;_blank&#34;&gt;Trac #8268&lt;/a&gt; &lt;code&gt;hold_any&lt;/code&gt;にコピー代入演算子が抜けていたので追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Qi&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/201&#34; target=&#34;_blank&#34;&gt;GitHub #201&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; 実数パーサー内での符号付き整数のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/304&#34; target=&#34;_blank&#34;&gt;GitHub #304&lt;/a&gt; &lt;code&gt;get_current_line&lt;/code&gt;と&lt;code&gt;get_line_start&lt;/code&gt;を修正し、&lt;code&gt;get_line_end&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/319&#34; target=&#34;_blank&#34;&gt;GitHub #319&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12473&#34; target=&#34;_blank&#34;&gt;Trac #12473&lt;/a&gt; 順列パーサー (permutation parser, &lt;code&gt;A ^ B&lt;/code&gt;) を常に&lt;code&gt;optional&lt;/code&gt;で初期化するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/358&#34; target=&#34;_blank&#34;&gt;GitHub #358&lt;/a&gt; ユーザー定義の実数ポリシーによって&lt;code&gt;parse_frac_n&lt;/code&gt;が負数を返さないことを保証するため、&lt;code&gt;assert&lt;/code&gt;を追加。静的解析による誤検出も防いだ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Karma&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/261&#34; target=&#34;_blank&#34;&gt;Github #261&lt;/a&gt; &lt;code&gt;no_buffering_policy&lt;/code&gt;にコピーコンストラクタがなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Lex&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; &lt;code&gt;-fsanitize=undefined&lt;/code&gt;で検出された、&lt;code&gt;enum&lt;/code&gt;の範囲外の値が代入されたことにより警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/324&#34; target=&#34;_blank&#34;&gt;GitHub #324&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11540&#34; target=&#34;_blank&#34;&gt;Trac #11540&lt;/a&gt; 改行コード文字にエスケープが抜けていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Classic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; &lt;code&gt;std::complex&lt;/code&gt;を使用しているところで、&lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;のインクルードが抜けていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/274&#34; target=&#34;_blank&#34;&gt;GitHub #274&lt;/a&gt; &lt;code&gt;remove_reference&lt;/code&gt;を名前空間修飾なしで使っていたところを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/275&#34; target=&#34;_blank&#34;&gt;GitHub #275&lt;/a&gt; &lt;code&gt;match&amp;lt;T &amp;amp;&amp;gt;&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/323&#34; target=&#34;_blank&#34;&gt;GitHub #323&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12639&#34; target=&#34;_blank&#34;&gt;Trac #12639&lt;/a&gt; &lt;code&gt;BOOST_DISABLE_THREADS&lt;/code&gt;を定義した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/336&#34; target=&#34;_blank&#34;&gt;GitHub #336&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7371&#34; target=&#34;_blank&#34;&gt;Trac #7371&lt;/a&gt; scannerのインクリメント対象が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; Windows OS における Async safe な ファイルダンプ機能は、いくつかのプラットフォームでハングするため、このバージョンで無効とされた。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;依存関係を減らすため、ContainerHash ライブラリを使うようになった&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub #40&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.7 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;後方互換性を壊す変更&lt;ul&gt;
&lt;li&gt;同一のテストスイートに対して、同じ名前でテストケースを追加するとエラーを報告するようになった。詳細は Changes log を参照すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;色付きの出力がデフォルトで有効になり、Windows でも利用可能になった&lt;/li&gt;
&lt;li&gt;コマンドラインヘルプが改良され、わかりやすくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt; マクロが、 &lt;code&gt;std::tuple&lt;/code&gt; に含まれるシーケンス型も受け入れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12092&#34; target=&#34;_blank&#34;&gt;#12092&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12596&#34; target=&#34;_blank&#34;&gt;#12596&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12597&#34; target=&#34;_blank&#34;&gt;#12597&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12969&#34; target=&#34;_blank&#34;&gt;#12969&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13058&#34; target=&#34;_blank&#34;&gt;#13058&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13149&#34; target=&#34;_blank&#34;&gt;#13149&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13170&#34; target=&#34;_blank&#34;&gt;#13170&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13181&#34; target=&#34;_blank&#34;&gt;#13181&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13371&#34; target=&#34;_blank&#34;&gt;#13371&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13387&#34; target=&#34;_blank&#34;&gt;#13387&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13398&#34; target=&#34;_blank&#34;&gt;#13398&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13407&#34; target=&#34;_blank&#34;&gt;#13407&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13435&#34; target=&#34;_blank&#34;&gt;#13435&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13443&#34; target=&#34;_blank&#34;&gt;#13443&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull request: &lt;a href=&#34;https://github.com/boostorg/test/pull/112&#34; target=&#34;_blank&#34;&gt;#112&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/118&#34; target=&#34;_blank&#34;&gt;#118&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/121&#34; target=&#34;_blank&#34;&gt;#121&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/122&#34; target=&#34;_blank&#34;&gt;#122&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/125&#34; target=&#34;_blank&#34;&gt;#125&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/127&#34; target=&#34;_blank&#34;&gt;#127&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34; id=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;依存関係を減らすために、ContainerHashライブラリを使用するようにした&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/type_index/issues/17&#34; target=&#34;_blank&#34;&gt;GitHub #17&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34; id=&#34;type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなトレイト&lt;code&gt;detected&lt;/code&gt;, &lt;code&gt;detected_or&lt;/code&gt;, &lt;code&gt;is_detected&lt;/code&gt;, &lt;code&gt;is_detected_convertible&lt;/code&gt;, &lt;code&gt;is_detected_exact&lt;/code&gt;, &lt;code&gt;is_complete&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;2項演算子の検出コードを大きく改善した&lt;/li&gt;
&lt;li&gt;完全型を引数の要件とするトレイトのために、完全性を検証するアサーションを追加。これによって、不完全型から誤った結果が出力されることを防げるようになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12212&#34; target=&#34;_blank&#34;&gt;Trac #12212&lt;/a&gt; MPL互換性の小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12003&#34; target=&#34;_blank&#34;&gt;Trac #12003&lt;/a&gt; &lt;code&gt;is_constructible&lt;/code&gt;が (可変引数テンプレートで) 完全に実装されたことを表すマクロ&lt;code&gt;BOOST_TT_IS_CONSTRUCTIBLE_CONFORMING&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17の&lt;code&gt;noexcept&lt;/code&gt;仕様で正しく動作するよう、&lt;code&gt;is_function&lt;/code&gt;と&lt;code&gt;is_member_function_pointer&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_default_constructible&lt;/code&gt;と&lt;code&gt;std::pair&lt;/code&gt;向けのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;C++11より前の言語バージョン向けに、&lt;code&gt;is_nothrow_swappable&lt;/code&gt;の実装を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;boost::next&lt;/code&gt;と&lt;code&gt;boost::prior&lt;/code&gt;をIteratorモジュールに移動したため、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;に含まれないようになった。代わりに&lt;code&gt;&amp;lt;boost/next_prior.hpp&amp;gt;&lt;/code&gt;をインクルードすること。ほかの機能を使用する場合でも、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;ヘッダをインクルードすることは推奨しない。特定機能のヘッダをインクルードをする方がよいだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34; id=&#34;units&#34;&gt;Units&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10270&#34; target=&#34;_blank&#34;&gt;Trac #10270&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/units/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; scaled units (大きさの情報を持つ単位型) に対する&lt;code&gt;sqrt&lt;/code&gt;がコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/units/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;サポートを追加&lt;/li&gt;
&lt;li&gt;小さなドキュメント修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/uuid/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; &lt;code&gt;random_generator&lt;/code&gt;がコピー可能でなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; プリプロセッサによる関数引数の生成やメタ関数生成の代わりに、可変引数テンプレートを使用するようにした。初期の修正を提供してくれたNikita Kniazev氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub 40&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13288&#34; target=&#34;_blank&#34;&gt;Trac #13288&lt;/a&gt; &lt;code&gt;apply_visitor&lt;/code&gt;からビジターへ引数を完全転送するよう修正。Paweł Dac氏に感謝&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/variant/pull/41&#34; target=&#34;_blank&#34;&gt;GitHub #41&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : Type Traitsを追加 (close #254)</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>8004a1ff8016d0e648d13d438dc3fcec162f5142:document/version/1_67_0.md</id>
      <updated>2018-04-09T16:39:01+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/contract&#34; target=&#34;_blank&#34;&gt;Contract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++用の契約プログラミングライブラリ。契約プログラミングの全ての機能をサポートしている： サブ契約、クラスの不変条件、事後条件 (古い値と戻り値)、事前条件、表明失敗時の挙動をカスタマイズ (例として、例外を投げるかプログラムを異常終了させるか)、コンパイルに含めるかどうかと表明のチェックをオプショナルに、などなど。作者Lorenzo Caminiti氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/hof&#34; target=&#34;_blank&#34;&gt;HOF&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;高階関数 (Higher-order functions) のライブラリ。作者Paul Fultz II氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34;&gt;Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::get_option&lt;/code&gt;にconst修飾を付け忘れていたので追加&lt;/li&gt;
&lt;li&gt;GCCのいくつかのバージョンで発生するパースエラーを回避&lt;/li&gt;
&lt;li&gt;チュートリアルのサンプルコードが壊れていたので修正&lt;/li&gt;
&lt;li&gt;実験的な機能を追加。experimentalな機能は、予告なく変更される可能性があるので注意&lt;ul&gt;
&lt;li&gt;&lt;code&gt;experimental::detached&lt;/code&gt; : 非同期操作の完了をハンドリングしない指定。完了ハンドラの代わりに指定する&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_socket.async_send(my_buffer, boost::asio::experimental::detached);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::redirect_error&lt;/code&gt; : &lt;code&gt;error_code&lt;/code&gt;をキャプチャして完了ハンドラに紐付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::co_spawn&lt;/code&gt; : コルーチン仕様を統合する機能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、&lt;code&gt;websocket::stream&lt;/code&gt; が assertエラーか未定義な振る舞いを起こす重大な欠陥を修正している。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;完全な変更のリストについては、&lt;a href=&#34;http://www.boost.org/doc/libs/develop/libs/beast/doc/html/beast/release_notes.html&#34; target=&#34;_blank&#34;&gt;公式ページ&lt;/a&gt; を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost内の依存関係を簡潔にするためにfunctionalモジュールから分離された&lt;/li&gt;
&lt;li&gt;新しいモジュール名と対応させるためにヘッダーを別のディレクトリへ移した。以前のパスでも依然として動作する&lt;/li&gt;
&lt;li&gt;次の標準ライブラリへ対応した&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_condition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::variant&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::monostate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;より詳細には&lt;a href=&#34;https://www.boost.org/doc/html/hash/changes.html#hash.changes.boost_1_67_0&#34; target=&#34;_blank&#34;&gt;change log&lt;/a&gt;を参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;/&lt;a href=&#34;https://github.com/boostorg/context/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;
  OSX 32bit下においてEAX/EDXを使って&lt;code&gt;transfer_t&lt;/code&gt;を正しく返すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; &lt;code&gt;__sanitizer_finish_switch_fiber&lt;/code&gt;を呼び出すタイミングが正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt; WindowsでのClangにおいてビルド出来ない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;execution_context&lt;/code&gt;(v1)がMSVCでエラーとなる問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; プル型コルーチンの起動直後に投げられた例外が再送されなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; &lt;code&gt;GetLastError()&lt;/code&gt;がエラー値を返すような状況下での問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; : &lt;code&gt;condition_variable::wait_for&lt;/code&gt; を使っている場合に assert エラー &lt;code&gt;&#34;! ctx-&amp;gt;ready_is_linked()&#34;&lt;/code&gt; が起きる点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; : ビルド時に &lt;code&gt;&#39;stdexception&#39; file not found&lt;/code&gt; エラーが起きる不具合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/141&#34; target=&#34;_blank&#34;&gt;GitHub #141&lt;/a&gt; : boost::fibers::async が例外を投げる問題に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/146&#34; target=&#34;_blank&#34;&gt;GitHub #146&lt;/a&gt; : remote-ready-queue spinlock に対する不要なロックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/153&#34; target=&#34;_blank&#34;&gt;GitHub #153&lt;/a&gt; : &lt;code&gt;context::set_ready()&lt;/code&gt; を &lt;code&gt;context::schedule()&lt;/code&gt; に置き換えるようにドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; : &lt;code&gt;[buffered|unbuffered]_channels&lt;/code&gt; の iterator に関するドキュメントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; : &lt;code&gt;this_fiber&lt;/code&gt; が boost::fibers 名前空間のメンバとしてドキュメントに記されている (訳注: 正しくは &lt;code&gt;boost::&lt;/code&gt; 名前空間の直下) 点を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; : &lt;code&gt;examples/barrier.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; : &lt;code&gt;work_stealing&lt;/code&gt; クラスを動作させるために、&lt;code&gt;BOOST_FIBERS_DECL&lt;/code&gt; マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/162&#34; target=&#34;_blank&#34;&gt;GitHub #162&lt;/a&gt; : タイムアウト待ちの場合に、use-counter (訳注: 正確には &lt;code&gt;use_count_&lt;/code&gt; 内部変数) をインクリメントするルーチンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; : &lt;code&gt;scheduler::schedule()&lt;/code&gt; コンストラクタにおける &lt;code&gt;ctx-&amp;gt;wait_is_linked()&lt;/code&gt; アサーションを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/167&#34; target=&#34;_blank&#34;&gt;GitHub #167&lt;/a&gt; : future が作成された場合のみ、&lt;code&gt;shared_state::owner_destroyed()&lt;/code&gt; を呼び出すように修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; : ドキュメントが最新でなかったので追随&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;main()&lt;/code&gt;関数の前でパス操作したときにクラッシュする問題に対して、静的変数の初期化を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/164&#34; target=&#34;_blank&#34;&gt;GitHub #164&lt;/a&gt; MSVC 2017でコンパイルエラーとなるため&lt;code&gt;fusion::map&lt;/code&gt;でのSFINAEをテンプレートパラメータへと移した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/166&#34; target=&#34;_blank&#34;&gt;GitHub #166&lt;/a&gt; &lt;code&gt;fusion::vector&lt;/code&gt;がCWG 945に対応していないコンパイラでエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/168&#34; target=&#34;_blank&#34;&gt;GitHub #168&lt;/a&gt; エラーメッセージをわかりやすくするためシーケンスコンバータに要素数の事前チェクを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://GitHub.com/boostorg/fusion/pull/171&#34; target=&#34;_blank&#34;&gt;GitHub #171&lt;/a&gt; &lt;code&gt;fusion::tag_of&lt;/code&gt;と&lt;code&gt;fusion::is_native_fusion_sequence&lt;/code&gt;に不完全型を渡せるようにした。
  これは挙動の変更ではなく、Boost.TypeTraitsの変更への追従となっている&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新たな地図投影 (map projection) とSRS変換 (SRS transformation) を追加 (部分的にインタフェース変更が発生する可能性があるのでアンドキュメント)&lt;/li&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;densify()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;から直接&lt;code&gt;allocator&lt;/code&gt;を使用するのではなく、&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;を介するようにした (Daniela Engert氏に感謝)&lt;/li&gt;
&lt;li&gt;C++03でムーブセマンティクスをエミュレーションするために、&lt;code&gt;rtree&lt;/code&gt;のデフォルトアロケータを&lt;code&gt;boost::container::new_allocator&lt;/code&gt; (と&lt;code&gt;boost::container::allocator_traits&lt;/code&gt;) に変更した&lt;/li&gt;
&lt;li&gt;Area strategiesのインタフェースを変更した。これは破壊的変更になる可能性がある&lt;/li&gt;
&lt;li&gt;半径 (Radius) と球体 (Sphere) をspherical strategiesに渡せるようにした&lt;/li&gt;
&lt;li&gt;sphericalとgeographicの&lt;code&gt;distance()&lt;/code&gt;戦略にPoint-BoxとBox-Boxの組み合わせを追加&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyの出力が、2点か (closed polygonの) 3点のringを破棄するが、それらを生成しないようにした&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、空のinterior ringsと空のpolygonsを出力から外すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13381&#34; target=&#34;_blank&#34;&gt;Trac #13381&lt;/a&gt; Visual C++ 2015での&lt;code&gt;matrix_transformer&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13436&#34; target=&#34;_blank&#34;&gt;Trac #13436&lt;/a&gt; &lt;code&gt;boost::geometry::model::polygon&lt;/code&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length()&lt;/code&gt;アルゴリズムに、不足していた戦略解決を追加した。これはVariantのサポートに影響する&lt;/li&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、closing pointをsimplifyするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;振る舞いの変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(multi)polygonsに対するsimplifyが、通常では入力のringを回転させてから、凸包 (convex hull) 上の非collinear pointを選択するようsimplifyする。これは出力を改善する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースに加えて、&lt;code&gt;unique_ptr&lt;/code&gt;のインタフェースサポートを追加。C++17をサポートするために、非推奨の&lt;code&gt;auto_ptr&lt;/code&gt;インタフェースを削除オプションとして&lt;code&gt;BOOST_LOCALE_HIDE_AUTO_PTR&lt;/code&gt;を定義できる&lt;/li&gt;
&lt;li&gt;ICU &amp;gt; 60.1でのテスト問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6851&#34; target=&#34;_blank&#34;&gt;Trac #6851&lt;/a&gt; Solarisでのビルドを修正&lt;/li&gt;
&lt;li&gt;最適化付きビルドでのFreeBSD/clangの問題を修正&lt;/li&gt;
&lt;li&gt;MSVCのテストで失敗していた、コードページ932 (CP932) のcodecvt問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12572&#34; target=&#34;_blank&#34;&gt;Trac #12572&lt;/a&gt; 国名の正規化をするところでのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12453&#34; target=&#34;_blank&#34;&gt;Trac #12453&lt;/a&gt; &lt;code&gt;libs/locale/src/shared/message.cpp&lt;/code&gt;のコードにムダが多かった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icu/date_time&lt;/code&gt;で失敗するケースで&lt;code&gt;throw&lt;/code&gt;が抜けていたのを修正&lt;/li&gt;
&lt;li&gt;Boost.Thread v4でのビルドを再度修正&lt;/li&gt;
&lt;li&gt;ICUバックエンドの年フォーマットの代わりにYear of week (年の何週目か) を使用するよう修正&lt;/li&gt;
&lt;li&gt;ICU 56.1以上のフォーマットテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ネイティブのモンテカルロ・インテグレーションをサポート&lt;/li&gt;
&lt;li&gt;チェビシェフ補間 (Chebyshev interpolation) のルーチンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Ticket 13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13109&#34; target=&#34;_blank&#34;&gt;Trac #13109&lt;/a&gt; 多倍長整数を縮小型に変換する際、大きすぎる値 (もしくは小さすぎる値) を小さな型に変換すると、変換先の型の最大値 (もしくは最小値) となる。これは意図した動作ではあったが、&lt;code&gt;uint128_t&lt;/code&gt;については未定義動作としてそうなっていた。今回の変更では、このライブラリの全ての整数型でこの動作となる。下位Nビットの値が本当に必要であれば、&lt;code&gt;static_cast&amp;lt;unsigned&amp;gt;(~static_cast&amp;lt;unsigned&amp;gt;(0) &amp;amp; my_value)&lt;/code&gt; このようにマスクすることが必要となる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13148&#34; target=&#34;_blank&#34;&gt;Trac #13148&lt;/a&gt; 10進数を有理数型に変換する際のバグを修正 (値ゼロは特別にハンドリングする必要があった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13301&#34; target=&#34;_blank&#34;&gt;Trac #13301&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;から組み込みのより大きい整数型に変換する際のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;に対する&lt;code&gt;exp()&lt;/code&gt;関数の、ヒューリスティックな使用でのパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13264&#34; target=&#34;_blank&#34;&gt;Trac #13264&lt;/a&gt; 指数型が&lt;code&gt;int&lt;/code&gt;より大きい場合の、&lt;code&gt;floor&lt;/code&gt;/&lt;code&gt;ceil&lt;/code&gt;と&lt;code&gt;cpp_bin_float&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; 変換先の型が&lt;code&gt;*this&lt;/code&gt;の型から直接的に構築できる場合に、明示的な型変換演算子を無効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/13124&#34; target=&#34;_blank&#34;&gt;Trac #13124&lt;/a&gt; MPIR-3.0の新たな変更に対応した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; 問題 (訳注: Optional&amp;lt;X&amp;gt; が、T という名前が付いた enum を持っていると VS2015 でコンパイルできない) を修正&lt;/li&gt;
&lt;li&gt;コンパイル時に &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt; が出る問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#phoenix&#34; id=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8187&#34; target=&#34;_blank&#34;&gt;Trac #8187&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt;
  ドキュメントとコード例の修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12733&#34; target=&#34;_blank&#34;&gt;Trac #12733&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt;
  C++11で配列型を使用した式がコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/66&#34; target=&#34;_blank&#34;&gt;GitHub #66&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/phoenix/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt;
  Protoのビルトインを使用し最近のMSVCにおけるラムダ式のコンパイルエラーを修正&lt;ul&gt;
&lt;li&gt;訳者註: C++11のラムダ式ではなく&lt;code&gt;phoenix::lambda&lt;/code&gt;のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; C++17で非推奨となった&lt;code&gt;std::iteratror&lt;/code&gt;の使用をやめた。Daniela Engertに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリ名 (.aや.lib) に、Pythonバージョン名がサフィックスとして付くようになった。例として、Python 2.7用にコンパイルすると、&lt;code&gt;boost_python27&lt;/code&gt;と&lt;code&gt;boost_numpy27&lt;/code&gt;という名前のライブラリファイルが生成される。関連するBoost.Buildの修正と組み合わせることで、複数のPythonバージョンを一度のビルドプロセスでビルドできるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spirit X3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/spirit/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;with_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; &lt;code&gt;x3::variant&lt;/code&gt;と&lt;code&gt;forward_ast&lt;/code&gt;に&lt;code&gt;noexcept&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/248&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;error_handler::position()&lt;/code&gt;がCR+LFの間違ってカウントしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; &lt;code&gt;parse_into_container&lt;/code&gt;内での&lt;code&gt;unused_type&lt;/code&gt;属性の使用を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/289&#34; target=&#34;_blank&#34;&gt;GitHub #289&lt;/a&gt; 連想コンテナに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/308&#34; target=&#34;_blank&#34;&gt;GitHub #308&lt;/a&gt; VS2015 Update 3向けのワークアラウンドを追加してサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/313&#34; target=&#34;_blank&#34;&gt;GitHub #313&lt;/a&gt; インクルードガード名がQiと衝突していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/316&#34; target=&#34;_blank&#34;&gt;GitHub #316&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12928&#34; target=&#34;_blank&#34;&gt;Trac #12928&lt;/a&gt; rangeに挿入するパース操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/330&#34; target=&#34;_blank&#34;&gt;GitHub #330&lt;/a&gt; &lt;code&gt;fusion::map&lt;/code&gt;のサポートを再度有効にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/337&#34; target=&#34;_blank&#34;&gt;GitHub #337&lt;/a&gt; &lt;code&gt;string(&#34;...&#34;)&lt;/code&gt;と&lt;code&gt;attr(&#34;...&#34;)&lt;/code&gt;からの単一要素シーケンスへの&lt;code&gt;move_to&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/340&#34; target=&#34;_blank&#34;&gt;GitHub #340&lt;/a&gt; シーケンスのアンラップの代わりに、単一要素ビューの間接参照を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/351&#34; target=&#34;_blank&#34;&gt;GitHub #351&lt;/a&gt; &lt;code&gt;parse_nan()&lt;/code&gt;での範囲外イテレータの間接参照を防止&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/355&#34; target=&#34;_blank&#34;&gt;GitHub #355&lt;/a&gt; コンテナが空か判定するために、直接&lt;code&gt;empty()&lt;/code&gt;メンバ関数を使用するのではなく、トレイトを介するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit V2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/256&#34; target=&#34;_blank&#34;&gt;GitHub #256&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11493&#34; target=&#34;_blank&#34;&gt;Trac #11493&lt;/a&gt; &lt;code&gt;qi::keyword&lt;/code&gt;ディレクティブのテストがC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/259&#34; target=&#34;_blank&#34;&gt;GitHub #259&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/284&#34; target=&#34;_blank&#34;&gt;GitHub #284&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5270&#34; target=&#34;_blank&#34;&gt;Trac #5270&lt;/a&gt; &lt;code&gt;subrule&lt;/code&gt;のスコープバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/310&#34; target=&#34;_blank&#34;&gt;GitHub #310&lt;/a&gt; シーケンシャルなOR演算子の未定義動作を修正。パーサーの実行順序がコンパイラに依存していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;が持つ&lt;code&gt;types&lt;/code&gt;型に実装が依存していたが、その型が定義されなくなったために発生していたコンパイルエラーを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/314&#34; target=&#34;_blank&#34;&gt;GitHub #314&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13311&#34; target=&#34;_blank&#34;&gt;Trac #13311&lt;/a&gt; &lt;code&gt;BOOST_SPIRIT_NO_PREDEFINED_TERMINALS&lt;/code&gt;を定義した際に発生していたコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/361&#34; target=&#34;_blank&#34;&gt;GitHub #361&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8268&#34; target=&#34;_blank&#34;&gt;Trac #8268&lt;/a&gt; &lt;code&gt;hold_any&lt;/code&gt;にコピー代入演算子が抜けていたので追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Qi&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/201&#34; target=&#34;_blank&#34;&gt;GitHub #201&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12349&#34; target=&#34;_blank&#34;&gt;Trac #12349&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; 実数パーサー内での符号付き整数のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/297&#34; target=&#34;_blank&#34;&gt;GitHub #297&lt;/a&gt; &lt;code&gt;uint_parser&amp;lt;signed T&amp;gt;&lt;/code&gt;のオーバーフロー問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/304&#34; target=&#34;_blank&#34;&gt;GitHub #304&lt;/a&gt; &lt;code&gt;get_current_line&lt;/code&gt;と&lt;code&gt;get_line_start&lt;/code&gt;を修正し、&lt;code&gt;get_line_end&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/319&#34; target=&#34;_blank&#34;&gt;GitHub #319&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12473&#34; target=&#34;_blank&#34;&gt;Trac #12473&lt;/a&gt; 順列パーサー (permutation parser, &lt;code&gt;A ^ B&lt;/code&gt;) を常に&lt;code&gt;optional&lt;/code&gt;で初期化するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/320&#34; target=&#34;_blank&#34;&gt;GitHub #320&lt;/a&gt; static assertのコンセプトを&lt;code&gt;ForwardIterator&lt;/code&gt;から&lt;code&gt;ReadableIteratorConcept &amp;amp; ForwardTraversalConcept&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/358&#34; target=&#34;_blank&#34;&gt;GitHub #358&lt;/a&gt; ユーザー定義の実数ポリシーによって&lt;code&gt;parse_frac_n&lt;/code&gt;が負数を返さないことを保証するため、&lt;code&gt;assert&lt;/code&gt;を追加。静的解析による誤検出も防いだ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Karma&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; 代替演算子 (alternate operator, &lt;code&gt;A | B&lt;/code&gt;) を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/261&#34; target=&#34;_blank&#34;&gt;Github #261&lt;/a&gt; &lt;code&gt;no_buffering_policy&lt;/code&gt;にコピーコンストラクタがなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Lex&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; &lt;code&gt;-fsanitize=undefined&lt;/code&gt;で検出された、&lt;code&gt;enum&lt;/code&gt;の範囲外の値が代入されたことにより警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/324&#34; target=&#34;_blank&#34;&gt;GitHub #324&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/11540&#34; target=&#34;_blank&#34;&gt;Trac #11540&lt;/a&gt; 改行コード文字にエスケープが抜けていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spirit.Classic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; &lt;code&gt;std::complex&lt;/code&gt;を使用しているところで、&lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;のインクルードが抜けていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/274&#34; target=&#34;_blank&#34;&gt;GitHub #274&lt;/a&gt; &lt;code&gt;remove_reference&lt;/code&gt;を名前空間修飾なしで使っていたところを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/275&#34; target=&#34;_blank&#34;&gt;GitHub #275&lt;/a&gt; &lt;code&gt;match&amp;lt;T &amp;amp;&amp;gt;&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/323&#34; target=&#34;_blank&#34;&gt;GitHub #323&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12639&#34; target=&#34;_blank&#34;&gt;Trac #12639&lt;/a&gt; &lt;code&gt;BOOST_DISABLE_THREADS&lt;/code&gt;を定義した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/336&#34; target=&#34;_blank&#34;&gt;GitHub #336&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7371&#34; target=&#34;_blank&#34;&gt;Trac #7371&lt;/a&gt; scannerのインクリメント対象が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/345&#34; target=&#34;_blank&#34;&gt;GitHub #345&lt;/a&gt; C++17から非推奨になっていた&lt;code&gt;std::iterator&lt;/code&gt;からの継承をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; Windows OS における Async safe な ファイルダンプ機能は、いくつかのプラットフォームでハングするため、このバージョンで無効とされた。ユーザーは最新の Boost のリリースに更新することを推奨&lt;/li&gt;
&lt;li&gt;依存関係を減らすため、ContainerHash ライブラリを使うようになった&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub #40&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.7 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;後方互換性を壊す変更&lt;ul&gt;
&lt;li&gt;同一のテストスイートに対して、同じ名前でテストケースを追加するとエラーを報告するようになった。詳細は Changes log を参照すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;色付きの出力がデフォルトで有効になり、Windows でも利用可能になった&lt;/li&gt;
&lt;li&gt;コマンドラインヘルプが改良され、わかりやすくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt; マクロが、 &lt;code&gt;std::tuple&lt;/code&gt; に含まれるシーケンス型も受け入れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12092&#34; target=&#34;_blank&#34;&gt;#12092&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12596&#34; target=&#34;_blank&#34;&gt;#12596&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12597&#34; target=&#34;_blank&#34;&gt;#12597&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12969&#34; target=&#34;_blank&#34;&gt;#12969&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13058&#34; target=&#34;_blank&#34;&gt;#13058&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13149&#34; target=&#34;_blank&#34;&gt;#13149&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13170&#34; target=&#34;_blank&#34;&gt;#13170&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trac ticket: &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13181&#34; target=&#34;_blank&#34;&gt;#13181&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13371&#34; target=&#34;_blank&#34;&gt;#13371&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13387&#34; target=&#34;_blank&#34;&gt;#13387&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13398&#34; target=&#34;_blank&#34;&gt;#13398&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13407&#34; target=&#34;_blank&#34;&gt;#13407&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13435&#34; target=&#34;_blank&#34;&gt;#13435&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13443&#34; target=&#34;_blank&#34;&gt;#13443&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull request: &lt;a href=&#34;https://github.com/boostorg/test/pull/112&#34; target=&#34;_blank&#34;&gt;#112&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/118&#34; target=&#34;_blank&#34;&gt;#118&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/121&#34; target=&#34;_blank&#34;&gt;#121&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/122&#34; target=&#34;_blank&#34;&gt;#122&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/125&#34; target=&#34;_blank&#34;&gt;#125&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/127&#34; target=&#34;_blank&#34;&gt;#127&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_index&#34; id=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;依存関係を減らすために、ContainerHashライブラリを使用するようにした&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/type_index/issues/17&#34; target=&#34;_blank&#34;&gt;GitHub #17&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#type_traits&#34; id=&#34;type_traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなトレイト&lt;code&gt;detected&lt;/code&gt;, &lt;code&gt;detected_or&lt;/code&gt;, &lt;code&gt;is_detected&lt;/code&gt;, &lt;code&gt;is_detected_convertible&lt;/code&gt;, &lt;code&gt;is_detected_exact&lt;/code&gt;, &lt;code&gt;is_complete&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;2項演算子の検出コードを大きく改善した&lt;/li&gt;
&lt;li&gt;完全型を引数の要件とするトレイトのために、完全性を検証するアサーションを追加。これによって、不完全型から誤った結果が出力されることを防げるようになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12212&#34; target=&#34;_blank&#34;&gt;Trac #12212&lt;/a&gt; MPL互換性の小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12003&#34; target=&#34;_blank&#34;&gt;Trac #12003&lt;/a&gt; &lt;code&gt;is_constructible&lt;/code&gt;が (可変引数テンプレートで) 完全に実装されたことを表すマクロ&lt;code&gt;BOOST_TT_IS_CONSTRUCTIBLE_CONFORMING&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++17の&lt;code&gt;noexcept&lt;/code&gt;仕様で正しく動作するよう、&lt;code&gt;is_function&lt;/code&gt;と&lt;code&gt;is_member_function_pointer&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_default_constructible&lt;/code&gt;と&lt;code&gt;std::pair&lt;/code&gt;向けのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;C++11より前の言語バージョン向けに、&lt;code&gt;is_nothrow_swappable&lt;/code&gt;の実装を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;boost::next&lt;/code&gt;と&lt;code&gt;boost::prior&lt;/code&gt;をIteratorモジュールに移動したため、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;に含まれないようになった。代わりに&lt;code&gt;&amp;lt;boost/next_prior.hpp&amp;gt;&lt;/code&gt;をインクルードすること。ほかの機能を使用する場合でも、&lt;code&gt;&amp;lt;boost/utility.hpp&amp;gt;&lt;/code&gt;ヘッダをインクルードすることは推奨しない。特定機能のヘッダをインクルードをする方がよいだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#units&#34; id=&#34;units&#34;&gt;Units&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10270&#34; target=&#34;_blank&#34;&gt;Trac #10270&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/units/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; scaled units (大きさの情報を持つ単位型) に対する&lt;code&gt;sqrt&lt;/code&gt;がコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/units/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;サポートを追加&lt;/li&gt;
&lt;li&gt;小さなドキュメント修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/uuid/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; &lt;code&gt;random_generator&lt;/code&gt;がコピー可能でなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/issues/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/46&#34; target=&#34;_blank&#34;&gt;GitHub #46&lt;/a&gt; プリプロセッサによる関数引数の生成やメタ関数生成の代わりに、可変引数テンプレートを使用するようにした。初期の修正を提供してくれたNikita Kniazev氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/40&#34; target=&#34;_blank&#34;&gt;GitHub 40&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13288&#34; target=&#34;_blank&#34;&gt;Trac #13288&lt;/a&gt; &lt;code&gt;apply_visitor&lt;/code&gt;からビジターへ引数を完全転送するよう修正。Paweł Dac氏に感謝&lt;/li&gt;
&lt;li&gt;小さな修正 (&lt;a href=&#34;https://github.com/boostorg/variant/pull/41&#34; target=&#34;_blank&#34;&gt;GitHub #41&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt;を含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>