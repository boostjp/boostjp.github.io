<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2025-04-11T14:42:14.621141</updated>
  <id>2afc1169-fa75-4062-945c-4d5d2da7cd69</id>

  
    <entry>
      <title>Boost 1.88.0リリースノート -- 1.88.0: 新ライブラリを記載</title>
      <link href="https://boostjp.github.io/document/version/1_88_0.html"/>
      <id>b6f0bed764635f80e8b07e36b1cead9950649759:document/version/1_88_0.md</id>
      <updated>2025-04-11T13:26:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.88.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_88_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_88_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/hana2&#34; target=&#34;_blank&#34;&gt;Hash2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;拡張性の高いハッシュ計算フレームワーク。作者Peter Dimov、Christian Mazakas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mqtt5&#34; target=&#34;_blank&#34;&gt;MQTT5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.Asio上に作られたMQTT5クライアント。作者Ivica Siladić、Bruno Iljazović、Korina Šimičević&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geomery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktreace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをAsciiDocに変換した（Christian Mazakas氏）&lt;/li&gt;
&lt;li&gt;必要な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;廃止された関数を非推奨とした&lt;/li&gt;
&lt;li&gt;廃止されたコンパイラワークアラウンドを削除した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;::begin()&lt;/code&gt;, &lt;code&gt;cbegin()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cend()&lt;/code&gt;を&lt;code&gt;nullptr&lt;/code&gt;を返すように変更し、&lt;code&gt;constexpr&lt;/code&gt;を有効にした。これは&lt;code&gt;std::array&lt;/code&gt;の挙動と一致する&lt;/li&gt;
&lt;li&gt;ローカルの&lt;code&gt;hash_value&lt;/code&gt;オーバーロードを削除した。&lt;code&gt;boost::hash&lt;/code&gt;は配列のような型をネイティブにサポートする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;&lt;/code&gt;は現在、&lt;code&gt;={}&lt;/code&gt;で初期化することができる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to_array&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local::basic_endpoint&lt;/code&gt;メンバ関数のいくつかに&lt;code&gt;noexcept&lt;/code&gt;修飾子を追加し、&lt;code&gt;ip::basic_endpoint&lt;/code&gt;と整合性を持たせた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::config&lt;/code&gt;クラスの整数値の処理を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;での「ムーブ後の使用エラー (use-after-move error)」を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;の実装における誤ったデフォルトテンプレート引数を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_uring&lt;/code&gt;実装を修正し、フォーク後に内部descriptorをリアクターに再登録しようとすることがないようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool&lt;/code&gt;のデフォルトコンストラクタで初期化されていないメンバを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::span&lt;/code&gt;を&lt;code&gt;boost::asio::buffer&lt;/code&gt;関数に渡した際に生じた曖昧なオーバーロード問題を修正した&lt;/li&gt;
&lt;li&gt;非推奨のbuffer機能の削除後に残っていた一部の偽のマクロ定義を削除した&lt;/li&gt;
&lt;li&gt;ファイルオープン時の&lt;code&gt;file_base::flags&lt;/code&gt;の使用について明確化するドキュメントを追加した&lt;/li&gt;
&lt;li&gt;利用可能なランタイム設定オプションについての概要ドキュメントを追加した&lt;/li&gt;
&lt;li&gt;完了トークンとして&lt;code&gt;deferred&lt;/code&gt;がデフォルトで使用されるように、概要ドキュメントを更新した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;のドキュメントを更新し、現在の型要件がトレイトの特殊化部分に置かれていることを反映した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT_HANDLER_IS_NORETURN&lt;/code&gt;が定義されている場合、&lt;code&gt;boost::assertion_failed&lt;/code&gt;と&lt;code&gt;boost::assertion_failed_msg&lt;/code&gt;は&lt;code&gt;BOOST_NORETURN&lt;/code&gt;として宣言される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iequals&lt;/code&gt;関数での範囲外アクセスを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;SSLの例をアップデートし、ピア証明書のホスト名を検証するよう修正&lt;/li&gt;
&lt;li&gt;CMakeListsをリファクタリング&lt;/li&gt;
&lt;li&gt;例からBoost.Scopeへの依存関係を削除&lt;/li&gt;
&lt;li&gt;WebSocketのピアへのpingがアクティビティとしてカウントされるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;Unixドメインソケットの新しい例を追加&lt;/li&gt;
&lt;li&gt;ドキュメントにSSL/TLS証明書セクションを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocket::stream::async_close&lt;/code&gt;のドキュメントを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Morten M. Neergaard氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;サンプルコードとライブラリコードに、現代的なC++を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/82&#34; target=&#34;_blank&#34;&gt;GitHub #82&lt;/a&gt; &lt;code&gt;boost::dll::shared_library&lt;/code&gt;への &lt;code&gt;native_handle_t&lt;/code&gt;からのコンストラクタを追加 (Tiago Matos氏に感謝)&lt;/li&gt;
&lt;li&gt;Spirit, SmartPtr, Move, TypeTraits, Functionなど他のBoostライブラリへの依存関係を排除で、DLLのコンパイルが軽量化した&lt;/li&gt;
&lt;li&gt;APIでの&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;が&lt;code&gt;boost::system::error_code&amp;amp;&lt;/code&gt;の代わりに使われるようになった。&lt;code&gt;boost::system::error_code&lt;/code&gt;は&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;に変換可能なため破壊的な変更ではない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll:import_*&lt;/code&gt;関数が&lt;code&gt;std::shared_ptr&lt;/code&gt;を返すように変更。古い挙動を復元するために&lt;code&gt;BOOST_DLL_USE_BOOST_SHARED_PTR&lt;/code&gt;を定義した。ただし、このマクロは今後のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;サンプルとライブラリコードで現代的なC++を使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll::library_info&lt;/code&gt;が壊れたバイナリの場合は常に例外を送出するよう修正。ドキュメントを更新してテストを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RTLD_NODELETE&lt;/code&gt;が欠けている理由と&lt;code&gt;.release()&lt;/code&gt;メソッドがない理由をFAQで説明を追加。可能なワークアラウンドを提供する&lt;/li&gt;
&lt;li&gt;ライブラリのビルドと使用に関する情報を更新。CMakeターゲットはプラットフォームに必要な場合に「&lt;code&gt;-ldl&lt;/code&gt;」でリンクすること&lt;/li&gt;
&lt;li&gt;Windows OSの長いパスに対する&lt;code&gt;detail::path_from_handle&lt;/code&gt;実装を修正&lt;/li&gt;
&lt;li&gt;ドキュメントで&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分が実験的で未完成であることを強調&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分の多数のマングリング問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geomery&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1370&#34; target=&#34;_blank&#34;&gt;GitHub #1370&lt;/a&gt; 球面正規化の半周期チェックを緩和&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1368&#34; target=&#34;_blank&#34;&gt;GitHub #1368&lt;/a&gt; rtreeのspatial述語でのumbrella戦略をパス&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1367&#34; target=&#34;_blank&#34;&gt;GitHub #1367&lt;/a&gt; 横断の改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1361&#34; target=&#34;_blank&#34;&gt;GitHub #1361&lt;/a&gt; 整数座標を持つランダムグリッド上での集合操作をテスト&lt;/li&gt;
&lt;li&gt;複数のテストケースを追加&lt;/li&gt;
&lt;li&gt;コードの一部でtypedefの代わりにusingを使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1364&#34; target=&#34;_blank&#34;&gt;GitHub #1364&lt;/a&gt; 複数の戦略を修正 (getterの追加、コンパイルエラーと警告の修正)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/629&#34; target=&#34;_blank&#34;&gt;GitHub #629&lt;/a&gt; 座標変換と未使用パラメータの警告を避ける&lt;/li&gt;
&lt;li&gt;エラーと警告の各種修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maximum_weighted_matching&lt;/code&gt;の実装を置換し、複数の問題を解決&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;が使用される前に初期化されているよう事前条件を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing&lt;/code&gt;のカスタムジオメトリコードをBoost.Geometryに置換し、非常に小さい角度での結果が正しくなるように修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undirected_dfs&lt;/code&gt;での&lt;code&gt;finish_edge&lt;/code&gt;への不正なコールバックを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンス向上&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adjacency_list&lt;/code&gt;: &lt;code&gt;vector&lt;/code&gt;ベースのストレージ内の&lt;code&gt;add_vertex&lt;/code&gt;から&lt;code&gt;resize&lt;/code&gt;/&lt;code&gt;reserve&lt;/code&gt;への不必要な呼び出しを削除。速度計測では、グラフ構築の時間が10％改善した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lengauer_tarjan_dominator_tree&lt;/code&gt;: &lt;code&gt;std::deque&lt;/code&gt;を&lt;code&gt;std::vector&lt;/code&gt;に置換し、大きなグラフでは約40%の改善を達成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一般的な改良点&lt;ul&gt;
&lt;li&gt;いくつかのBoostユーティリティの使用をC++14言語機能で置き換え&lt;/li&gt;
&lt;li&gt;例をC++14言語特性で現代化&lt;/li&gt;
&lt;li&gt;ドキュメンテーションとビルドシステムのさまざまな修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vertex_by_property&lt;/code&gt;がミュータブルなグラフを必要としなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cycle_canceling&lt;/code&gt;とClang 19のコンパイル問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必要なICUバージョンを4.8.1以上に引き上げ&lt;/li&gt;
&lt;li&gt;ICU 50.1のサポートを終了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; 浮動小数点形式の入力文字列での整数のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; ICUバックエンドでの&lt;code&gt;uint64_t&lt;/code&gt;値のパースとフォーマットをサポート&lt;/li&gt;
&lt;li&gt;より広いプラットフォームでの&lt;code&gt;char8_t&lt;/code&gt;サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lockfree&#34; id=&#34;lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たな&lt;code&gt;spsc_value&lt;/code&gt;を追加、トリプルバッファに基づくロックフリーのsingle-producer / single-consumer値&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降のモードで&lt;code&gt;std::codecvt&amp;lt;char16_t&amp;gt;&lt;/code&gt;と&lt;code&gt;std::codecvt&amp;lt;char32_t&amp;gt;&lt;/code&gt;のロケールのファセットの使用を無効化、これらはC++20で非推奨となったため、これは&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;への・からの文字コード変換がC++20以降で利用できなくなることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; CMakeとMinGW-w64を使用した時のビルド問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;が既存のファイルに追記するように設定された場合、アクティブに書き込まれたファイル名パターンにカウンタプレースホルダーがなく、ターゲットファイル名パターンにはあった場合、およびログファイルが直接ターゲットストレージに書き込まれた場合に使用された不正なファイルカウンタを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非整数値に対する&lt;code&gt;mp_from_sequence&lt;/code&gt;を修正 (1.83.0でオフセットサポートの影響で誤って壊れていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;connection_pool&lt;/code&gt;は、セッション確立中の多くの接続が存在する場合でも、正しくリサイズするようになった。古いアルゴリズムでは、特定の条件下でプールが期待通りにリサイズされない可能性があった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/408&#34; target=&#34;_blank&#34;&gt;GitHub #408&lt;/a&gt; &lt;code&gt;any_connection::connection_id&lt;/code&gt;を追加。この関数は接続のIDを取得し、その後、&lt;code&gt;KILL&lt;/code&gt; SQLステートメントでクエリをキャンセルするために使用できる。この関数は公式のC APIの&lt;code&gt;mysql_thread_id&lt;/code&gt;と等価である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/405&#34; target=&#34;_blank&#34;&gt;GitHub #405&lt;/a&gt; 別の操作が進行中の&lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;で非同期操作を開始しようとすると、未定義の動作を引き起こすことがなくなった。代わりに&lt;code&gt;client_errc::operation_in_progress&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/448&#34; target=&#34;_blank&#34;&gt;GitHub #448&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;がマルチファンクション操作に従事している間に操作を開始しようとすると、潜在的に危険なパケットの不一致が発生することがなくなった。代わりに&lt;code&gt;client_errc::engaged_in_multi_function&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/450&#34; target=&#34;_blank&#34;&gt;GitHub #450&lt;/a&gt; セッションが確立していない接続を使用しようとするときの診断を改善。操作は&lt;code&gt;client_errc::not_connected&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;と&lt;code&gt;any_connection&lt;/code&gt;の操作ごとのキャンセルに関する競争条件を修正。以前のバージョンでは、中間の非同期操作が完了した後、しかしそのハンドラが呼び出される前にキャンセル信号が発生した場合、信号は無視されていた。これはもはやそうではなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field&lt;/code&gt;のコンストラクタと&lt;code&gt;std::string_view&lt;/code&gt;からの代入は、C++20ではなくC++17で利用可能になった。これらの関数は、C++20でのみ利用可能な標準の機能テストマクロによってガードされていました。これらはBoost.Configと同等のものに置き換えられた&lt;/li&gt;
&lt;li&gt;C++20のコルーチンを用いたHTTPサーバーの例を追加&lt;/li&gt;
&lt;li&gt;同期コードと非同期コードのインターフェイスに関するドキュメントページを追加。これはレースコンディションを含んだ同期接続プールのスニペットを置き換える&lt;/li&gt;
&lt;li&gt;他のいくつかの例とドキュメントページを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/191&#34; target=&#34;_blank&#34;&gt;GitHub #191&lt;/a&gt; &lt;code&gt;getenv&lt;/code&gt;をスレッドセーフにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#poly_collection&#34; id=&#34;poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::variant_collection&lt;/code&gt;を追加、&lt;code&gt;std::vector&amp;lt;std::variant&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;と似た振る舞いをする閉じた多態コレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart_ptr&#34; id=&#34;smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ワイドストリーム用の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を修正 (偶然1.87.0で壊れてしまっていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/198&#34; target=&#34;_blank&#34;&gt;GitHub #198&lt;/a&gt; MSVC実装で完全なモジュールパスを決定するために&lt;code&gt;GetModuleNames&lt;/code&gt;を使用するよう修正 (&lt;a href=&#34;https://github.com/Dani-Hub&#34; target=&#34;_blank&#34;&gt;Daniel Krügler&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt; ベースアドレスを知らなくても後でアドレスをデコードできるように、相対アドレスを印字した。このロジックは&lt;code&gt;BOOST_STACKTRACE_DISABLE_OFFSET_ADDR_BASE&lt;/code&gt;を定義することで無効化できる (&lt;a href=&#34;https://github.com/McCzarny&#34; target=&#34;_blank&#34;&gt;Maciej Czarnecki&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt; すべてのstacktraceライブラリをB2機能として公開。ビルドの制御をより良くし、どのライブラリがビルドされるかの明確な情報を提供。詳細は「Configuration and Build」セクションを参照 (&lt;a href=&#34;https://github.com/uilianries&#34; target=&#34;_blank&#34;&gt;Uilian Ries&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;MinGWでの&lt;code&gt;stacktrace_from_exception&lt;/code&gt;ビルドを修正 (&lt;a href=&#34;https://github.com/crhilton&#34; target=&#34;_blank&#34;&gt;crhilton&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.84で導入され、ライブラリをclang-20でビルドできないようにしたUBを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメンテーションをAntoraを使用したマルチページフォーマットに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;インデックスに適切な最小の符号なし型を使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.88.0リリースノート -- 1.88.0: テストコンパイラを記載</title>
      <link href="https://boostjp.github.io/document/version/1_88_0.html"/>
      <id>5b0e991b442b7780d9bb24a3d8d895a3ab8653eb:document/version/1_88_0.md</id>
      <updated>2025-04-11T13:13:08+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.88.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_88_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_88_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;p&gt;なし&lt;/p&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geomery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktreace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをAsciiDocに変換した（Christian Mazakas氏）&lt;/li&gt;
&lt;li&gt;必要な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;廃止された関数を非推奨とした&lt;/li&gt;
&lt;li&gt;廃止されたコンパイラワークアラウンドを削除した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;::begin()&lt;/code&gt;, &lt;code&gt;cbegin()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cend()&lt;/code&gt;を&lt;code&gt;nullptr&lt;/code&gt;を返すように変更し、&lt;code&gt;constexpr&lt;/code&gt;を有効にした。これは&lt;code&gt;std::array&lt;/code&gt;の挙動と一致する&lt;/li&gt;
&lt;li&gt;ローカルの&lt;code&gt;hash_value&lt;/code&gt;オーバーロードを削除した。&lt;code&gt;boost::hash&lt;/code&gt;は配列のような型をネイティブにサポートする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;&lt;/code&gt;は現在、&lt;code&gt;={}&lt;/code&gt;で初期化することができる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to_array&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local::basic_endpoint&lt;/code&gt;メンバ関数のいくつかに&lt;code&gt;noexcept&lt;/code&gt;修飾子を追加し、&lt;code&gt;ip::basic_endpoint&lt;/code&gt;と整合性を持たせた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::config&lt;/code&gt;クラスの整数値の処理を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;での「ムーブ後の使用エラー (use-after-move error)」を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;の実装における誤ったデフォルトテンプレート引数を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_uring&lt;/code&gt;実装を修正し、フォーク後に内部descriptorをリアクターに再登録しようとすることがないようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool&lt;/code&gt;のデフォルトコンストラクタで初期化されていないメンバを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::span&lt;/code&gt;を&lt;code&gt;boost::asio::buffer&lt;/code&gt;関数に渡した際に生じた曖昧なオーバーロード問題を修正した&lt;/li&gt;
&lt;li&gt;非推奨のbuffer機能の削除後に残っていた一部の偽のマクロ定義を削除した&lt;/li&gt;
&lt;li&gt;ファイルオープン時の&lt;code&gt;file_base::flags&lt;/code&gt;の使用について明確化するドキュメントを追加した&lt;/li&gt;
&lt;li&gt;利用可能なランタイム設定オプションについての概要ドキュメントを追加した&lt;/li&gt;
&lt;li&gt;完了トークンとして&lt;code&gt;deferred&lt;/code&gt;がデフォルトで使用されるように、概要ドキュメントを更新した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;のドキュメントを更新し、現在の型要件がトレイトの特殊化部分に置かれていることを反映した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT_HANDLER_IS_NORETURN&lt;/code&gt;が定義されている場合、&lt;code&gt;boost::assertion_failed&lt;/code&gt;と&lt;code&gt;boost::assertion_failed_msg&lt;/code&gt;は&lt;code&gt;BOOST_NORETURN&lt;/code&gt;として宣言される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iequals&lt;/code&gt;関数での範囲外アクセスを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;SSLの例をアップデートし、ピア証明書のホスト名を検証するよう修正&lt;/li&gt;
&lt;li&gt;CMakeListsをリファクタリング&lt;/li&gt;
&lt;li&gt;例からBoost.Scopeへの依存関係を削除&lt;/li&gt;
&lt;li&gt;WebSocketのピアへのpingがアクティビティとしてカウントされるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;Unixドメインソケットの新しい例を追加&lt;/li&gt;
&lt;li&gt;ドキュメントにSSL/TLS証明書セクションを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocket::stream::async_close&lt;/code&gt;のドキュメントを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Morten M. Neergaard氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;サンプルコードとライブラリコードに、現代的なC++を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/82&#34; target=&#34;_blank&#34;&gt;GitHub #82&lt;/a&gt; &lt;code&gt;boost::dll::shared_library&lt;/code&gt;への &lt;code&gt;native_handle_t&lt;/code&gt;からのコンストラクタを追加 (Tiago Matos氏に感謝)&lt;/li&gt;
&lt;li&gt;Spirit, SmartPtr, Move, TypeTraits, Functionなど他のBoostライブラリへの依存関係を排除で、DLLのコンパイルが軽量化した&lt;/li&gt;
&lt;li&gt;APIでの&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;が&lt;code&gt;boost::system::error_code&amp;amp;&lt;/code&gt;の代わりに使われるようになった。&lt;code&gt;boost::system::error_code&lt;/code&gt;は&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;に変換可能なため破壊的な変更ではない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll:import_*&lt;/code&gt;関数が&lt;code&gt;std::shared_ptr&lt;/code&gt;を返すように変更。古い挙動を復元するために&lt;code&gt;BOOST_DLL_USE_BOOST_SHARED_PTR&lt;/code&gt;を定義した。ただし、このマクロは今後のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;サンプルとライブラリコードで現代的なC++を使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll::library_info&lt;/code&gt;が壊れたバイナリの場合は常に例外を送出するよう修正。ドキュメントを更新してテストを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RTLD_NODELETE&lt;/code&gt;が欠けている理由と&lt;code&gt;.release()&lt;/code&gt;メソッドがない理由をFAQで説明を追加。可能なワークアラウンドを提供する&lt;/li&gt;
&lt;li&gt;ライブラリのビルドと使用に関する情報を更新。CMakeターゲットはプラットフォームに必要な場合に「&lt;code&gt;-ldl&lt;/code&gt;」でリンクすること&lt;/li&gt;
&lt;li&gt;Windows OSの長いパスに対する&lt;code&gt;detail::path_from_handle&lt;/code&gt;実装を修正&lt;/li&gt;
&lt;li&gt;ドキュメントで&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分が実験的で未完成であることを強調&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分の多数のマングリング問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geomery&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1370&#34; target=&#34;_blank&#34;&gt;GitHub #1370&lt;/a&gt; 球面正規化の半周期チェックを緩和&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1368&#34; target=&#34;_blank&#34;&gt;GitHub #1368&lt;/a&gt; rtreeのspatial述語でのumbrella戦略をパス&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1367&#34; target=&#34;_blank&#34;&gt;GitHub #1367&lt;/a&gt; 横断の改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1361&#34; target=&#34;_blank&#34;&gt;GitHub #1361&lt;/a&gt; 整数座標を持つランダムグリッド上での集合操作をテスト&lt;/li&gt;
&lt;li&gt;複数のテストケースを追加&lt;/li&gt;
&lt;li&gt;コードの一部でtypedefの代わりにusingを使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1364&#34; target=&#34;_blank&#34;&gt;GitHub #1364&lt;/a&gt; 複数の戦略を修正 (getterの追加、コンパイルエラーと警告の修正)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/629&#34; target=&#34;_blank&#34;&gt;GitHub #629&lt;/a&gt; 座標変換と未使用パラメータの警告を避ける&lt;/li&gt;
&lt;li&gt;エラーと警告の各種修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maximum_weighted_matching&lt;/code&gt;の実装を置換し、複数の問題を解決&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;が使用される前に初期化されているよう事前条件を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing&lt;/code&gt;のカスタムジオメトリコードをBoost.Geometryに置換し、非常に小さい角度での結果が正しくなるように修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undirected_dfs&lt;/code&gt;での&lt;code&gt;finish_edge&lt;/code&gt;への不正なコールバックを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンス向上&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adjacency_list&lt;/code&gt;: &lt;code&gt;vector&lt;/code&gt;ベースのストレージ内の&lt;code&gt;add_vertex&lt;/code&gt;から&lt;code&gt;resize&lt;/code&gt;/&lt;code&gt;reserve&lt;/code&gt;への不必要な呼び出しを削除。速度計測では、グラフ構築の時間が10％改善した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lengauer_tarjan_dominator_tree&lt;/code&gt;: &lt;code&gt;std::deque&lt;/code&gt;を&lt;code&gt;std::vector&lt;/code&gt;に置換し、大きなグラフでは約40%の改善を達成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一般的な改良点&lt;ul&gt;
&lt;li&gt;いくつかのBoostユーティリティの使用をC++14言語機能で置き換え&lt;/li&gt;
&lt;li&gt;例をC++14言語特性で現代化&lt;/li&gt;
&lt;li&gt;ドキュメンテーションとビルドシステムのさまざまな修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vertex_by_property&lt;/code&gt;がミュータブルなグラフを必要としなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cycle_canceling&lt;/code&gt;とClang 19のコンパイル問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必要なICUバージョンを4.8.1以上に引き上げ&lt;/li&gt;
&lt;li&gt;ICU 50.1のサポートを終了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; 浮動小数点形式の入力文字列での整数のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; ICUバックエンドでの&lt;code&gt;uint64_t&lt;/code&gt;値のパースとフォーマットをサポート&lt;/li&gt;
&lt;li&gt;より広いプラットフォームでの&lt;code&gt;char8_t&lt;/code&gt;サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lockfree&#34; id=&#34;lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たな&lt;code&gt;spsc_value&lt;/code&gt;を追加、トリプルバッファに基づくロックフリーのsingle-producer / single-consumer値&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降のモードで&lt;code&gt;std::codecvt&amp;lt;char16_t&amp;gt;&lt;/code&gt;と&lt;code&gt;std::codecvt&amp;lt;char32_t&amp;gt;&lt;/code&gt;のロケールのファセットの使用を無効化、これらはC++20で非推奨となったため、これは&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;への・からの文字コード変換がC++20以降で利用できなくなることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; CMakeとMinGW-w64を使用した時のビルド問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;が既存のファイルに追記するように設定された場合、アクティブに書き込まれたファイル名パターンにカウンタプレースホルダーがなく、ターゲットファイル名パターンにはあった場合、およびログファイルが直接ターゲットストレージに書き込まれた場合に使用された不正なファイルカウンタを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非整数値に対する&lt;code&gt;mp_from_sequence&lt;/code&gt;を修正 (1.83.0でオフセットサポートの影響で誤って壊れていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;connection_pool&lt;/code&gt;は、セッション確立中の多くの接続が存在する場合でも、正しくリサイズするようになった。古いアルゴリズムでは、特定の条件下でプールが期待通りにリサイズされない可能性があった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/408&#34; target=&#34;_blank&#34;&gt;GitHub #408&lt;/a&gt; &lt;code&gt;any_connection::connection_id&lt;/code&gt;を追加。この関数は接続のIDを取得し、その後、&lt;code&gt;KILL&lt;/code&gt; SQLステートメントでクエリをキャンセルするために使用できる。この関数は公式のC APIの&lt;code&gt;mysql_thread_id&lt;/code&gt;と等価である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/405&#34; target=&#34;_blank&#34;&gt;GitHub #405&lt;/a&gt; 別の操作が進行中の&lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;で非同期操作を開始しようとすると、未定義の動作を引き起こすことがなくなった。代わりに&lt;code&gt;client_errc::operation_in_progress&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/448&#34; target=&#34;_blank&#34;&gt;GitHub #448&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;がマルチファンクション操作に従事している間に操作を開始しようとすると、潜在的に危険なパケットの不一致が発生することがなくなった。代わりに&lt;code&gt;client_errc::engaged_in_multi_function&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/450&#34; target=&#34;_blank&#34;&gt;GitHub #450&lt;/a&gt; セッションが確立していない接続を使用しようとするときの診断を改善。操作は&lt;code&gt;client_errc::not_connected&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;と&lt;code&gt;any_connection&lt;/code&gt;の操作ごとのキャンセルに関する競争条件を修正。以前のバージョンでは、中間の非同期操作が完了した後、しかしそのハンドラが呼び出される前にキャンセル信号が発生した場合、信号は無視されていた。これはもはやそうではなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field&lt;/code&gt;のコンストラクタと&lt;code&gt;std::string_view&lt;/code&gt;からの代入は、C++20ではなくC++17で利用可能になった。これらの関数は、C++20でのみ利用可能な標準の機能テストマクロによってガードされていました。これらはBoost.Configと同等のものに置き換えられた&lt;/li&gt;
&lt;li&gt;C++20のコルーチンを用いたHTTPサーバーの例を追加&lt;/li&gt;
&lt;li&gt;同期コードと非同期コードのインターフェイスに関するドキュメントページを追加。これはレースコンディションを含んだ同期接続プールのスニペットを置き換える&lt;/li&gt;
&lt;li&gt;他のいくつかの例とドキュメントページを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/191&#34; target=&#34;_blank&#34;&gt;GitHub #191&lt;/a&gt; &lt;code&gt;getenv&lt;/code&gt;をスレッドセーフにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#poly_collection&#34; id=&#34;poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::variant_collection&lt;/code&gt;を追加、&lt;code&gt;std::vector&amp;lt;std::variant&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;と似た振る舞いをする閉じた多態コレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart_ptr&#34; id=&#34;smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ワイドストリーム用の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を修正 (偶然1.87.0で壊れてしまっていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/198&#34; target=&#34;_blank&#34;&gt;GitHub #198&lt;/a&gt; MSVC実装で完全なモジュールパスを決定するために&lt;code&gt;GetModuleNames&lt;/code&gt;を使用するよう修正 (&lt;a href=&#34;https://github.com/Dani-Hub&#34; target=&#34;_blank&#34;&gt;Daniel Krügler&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt; ベースアドレスを知らなくても後でアドレスをデコードできるように、相対アドレスを印字した。このロジックは&lt;code&gt;BOOST_STACKTRACE_DISABLE_OFFSET_ADDR_BASE&lt;/code&gt;を定義することで無効化できる (&lt;a href=&#34;https://github.com/McCzarny&#34; target=&#34;_blank&#34;&gt;Maciej Czarnecki&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt; すべてのstacktraceライブラリをB2機能として公開。ビルドの制御をより良くし、どのライブラリがビルドされるかの明確な情報を提供。詳細は「Configuration and Build」セクションを参照 (&lt;a href=&#34;https://github.com/uilianries&#34; target=&#34;_blank&#34;&gt;Uilian Ries&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;MinGWでの&lt;code&gt;stacktrace_from_exception&lt;/code&gt;ビルドを修正 (&lt;a href=&#34;https://github.com/crhilton&#34; target=&#34;_blank&#34;&gt;crhilton&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.84で導入され、ライブラリをclang-20でビルドできないようにしたUBを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメンテーションをAntoraを使用したマルチページフォーマットに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;インデックスに適切な最小の符号なし型を使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リリースノート -- 1.88.0のリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version.html"/>
      <id>fe72e3074bd08ba35379d705b16003d68e3c9a90:document/version.md</id>
      <updated>2025-04-03T14:19:19+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;以下は、Boostの各バージョンのリリースノートを翻訳、情報補完したドキュメントです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;version/template.html&#34;&gt;雛形ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;version/1_88_0.html&#34;&gt;1.88.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_87_0.html&#34;&gt;1.87.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_86_0.html&#34;&gt;1.86.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_85_0.html&#34;&gt;1.85.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_84_0.html&#34;&gt;1.84.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_83_0.html&#34;&gt;1.83.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_82_0.html&#34;&gt;1.82.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_81_0.html&#34;&gt;1.81.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_80_0.html&#34;&gt;1.80.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_79_0.html&#34;&gt;1.79.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_78_0.html&#34;&gt;1.78.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_77_0.html&#34;&gt;1.77.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_76_0.html&#34;&gt;1.76.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_75_0.html&#34;&gt;1.75.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_74_0.html&#34;&gt;1.74.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_73_0.html&#34;&gt;1.73.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_72_0.html&#34;&gt;1.72.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_71_0.html&#34;&gt;1.71.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_70_0.html&#34;&gt;1.70.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_69_0.html&#34;&gt;1.69.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_68_0.html&#34;&gt;1.68.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_67_0.html&#34;&gt;1.67.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_66_0.html&#34;&gt;1.66.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_65_1.html&#34;&gt;1.65.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_65_0.html&#34;&gt;1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_64_0.html&#34;&gt;1.64.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_63_0.html&#34;&gt;1.63.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_62_0.html&#34;&gt;1.62.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_61_0.html&#34;&gt;1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_60_0.html&#34;&gt;1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_59_0.html&#34;&gt;1.59.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_58_0.html&#34;&gt;1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_57_0.html&#34;&gt;1.57.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_56_0.html&#34;&gt;1.56.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_55_0.html&#34;&gt;1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_54_0.html&#34;&gt;1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_53_0.html&#34;&gt;1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_52_0.html&#34;&gt;1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_51_0.html&#34;&gt;1.51.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_50_0.html&#34;&gt;1.50.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_49_0.html&#34;&gt;1.49.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_48_0.html&#34;&gt;1.48.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_47_0.html&#34;&gt;1.47.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_46_1.html&#34;&gt;1.46.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_46_0.html&#34;&gt;1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_45_0.html&#34;&gt;1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.88.0リリースノート -- 1.88.0のリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version/1_88_0.html"/>
      <id>fe72e3074bd08ba35379d705b16003d68e3c9a90:document/version/1_88_0.md</id>
      <updated>2025-04-03T14:19:19+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.88.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_88_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_88_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;p&gt;なし&lt;/p&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geomery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktreace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをAsciiDocに変換した（Christian Mazakas氏）&lt;/li&gt;
&lt;li&gt;必要な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;廃止された関数を非推奨とした&lt;/li&gt;
&lt;li&gt;廃止されたコンパイラワークアラウンドを削除した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;::begin()&lt;/code&gt;, &lt;code&gt;cbegin()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cend()&lt;/code&gt;を&lt;code&gt;nullptr&lt;/code&gt;を返すように変更し、&lt;code&gt;constexpr&lt;/code&gt;を有効にした。これは&lt;code&gt;std::array&lt;/code&gt;の挙動と一致する&lt;/li&gt;
&lt;li&gt;ローカルの&lt;code&gt;hash_value&lt;/code&gt;オーバーロードを削除した。&lt;code&gt;boost::hash&lt;/code&gt;は配列のような型をネイティブにサポートする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;&lt;/code&gt;は現在、&lt;code&gt;={}&lt;/code&gt;で初期化することができる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to_array&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local::basic_endpoint&lt;/code&gt;メンバ関数のいくつかに&lt;code&gt;noexcept&lt;/code&gt;修飾子を追加し、&lt;code&gt;ip::basic_endpoint&lt;/code&gt;と整合性を持たせた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::config&lt;/code&gt;クラスの整数値の処理を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;での「ムーブ後の使用エラー (use-after-move error)」を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;の実装における誤ったデフォルトテンプレート引数を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_uring&lt;/code&gt;実装を修正し、フォーク後に内部descriptorをリアクターに再登録しようとすることがないようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool&lt;/code&gt;のデフォルトコンストラクタで初期化されていないメンバを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::span&lt;/code&gt;を&lt;code&gt;boost::asio::buffer&lt;/code&gt;関数に渡した際に生じた曖昧なオーバーロード問題を修正した&lt;/li&gt;
&lt;li&gt;非推奨のbuffer機能の削除後に残っていた一部の偽のマクロ定義を削除した&lt;/li&gt;
&lt;li&gt;ファイルオープン時の&lt;code&gt;file_base::flags&lt;/code&gt;の使用について明確化するドキュメントを追加した&lt;/li&gt;
&lt;li&gt;利用可能なランタイム設定オプションについての概要ドキュメントを追加した&lt;/li&gt;
&lt;li&gt;完了トークンとして&lt;code&gt;deferred&lt;/code&gt;がデフォルトで使用されるように、概要ドキュメントを更新した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;のドキュメントを更新し、現在の型要件がトレイトの特殊化部分に置かれていることを反映した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT_HANDLER_IS_NORETURN&lt;/code&gt;が定義されている場合、&lt;code&gt;boost::assertion_failed&lt;/code&gt;と&lt;code&gt;boost::assertion_failed_msg&lt;/code&gt;は&lt;code&gt;BOOST_NORETURN&lt;/code&gt;として宣言される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iequals&lt;/code&gt;関数での範囲外アクセスを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;SSLの例をアップデートし、ピア証明書のホスト名を検証するよう修正&lt;/li&gt;
&lt;li&gt;CMakeListsをリファクタリング&lt;/li&gt;
&lt;li&gt;例からBoost.Scopeへの依存関係を削除&lt;/li&gt;
&lt;li&gt;WebSocketのピアへのpingがアクティビティとしてカウントされるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;Unixドメインソケットの新しい例を追加&lt;/li&gt;
&lt;li&gt;ドキュメントにSSL/TLS証明書セクションを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocket::stream::async_close&lt;/code&gt;のドキュメントを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Morten M. Neergaard氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;サンプルコードとライブラリコードに、現代的なC++を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/82&#34; target=&#34;_blank&#34;&gt;GitHub #82&lt;/a&gt; &lt;code&gt;boost::dll::shared_library&lt;/code&gt;への &lt;code&gt;native_handle_t&lt;/code&gt;からのコンストラクタを追加 (Tiago Matos氏に感謝)&lt;/li&gt;
&lt;li&gt;Spirit, SmartPtr, Move, TypeTraits, Functionなど他のBoostライブラリへの依存関係を排除で、DLLのコンパイルが軽量化した&lt;/li&gt;
&lt;li&gt;APIでの&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;が&lt;code&gt;boost::system::error_code&amp;amp;&lt;/code&gt;の代わりに使われるようになった。&lt;code&gt;boost::system::error_code&lt;/code&gt;は&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;に変換可能なため破壊的な変更ではない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll:import_*&lt;/code&gt;関数が&lt;code&gt;std::shared_ptr&lt;/code&gt;を返すように変更。古い挙動を復元するために&lt;code&gt;BOOST_DLL_USE_BOOST_SHARED_PTR&lt;/code&gt;を定義した。ただし、このマクロは今後のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;サンプルとライブラリコードで現代的なC++を使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll::library_info&lt;/code&gt;が壊れたバイナリの場合は常に例外を送出するよう修正。ドキュメントを更新してテストを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RTLD_NODELETE&lt;/code&gt;が欠けている理由と&lt;code&gt;.release()&lt;/code&gt;メソッドがない理由をFAQで説明を追加。可能なワークアラウンドを提供する&lt;/li&gt;
&lt;li&gt;ライブラリのビルドと使用に関する情報を更新。CMakeターゲットはプラットフォームに必要な場合に「&lt;code&gt;-ldl&lt;/code&gt;」でリンクすること&lt;/li&gt;
&lt;li&gt;Windows OSの長いパスに対する&lt;code&gt;detail::path_from_handle&lt;/code&gt;実装を修正&lt;/li&gt;
&lt;li&gt;ドキュメントで&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分が実験的で未完成であることを強調&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分の多数のマングリング問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geomery&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1370&#34; target=&#34;_blank&#34;&gt;GitHub #1370&lt;/a&gt; 球面正規化の半周期チェックを緩和&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1368&#34; target=&#34;_blank&#34;&gt;GitHub #1368&lt;/a&gt; rtreeのspatial述語でのumbrella戦略をパス&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1367&#34; target=&#34;_blank&#34;&gt;GitHub #1367&lt;/a&gt; 横断の改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1361&#34; target=&#34;_blank&#34;&gt;GitHub #1361&lt;/a&gt; 整数座標を持つランダムグリッド上での集合操作をテスト&lt;/li&gt;
&lt;li&gt;複数のテストケースを追加&lt;/li&gt;
&lt;li&gt;コードの一部でtypedefの代わりにusingを使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1364&#34; target=&#34;_blank&#34;&gt;GitHub #1364&lt;/a&gt; 複数の戦略を修正 (getterの追加、コンパイルエラーと警告の修正)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/629&#34; target=&#34;_blank&#34;&gt;GitHub #629&lt;/a&gt; 座標変換と未使用パラメータの警告を避ける&lt;/li&gt;
&lt;li&gt;エラーと警告の各種修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maximum_weighted_matching&lt;/code&gt;の実装を置換し、複数の問題を解決&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;が使用される前に初期化されているよう事前条件を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing&lt;/code&gt;のカスタムジオメトリコードをBoost.Geometryに置換し、非常に小さい角度での結果が正しくなるように修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undirected_dfs&lt;/code&gt;での&lt;code&gt;finish_edge&lt;/code&gt;への不正なコールバックを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンス向上&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adjacency_list&lt;/code&gt;: &lt;code&gt;vector&lt;/code&gt;ベースのストレージ内の&lt;code&gt;add_vertex&lt;/code&gt;から&lt;code&gt;resize&lt;/code&gt;/&lt;code&gt;reserve&lt;/code&gt;への不必要な呼び出しを削除。速度計測では、グラフ構築の時間が10％改善した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lengauer_tarjan_dominator_tree&lt;/code&gt;: &lt;code&gt;std::deque&lt;/code&gt;を&lt;code&gt;std::vector&lt;/code&gt;に置換し、大きなグラフでは約40%の改善を達成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一般的な改良点&lt;ul&gt;
&lt;li&gt;いくつかのBoostユーティリティの使用をC++14言語機能で置き換え&lt;/li&gt;
&lt;li&gt;例をC++14言語特性で現代化&lt;/li&gt;
&lt;li&gt;ドキュメンテーションとビルドシステムのさまざまな修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vertex_by_property&lt;/code&gt;がミュータブルなグラフを必要としなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cycle_canceling&lt;/code&gt;とClang 19のコンパイル問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必要なICUバージョンを4.8.1以上に引き上げ&lt;/li&gt;
&lt;li&gt;ICU 50.1のサポートを終了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; 浮動小数点形式の入力文字列での整数のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; ICUバックエンドでの&lt;code&gt;uint64_t&lt;/code&gt;値のパースとフォーマットをサポート&lt;/li&gt;
&lt;li&gt;より広いプラットフォームでの&lt;code&gt;char8_t&lt;/code&gt;サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lockfree&#34; id=&#34;lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たな&lt;code&gt;spsc_value&lt;/code&gt;を追加、トリプルバッファに基づくロックフリーのsingle-producer / single-consumer値&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降のモードで&lt;code&gt;std::codecvt&amp;lt;char16_t&amp;gt;&lt;/code&gt;と&lt;code&gt;std::codecvt&amp;lt;char32_t&amp;gt;&lt;/code&gt;のロケールのファセットの使用を無効化、これらはC++20で非推奨となったため、これは&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;への・からの文字コード変換がC++20以降で利用できなくなることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; CMakeとMinGW-w64を使用した時のビルド問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;が既存のファイルに追記するように設定された場合、アクティブに書き込まれたファイル名パターンにカウンタプレースホルダーがなく、ターゲットファイル名パターンにはあった場合、およびログファイルが直接ターゲットストレージに書き込まれた場合に使用された不正なファイルカウンタを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非整数値に対する&lt;code&gt;mp_from_sequence&lt;/code&gt;を修正 (1.83.0でオフセットサポートの影響で誤って壊れていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;connection_pool&lt;/code&gt;は、セッション確立中の多くの接続が存在する場合でも、正しくリサイズするようになった。古いアルゴリズムでは、特定の条件下でプールが期待通りにリサイズされない可能性があった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/408&#34; target=&#34;_blank&#34;&gt;GitHub #408&lt;/a&gt; &lt;code&gt;any_connection::connection_id&lt;/code&gt;を追加。この関数は接続のIDを取得し、その後、&lt;code&gt;KILL&lt;/code&gt; SQLステートメントでクエリをキャンセルするために使用できる。この関数は公式のC APIの&lt;code&gt;mysql_thread_id&lt;/code&gt;と等価である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/405&#34; target=&#34;_blank&#34;&gt;GitHub #405&lt;/a&gt; 別の操作が進行中の&lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;で非同期操作を開始しようとすると、未定義の動作を引き起こすことがなくなった。代わりに&lt;code&gt;client_errc::operation_in_progress&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/448&#34; target=&#34;_blank&#34;&gt;GitHub #448&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;がマルチファンクション操作に従事している間に操作を開始しようとすると、潜在的に危険なパケットの不一致が発生することがなくなった。代わりに&lt;code&gt;client_errc::engaged_in_multi_function&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/450&#34; target=&#34;_blank&#34;&gt;GitHub #450&lt;/a&gt; セッションが確立していない接続を使用しようとするときの診断を改善。操作は&lt;code&gt;client_errc::not_connected&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;と&lt;code&gt;any_connection&lt;/code&gt;の操作ごとのキャンセルに関する競争条件を修正。以前のバージョンでは、中間の非同期操作が完了した後、しかしそのハンドラが呼び出される前にキャンセル信号が発生した場合、信号は無視されていた。これはもはやそうではなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field&lt;/code&gt;のコンストラクタと&lt;code&gt;std::string_view&lt;/code&gt;からの代入は、C++20ではなくC++17で利用可能になった。これらの関数は、C++20でのみ利用可能な標準の機能テストマクロによってガードされていました。これらはBoost.Configと同等のものに置き換えられた&lt;/li&gt;
&lt;li&gt;C++20のコルーチンを用いたHTTPサーバーの例を追加&lt;/li&gt;
&lt;li&gt;同期コードと非同期コードのインターフェイスに関するドキュメントページを追加。これはレースコンディションを含んだ同期接続プールのスニペットを置き換える&lt;/li&gt;
&lt;li&gt;他のいくつかの例とドキュメントページを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/191&#34; target=&#34;_blank&#34;&gt;GitHub #191&lt;/a&gt; &lt;code&gt;getenv&lt;/code&gt;をスレッドセーフにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#poly_collection&#34; id=&#34;poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::variant_collection&lt;/code&gt;を追加、&lt;code&gt;std::vector&amp;lt;std::variant&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;と似た振る舞いをする閉じた多態コレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart_ptr&#34; id=&#34;smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ワイドストリーム用の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を修正 (偶然1.87.0で壊れてしまっていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/198&#34; target=&#34;_blank&#34;&gt;GitHub #198&lt;/a&gt; MSVC実装で完全なモジュールパスを決定するために&lt;code&gt;GetModuleNames&lt;/code&gt;を使用するよう修正 (&lt;a href=&#34;https://github.com/Dani-Hub&#34; target=&#34;_blank&#34;&gt;Daniel Krügler&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt; ベースアドレスを知らなくても後でアドレスをデコードできるように、相対アドレスを印字した。このロジックは&lt;code&gt;BOOST_STACKTRACE_DISABLE_OFFSET_ADDR_BASE&lt;/code&gt;を定義することで無効化できる (&lt;a href=&#34;https://github.com/McCzarny&#34; target=&#34;_blank&#34;&gt;Maciej Czarnecki&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt; すべてのstacktraceライブラリをB2機能として公開。ビルドの制御をより良くし、どのライブラリがビルドされるかの明確な情報を提供。詳細は「Configuration and Build」セクションを参照 (&lt;a href=&#34;https://github.com/uilianries&#34; target=&#34;_blank&#34;&gt;Uilian Ries&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;MinGWでの&lt;code&gt;stacktrace_from_exception&lt;/code&gt;ビルドを修正 (&lt;a href=&#34;https://github.com/crhilton&#34; target=&#34;_blank&#34;&gt;crhilton&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.84で導入され、ライブラリをclang-20でビルドできないようにしたUBを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメンテーションをAntoraを使用したマルチページフォーマットに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;インデックスに適切な最小の符号なし型を使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.87.0リリースノート -- 1.87.0 : Optionalを追加</title>
      <link href="https://boostjp.github.io/document/version/1_87_0.html"/>
      <id>191d498a55eecab7874b77c8f1dbc16858c01b0d:document/version/1_87_0.md</id>
      <updated>2024-12-27T12:51:04+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.87.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_87_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_87_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_87_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_87_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/parser&#34; target=&#34;_blank&#34;&gt;Parser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;パーサー構築のフレームワーク。作者Zach Laine氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#charconv&#34;&gt;Charconv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cobalt&#34;&gt;Cobalt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#compat&#34;&gt;Compat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#url&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uuid&#34;&gt;UUID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;byte spanとそのシーケンスを、バッファシーケンスとして使用できるサポートを追加。これにより、&lt;code&gt;async_read&lt;/code&gt;などのI/O操作に直接渡すことができる&lt;/li&gt;
&lt;li&gt;非同期操作がエラーなしで完了したかどうかをテストできるgeneric dispositionのサポートを追加。これには&lt;code&gt;error_code&lt;/code&gt;と&lt;code&gt;exception_ptr&lt;/code&gt;が含まれるが、&lt;code&gt;disposition_traits&lt;/code&gt;クラステンプレートの特殊化によってユーザー定義の型に拡張できる。標準型の&lt;code&gt;std::error_code&lt;/code&gt;と&lt;code&gt;std::exception_ptr&lt;/code&gt;がディスポジションとして認識される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::use_future&lt;/code&gt;完了トークン、&lt;code&gt;boost::asio::awaitable&amp;lt;&amp;gt;&lt;/code&gt;ベースのコルーチン、&lt;code&gt;boost::asio::spawn()&lt;/code&gt;、&lt;code&gt;boost::asio::experimental::cancellation_condition&lt;/code&gt;にディスポジションサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;execution_context::service_maker&lt;/code&gt;抽象基底クラスを追加。&lt;code&gt;service_maker&lt;/code&gt;はexecution contextのコンストラクタに渡されるオブジェクトで、コンテキスト構築時にサービスを追加できる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::config&lt;/code&gt;を追加。execution contextに関連する設定パラメータにアクセスできる。このクラスはAsioの内部、またはAsioの上に構築されるライブラリやユーザー提供の抽象化での使用を意図しており、特定の最適化の有効化/無効化などの動作を微調整するために使用される。&lt;code&gt;boost::asio::config_from_env&lt;/code&gt;、&lt;code&gt;boost::asio::config_from_concurrency_hint&lt;/code&gt;、&lt;code&gt;boost::asio::config_from_string&lt;/code&gt;などの具体的な設定ソースを&lt;code&gt;io_context&lt;/code&gt;または&lt;code&gt;thread_pool&lt;/code&gt;のコンストラクタに渡すことができる&lt;/li&gt;
&lt;li&gt;Asioの&lt;code&gt;io_context&lt;/code&gt;と&lt;code&gt;thread_pool&lt;/code&gt;実装で認識される初期設定パラメータセットを追加&lt;/li&gt;
&lt;li&gt;以前に非推奨だった機能をいくつか削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_io_object&lt;/code&gt;と&lt;code&gt;deadline_timer&lt;/code&gt;を非推奨化&lt;/li&gt;
&lt;li&gt;associating binderに右辺値修飾の&lt;code&gt;operator()&lt;/code&gt;オーバーロードを追加。&lt;/li&gt;
&lt;li&gt;モジュラービルド構造のサポートを追加&lt;/li&gt;
&lt;li&gt;ムーブ専用型を返す関数の&lt;code&gt;spawn()&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;コンセプトサポートを必要としないよう&lt;code&gt;co_composed&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;epollリアクターがfork後に通常のfile descriptorを再登録しないよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl::detail::engine&lt;/code&gt;ムーブ代入のリークを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_DISABLE_SMALL_BLOCK_RECYCLING&lt;/code&gt;が定義されている場合のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;Clang 19を使用する際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool::join()&lt;/code&gt;を変更し、&lt;code&gt;thread_pool::attach()&lt;/code&gt;で後に追加されるスレッドを確実に停止するようにした&lt;/li&gt;
&lt;li&gt;ストリーム指向操作で使用される&lt;code&gt;io_uring_prep_write_fixed&lt;/code&gt;と&lt;code&gt;io_uring_prep_read_fixed&lt;/code&gt;に渡されるオフセットを修正&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; アトミック待機状態リストのメモリ再確保時の初期化を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;APIの変更&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_fields::insert()&lt;/code&gt;に&lt;code&gt;error_code&lt;/code&gt;オーバーロードを追加&lt;/li&gt;
&lt;li&gt;permessage-deflateの状態を照会するための&lt;code&gt;websocket::stream::get_status&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;タイムアウト時に&lt;code&gt;bad_executor&lt;/code&gt;例外を引き起こす&lt;code&gt;http::basic_stream&lt;/code&gt;内の&lt;code&gt;net::dispatch&lt;/code&gt;呼び出しでのムーブ後使用を修正&lt;/li&gt;
&lt;li&gt;初期化関数内の変更操作を削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;teardown_tcp_op&lt;/code&gt;でのキャンセル処理を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on_finish_impl&lt;/code&gt;を呼び出す前に&lt;code&gt;basic_parser&lt;/code&gt;の&lt;code&gt;state_&lt;/code&gt;を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clamp&lt;/code&gt;関数から&lt;code&gt;static&lt;/code&gt;指定子を削除&lt;/li&gt;
&lt;li&gt;テストでの&lt;code&gt;-Wattributes&lt;/code&gt;警告に対処&lt;/li&gt;
&lt;li&gt;テストでの到達不能コード警告に対処&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beast::http&lt;/code&gt;名前空間の型の前方宣言ヘッダーを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::parser&lt;/code&gt;が&lt;code&gt;error_code&lt;/code&gt;オーバーロードを使用した&lt;code&gt;basic_fields::insert()&lt;/code&gt;を使用できるよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::basic_parser&lt;/code&gt;に&lt;code&gt;header_limit_&lt;/code&gt;をトレーラーヘッダーに適用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::basic_parser&lt;/code&gt;が&lt;code&gt;http::error::header_limit&lt;/code&gt;をより早く返すように改善&lt;/li&gt;
&lt;li&gt;モジュラーBoostビルド構造のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Jackarain, Saleh Hatefinya, René Ferdinand Rivera Morell&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#charconv&#34; id=&#34;charconv&#34;&gt;Charconv&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__ibm128&lt;/code&gt;をlong double formatとして使用するPPC64LE アーキテクチャのサポートを修正&lt;/li&gt;
&lt;li&gt;Windows ARM64プラットフォームでの組み込み関数の使用を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::float128_t&lt;/code&gt;または&lt;code&gt;__float128&lt;/code&gt;を使用した固定小数点の指定精度でのフォーマットを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cobalt&#34; id=&#34;cobalt&#34;&gt;Cobalt&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;get_executor&lt;/code&gt;で定数参照を返す要件を削除&lt;/li&gt;
&lt;li&gt;実験的/構成を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#compat&#34; id=&#34;compat&#34;&gt;Compat&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;to_array.hpp&lt;/code&gt;を追加（Ruben Perez Hidalgo氏の貢献）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#container&#34; id=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;static_vector&lt;/code&gt;と&lt;code&gt;small_vector&lt;/code&gt;に&lt;code&gt;stored_size&lt;/code&gt;オプションを追加&lt;/li&gt;
&lt;li&gt;バグ/問題を修正：&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/issues/261&#34; target=&#34;_blank&#34;&gt;GitHub #261&lt;/a&gt; 終端イテレータは参照できない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/issues/288&#34; target=&#34;_blank&#34;&gt;GitHub #288&lt;/a&gt; &lt;code&gt;small_vectorで&lt;/code&gt;flat_map::extract_sequence`を使用する際のコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.84.0で発表されたように、Windows 10より前のバージョンはサポートされなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/325&#34; target=&#34;_blank&#34;&gt;GitHub #325&lt;/a&gt; Windowsでは、&lt;code&gt;canonical&lt;/code&gt;が&lt;code&gt;GetFinalPathNameByHandleW&lt;/code&gt; WinAPI関数に基づくようになった。副次的効果として、ドライブ文字は大文字に変換され、結果のパスの相互運用性が向上した&lt;/li&gt;
&lt;li&gt;[v4:] &lt;code&gt;canonical&lt;/code&gt;は、入力パスに末尾のディレクトリ区切り文字 (trailing directory separator)がある場合でも、結果のパスに末尾のディレクトリ区切り文字を生成しなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/326&#34; target=&#34;_blank&#34;&gt;GitHub #326&lt;/a&gt; &lt;code&gt;path&lt;/code&gt;コンストラクタまたはメンバ関数が、&lt;code&gt;path&lt;/code&gt;に変換可能なユーザー定義型の引数と1つ以上の&lt;code&gt;Source&lt;/code&gt;型で呼び出された場合、デフォルトで&lt;code&gt;path&lt;/code&gt;への変換が選択されるようになった。これにより一部の引数変換のあいまいさが解消される可能性があるが、変換パスが最適でない場合もある。異なる変換パスが必要な場合、ユーザーには明示的な型キャストの使用を推奨される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/328&#34; target=&#34;_blank&#34;&gt;GitHub #328&lt;/a&gt; FreeBSD 9以前の&lt;code&gt;dirfd&lt;/code&gt;がマクロである場合の回避策を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;マルチスレッドシナリオで優れたパフォーマンスを提供する、Boost.Unorderedの並行コンテナに基づく&lt;code&gt;concurrent_factory&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/flyweight/issues/15&#34; target=&#34;_blank&#34;&gt;GitHub #15&lt;/a&gt; 以前に例外送出しないとドキュメントに記載されていた&lt;code&gt;boost::flyweight&lt;/code&gt;操作に&lt;code&gt;noexcept&lt;/code&gt;を付与&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;コードの一部で&lt;code&gt;typedef&lt;/code&gt;の代わりに&lt;code&gt;using&lt;/code&gt;を使用&lt;/li&gt;
&lt;li&gt;コードの一部でエイリアスを使用してメタ関数を現代化&lt;/li&gt;
&lt;li&gt;モジュラービルド構造のサポートを追加&lt;/li&gt;
&lt;li&gt;CMakeカバレッジの完全化（GitHub Actionsのcmakeテストを追加）&lt;/li&gt;
&lt;li&gt;ドキュメントワークフローの改善&lt;/li&gt;
&lt;li&gt;QtとWxWidgetsの例を更新&lt;/li&gt;
&lt;li&gt;C++17と23に備えて列挙を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;重大な変更&lt;ul&gt;
&lt;li&gt;非推奨のリスケーリングコードを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決した問題&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1309&#34; target=&#34;_blank&#34;&gt;GitHub #1309&lt;/a&gt; 一部のqbkインクルードの不足を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1226&#34; target=&#34;_blank&#34;&gt;GitHub #1226&lt;/a&gt; &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1326&#34; target=&#34;_blank&#34;&gt;GitHub #1326&lt;/a&gt; ringに対するextra roundを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1293&#34; target=&#34;_blank&#34;&gt;GitHub #1293&lt;/a&gt; &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1294&#34; target=&#34;_blank&#34;&gt;GitHub #1294&lt;/a&gt; &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1295&#34; target=&#34;_blank&#34;&gt;GitHub #1295&lt;/a&gt; クラスター化されていないリングを通過する処理を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/893&#34; target=&#34;_blank&#34;&gt;GitHub #893&lt;/a&gt; &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1299&#34; target=&#34;_blank&#34;&gt;GitHub #1299&lt;/a&gt; 和演算の条件でのブロッキングリングを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1342&#34; target=&#34;_blank&#34;&gt;GitHub #1342&lt;/a&gt; touchとの組み合わせでのstart turnを破棄を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1288&#34; target=&#34;_blank&#34;&gt;GitHub #1288&lt;/a&gt; &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1345&#34; target=&#34;_blank&#34;&gt;GitHub #1345&lt;/a&gt; （不完全な）touchの処理を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1279&#34; target=&#34;_blank&#34;&gt;GitHub #1279&lt;/a&gt; &lt;code&gt;covered_by&lt;/code&gt;の不正確な結果を修正&lt;/li&gt;
&lt;li&gt;エラーと警告の各種修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/85&#34; target=&#34;_blank&#34;&gt;GitHub #85&lt;/a&gt; &lt;code&gt;function_output_iterator&lt;/code&gt;が&lt;code&gt;std::output_iterator&lt;/code&gt;コンセプトに準拠するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#interprocess&#34; id=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boostの依存関係を11から7に削減。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;boost/interprocess/containers/*.hpp&amp;gt;&lt;/code&gt;ヘッダーを非推奨にした。2011年にはBoost.Containerの元ソースを参照していたが、現在はメンテナンスされていない。長期的な移行として、Boost.Interprocessはこれらのヘッダーを互換性のために維持してきた。将来のBoostリリースで削除される&lt;/li&gt;
&lt;li&gt;Cygwinのいくつかの回避策を追加。リグレッションテストがCygwin64で動作するようになった&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ABI破壊的変更&lt;/strong&gt;: &lt;code&gt;segment_manager&lt;/code&gt;が、オーバーアラインされた型をサポートし、既存のバグを修正する新しい実装を使用。Boost 1.87より前のABIを取得するには、Boost.Interprocessヘッダーをインクルードする前に&lt;code&gt;BOOST_INTERPROCESS_SEGMENT_MANAGER_ABI&lt;/code&gt;を&lt;code&gt;1&lt;/code&gt;として定義すること&lt;/li&gt;
&lt;li&gt;バグを修正：&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/152&#34; target=&#34;_blank&#34;&gt;GitHub #152&lt;/a&gt; &lt;code&gt;shared_memory_object&lt;/code&gt;で&lt;code&gt;EINTR&lt;/code&gt;を処理&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/173&#34; target=&#34;_blank&#34;&gt;GitHub #173&lt;/a&gt; 管理共有メモリセグメントの値が整列されていない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/192&#34; target=&#34;_blank&#34;&gt;GitHub #192&lt;/a&gt; &lt;code&gt;managed_windows_shared_memory&lt;/code&gt;が破壊時にクラッシュ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; &lt;code&gt;char_wchar_holder&lt;/code&gt;の代入演算子で&lt;code&gt;m_is_wide&lt;/code&gt;が不足/誤用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/210&#34; target=&#34;_blank&#34;&gt;GitHub #210&lt;/a&gt; &lt;code&gt;boost::interprocess::ipcdetail::sync_handles::obtain_mutex&lt;/code&gt;のバグ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/215&#34; target=&#34;_blank&#34;&gt;GitHub #215&lt;/a&gt; SPARC 32ビットでboost/interprocess/segment_managerのアラインメント問題&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/217&#34; target=&#34;_blank&#34;&gt;GitHub #217&lt;/a&gt; &lt;code&gt;managed_map_file&lt;/code&gt;の&lt;code&gt;find_or_construct&lt;/code&gt;がキャッシュアラインメントされたメモリを返さない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/230&#34; target=&#34;_blank&#34;&gt;GitHub #230&lt;/a&gt; MinGWで&lt;code&gt;interprocess::ipcdetail::intermodule_singleton&lt;/code&gt;が動作しない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/issues/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt; &lt;code&gt;get_current_process_creation_time&lt;/code&gt;の浮動小数点の不正確さにより&lt;code&gt;intermodule_singleton&lt;/code&gt;の失敗&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;直接的なシリアライズ&lt;/li&gt;
&lt;li&gt;Boost.JSON型のGDBプリティプリンタを追加&lt;/li&gt;
&lt;li&gt;構造体への変換で不明なキーを無視&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value_to&lt;/code&gt;の例外ラッピング動作を簡素化&lt;/li&gt;
&lt;li&gt;非推奨のinitializer listの動作を削除&lt;/li&gt;
&lt;li&gt;非推奨の型エイリアスを削除&lt;/li&gt;
&lt;li&gt;MinGW ARM64での正確な64ビット乗算を使用&lt;/li&gt;
&lt;li&gt;サイズの異なるタプルでの&lt;code&gt;parse_into&lt;/code&gt;の処理を修正&lt;/li&gt;
&lt;li&gt;シーケンスの許容サイズより大きな入力サイズをチェック&lt;/li&gt;
&lt;li&gt;GCC 14での&lt;code&gt;value_ref&lt;/code&gt;のセグメンテーション違反を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lexical_cast&#34; id=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Integerへの依存性を削除し、コンパイル時間を短縮&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Threadの同期プリミティブをC++標準ライブラリの同等物と置き換えた。これにより、マルチスレッドのパフォーマンスが向上する可能性があるが、ユーザー側での影響もある&lt;ul&gt;
&lt;li&gt;Boost.Threadのスレッド割り込み機能はサポートされなくなった。Boost.Logは、Boost.Threadによってスレッド割り込みを実装するために使用される &lt;code&gt;thread_interrupted&lt;/code&gt; 例外に対して特別な処理を行わなくなった。この例外は他の任意の例外と同様に扱われる&lt;ul&gt;
&lt;li&gt;とくに、ユーザー指定の例外ハンドラが &lt;code&gt;thread_interrupted&lt;/code&gt; のペンディング例外で呼び出されることがある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;timed wait操作について、タイムアウトは現在&lt;code&gt;std::chrono&lt;/code&gt;の時間単位を使用している。これは、&lt;code&gt;bounded_ordering_queue&lt;/code&gt; クラスと &lt;code&gt;unbounded_ordering_queue&lt;/code&gt; クラスがサポートする &lt;code&gt;ordering_window&lt;/code&gt; という名前付きパラメータが、Boost.DateTimeの &lt;code&gt;boost::posix_time::time_duration&lt;/code&gt; ではなく &lt;code&gt;std::chrono::duration&lt;/code&gt; の値を期待することを意味している&lt;/li&gt;
&lt;li&gt;スレッド同期プリミティブによって示されるエラーの場合、Boost.Threadの例外型の代わりに &lt;code&gt;std::system_error&lt;/code&gt; 例外が送出される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strictest_lock&lt;/code&gt; にC++標準ライブラリのlock型のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メジャーアップデート&lt;/li&gt;
&lt;li&gt;多数の特殊関数および分布が、CUDA（NVCCおよびNVRTC）およびSYCLをサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1163&#34; target=&#34;_blank&#34;&gt;GitHub #1163&lt;/a&gt; mapairy distribution、holtsmark distributionおよびsaspoint5 distributionを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1159&#34; target=&#34;_blank&#34;&gt;GitHub #1159&lt;/a&gt; landau distributionを追加した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/1169&#34; target=&#34;_blank&#34;&gt;GitHub #1169&lt;/a&gt; beta quantileにおける予期しない例外を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#move&#34; id=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかのバグを修正：&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/move/issues/56&#34; target=&#34;_blank&#34;&gt;Git Issue #56&lt;/a&gt; std型の前方宣言が、一部のプラットフォームでコンパイルエラーを引き起こす&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_lambda&lt;/code&gt;を追加（提供者：Joaquin M Lopez Munoz氏）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;float128&lt;/code&gt; をtrivially copyableにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt; を非GNUモードでも浮動小数点型とみなすよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;実験的なAPIへの破壊的変更&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;connection_pool&lt;/code&gt;でのスレッドセーフティ機能が再設計され、ユーザーの経験によって見つかったいくつかの設計の欠陥を克服した&lt;ul&gt;
&lt;li&gt;&lt;code&gt;thread_safe&lt;/code&gt;という&lt;code&gt;bool&lt;/code&gt;オプションが&lt;code&gt;pool_params&lt;/code&gt;に追加され、デフォルトでは&lt;code&gt;false&lt;/code&gt;に設定されている。設定すると、一部のプール関数が挙動を変更して並行に安全に使用できるようになる。これは内部で&lt;code&gt;strand&lt;/code&gt;を作成し、必要なときにそれにディスパッチし、cancel signalを再配線することで機能する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pool_params::thread_safe&lt;/code&gt;が&lt;code&gt;false&lt;/code&gt;の場合、通常のAsio executorのセマンティクスが適用され、オーバーヘッドはない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pool_executor_params&lt;/code&gt;は削除され、&lt;code&gt;pool_params::connection_executor&lt;/code&gt;と&lt;code&gt;pool_params::thread_safe&lt;/code&gt;に置き換えられた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connection_pool::async_get_connection&lt;/code&gt;の組み込みタイムアウト機能が完全に削除された。この関数は現在、個々の操作のキャンセルをサポートしており、同じ機能は&lt;code&gt;asio::cancel_after&lt;/code&gt;を使用することで達成できる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connection_pool&lt;/code&gt;の破棄をすると、ほかのAsio I/Oオブジェクトと同様に、未処理の非同期操作がキャンセルされる。これによりリソースのリークが防止される&lt;/li&gt;
&lt;li&gt;利用可能なコネクションがまだない状態で&lt;code&gt;async_get_connection&lt;/code&gt;操作がキャンセルされた場合、操作は現在、プールの状態に応じて一貫して&lt;code&gt;client_errc::pool_not_running&lt;/code&gt;、&lt;code&gt;client_errc::no_connection_available&lt;/code&gt;、または&lt;code&gt;client_errc::pool_cancelled&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;client_errc::timeout&lt;/code&gt;と&lt;code&gt;client_errc::cancelled&lt;/code&gt;が削除された&lt;/li&gt;
&lt;li&gt;プールが実行中でない状態で&lt;code&gt;async_get_connection&lt;/code&gt;を呼び出すとすぐには失敗せず、&lt;code&gt;async_run&lt;/code&gt;の呼び出しを待つ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sequence&lt;/code&gt;は所有型を返すようになった。これにより、&lt;code&gt;with_params&lt;/code&gt;と共に遅延非同期操作で使用することが安全になった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sequence&lt;/code&gt;は別のヘッダー、&lt;code&gt;boost/mysql/sequence.hpp&lt;/code&gt;に移動された&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any_connection&lt;/code&gt;、クライアント側のSQLフォーマット（&lt;code&gt;format_sql&lt;/code&gt;および&lt;code&gt;with_params&lt;/code&gt;を含む）、および&lt;code&gt;connection_pool&lt;/code&gt;を安定したAPIに昇格させた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connection&lt;/code&gt;とそのエイリアスである&lt;code&gt;tcp_connection&lt;/code&gt;、&lt;code&gt;tcp_ssl_connection&lt;/code&gt;、および&lt;code&gt;unix_connection&lt;/code&gt;の代わりに使用する新規コードとして、&lt;code&gt;any_connection&lt;/code&gt;が推奨される&lt;/li&gt;
&lt;li&gt;クエリテンプレート文字列とパラメータを包括する新しい &lt;code&gt;ExecutionRequest&lt;/code&gt; である &lt;code&gt;with_params&lt;/code&gt; を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;with_diagnostics&lt;/code&gt;を追加した。これは同期的に例外を送出する関数の動作と一致するように、非同期関数によって送出される例外に &lt;code&gt;diagnostics&lt;/code&gt; オブジェクトを含むアダプタ完了トークンである&lt;/li&gt;
&lt;li&gt;&lt;code&gt;with_diagnostics(asio::deferred)&lt;/code&gt;は現在、&lt;code&gt;any_connection&lt;/code&gt;と&lt;code&gt;connection_pool&lt;/code&gt;のすべての操作のデフォルトの完了トークンである&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connection_pool&lt;/code&gt;の非同期関数は現在、操作ごとのキャンセルをサポートしている&lt;/li&gt;
&lt;li&gt;すべての非同期操作は現在、&lt;code&gt;asio::cancel_after&lt;/code&gt;、&lt;code&gt;asio::cancel_at&lt;/code&gt;および同様の完了トークンをサポートしている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connection&lt;/code&gt;と&lt;code&gt;any_connection&lt;/code&gt;は現在、即時の完全性をトークンの即時エグゼキュータ (immediate executor) を介してディスパッチする&lt;/li&gt;
&lt;li&gt;以前に接続されていない&lt;code&gt;any_connection&lt;/code&gt;を使用しようとするとクラッシュする問題を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field&lt;/code&gt;の潜在的に例外送出可能なコンストラクタから間違った&lt;code&gt;noexcept&lt;/code&gt;指定子を削除した&lt;/li&gt;
&lt;li&gt;設定されたバッファサイズの制限を超える可能性があった書き込みバッファサイズの問題を修正した&lt;/li&gt;
&lt;li&gt;ドキュメントとサンプルコードを大幅に更新し、新しい推奨されるベストプラクティスを反映させるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt; C++03のサポートを削除した。C++11以上を要求するようになった。少なくとも一部のC++11の機能が必要となる&lt;/li&gt;
&lt;li&gt;Boost.Utilityへの依存関係を削除&lt;/li&gt;
&lt;li&gt;Boost.Predefへの依存関係を削除&lt;/li&gt;
&lt;li&gt;Boost.StaticAssertへの依存関係を削除&lt;/li&gt;
&lt;li&gt;Boost.Moveへの依存関係を削除&lt;/li&gt;
&lt;li&gt;一部の関係演算の実装をわずかに高速化した&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;警告&lt;/strong&gt; 将来のリリースでは、&lt;code&gt;std::ranges::range&amp;lt;optional&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;になるように、&lt;code&gt;optional&lt;/code&gt;にRangeインターフェースを導入する予定。これは、&lt;code&gt;std::ranges::range&lt;/code&gt;のような、述語に基づいて決定を下すプログラムのオーバーロード解決に影響を与える可能性がある&lt;/li&gt;
&lt;li&gt;タグ&lt;code&gt;in_place_init&lt;/code&gt;と&lt;code&gt;in_place_init_if&lt;/code&gt;が&lt;code&gt;inline constexpr&lt;/code&gt;になり、その結果、実行ファイルのフットプリントが小さくなった。これは&lt;a href=&#34;https://github.com/boostorg/optional/issues/103&#34; target=&#34;_blank&#34;&gt;GitHub #103&lt;/a&gt;の問題を解決する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/171&#34; target=&#34;_blank&#34;&gt;GitHub #171&lt;/a&gt; &lt;code&gt;boost::pfr::for_each_field_with_name&lt;/code&gt;関数が追加された (&lt;a href=&#34;https://github.com/Baduit&#34; target=&#34;_blank&#34;&gt;Lena&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/120&#34; target=&#34;_blank&#34;&gt;GitHub #120&lt;/a&gt; 大きなサイズと小さなフィールド数を持つ構造体のコンパイル時間が大幅に改善された (&lt;a href=&#34;https://github.com/runer112&#34; target=&#34;_blank&#34;&gt;Zachary Wassall&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pragma&lt;/code&gt;ディレクティブを修正&lt;/li&gt;
&lt;li&gt;C++20モジュールへの初期サポートを追加した。詳細はドキュメントを参照&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/183&#34; target=&#34;_blank&#34;&gt;GitHub #183&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/pfr/pull/187&#34; target=&#34;_blank&#34;&gt;GitHub #187&lt;/a&gt; core_name14_disabled.hpp内の未使用変数の警告を修正 (&lt;a href=&#34;https://github.com/anarthal&#34; target=&#34;_blank&#34;&gt;Anarthal (Rubén Pérez)&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;C++17における集成体内のフィールド数のデフォルト制限を100から200に引き上げた&lt;/li&gt;
&lt;li&gt;GCCが&lt;code&gt;-Wundefined-var-template&lt;/code&gt;を認識していないことに関する警告を修正&lt;/li&gt;
&lt;li&gt;複数の軽微なコンパイル時間の改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(v2) Windowsでの&lt;code&gt;async_wait&lt;/code&gt;のキャンセルを実装した&lt;/li&gt;
&lt;li&gt;(v2) &lt;code&gt;FORCE_DISABLE_CLOSE_RANGE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;(v2) ext: BSDおよびSolarisの複数のext修正&lt;/li&gt;
&lt;li&gt;(v2) 未使用の &lt;code&gt;ext&lt;/code&gt; 関数が現在コンパイルされ、 &lt;code&gt;operation_not_supported&lt;/code&gt; エラーが与えられるようになった（IOSを含む）&lt;/li&gt;
&lt;li&gt;(v2) 複数のリンクを修正&lt;/li&gt;
&lt;li&gt;(v2) リンクされたライブラリからfilesystemが削除された - 使用されるfilesystemライブラリの機能としては、ヘッダーファイルに実装があるもののみとなった&lt;/li&gt;
&lt;li&gt;(v1) 1.88に対する非推奨通知を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart_ptr&#34; id=&#34;smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了し、C++11のコンパイラが必要となる。これにはGCC 4.8以降、またはMSVC 14.0以降が含まれる&lt;/li&gt;
&lt;li&gt;マクロ &lt;code&gt;BOOST_SP_ENABLE_DEBUG_HOOKS&lt;/code&gt;、&lt;code&gt;BOOST_SP_USE_STD_ALLOCATOR&lt;/code&gt;、&lt;code&gt;BOOST_SP_USE_QUICK_ALLOCATOR&lt;/code&gt;、&lt;code&gt;BOOST_AC_USE_SPINLOCK&lt;/code&gt;、&lt;code&gt;BOOST_AC_USE_PTHREADS&lt;/code&gt;、&lt;code&gt;BOOST_SP_USE_SPINLOCK&lt;/code&gt;、および&lt;code&gt;BOOST_SP_USE_PTHREADS&lt;/code&gt;により有効化される機能は非推奨となり、将来のリリースでそのサポートは削除される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/189&#34; target=&#34;_blank&#34;&gt;GitHub #189&lt;/a&gt; &lt;code&gt;boost::stacktrace_from_exception&lt;/code&gt;のCMakeターゲットが追加された (&lt;a href=&#34;https://github.com/void-mian&#34; target=&#34;_blank&#34;&gt;int mian&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/186&#34; target=&#34;_blank&#34;&gt;GitHub #186&lt;/a&gt; MSVCでの静的ビルド時に&lt;code&gt;boost_stacktrace_impl_return_nullptr&lt;/code&gt;をエクスポートしないようにした (&lt;a href=&#34;https://github.com/huangqinjin&#34; target=&#34;_blank&#34;&gt;huangqinjin&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;Windows OSでclangを使用した際の、&lt;code&gt;ole32.lib&lt;/code&gt;と&lt;code&gt;Dbgeng.lib&lt;/code&gt;の自動リンクを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; ドキュメントで欠落していた名前空間を修正した (&lt;a href=&#34;https://github.com/meastp&#34; target=&#34;_blank&#34;&gt;Mats Taraldsvik&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/178&#34; target=&#34;_blank&#34;&gt;GitHub #178&lt;/a&gt; &lt;code&gt;std::exception&lt;/code&gt; のインクルード不足を修正した (&lt;a href=&#34;https://github.com/jschueller&#34; target=&#34;_blank&#34;&gt;Julien Schueller&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/175&#34; target=&#34;_blank&#34;&gt;GitHub #175&lt;/a&gt; GCCが報告した型の変換エラーを修正した (&lt;a href=&#34;https://github.com/jplcz&#34; target=&#34;_blank&#34;&gt;agent_J&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/194&#34; target=&#34;_blank&#34;&gt;GitHub #194&lt;/a&gt; CLIからB2の&lt;code&gt;from_exception&lt;/code&gt;機能を使用できるようにした (&lt;a href=&#34;https://github.com/grisumbras]氏に感謝&#34; target=&#34;_blank&#34;&gt;Dmitry Arkhipov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stl_interfaces&#34; id=&#34;stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stl_interfaces/issues/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; シーケンスコンテナ &lt;code&gt;swap&lt;/code&gt; の誤って記録された要件を正しくした。期待される戻り値は &lt;code&gt;bool&lt;/code&gt; ではなく &lt;code&gt;void&lt;/code&gt; である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stl_interfaces/issues/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; &lt;code&gt;view_adaptor.hpp&lt;/code&gt;のアダプターのデータメンバーに &lt;code&gt;[[no_unique_address]]&lt;/code&gt; を追加した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stl_interfaces/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; ClangとMSVCの最近のバージョンで &lt;code&gt;__cpp_explicit_this_parameter&lt;/code&gt; を介してサポートをアドバタイズしていない &lt;code&gt;this&lt;/code&gt; の推論を可能にした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/348&#34; target=&#34;_blank&#34;&gt;GitHub #348&lt;/a&gt; ダミー条件に対するclang tidyのサポートを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/431&#34; target=&#34;_blank&#34;&gt;GitHub #431&lt;/a&gt; clangでの動的リンクを修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メジャーアップデート&lt;/li&gt;
&lt;li&gt;並行ノードベースコンテナ &lt;code&gt;boost::concurrent_node_map&lt;/code&gt; と &lt;code&gt;boost::concurrent_node_set&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;並行コンテナに &lt;code&gt;insert_and_visit(x, f1, f2)&lt;/code&gt; および類似の操作を追加した。これは、挿入直後に要素を訪問することを可能にする（対照的に、 &lt;code&gt;insert_or_visit(x, f)&lt;/code&gt; は、挿入が行われなかった場合にのみ要素を訪問する）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/265&#34; target=&#34;_blank&#34;&gt;GitHub #265&lt;/a&gt; 要素の安全な可変変更を可能にするため、特定の &lt;code&gt;boost::concurrent_flat_set&lt;/code&gt; 操作内で訪問を排他的にロック&lt;/li&gt;
&lt;li&gt;Visual Studio Natvisでは、任意のファンシーなポインタ型をサポートした。このことは、適切なNatvisカスタマイズポイント &#34;Intrinsic&#34; 関数がファンシーポインタ型自体に対して書かれている限り、任意のファンシーポインタ型に適用できる&lt;/li&gt;
&lt;li&gt;すべてのコンテナとイテレータにGDBのプリティプリンタが追加されました。ファンシーポインタを使用するアロケータを持つコンテナに対しては、ファンシーポインタ型そのものに対して適切なプリティプリンタが書かれている場合にのみ、これらは機能する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/277&#34; target=&#34;_blank&#34;&gt;GitHub #277&lt;/a&gt; オープンアドレッシングコンテナに対する &lt;code&gt;std::initializer_list&lt;/code&gt; への代入の問題を修正した&lt;/li&gt;
&lt;li&gt;接続コンテナの &lt;code&gt;std::initializer_list&lt;/code&gt; オーバーロードの &lt;code&gt;insert_{and|or}_[c]visit&lt;/code&gt; にコピー不可能なコールバックを渡すことができるようにした。これは内部的にコールバックの &lt;code&gt;std::reference_wrapper&lt;/code&gt; をイテレーターペアのオーバーロードに渡す&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#url&#34; id=&#34;url&#34;&gt;URL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/url/issues/856&#34; target=&#34;_blank&#34;&gt;GitHub #856&lt;/a&gt; 機能追加: &lt;code&gt;set_params&lt;/code&gt;が&lt;code&gt;encoding_opts&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/url/issues/857&#34; target=&#34;_blank&#34;&gt;GitHub #857&lt;/a&gt; リファクタリング: APIから非推奨のvariant2エイリアスを除外&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/url/issues/864&#34; target=&#34;_blank&#34;&gt;GitHub #864&lt;/a&gt; リファクタリング: &lt;code&gt;query_rule&lt;/code&gt;に一貫した解釈&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#uuid&#34; id=&#34;uuid&#34;&gt;UUID&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.86で間違って削除した &lt;code&gt;constexpr uuid&lt;/code&gt; を構築する機能を復元&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正:&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/220&#34; target=&#34;_blank&#34;&gt;GitHub #220&lt;/a&gt;：C++20と空の文字列化パラメータでのセグメンテーション違反を修正 (&lt;a href=&#34;https://github.com/jwnhy&#34; target=&#34;_blank&#34;&gt;Lu HongYi&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/222&#34; target=&#34;_blank&#34;&gt;GitHub #222&lt;/a&gt;：含まれるファイルの最初の行が空白の場合に行ディレクティブがない問題を修正 (&lt;a href=&#34;https://github.com/njnobles&#34; target=&#34;_blank&#34;&gt;Nick Nobles&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ビルドの改善（モジュールビルドのサポートを含む) (&lt;a href=&#34;https://github.com/grafikrobot&#34; target=&#34;_blank&#34;&gt;René Rivera&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>