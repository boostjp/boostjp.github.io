<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2025-04-13T14:38:20.540610</updated>
  <id>b246535e-25d4-46cb-bf10-38b97793c4ca</id>

  
    <entry>
      <title>Boost 1.88.0リリースノート -- Merge pull request #576 from Raclamusi/fix_typo</title>
      <link href="https://boostjp.github.io/document/version/1_88_0.html"/>
      <id>008f20f62bff9b3b25824fcf12f49165fd8752b6:document/version/1_88_0.md</id>
      <updated>2025-04-12T11:56:54+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.88.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_88_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_88_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/hana2&#34; target=&#34;_blank&#34;&gt;Hash2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;拡張性の高いハッシュ計算フレームワーク。作者Peter Dimov、Christian Mazakas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mqtt5&#34; target=&#34;_blank&#34;&gt;MQTT5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.Asio上に作られたMQTT5クライアント。作者Ivica Siladić、Bruno Iljazović、Korina Šimičević&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktreace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをAsciiDocに変換した（Christian Mazakas氏）&lt;/li&gt;
&lt;li&gt;必要な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;廃止された関数を非推奨とした&lt;/li&gt;
&lt;li&gt;廃止されたコンパイラワークアラウンドを削除した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;::begin()&lt;/code&gt;, &lt;code&gt;cbegin()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cend()&lt;/code&gt;を&lt;code&gt;nullptr&lt;/code&gt;を返すように変更し、&lt;code&gt;constexpr&lt;/code&gt;を有効にした。これは&lt;code&gt;std::array&lt;/code&gt;の挙動と一致する&lt;/li&gt;
&lt;li&gt;ローカルの&lt;code&gt;hash_value&lt;/code&gt;オーバーロードを削除した。&lt;code&gt;boost::hash&lt;/code&gt;は配列のような型をネイティブにサポートする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;&lt;/code&gt;は現在、&lt;code&gt;={}&lt;/code&gt;で初期化することができる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to_array&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local::basic_endpoint&lt;/code&gt;メンバ関数のいくつかに&lt;code&gt;noexcept&lt;/code&gt;修飾子を追加し、&lt;code&gt;ip::basic_endpoint&lt;/code&gt;と整合性を持たせた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::config&lt;/code&gt;クラスの整数値の処理を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;での「ムーブ後の使用エラー (use-after-move error)」を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;の実装における誤ったデフォルトテンプレート引数を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_uring&lt;/code&gt;実装を修正し、フォーク後に内部descriptorをリアクターに再登録しようとすることがないようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool&lt;/code&gt;のデフォルトコンストラクタで初期化されていないメンバを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::span&lt;/code&gt;を&lt;code&gt;boost::asio::buffer&lt;/code&gt;関数に渡した際に生じた曖昧なオーバーロード問題を修正した&lt;/li&gt;
&lt;li&gt;非推奨のbuffer機能の削除後に残っていた一部の偽のマクロ定義を削除した&lt;/li&gt;
&lt;li&gt;ファイルオープン時の&lt;code&gt;file_base::flags&lt;/code&gt;の使用について明確化するドキュメントを追加した&lt;/li&gt;
&lt;li&gt;利用可能なランタイム設定オプションについての概要ドキュメントを追加した&lt;/li&gt;
&lt;li&gt;完了トークンとして&lt;code&gt;deferred&lt;/code&gt;がデフォルトで使用されるように、概要ドキュメントを更新した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;のドキュメントを更新し、現在の型要件がトレイトの特殊化部分に置かれていることを反映した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT_HANDLER_IS_NORETURN&lt;/code&gt;が定義されている場合、&lt;code&gt;boost::assertion_failed&lt;/code&gt;と&lt;code&gt;boost::assertion_failed_msg&lt;/code&gt;は&lt;code&gt;BOOST_NORETURN&lt;/code&gt;として宣言される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iequals&lt;/code&gt;関数での範囲外アクセスを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;SSLの例をアップデートし、ピア証明書のホスト名を検証するよう修正&lt;/li&gt;
&lt;li&gt;CMakeListsをリファクタリング&lt;/li&gt;
&lt;li&gt;例からBoost.Scopeへの依存関係を削除&lt;/li&gt;
&lt;li&gt;WebSocketのピアへのpingがアクティビティとしてカウントされるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;Unixドメインソケットの新しい例を追加&lt;/li&gt;
&lt;li&gt;ドキュメントにSSL/TLS証明書セクションを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocket::stream::async_close&lt;/code&gt;のドキュメントを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Morten M. Neergaard氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;サンプルコードとライブラリコードに、現代的なC++を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/82&#34; target=&#34;_blank&#34;&gt;GitHub #82&lt;/a&gt; &lt;code&gt;boost::dll::shared_library&lt;/code&gt;への &lt;code&gt;native_handle_t&lt;/code&gt;からのコンストラクタを追加 (Tiago Matos氏に感謝)&lt;/li&gt;
&lt;li&gt;Spirit, SmartPtr, Move, TypeTraits, Functionなど他のBoostライブラリへの依存関係を排除で、DLLのコンパイルが軽量化した&lt;/li&gt;
&lt;li&gt;APIでの&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;が&lt;code&gt;boost::system::error_code&amp;amp;&lt;/code&gt;の代わりに使われるようになった。&lt;code&gt;boost::system::error_code&lt;/code&gt;は&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;に変換可能なため破壊的な変更ではない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll:import_*&lt;/code&gt;関数が&lt;code&gt;std::shared_ptr&lt;/code&gt;を返すように変更。古い挙動を復元するために&lt;code&gt;BOOST_DLL_USE_BOOST_SHARED_PTR&lt;/code&gt;を定義した。ただし、このマクロは今後のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;サンプルとライブラリコードで現代的なC++を使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll::library_info&lt;/code&gt;が壊れたバイナリの場合は常に例外を送出するよう修正。ドキュメントを更新してテストを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RTLD_NODELETE&lt;/code&gt;が欠けている理由と&lt;code&gt;.release()&lt;/code&gt;メソッドがない理由をFAQで説明を追加。可能なワークアラウンドを提供する&lt;/li&gt;
&lt;li&gt;ライブラリのビルドと使用に関する情報を更新。CMakeターゲットはプラットフォームに必要な場合に「&lt;code&gt;-ldl&lt;/code&gt;」でリンクすること&lt;/li&gt;
&lt;li&gt;Windows OSの長いパスに対する&lt;code&gt;detail::path_from_handle&lt;/code&gt;実装を修正&lt;/li&gt;
&lt;li&gt;ドキュメントで&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分が実験的で未完成であることを強調&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分の多数のマングリング問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1370&#34; target=&#34;_blank&#34;&gt;GitHub #1370&lt;/a&gt; 球面正規化の半周期チェックを緩和&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1368&#34; target=&#34;_blank&#34;&gt;GitHub #1368&lt;/a&gt; rtreeのspatial述語でのumbrella戦略をパス&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1367&#34; target=&#34;_blank&#34;&gt;GitHub #1367&lt;/a&gt; 横断の改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1361&#34; target=&#34;_blank&#34;&gt;GitHub #1361&lt;/a&gt; 整数座標を持つランダムグリッド上での集合操作をテスト&lt;/li&gt;
&lt;li&gt;複数のテストケースを追加&lt;/li&gt;
&lt;li&gt;コードの一部でtypedefの代わりにusingを使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1364&#34; target=&#34;_blank&#34;&gt;GitHub #1364&lt;/a&gt; 複数の戦略を修正 (getterの追加、コンパイルエラーと警告の修正)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/629&#34; target=&#34;_blank&#34;&gt;GitHub #629&lt;/a&gt; 座標変換と未使用パラメータの警告を避ける&lt;/li&gt;
&lt;li&gt;エラーと警告の各種修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maximum_weighted_matching&lt;/code&gt;の実装を置換し、複数の問題を解決&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;が使用される前に初期化されているよう事前条件を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing&lt;/code&gt;のカスタムジオメトリコードをBoost.Geometryに置換し、非常に小さい角度での結果が正しくなるように修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undirected_dfs&lt;/code&gt;での&lt;code&gt;finish_edge&lt;/code&gt;への不正なコールバックを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンス向上&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adjacency_list&lt;/code&gt;: &lt;code&gt;vector&lt;/code&gt;ベースのストレージ内の&lt;code&gt;add_vertex&lt;/code&gt;から&lt;code&gt;resize&lt;/code&gt;/&lt;code&gt;reserve&lt;/code&gt;への不必要な呼び出しを削除。速度計測では、グラフ構築の時間が10％改善した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lengauer_tarjan_dominator_tree&lt;/code&gt;: &lt;code&gt;std::deque&lt;/code&gt;を&lt;code&gt;std::vector&lt;/code&gt;に置換し、大きなグラフでは約40%の改善を達成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一般的な改良点&lt;ul&gt;
&lt;li&gt;いくつかのBoostユーティリティの使用をC++14言語機能で置き換え&lt;/li&gt;
&lt;li&gt;例をC++14言語特性で現代化&lt;/li&gt;
&lt;li&gt;ドキュメンテーションとビルドシステムのさまざまな修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vertex_by_property&lt;/code&gt;がミュータブルなグラフを必要としなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cycle_canceling&lt;/code&gt;とClang 19のコンパイル問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必要なICUバージョンを4.8.1以上に引き上げ&lt;/li&gt;
&lt;li&gt;ICU 50.1のサポートを終了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; 浮動小数点形式の入力文字列での整数のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; ICUバックエンドでの&lt;code&gt;uint64_t&lt;/code&gt;値のパースとフォーマットをサポート&lt;/li&gt;
&lt;li&gt;より広いプラットフォームでの&lt;code&gt;char8_t&lt;/code&gt;サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lockfree&#34; id=&#34;lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たな&lt;code&gt;spsc_value&lt;/code&gt;を追加、トリプルバッファに基づくロックフリーのsingle-producer / single-consumer値&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降のモードで&lt;code&gt;std::codecvt&amp;lt;char16_t&amp;gt;&lt;/code&gt;と&lt;code&gt;std::codecvt&amp;lt;char32_t&amp;gt;&lt;/code&gt;のロケールのファセットの使用を無効化、これらはC++20で非推奨となったため、これは&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;への・からの文字コード変換がC++20以降で利用できなくなることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; CMakeとMinGW-w64を使用した時のビルド問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;が既存のファイルに追記するように設定された場合、アクティブに書き込まれたファイル名パターンにカウンタプレースホルダーがなく、ターゲットファイル名パターンにはあった場合、およびログファイルが直接ターゲットストレージに書き込まれた場合に使用された不正なファイルカウンタを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非整数値に対する&lt;code&gt;mp_from_sequence&lt;/code&gt;を修正 (1.83.0でオフセットサポートの影響で誤って壊れていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;connection_pool&lt;/code&gt;は、セッション確立中の多くの接続が存在する場合でも、正しくリサイズするようになった。古いアルゴリズムでは、特定の条件下でプールが期待通りにリサイズされない可能性があった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/408&#34; target=&#34;_blank&#34;&gt;GitHub #408&lt;/a&gt; &lt;code&gt;any_connection::connection_id&lt;/code&gt;を追加。この関数は接続のIDを取得し、その後、&lt;code&gt;KILL&lt;/code&gt; SQLステートメントでクエリをキャンセルするために使用できる。この関数は公式のC APIの&lt;code&gt;mysql_thread_id&lt;/code&gt;と等価である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/405&#34; target=&#34;_blank&#34;&gt;GitHub #405&lt;/a&gt; 別の操作が進行中の&lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;で非同期操作を開始しようとすると、未定義の動作を引き起こすことがなくなった。代わりに&lt;code&gt;client_errc::operation_in_progress&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/448&#34; target=&#34;_blank&#34;&gt;GitHub #448&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;がマルチファンクション操作に従事している間に操作を開始しようとすると、潜在的に危険なパケットの不一致が発生することがなくなった。代わりに&lt;code&gt;client_errc::engaged_in_multi_function&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/450&#34; target=&#34;_blank&#34;&gt;GitHub #450&lt;/a&gt; セッションが確立していない接続を使用しようとするときの診断を改善。操作は&lt;code&gt;client_errc::not_connected&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;と&lt;code&gt;any_connection&lt;/code&gt;の操作ごとのキャンセルに関する競争条件を修正。以前のバージョンでは、中間の非同期操作が完了した後、しかしそのハンドラが呼び出される前にキャンセル信号が発生した場合、信号は無視されていた。これはもはやそうではなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field&lt;/code&gt;のコンストラクタと&lt;code&gt;std::string_view&lt;/code&gt;からの代入は、C++20ではなくC++17で利用可能になった。これらの関数は、C++20でのみ利用可能な標準の機能テストマクロによってガードされていました。これらはBoost.Configと同等のものに置き換えられた&lt;/li&gt;
&lt;li&gt;C++20のコルーチンを用いたHTTPサーバーの例を追加&lt;/li&gt;
&lt;li&gt;同期コードと非同期コードのインターフェイスに関するドキュメントページを追加。これはレースコンディションを含んだ同期接続プールのスニペットを置き換える&lt;/li&gt;
&lt;li&gt;他のいくつかの例とドキュメントページを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/191&#34; target=&#34;_blank&#34;&gt;GitHub #191&lt;/a&gt; &lt;code&gt;getenv&lt;/code&gt;をスレッドセーフにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#poly_collection&#34; id=&#34;poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::variant_collection&lt;/code&gt;を追加、&lt;code&gt;std::vector&amp;lt;std::variant&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;と似た振る舞いをする閉じた多態コレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart_ptr&#34; id=&#34;smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ワイドストリーム用の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を修正 (偶然1.87.0で壊れてしまっていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/198&#34; target=&#34;_blank&#34;&gt;GitHub #198&lt;/a&gt; MSVC実装で完全なモジュールパスを決定するために&lt;code&gt;GetModuleNames&lt;/code&gt;を使用するよう修正 (&lt;a href=&#34;https://github.com/Dani-Hub&#34; target=&#34;_blank&#34;&gt;Daniel Krügler&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt; ベースアドレスを知らなくても後でアドレスをデコードできるように、相対アドレスを印字した。このロジックは&lt;code&gt;BOOST_STACKTRACE_DISABLE_OFFSET_ADDR_BASE&lt;/code&gt;を定義することで無効化できる (&lt;a href=&#34;https://github.com/McCzarny&#34; target=&#34;_blank&#34;&gt;Maciej Czarnecki&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt; すべてのstacktraceライブラリをB2機能として公開。ビルドの制御をより良くし、どのライブラリがビルドされるかの明確な情報を提供。詳細は「Configuration and Build」セクションを参照 (&lt;a href=&#34;https://github.com/uilianries&#34; target=&#34;_blank&#34;&gt;Uilian Ries&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;MinGWでの&lt;code&gt;stacktrace_from_exception&lt;/code&gt;ビルドを修正 (&lt;a href=&#34;https://github.com/crhilton&#34; target=&#34;_blank&#34;&gt;crhilton&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.84で導入され、ライブラリをclang-20でビルドできないようにしたUBを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメンテーションをAntoraを使用したマルチページフォーマットに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;インデックスに適切な最小の符号なし型を使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.88.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_88_0.html"/>
      <id>7fa282f53f09685e9e3af2866f468dffeda48c0b:document/version/1_88_0.md</id>
      <updated>2025-04-12T00:37:33+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.88.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_88_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_88_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/hana2&#34; target=&#34;_blank&#34;&gt;Hash2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;拡張性の高いハッシュ計算フレームワーク。作者Peter Dimov、Christian Mazakas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mqtt5&#34; target=&#34;_blank&#34;&gt;MQTT5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.Asio上に作られたMQTT5クライアント。作者Ivica Siladić、Bruno Iljazović、Korina Šimičević&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktreace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをAsciiDocに変換した（Christian Mazakas氏）&lt;/li&gt;
&lt;li&gt;必要な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;廃止された関数を非推奨とした&lt;/li&gt;
&lt;li&gt;廃止されたコンパイラワークアラウンドを削除した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;::begin()&lt;/code&gt;, &lt;code&gt;cbegin()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cend()&lt;/code&gt;を&lt;code&gt;nullptr&lt;/code&gt;を返すように変更し、&lt;code&gt;constexpr&lt;/code&gt;を有効にした。これは&lt;code&gt;std::array&lt;/code&gt;の挙動と一致する&lt;/li&gt;
&lt;li&gt;ローカルの&lt;code&gt;hash_value&lt;/code&gt;オーバーロードを削除した。&lt;code&gt;boost::hash&lt;/code&gt;は配列のような型をネイティブにサポートする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;&lt;/code&gt;は現在、&lt;code&gt;={}&lt;/code&gt;で初期化することができる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to_array&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local::basic_endpoint&lt;/code&gt;メンバ関数のいくつかに&lt;code&gt;noexcept&lt;/code&gt;修飾子を追加し、&lt;code&gt;ip::basic_endpoint&lt;/code&gt;と整合性を持たせた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::config&lt;/code&gt;クラスの整数値の処理を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;での「ムーブ後の使用エラー (use-after-move error)」を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;の実装における誤ったデフォルトテンプレート引数を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_uring&lt;/code&gt;実装を修正し、フォーク後に内部descriptorをリアクターに再登録しようとすることがないようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool&lt;/code&gt;のデフォルトコンストラクタで初期化されていないメンバを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::span&lt;/code&gt;を&lt;code&gt;boost::asio::buffer&lt;/code&gt;関数に渡した際に生じた曖昧なオーバーロード問題を修正した&lt;/li&gt;
&lt;li&gt;非推奨のbuffer機能の削除後に残っていた一部の偽のマクロ定義を削除した&lt;/li&gt;
&lt;li&gt;ファイルオープン時の&lt;code&gt;file_base::flags&lt;/code&gt;の使用について明確化するドキュメントを追加した&lt;/li&gt;
&lt;li&gt;利用可能なランタイム設定オプションについての概要ドキュメントを追加した&lt;/li&gt;
&lt;li&gt;完了トークンとして&lt;code&gt;deferred&lt;/code&gt;がデフォルトで使用されるように、概要ドキュメントを更新した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;のドキュメントを更新し、現在の型要件がトレイトの特殊化部分に置かれていることを反映した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT_HANDLER_IS_NORETURN&lt;/code&gt;が定義されている場合、&lt;code&gt;boost::assertion_failed&lt;/code&gt;と&lt;code&gt;boost::assertion_failed_msg&lt;/code&gt;は&lt;code&gt;BOOST_NORETURN&lt;/code&gt;として宣言される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iequals&lt;/code&gt;関数での範囲外アクセスを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;SSLの例をアップデートし、ピア証明書のホスト名を検証するよう修正&lt;/li&gt;
&lt;li&gt;CMakeListsをリファクタリング&lt;/li&gt;
&lt;li&gt;例からBoost.Scopeへの依存関係を削除&lt;/li&gt;
&lt;li&gt;WebSocketのピアへのpingがアクティビティとしてカウントされるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;Unixドメインソケットの新しい例を追加&lt;/li&gt;
&lt;li&gt;ドキュメントにSSL/TLS証明書セクションを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocket::stream::async_close&lt;/code&gt;のドキュメントを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Morten M. Neergaard氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;サンプルコードとライブラリコードに、現代的なC++を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/82&#34; target=&#34;_blank&#34;&gt;GitHub #82&lt;/a&gt; &lt;code&gt;boost::dll::shared_library&lt;/code&gt;への &lt;code&gt;native_handle_t&lt;/code&gt;からのコンストラクタを追加 (Tiago Matos氏に感謝)&lt;/li&gt;
&lt;li&gt;Spirit, SmartPtr, Move, TypeTraits, Functionなど他のBoostライブラリへの依存関係を排除で、DLLのコンパイルが軽量化した&lt;/li&gt;
&lt;li&gt;APIでの&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;が&lt;code&gt;boost::system::error_code&amp;amp;&lt;/code&gt;の代わりに使われるようになった。&lt;code&gt;boost::system::error_code&lt;/code&gt;は&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;に変換可能なため破壊的な変更ではない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll:import_*&lt;/code&gt;関数が&lt;code&gt;std::shared_ptr&lt;/code&gt;を返すように変更。古い挙動を復元するために&lt;code&gt;BOOST_DLL_USE_BOOST_SHARED_PTR&lt;/code&gt;を定義した。ただし、このマクロは今後のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;サンプルとライブラリコードで現代的なC++を使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll::library_info&lt;/code&gt;が壊れたバイナリの場合は常に例外を送出するよう修正。ドキュメントを更新してテストを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RTLD_NODELETE&lt;/code&gt;が欠けている理由と&lt;code&gt;.release()&lt;/code&gt;メソッドがない理由をFAQで説明を追加。可能なワークアラウンドを提供する&lt;/li&gt;
&lt;li&gt;ライブラリのビルドと使用に関する情報を更新。CMakeターゲットはプラットフォームに必要な場合に「&lt;code&gt;-ldl&lt;/code&gt;」でリンクすること&lt;/li&gt;
&lt;li&gt;Windows OSの長いパスに対する&lt;code&gt;detail::path_from_handle&lt;/code&gt;実装を修正&lt;/li&gt;
&lt;li&gt;ドキュメントで&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分が実験的で未完成であることを強調&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分の多数のマングリング問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1370&#34; target=&#34;_blank&#34;&gt;GitHub #1370&lt;/a&gt; 球面正規化の半周期チェックを緩和&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1368&#34; target=&#34;_blank&#34;&gt;GitHub #1368&lt;/a&gt; rtreeのspatial述語でのumbrella戦略をパス&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1367&#34; target=&#34;_blank&#34;&gt;GitHub #1367&lt;/a&gt; 横断の改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1361&#34; target=&#34;_blank&#34;&gt;GitHub #1361&lt;/a&gt; 整数座標を持つランダムグリッド上での集合操作をテスト&lt;/li&gt;
&lt;li&gt;複数のテストケースを追加&lt;/li&gt;
&lt;li&gt;コードの一部でtypedefの代わりにusingを使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1364&#34; target=&#34;_blank&#34;&gt;GitHub #1364&lt;/a&gt; 複数の戦略を修正 (getterの追加、コンパイルエラーと警告の修正)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/629&#34; target=&#34;_blank&#34;&gt;GitHub #629&lt;/a&gt; 座標変換と未使用パラメータの警告を避ける&lt;/li&gt;
&lt;li&gt;エラーと警告の各種修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maximum_weighted_matching&lt;/code&gt;の実装を置換し、複数の問題を解決&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;が使用される前に初期化されているよう事前条件を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing&lt;/code&gt;のカスタムジオメトリコードをBoost.Geometryに置換し、非常に小さい角度での結果が正しくなるように修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undirected_dfs&lt;/code&gt;での&lt;code&gt;finish_edge&lt;/code&gt;への不正なコールバックを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンス向上&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adjacency_list&lt;/code&gt;: &lt;code&gt;vector&lt;/code&gt;ベースのストレージ内の&lt;code&gt;add_vertex&lt;/code&gt;から&lt;code&gt;resize&lt;/code&gt;/&lt;code&gt;reserve&lt;/code&gt;への不必要な呼び出しを削除。速度計測では、グラフ構築の時間が10％改善した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lengauer_tarjan_dominator_tree&lt;/code&gt;: &lt;code&gt;std::deque&lt;/code&gt;を&lt;code&gt;std::vector&lt;/code&gt;に置換し、大きなグラフでは約40%の改善を達成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一般的な改良点&lt;ul&gt;
&lt;li&gt;いくつかのBoostユーティリティの使用をC++14言語機能で置き換え&lt;/li&gt;
&lt;li&gt;例をC++14言語特性で現代化&lt;/li&gt;
&lt;li&gt;ドキュメンテーションとビルドシステムのさまざまな修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vertex_by_property&lt;/code&gt;がミュータブルなグラフを必要としなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cycle_canceling&lt;/code&gt;とClang 19のコンパイル問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必要なICUバージョンを4.8.1以上に引き上げ&lt;/li&gt;
&lt;li&gt;ICU 50.1のサポートを終了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; 浮動小数点形式の入力文字列での整数のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; ICUバックエンドでの&lt;code&gt;uint64_t&lt;/code&gt;値のパースとフォーマットをサポート&lt;/li&gt;
&lt;li&gt;より広いプラットフォームでの&lt;code&gt;char8_t&lt;/code&gt;サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lockfree&#34; id=&#34;lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たな&lt;code&gt;spsc_value&lt;/code&gt;を追加、トリプルバッファに基づくロックフリーのsingle-producer / single-consumer値&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降のモードで&lt;code&gt;std::codecvt&amp;lt;char16_t&amp;gt;&lt;/code&gt;と&lt;code&gt;std::codecvt&amp;lt;char32_t&amp;gt;&lt;/code&gt;のロケールのファセットの使用を無効化、これらはC++20で非推奨となったため、これは&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;への・からの文字コード変換がC++20以降で利用できなくなることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; CMakeとMinGW-w64を使用した時のビルド問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;が既存のファイルに追記するように設定された場合、アクティブに書き込まれたファイル名パターンにカウンタプレースホルダーがなく、ターゲットファイル名パターンにはあった場合、およびログファイルが直接ターゲットストレージに書き込まれた場合に使用された不正なファイルカウンタを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非整数値に対する&lt;code&gt;mp_from_sequence&lt;/code&gt;を修正 (1.83.0でオフセットサポートの影響で誤って壊れていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;connection_pool&lt;/code&gt;は、セッション確立中の多くの接続が存在する場合でも、正しくリサイズするようになった。古いアルゴリズムでは、特定の条件下でプールが期待通りにリサイズされない可能性があった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/408&#34; target=&#34;_blank&#34;&gt;GitHub #408&lt;/a&gt; &lt;code&gt;any_connection::connection_id&lt;/code&gt;を追加。この関数は接続のIDを取得し、その後、&lt;code&gt;KILL&lt;/code&gt; SQLステートメントでクエリをキャンセルするために使用できる。この関数は公式のC APIの&lt;code&gt;mysql_thread_id&lt;/code&gt;と等価である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/405&#34; target=&#34;_blank&#34;&gt;GitHub #405&lt;/a&gt; 別の操作が進行中の&lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;で非同期操作を開始しようとすると、未定義の動作を引き起こすことがなくなった。代わりに&lt;code&gt;client_errc::operation_in_progress&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/448&#34; target=&#34;_blank&#34;&gt;GitHub #448&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;がマルチファンクション操作に従事している間に操作を開始しようとすると、潜在的に危険なパケットの不一致が発生することがなくなった。代わりに&lt;code&gt;client_errc::engaged_in_multi_function&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/450&#34; target=&#34;_blank&#34;&gt;GitHub #450&lt;/a&gt; セッションが確立していない接続を使用しようとするときの診断を改善。操作は&lt;code&gt;client_errc::not_connected&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;と&lt;code&gt;any_connection&lt;/code&gt;の操作ごとのキャンセルに関する競争条件を修正。以前のバージョンでは、中間の非同期操作が完了した後、しかしそのハンドラが呼び出される前にキャンセル信号が発生した場合、信号は無視されていた。これはもはやそうではなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field&lt;/code&gt;のコンストラクタと&lt;code&gt;std::string_view&lt;/code&gt;からの代入は、C++20ではなくC++17で利用可能になった。これらの関数は、C++20でのみ利用可能な標準の機能テストマクロによってガードされていました。これらはBoost.Configと同等のものに置き換えられた&lt;/li&gt;
&lt;li&gt;C++20のコルーチンを用いたHTTPサーバーの例を追加&lt;/li&gt;
&lt;li&gt;同期コードと非同期コードのインターフェイスに関するドキュメントページを追加。これはレースコンディションを含んだ同期接続プールのスニペットを置き換える&lt;/li&gt;
&lt;li&gt;他のいくつかの例とドキュメントページを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/191&#34; target=&#34;_blank&#34;&gt;GitHub #191&lt;/a&gt; &lt;code&gt;getenv&lt;/code&gt;をスレッドセーフにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#poly_collection&#34; id=&#34;poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::variant_collection&lt;/code&gt;を追加、&lt;code&gt;std::vector&amp;lt;std::variant&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;と似た振る舞いをする閉じた多態コレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart_ptr&#34; id=&#34;smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ワイドストリーム用の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を修正 (偶然1.87.0で壊れてしまっていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/198&#34; target=&#34;_blank&#34;&gt;GitHub #198&lt;/a&gt; MSVC実装で完全なモジュールパスを決定するために&lt;code&gt;GetModuleNames&lt;/code&gt;を使用するよう修正 (&lt;a href=&#34;https://github.com/Dani-Hub&#34; target=&#34;_blank&#34;&gt;Daniel Krügler&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt; ベースアドレスを知らなくても後でアドレスをデコードできるように、相対アドレスを印字した。このロジックは&lt;code&gt;BOOST_STACKTRACE_DISABLE_OFFSET_ADDR_BASE&lt;/code&gt;を定義することで無効化できる (&lt;a href=&#34;https://github.com/McCzarny&#34; target=&#34;_blank&#34;&gt;Maciej Czarnecki&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt; すべてのstacktraceライブラリをB2機能として公開。ビルドの制御をより良くし、どのライブラリがビルドされるかの明確な情報を提供。詳細は「Configuration and Build」セクションを参照 (&lt;a href=&#34;https://github.com/uilianries&#34; target=&#34;_blank&#34;&gt;Uilian Ries&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;MinGWでの&lt;code&gt;stacktrace_from_exception&lt;/code&gt;ビルドを修正 (&lt;a href=&#34;https://github.com/crhilton&#34; target=&#34;_blank&#34;&gt;crhilton&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.84で導入され、ライブラリをclang-20でビルドできないようにしたUBを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメンテーションをAntoraを使用したマルチページフォーマットに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;インデックスに適切な最小の符号なし型を使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.88.0リリースノート -- 1.88.0: 新ライブラリを記載</title>
      <link href="https://boostjp.github.io/document/version/1_88_0.html"/>
      <id>b6f0bed764635f80e8b07e36b1cead9950649759:document/version/1_88_0.md</id>
      <updated>2025-04-11T13:26:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.88.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_88_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_88_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/hana2&#34; target=&#34;_blank&#34;&gt;Hash2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;拡張性の高いハッシュ計算フレームワーク。作者Peter Dimov、Christian Mazakas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mqtt5&#34; target=&#34;_blank&#34;&gt;MQTT5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.Asio上に作られたMQTT5クライアント。作者Ivica Siladić、Bruno Iljazović、Korina Šimičević&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geomery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktreace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをAsciiDocに変換した（Christian Mazakas氏）&lt;/li&gt;
&lt;li&gt;必要な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;廃止された関数を非推奨とした&lt;/li&gt;
&lt;li&gt;廃止されたコンパイラワークアラウンドを削除した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;::begin()&lt;/code&gt;, &lt;code&gt;cbegin()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cend()&lt;/code&gt;を&lt;code&gt;nullptr&lt;/code&gt;を返すように変更し、&lt;code&gt;constexpr&lt;/code&gt;を有効にした。これは&lt;code&gt;std::array&lt;/code&gt;の挙動と一致する&lt;/li&gt;
&lt;li&gt;ローカルの&lt;code&gt;hash_value&lt;/code&gt;オーバーロードを削除した。&lt;code&gt;boost::hash&lt;/code&gt;は配列のような型をネイティブにサポートする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;&lt;/code&gt;は現在、&lt;code&gt;={}&lt;/code&gt;で初期化することができる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to_array&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local::basic_endpoint&lt;/code&gt;メンバ関数のいくつかに&lt;code&gt;noexcept&lt;/code&gt;修飾子を追加し、&lt;code&gt;ip::basic_endpoint&lt;/code&gt;と整合性を持たせた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::config&lt;/code&gt;クラスの整数値の処理を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;での「ムーブ後の使用エラー (use-after-move error)」を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;の実装における誤ったデフォルトテンプレート引数を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_uring&lt;/code&gt;実装を修正し、フォーク後に内部descriptorをリアクターに再登録しようとすることがないようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool&lt;/code&gt;のデフォルトコンストラクタで初期化されていないメンバを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::span&lt;/code&gt;を&lt;code&gt;boost::asio::buffer&lt;/code&gt;関数に渡した際に生じた曖昧なオーバーロード問題を修正した&lt;/li&gt;
&lt;li&gt;非推奨のbuffer機能の削除後に残っていた一部の偽のマクロ定義を削除した&lt;/li&gt;
&lt;li&gt;ファイルオープン時の&lt;code&gt;file_base::flags&lt;/code&gt;の使用について明確化するドキュメントを追加した&lt;/li&gt;
&lt;li&gt;利用可能なランタイム設定オプションについての概要ドキュメントを追加した&lt;/li&gt;
&lt;li&gt;完了トークンとして&lt;code&gt;deferred&lt;/code&gt;がデフォルトで使用されるように、概要ドキュメントを更新した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;のドキュメントを更新し、現在の型要件がトレイトの特殊化部分に置かれていることを反映した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT_HANDLER_IS_NORETURN&lt;/code&gt;が定義されている場合、&lt;code&gt;boost::assertion_failed&lt;/code&gt;と&lt;code&gt;boost::assertion_failed_msg&lt;/code&gt;は&lt;code&gt;BOOST_NORETURN&lt;/code&gt;として宣言される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iequals&lt;/code&gt;関数での範囲外アクセスを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;SSLの例をアップデートし、ピア証明書のホスト名を検証するよう修正&lt;/li&gt;
&lt;li&gt;CMakeListsをリファクタリング&lt;/li&gt;
&lt;li&gt;例からBoost.Scopeへの依存関係を削除&lt;/li&gt;
&lt;li&gt;WebSocketのピアへのpingがアクティビティとしてカウントされるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;Unixドメインソケットの新しい例を追加&lt;/li&gt;
&lt;li&gt;ドキュメントにSSL/TLS証明書セクションを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocket::stream::async_close&lt;/code&gt;のドキュメントを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Morten M. Neergaard氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;サンプルコードとライブラリコードに、現代的なC++を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/82&#34; target=&#34;_blank&#34;&gt;GitHub #82&lt;/a&gt; &lt;code&gt;boost::dll::shared_library&lt;/code&gt;への &lt;code&gt;native_handle_t&lt;/code&gt;からのコンストラクタを追加 (Tiago Matos氏に感謝)&lt;/li&gt;
&lt;li&gt;Spirit, SmartPtr, Move, TypeTraits, Functionなど他のBoostライブラリへの依存関係を排除で、DLLのコンパイルが軽量化した&lt;/li&gt;
&lt;li&gt;APIでの&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;が&lt;code&gt;boost::system::error_code&amp;amp;&lt;/code&gt;の代わりに使われるようになった。&lt;code&gt;boost::system::error_code&lt;/code&gt;は&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;に変換可能なため破壊的な変更ではない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll:import_*&lt;/code&gt;関数が&lt;code&gt;std::shared_ptr&lt;/code&gt;を返すように変更。古い挙動を復元するために&lt;code&gt;BOOST_DLL_USE_BOOST_SHARED_PTR&lt;/code&gt;を定義した。ただし、このマクロは今後のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;サンプルとライブラリコードで現代的なC++を使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll::library_info&lt;/code&gt;が壊れたバイナリの場合は常に例外を送出するよう修正。ドキュメントを更新してテストを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RTLD_NODELETE&lt;/code&gt;が欠けている理由と&lt;code&gt;.release()&lt;/code&gt;メソッドがない理由をFAQで説明を追加。可能なワークアラウンドを提供する&lt;/li&gt;
&lt;li&gt;ライブラリのビルドと使用に関する情報を更新。CMakeターゲットはプラットフォームに必要な場合に「&lt;code&gt;-ldl&lt;/code&gt;」でリンクすること&lt;/li&gt;
&lt;li&gt;Windows OSの長いパスに対する&lt;code&gt;detail::path_from_handle&lt;/code&gt;実装を修正&lt;/li&gt;
&lt;li&gt;ドキュメントで&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分が実験的で未完成であることを強調&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分の多数のマングリング問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geomery&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1370&#34; target=&#34;_blank&#34;&gt;GitHub #1370&lt;/a&gt; 球面正規化の半周期チェックを緩和&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1368&#34; target=&#34;_blank&#34;&gt;GitHub #1368&lt;/a&gt; rtreeのspatial述語でのumbrella戦略をパス&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1367&#34; target=&#34;_blank&#34;&gt;GitHub #1367&lt;/a&gt; 横断の改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1361&#34; target=&#34;_blank&#34;&gt;GitHub #1361&lt;/a&gt; 整数座標を持つランダムグリッド上での集合操作をテスト&lt;/li&gt;
&lt;li&gt;複数のテストケースを追加&lt;/li&gt;
&lt;li&gt;コードの一部でtypedefの代わりにusingを使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1364&#34; target=&#34;_blank&#34;&gt;GitHub #1364&lt;/a&gt; 複数の戦略を修正 (getterの追加、コンパイルエラーと警告の修正)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/629&#34; target=&#34;_blank&#34;&gt;GitHub #629&lt;/a&gt; 座標変換と未使用パラメータの警告を避ける&lt;/li&gt;
&lt;li&gt;エラーと警告の各種修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maximum_weighted_matching&lt;/code&gt;の実装を置換し、複数の問題を解決&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;が使用される前に初期化されているよう事前条件を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing&lt;/code&gt;のカスタムジオメトリコードをBoost.Geometryに置換し、非常に小さい角度での結果が正しくなるように修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undirected_dfs&lt;/code&gt;での&lt;code&gt;finish_edge&lt;/code&gt;への不正なコールバックを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンス向上&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adjacency_list&lt;/code&gt;: &lt;code&gt;vector&lt;/code&gt;ベースのストレージ内の&lt;code&gt;add_vertex&lt;/code&gt;から&lt;code&gt;resize&lt;/code&gt;/&lt;code&gt;reserve&lt;/code&gt;への不必要な呼び出しを削除。速度計測では、グラフ構築の時間が10％改善した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lengauer_tarjan_dominator_tree&lt;/code&gt;: &lt;code&gt;std::deque&lt;/code&gt;を&lt;code&gt;std::vector&lt;/code&gt;に置換し、大きなグラフでは約40%の改善を達成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一般的な改良点&lt;ul&gt;
&lt;li&gt;いくつかのBoostユーティリティの使用をC++14言語機能で置き換え&lt;/li&gt;
&lt;li&gt;例をC++14言語特性で現代化&lt;/li&gt;
&lt;li&gt;ドキュメンテーションとビルドシステムのさまざまな修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vertex_by_property&lt;/code&gt;がミュータブルなグラフを必要としなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cycle_canceling&lt;/code&gt;とClang 19のコンパイル問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必要なICUバージョンを4.8.1以上に引き上げ&lt;/li&gt;
&lt;li&gt;ICU 50.1のサポートを終了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; 浮動小数点形式の入力文字列での整数のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; ICUバックエンドでの&lt;code&gt;uint64_t&lt;/code&gt;値のパースとフォーマットをサポート&lt;/li&gt;
&lt;li&gt;より広いプラットフォームでの&lt;code&gt;char8_t&lt;/code&gt;サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lockfree&#34; id=&#34;lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たな&lt;code&gt;spsc_value&lt;/code&gt;を追加、トリプルバッファに基づくロックフリーのsingle-producer / single-consumer値&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降のモードで&lt;code&gt;std::codecvt&amp;lt;char16_t&amp;gt;&lt;/code&gt;と&lt;code&gt;std::codecvt&amp;lt;char32_t&amp;gt;&lt;/code&gt;のロケールのファセットの使用を無効化、これらはC++20で非推奨となったため、これは&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;への・からの文字コード変換がC++20以降で利用できなくなることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; CMakeとMinGW-w64を使用した時のビルド問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;が既存のファイルに追記するように設定された場合、アクティブに書き込まれたファイル名パターンにカウンタプレースホルダーがなく、ターゲットファイル名パターンにはあった場合、およびログファイルが直接ターゲットストレージに書き込まれた場合に使用された不正なファイルカウンタを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非整数値に対する&lt;code&gt;mp_from_sequence&lt;/code&gt;を修正 (1.83.0でオフセットサポートの影響で誤って壊れていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;connection_pool&lt;/code&gt;は、セッション確立中の多くの接続が存在する場合でも、正しくリサイズするようになった。古いアルゴリズムでは、特定の条件下でプールが期待通りにリサイズされない可能性があった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/408&#34; target=&#34;_blank&#34;&gt;GitHub #408&lt;/a&gt; &lt;code&gt;any_connection::connection_id&lt;/code&gt;を追加。この関数は接続のIDを取得し、その後、&lt;code&gt;KILL&lt;/code&gt; SQLステートメントでクエリをキャンセルするために使用できる。この関数は公式のC APIの&lt;code&gt;mysql_thread_id&lt;/code&gt;と等価である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/405&#34; target=&#34;_blank&#34;&gt;GitHub #405&lt;/a&gt; 別の操作が進行中の&lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;で非同期操作を開始しようとすると、未定義の動作を引き起こすことがなくなった。代わりに&lt;code&gt;client_errc::operation_in_progress&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/448&#34; target=&#34;_blank&#34;&gt;GitHub #448&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;がマルチファンクション操作に従事している間に操作を開始しようとすると、潜在的に危険なパケットの不一致が発生することがなくなった。代わりに&lt;code&gt;client_errc::engaged_in_multi_function&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/450&#34; target=&#34;_blank&#34;&gt;GitHub #450&lt;/a&gt; セッションが確立していない接続を使用しようとするときの診断を改善。操作は&lt;code&gt;client_errc::not_connected&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;と&lt;code&gt;any_connection&lt;/code&gt;の操作ごとのキャンセルに関する競争条件を修正。以前のバージョンでは、中間の非同期操作が完了した後、しかしそのハンドラが呼び出される前にキャンセル信号が発生した場合、信号は無視されていた。これはもはやそうではなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field&lt;/code&gt;のコンストラクタと&lt;code&gt;std::string_view&lt;/code&gt;からの代入は、C++20ではなくC++17で利用可能になった。これらの関数は、C++20でのみ利用可能な標準の機能テストマクロによってガードされていました。これらはBoost.Configと同等のものに置き換えられた&lt;/li&gt;
&lt;li&gt;C++20のコルーチンを用いたHTTPサーバーの例を追加&lt;/li&gt;
&lt;li&gt;同期コードと非同期コードのインターフェイスに関するドキュメントページを追加。これはレースコンディションを含んだ同期接続プールのスニペットを置き換える&lt;/li&gt;
&lt;li&gt;他のいくつかの例とドキュメントページを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/191&#34; target=&#34;_blank&#34;&gt;GitHub #191&lt;/a&gt; &lt;code&gt;getenv&lt;/code&gt;をスレッドセーフにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#poly_collection&#34; id=&#34;poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::variant_collection&lt;/code&gt;を追加、&lt;code&gt;std::vector&amp;lt;std::variant&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;と似た振る舞いをする閉じた多態コレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart_ptr&#34; id=&#34;smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ワイドストリーム用の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を修正 (偶然1.87.0で壊れてしまっていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/198&#34; target=&#34;_blank&#34;&gt;GitHub #198&lt;/a&gt; MSVC実装で完全なモジュールパスを決定するために&lt;code&gt;GetModuleNames&lt;/code&gt;を使用するよう修正 (&lt;a href=&#34;https://github.com/Dani-Hub&#34; target=&#34;_blank&#34;&gt;Daniel Krügler&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt; ベースアドレスを知らなくても後でアドレスをデコードできるように、相対アドレスを印字した。このロジックは&lt;code&gt;BOOST_STACKTRACE_DISABLE_OFFSET_ADDR_BASE&lt;/code&gt;を定義することで無効化できる (&lt;a href=&#34;https://github.com/McCzarny&#34; target=&#34;_blank&#34;&gt;Maciej Czarnecki&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt; すべてのstacktraceライブラリをB2機能として公開。ビルドの制御をより良くし、どのライブラリがビルドされるかの明確な情報を提供。詳細は「Configuration and Build」セクションを参照 (&lt;a href=&#34;https://github.com/uilianries&#34; target=&#34;_blank&#34;&gt;Uilian Ries&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;MinGWでの&lt;code&gt;stacktrace_from_exception&lt;/code&gt;ビルドを修正 (&lt;a href=&#34;https://github.com/crhilton&#34; target=&#34;_blank&#34;&gt;crhilton&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.84で導入され、ライブラリをclang-20でビルドできないようにしたUBを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメンテーションをAntoraを使用したマルチページフォーマットに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;インデックスに適切な最小の符号なし型を使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.88.0リリースノート -- 1.88.0: テストコンパイラを記載</title>
      <link href="https://boostjp.github.io/document/version/1_88_0.html"/>
      <id>5b0e991b442b7780d9bb24a3d8d895a3ab8653eb:document/version/1_88_0.md</id>
      <updated>2025-04-11T13:13:08+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.88.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_88_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_88_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_88_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;p&gt;なし&lt;/p&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geomery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktreace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをAsciiDocに変換した（Christian Mazakas氏）&lt;/li&gt;
&lt;li&gt;必要な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;廃止された関数を非推奨とした&lt;/li&gt;
&lt;li&gt;廃止されたコンパイラワークアラウンドを削除した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;::begin()&lt;/code&gt;, &lt;code&gt;cbegin()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cend()&lt;/code&gt;を&lt;code&gt;nullptr&lt;/code&gt;を返すように変更し、&lt;code&gt;constexpr&lt;/code&gt;を有効にした。これは&lt;code&gt;std::array&lt;/code&gt;の挙動と一致する&lt;/li&gt;
&lt;li&gt;ローカルの&lt;code&gt;hash_value&lt;/code&gt;オーバーロードを削除した。&lt;code&gt;boost::hash&lt;/code&gt;は配列のような型をネイティブにサポートする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&amp;lt;T, 0&amp;gt;&lt;/code&gt;は現在、&lt;code&gt;={}&lt;/code&gt;で初期化することができる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to_array&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local::basic_endpoint&lt;/code&gt;メンバ関数のいくつかに&lt;code&gt;noexcept&lt;/code&gt;修飾子を追加し、&lt;code&gt;ip::basic_endpoint&lt;/code&gt;と整合性を持たせた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::config&lt;/code&gt;クラスの整数値の処理を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;での「ムーブ後の使用エラー (use-after-move error)」を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;の実装における誤ったデフォルトテンプレート引数を修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_uring&lt;/code&gt;実装を修正し、フォーク後に内部descriptorをリアクターに再登録しようとすることがないようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pool&lt;/code&gt;のデフォルトコンストラクタで初期化されていないメンバを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::span&lt;/code&gt;を&lt;code&gt;boost::asio::buffer&lt;/code&gt;関数に渡した際に生じた曖昧なオーバーロード問題を修正した&lt;/li&gt;
&lt;li&gt;非推奨のbuffer機能の削除後に残っていた一部の偽のマクロ定義を削除した&lt;/li&gt;
&lt;li&gt;ファイルオープン時の&lt;code&gt;file_base::flags&lt;/code&gt;の使用について明確化するドキュメントを追加した&lt;/li&gt;
&lt;li&gt;利用可能なランタイム設定オプションについての概要ドキュメントを追加した&lt;/li&gt;
&lt;li&gt;完了トークンとして&lt;code&gt;deferred&lt;/code&gt;がデフォルトで使用されるように、概要ドキュメントを更新した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_result&lt;/code&gt;のドキュメントを更新し、現在の型要件がトレイトの特殊化部分に置かれていることを反映した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT_HANDLER_IS_NORETURN&lt;/code&gt;が定義されている場合、&lt;code&gt;boost::assertion_failed&lt;/code&gt;と&lt;code&gt;boost::assertion_failed_msg&lt;/code&gt;は&lt;code&gt;BOOST_NORETURN&lt;/code&gt;として宣言される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iequals&lt;/code&gt;関数での範囲外アクセスを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;SSLの例をアップデートし、ピア証明書のホスト名を検証するよう修正&lt;/li&gt;
&lt;li&gt;CMakeListsをリファクタリング&lt;/li&gt;
&lt;li&gt;例からBoost.Scopeへの依存関係を削除&lt;/li&gt;
&lt;li&gt;WebSocketのピアへのpingがアクティビティとしてカウントされるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;Unixドメインソケットの新しい例を追加&lt;/li&gt;
&lt;li&gt;ドキュメントにSSL/TLS証明書セクションを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocket::stream::async_close&lt;/code&gt;のドキュメントを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Morten M. Neergaard氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;サンプルコードとライブラリコードに、現代的なC++を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/82&#34; target=&#34;_blank&#34;&gt;GitHub #82&lt;/a&gt; &lt;code&gt;boost::dll::shared_library&lt;/code&gt;への &lt;code&gt;native_handle_t&lt;/code&gt;からのコンストラクタを追加 (Tiago Matos氏に感謝)&lt;/li&gt;
&lt;li&gt;Spirit, SmartPtr, Move, TypeTraits, Functionなど他のBoostライブラリへの依存関係を排除で、DLLのコンパイルが軽量化した&lt;/li&gt;
&lt;li&gt;APIでの&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;が&lt;code&gt;boost::system::error_code&amp;amp;&lt;/code&gt;の代わりに使われるようになった。&lt;code&gt;boost::system::error_code&lt;/code&gt;は&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;に変換可能なため破壊的な変更ではない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll:import_*&lt;/code&gt;関数が&lt;code&gt;std::shared_ptr&lt;/code&gt;を返すように変更。古い挙動を復元するために&lt;code&gt;BOOST_DLL_USE_BOOST_SHARED_PTR&lt;/code&gt;を定義した。ただし、このマクロは今後のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;サンプルとライブラリコードで現代的なC++を使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::dll::library_info&lt;/code&gt;が壊れたバイナリの場合は常に例外を送出するよう修正。ドキュメントを更新してテストを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RTLD_NODELETE&lt;/code&gt;が欠けている理由と&lt;code&gt;.release()&lt;/code&gt;メソッドがない理由をFAQで説明を追加。可能なワークアラウンドを提供する&lt;/li&gt;
&lt;li&gt;ライブラリのビルドと使用に関する情報を更新。CMakeターゲットはプラットフォームに必要な場合に「&lt;code&gt;-ldl&lt;/code&gt;」でリンクすること&lt;/li&gt;
&lt;li&gt;Windows OSの長いパスに対する&lt;code&gt;detail::path_from_handle&lt;/code&gt;実装を修正&lt;/li&gt;
&lt;li&gt;ドキュメントで&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分が実験的で未完成であることを強調&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/dll/smart_*&lt;/code&gt;部分の多数のマングリング問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geomery&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1370&#34; target=&#34;_blank&#34;&gt;GitHub #1370&lt;/a&gt; 球面正規化の半周期チェックを緩和&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1368&#34; target=&#34;_blank&#34;&gt;GitHub #1368&lt;/a&gt; rtreeのspatial述語でのumbrella戦略をパス&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1367&#34; target=&#34;_blank&#34;&gt;GitHub #1367&lt;/a&gt; 横断の改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1361&#34; target=&#34;_blank&#34;&gt;GitHub #1361&lt;/a&gt; 整数座標を持つランダムグリッド上での集合操作をテスト&lt;/li&gt;
&lt;li&gt;複数のテストケースを追加&lt;/li&gt;
&lt;li&gt;コードの一部でtypedefの代わりにusingを使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1364&#34; target=&#34;_blank&#34;&gt;GitHub #1364&lt;/a&gt; 複数の戦略を修正 (getterの追加、コンパイルエラーと警告の修正)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/629&#34; target=&#34;_blank&#34;&gt;GitHub #629&lt;/a&gt; 座標変換と未使用パラメータの警告を避ける&lt;/li&gt;
&lt;li&gt;エラーと警告の各種修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maximum_weighted_matching&lt;/code&gt;の実装を置換し、複数の問題を解決&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;が使用される前に初期化されているよう事前条件を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing&lt;/code&gt;のカスタムジオメトリコードをBoost.Geometryに置換し、非常に小さい角度での結果が正しくなるように修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undirected_dfs&lt;/code&gt;での&lt;code&gt;finish_edge&lt;/code&gt;への不正なコールバックを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンス向上&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adjacency_list&lt;/code&gt;: &lt;code&gt;vector&lt;/code&gt;ベースのストレージ内の&lt;code&gt;add_vertex&lt;/code&gt;から&lt;code&gt;resize&lt;/code&gt;/&lt;code&gt;reserve&lt;/code&gt;への不必要な呼び出しを削除。速度計測では、グラフ構築の時間が10％改善した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lengauer_tarjan_dominator_tree&lt;/code&gt;: &lt;code&gt;std::deque&lt;/code&gt;を&lt;code&gt;std::vector&lt;/code&gt;に置換し、大きなグラフでは約40%の改善を達成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一般的な改良点&lt;ul&gt;
&lt;li&gt;いくつかのBoostユーティリティの使用をC++14言語機能で置き換え&lt;/li&gt;
&lt;li&gt;例をC++14言語特性で現代化&lt;/li&gt;
&lt;li&gt;ドキュメンテーションとビルドシステムのさまざまな修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vertex_by_property&lt;/code&gt;がミュータブルなグラフを必要としなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cycle_canceling&lt;/code&gt;とClang 19のコンパイル問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必要なICUバージョンを4.8.1以上に引き上げ&lt;/li&gt;
&lt;li&gt;ICU 50.1のサポートを終了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; 浮動小数点形式の入力文字列での整数のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; ICUバックエンドでの&lt;code&gt;uint64_t&lt;/code&gt;値のパースとフォーマットをサポート&lt;/li&gt;
&lt;li&gt;より広いプラットフォームでの&lt;code&gt;char8_t&lt;/code&gt;サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lockfree&#34; id=&#34;lockfree&#34;&gt;Lockfree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たな&lt;code&gt;spsc_value&lt;/code&gt;を追加、トリプルバッファに基づくロックフリーのsingle-producer / single-consumer値&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降のモードで&lt;code&gt;std::codecvt&amp;lt;char16_t&amp;gt;&lt;/code&gt;と&lt;code&gt;std::codecvt&amp;lt;char32_t&amp;gt;&lt;/code&gt;のロケールのファセットの使用を無効化、これらはC++20で非推奨となったため、これは&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;への・からの文字コード変換がC++20以降で利用できなくなることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/241&#34; target=&#34;_blank&#34;&gt;GitHub #241&lt;/a&gt; CMakeとMinGW-w64を使用した時のビルド問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;が既存のファイルに追記するように設定された場合、アクティブに書き込まれたファイル名パターンにカウンタプレースホルダーがなく、ターゲットファイル名パターンにはあった場合、およびログファイルが直接ターゲットストレージに書き込まれた場合に使用された不正なファイルカウンタを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非整数値に対する&lt;code&gt;mp_from_sequence&lt;/code&gt;を修正 (1.83.0でオフセットサポートの影響で誤って壊れていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;connection_pool&lt;/code&gt;は、セッション確立中の多くの接続が存在する場合でも、正しくリサイズするようになった。古いアルゴリズムでは、特定の条件下でプールが期待通りにリサイズされない可能性があった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/408&#34; target=&#34;_blank&#34;&gt;GitHub #408&lt;/a&gt; &lt;code&gt;any_connection::connection_id&lt;/code&gt;を追加。この関数は接続のIDを取得し、その後、&lt;code&gt;KILL&lt;/code&gt; SQLステートメントでクエリをキャンセルするために使用できる。この関数は公式のC APIの&lt;code&gt;mysql_thread_id&lt;/code&gt;と等価である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/405&#34; target=&#34;_blank&#34;&gt;GitHub #405&lt;/a&gt; 別の操作が進行中の&lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;で非同期操作を開始しようとすると、未定義の動作を引き起こすことがなくなった。代わりに&lt;code&gt;client_errc::operation_in_progress&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/448&#34; target=&#34;_blank&#34;&gt;GitHub #448&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;または&lt;code&gt;any_connection&lt;/code&gt;がマルチファンクション操作に従事している間に操作を開始しようとすると、潜在的に危険なパケットの不一致が発生することがなくなった。代わりに&lt;code&gt;client_errc::engaged_in_multi_function&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/450&#34; target=&#34;_blank&#34;&gt;GitHub #450&lt;/a&gt; セッションが確立していない接続を使用しようとするときの診断を改善。操作は&lt;code&gt;client_errc::not_connected&lt;/code&gt;で失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; &lt;code&gt;connection&lt;/code&gt;と&lt;code&gt;any_connection&lt;/code&gt;の操作ごとのキャンセルに関する競争条件を修正。以前のバージョンでは、中間の非同期操作が完了した後、しかしそのハンドラが呼び出される前にキャンセル信号が発生した場合、信号は無視されていた。これはもはやそうではなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field&lt;/code&gt;のコンストラクタと&lt;code&gt;std::string_view&lt;/code&gt;からの代入は、C++20ではなくC++17で利用可能になった。これらの関数は、C++20でのみ利用可能な標準の機能テストマクロによってガードされていました。これらはBoost.Configと同等のものに置き換えられた&lt;/li&gt;
&lt;li&gt;C++20のコルーチンを用いたHTTPサーバーの例を追加&lt;/li&gt;
&lt;li&gt;同期コードと非同期コードのインターフェイスに関するドキュメントページを追加。これはレースコンディションを含んだ同期接続プールのスニペットを置き換える&lt;/li&gt;
&lt;li&gt;他のいくつかの例とドキュメントページを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/191&#34; target=&#34;_blank&#34;&gt;GitHub #191&lt;/a&gt; &lt;code&gt;getenv&lt;/code&gt;をスレッドセーフにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#poly_collection&#34; id=&#34;poly_collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::variant_collection&lt;/code&gt;を追加、&lt;code&gt;std::vector&amp;lt;std::variant&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;と似た振る舞いをする閉じた多態コレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart_ptr&#34; id=&#34;smart_ptr&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ワイドストリーム用の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を修正 (偶然1.87.0で壊れてしまっていた)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/198&#34; target=&#34;_blank&#34;&gt;GitHub #198&lt;/a&gt; MSVC実装で完全なモジュールパスを決定するために&lt;code&gt;GetModuleNames&lt;/code&gt;を使用するよう修正 (&lt;a href=&#34;https://github.com/Dani-Hub&#34; target=&#34;_blank&#34;&gt;Daniel Krügler&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt; ベースアドレスを知らなくても後でアドレスをデコードできるように、相対アドレスを印字した。このロジックは&lt;code&gt;BOOST_STACKTRACE_DISABLE_OFFSET_ADDR_BASE&lt;/code&gt;を定義することで無効化できる (&lt;a href=&#34;https://github.com/McCzarny&#34; target=&#34;_blank&#34;&gt;Maciej Czarnecki&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt; すべてのstacktraceライブラリをB2機能として公開。ビルドの制御をより良くし、どのライブラリがビルドされるかの明確な情報を提供。詳細は「Configuration and Build」セクションを参照 (&lt;a href=&#34;https://github.com/uilianries&#34; target=&#34;_blank&#34;&gt;Uilian Ries&lt;/a&gt;氏に多大なる感謝)&lt;/li&gt;
&lt;li&gt;MinGWでの&lt;code&gt;stacktrace_from_exception&lt;/code&gt;ビルドを修正 (&lt;a href=&#34;https://github.com/crhilton&#34; target=&#34;_blank&#34;&gt;crhilton&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.84で導入され、ライブラリをclang-20でビルドできないようにしたUBを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメンテーションをAntoraを使用したマルチページフォーマットに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;インデックスに適切な最小の符号なし型を使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>