<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2022-06-30T14:38:22.956496</updated>
  <id>13cb9c86-735c-4641-8943-1b61409b614e</id>

  
    <entry>
      <title>Boost 1.79.0リリースノート -- 1.79.0 : Geometryの追加リリースノートに対応</title>
      <link href="https://boostjp.github.io/document/version/1_79_0.html"/>
      <id>cf17e0dc5b9e326423d0df43744a55e8073f53c9:document/version/1_79_0.md</id>
      <updated>2022-04-28T12:21:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_79_0.md b/document/version/1_79_0.md
index ee241a5..eec537a 100644
--- a/document/version/1_79_0.md
+++ b/document/version/1_79_0.md
@@ -163,6 +163,8 @@
 - 大きな変更
     - [GitHub #977](https://github.com/boostorg/geometry/pull/977) 再スケーリングをデフォルトでオフにした。これにより、集合操作とバッファに関連する多くのバグが回避される
 - 改善
+    - [GitHub #923](https://github.com/boostorg/geometry/pull/923) cartesian point/geometry向けに`closest_points`アルゴリズムを追加
+    - [GitHub #939](https://github.com/boostorg/geometry/pull/939) `closest_points`アルゴリズムに他の座標系や剛体の組み合わせ (boxなど) を追加
     - [GitHub #961](https://github.com/boostorg/geometry/pull/961) Webメルトカル図法 (Web Mercator projection) を追加
     - [GitHub #966](https://github.com/boostorg/geometry/pull/966) `simplify`で使用されるcartesian distanceをより効率的にした
 - 解決したissue
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.79.0リリースノート -- 1.79.0 : テスト済みコンパイラを追加</title>
      <link href="https://boostjp.github.io/document/version/1_79_0.html"/>
      <id>02f49db250bd57448776b1491a11947fc768b9e6:document/version/1_79_0.md</id>
      <updated>2022-04-14T13:59:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_79_0.md b/document/version/1_79_0.md
index df542c7..ee241a5 100644
--- a/document/version/1_79_0.md
+++ b/document/version/1_79_0.md
@@ -313,46 +313,24 @@
 主要なテストコンパイラ:
 
 - Linux:
-    - Clang:
-    - GCC:
-    - Intel:
-    - QCC:
+    - Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0
+    - Clang, C++11: 3.4, 11.0.0
+    - Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0
+    - Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0
+    - Clang, C++20: 11.0.0, 12.0.0, 13.0.0
+    - GCC: 4.6.3, 11
+    - GCC, C++11: 4.7.3, 4.8.5, 11
+    - GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11
+    - GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11
+    - GCC, C++20: 8.0.1, 9.1.0, 10, 11
 - OS X:
-    - Apple Clang:
-    - GCC:
-    - Intel:
+    - Apple Clang: 11.0.3
+    - Apple Clang, C++11: 11.0.3
+    - Apple Clang, C++14: 11.0.3
+    - Apple Clang, C++17: 11.0.3
+    - Apple Clang, C++20: 11.0.3
 - Windows:
-    - GCC, mingw:
-    - Visual C++:
-- FreeBSD:
-    - GCC:
-- QNX:
-    - QCC:
-
-追加で含まれるテストコンパイラ:
-
-- Linux:
-    - Clang:
-    - GCC:
-    - GCC, C++11:
-    - GCC, C++14:
-    - Intel:
-    - Intel, C++11:
-- OS X:
-    - Apple Clang:
-    - Apple Clang, C++11:
-    - Apple Clang, C++14:
-    - Clang:
-    - Clang, C++11:
-    - GCC:
-    - Intel:
-- Windows:
-    - GCC, mingw:
-    - Visual C++:
-- FreeBSD:
-    - GCC:
-- QNX:
-    - QCC:
+    - Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2
 
 ## 翻訳
 [Akira Takahashi](https://github.com/faithandbrave)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.79.0リリースノート -- 1.79.0 : GeometryとAsioを追加</title>
      <link href="https://boostjp.github.io/document/version/1_79_0.html"/>
      <id>98b10c50dbd631ebeb494d6e4ba7faf52a0a79fe:document/version/1_79_0.md</id>
      <updated>2022-04-11T14:33:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_79_0.md b/document/version/1_79_0.md
index ce60c13..df542c7 100644
--- a/document/version/1_79_0.md
+++ b/document/version/1_79_0.md
@@ -22,12 +22,14 @@
 
 ## 更新ライブラリ
 
+- [Asio](#asio)
 - [Assert](#assert)
 - [Atomic](#atomic)
 - [Beast](#beast)
 - [Core](#core)
 - [Describe](#describe)
 - [Filesystem](#filesystem)
+- [Geometry](#geometry)
 - [Integer](#integer)
 - [IO](#io)
 - [Iterator](#iterator)
@@ -58,6 +60,51 @@
 - `BOOST_CURRENT_LOCATION`を変更し、トップレベルで使用したり、関数のデフォルト引数として使用したりした場合に、`std::source_location::current()`とより厳密に動作を一致させた
 
 
+## &amp;lt;a id=&amp;#34;asio&amp;#34; href=&amp;#34;#asio&amp;#34;&amp;gt;Asio&amp;lt;/a&amp;gt;
+
+- `bind_allocator`を追加
+- `file_base::sync_all_on_write`フラグを追加
+- `basic_file::release()`の不足していた実装を追加
+- signal setの各操作にキャンセルのサポートを追加
+- `recycling_allocator`をpublicインタフェースの一部として公開
+- いくつかの関数に`nodiscard`属性を追加
+- OpenSSL 3.0との互換性を追加
+- 既存の`SSL*`を`ssl::stream&amp;lt;&amp;gt;`にアダプトするサポートを追加
+- すべてのビルド構成で`executor_work_guard&amp;lt;&amp;gt;`を有効化
+- Clangでmovable socket iostreamを有効化
+- `bind_cancellation_slot`と`bind_executor`の、古い完了トークンとの互換性を修正
+- `experimental::append`と`experimental::prepend`に対する`associator`の特殊化を修正
+- `associated_allocator`のプライマリテンプレートを修正
+- socketの`async_receive_from`とファイルの`write_some_at`のio_uring実装を修正
+- io_uring機能の検出を修正
+- `experimental::coro`の各操作のキャンセルを修正
+- `experimental::promise`の型消去された完了ハンドラのメモリ管理を修正
+- `ssl::stream`のムーブ代入演算子の実装を修正
+- `BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT`と`BOOST_ASIO_SEPARATE_COMPILATION`の両方が定義された際の`any_io_executor`の実装を正しく動作するよう修正
+- `sockatmark()`システムコールを使用する際の`basic_socket::at_mark()`の実装を修正
+- recycling allocatorのメモリ確保のデフォルトアライメントを、最小アライメントを使用するよう変更
+- Apple clangでのコルーチンコード生成で判明したバグのワークアラウンドを追加
+- Windowsにおいて、`fopen()`で同じ共有モードを使用してファイルを開くようファイルサポートを変更
+- Linuxにおいて、UNIX domain socketの実装を修正し、`EAGAIN`が正しく処理されるようにした
+- `experimental::basic_channel::reset()`と`experimental::basic_concurrent_channel::reset()`の実装を修正
+- `experimental::promise`内の潜在的な未定義動作を修正
+- いくつかの状況において、executorを介してキャンセルのシグナルをdispatchするよう`co_spawn`の実装を修正
+- さまざまなヘッダのインクルード問題を修正
+- さまざまな警告を修正
+- いくつかのドキュメント強化：
+    - Asio非同期モデルの概要 (overview of Asio&amp;#39;s asynchronous model) を追加
+    - 非同期モデルに関するリファレンスと要件のドキュメントを作り直した
+    - `dispatch()`, `post()`, `defer()`のドキュメントを更新
+    - シリアルポートの各操作のキャンセルをドキュメント化
+    - アロケータの「非同期実行性の保証 (non-concurrency guarantees)」を明記
+    - `io_context`のリファレンスドキュメントを、`executor_work_guard`を使用するよう修正
+    - `make_strand()`, `make_work_guard()`, `ip::address_v4`, `ip::address_v6`, `experimental::basic_channel`, `experimental::basic_concurrent_channel`のドキュメントをより詳細にした
+    - 最近追加された機能をカバーするために、概要ドキュメントを再配置・拡張した
+- local socketを通過するfile descriptorのC++11サンプルコードを追加
+- 非同期操作のコールバックベースAPIをラップするC++14サンプルコードを追加
+- 詳細は[Revision History](https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html)を参照
+
+
 ## &amp;lt;a id=&amp;#34;atomic&amp;#34; href=&amp;#34;#atomic&amp;#34;&amp;gt;Atomic&amp;lt;/a&amp;gt;
 
 - [GitHub #54](https://github.com/boostorg/atomic/issues/54) Universal Windows Platform (UWP) でのコンパイルを修正
@@ -111,6 +158,24 @@
 - 非推奨化 : Windows CEのサポートは非推奨となり、将来のリリースから削除される。Windows CEは長年テストされておらず、機能していない可能性がある
 
 
+## &amp;lt;a id=&amp;#34;geometry&amp;#34; href=&amp;#34;#geometry&amp;#34;&amp;gt;Geometry&amp;lt;/a&amp;gt;
+
+- 大きな変更
+    - [GitHub #977](https://github.com/boostorg/geometry/pull/977) 再スケーリングをデフォルトでオフにした。これにより、集合操作とバッファに関連する多くのバグが回避される
+- 改善
+    - [GitHub #961](https://github.com/boostorg/geometry/pull/961) Webメルトカル図法 (Web Mercator projection) を追加
+    - [GitHub #966](https://github.com/boostorg/geometry/pull/966) `simplify`で使用されるcartesian distanceをより効率的にした
+- 解決したissue
+    - [GitHub #956](https://github.com/boostorg/geometry/issues/956) 誤ったclosureをともなう`simplify`アルゴリズムの結果を修正
+    - [GitHub #962](https://github.com/boostorg/geometry/issues/962) load factorによるR-treeのデシリアライズ時の実行時エラーを修正
+    - [GitHub #971](https://github.com/boostorg/geometry/issues/971) ARMプラットフォームで`long double`を使用した際に影響を受けるR-treeの挿入時間を修正
+- バグ修正
+    - [GitHub #936](https://github.com/boostorg/geometry/pull/936) 極 (pole) を含むpolygonのenvelopeを修正
+    - [GitHub #948](https://github.com/boostorg/geometry/pull/948) meridian segments付近のspherical/geometric envelopeを修正
+    - [GitHub #974](https://github.com/boostorg/geometry/pull/974) NaN座標の回転楕円体正規化ユーティリティ (spheroidal normalization utilities) を修正
+    - 集合操作とバッファのさまざまなバグを修正
+
+
 ## &amp;lt;a id=&amp;#34;integer&amp;#34; href=&amp;#34;#integer&amp;#34;&amp;gt;Integer&amp;lt;/a&amp;gt;
 
 - [GitHub #31](https://github.com/boostorg/integer/issues/31) 内部でビット演算を使用するよう`integer_log2`の実装を最適化した。これにより、最新のCPUで利用可能なビット命令を使用できる
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.79.0リリースノート -- 1.79.0 : Optionalを追加</title>
      <link href="https://boostjp.github.io/document/version/1_79_0.html"/>
      <id>89eccb16aa0219e88eedc751ba887d09dbacc0d2:document/version/1_79_0.md</id>
      <updated>2022-03-28T20:04:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_79_0.md b/document/version/1_79_0.md
index 1b0ac32..ce60c13 100644
--- a/document/version/1_79_0.md
+++ b/document/version/1_79_0.md
@@ -36,6 +36,7 @@
 - [Log](#log)
 - [Multi-index](#multi-index)
 - [Nowide](#nowide)
+- [Optional](#optional)
 - [Predef](#predef)
 - [QVM](#qvm)
 - [Smart Pointers](#smart-pointers)
@@ -170,6 +171,14 @@
 - `boost::nowide::stat_t`をともなう`boost::nowide::stat`を使用した際のサニティチェックを追加
 
 
+## &amp;lt;a id=&amp;#34;optional&amp;#34; href=&amp;#34;#optional&amp;#34;&amp;gt;Optional&amp;lt;/a&amp;gt;
+
+- [GitHub #98](https://github.com/boostorg/optional/issues/98) `std::optional&amp;lt;bool&amp;gt;`との相互運用がうまくいっていなかったところを修正
+- [GitHub #92](https://github.com/boostorg/optional/issues/92) `BOOST_NO_IOSTREAM`のサポートを追加
+- 未定義動作を避けるためにaligned storageに`char`の代わりに`unsigned char`を使用するよう修正
+- 未定義動作を避けるために、placement newでCV修飾された`value_type`を使用するよう修正
+
+
 ## &amp;lt;a id=&amp;#34;predef&amp;#34; href=&amp;#34;#predef&amp;#34;&amp;gt;Predef&amp;lt;/a&amp;gt;
 
 - Version 1.14.0
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.79.0リリースノート -- 1.79.0 : 残りを追加</title>
      <link href="https://boostjp.github.io/document/version/1_79_0.html"/>
      <id>aa55d5df4b28df191c2cc0ff64a5f04e0dc6f869:document/version/1_79_0.md</id>
      <updated>2022-03-25T19:24:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_79_0.md b/document/version/1_79_0.md
index 34880e1..1b0ac32 100644
--- a/document/version/1_79_0.md
+++ b/document/version/1_79_0.md
@@ -18,6 +18,7 @@
 
 ## 新ライブラリ
 
+なし
 
 ## 更新ライブラリ
 
@@ -29,7 +30,25 @@
 - [Filesystem](#filesystem)
 - [Integer](#integer)
 - [IO](#io)
-
+- [Iterator](#iterator)
+- [JSON](#json)
+- [LEAF](#leaf)
+- [Log](#log)
+- [Multi-index](#multi-index)
+- [Nowide](#nowide)
+- [Predef](#predef)
+- [QVM](#qvm)
+- [Smart Pointers](#smart-pointers)
+- [System](#system)
+- [ThrowException](#throw-exception)
+- [Unordered](#unordered)
+- [Variant2](#variant2)
+- [Wave](#wave)
+
+
+## 更新ツール
+
+- [Build](#build)
 
 ## &amp;lt;a id=&amp;#34;assert&amp;#34; href=&amp;#34;#assert&amp;#34;&amp;gt;Assert&amp;lt;/a&amp;gt;
 
@@ -101,6 +120,120 @@
 - ヌルストリームバッファである`boost::io::basic_nullbuf`と、ヌル出力ストリームである`boost::basic_onullstream`を追加 (Glen Fernandes氏に感謝)
 
 
+## &amp;lt;a id=&amp;#34;iterator&amp;#34; href=&amp;#34;#iterator&amp;#34;&amp;gt;Iterator&amp;lt;/a&amp;gt;
+
+- `counting_iterator`に、GCCとClangおよびそれらと互換性のある一部のターゲットプラットフォームでサポートされる組み込みの128ビット整数型のサポートを追加
+- `counting_iterator`での、非推奨の暗黙のコピー代入演算子に関するGCCの警告を黙らせた
+
+
+## &amp;lt;a id=&amp;#34;json&amp;#34; href=&amp;#34;#json&amp;#34;&amp;gt;JSON&amp;lt;/a&amp;gt;
+
+- このライブラリのスタンドアロンモードを削除。スタンドアロンのJSONライブラリを使用したい場合は、[the C++ Alliance fork](https://github.com/CPPAlliance/standalone-json.git)を使用すること
+- `std::error_code`のオーバーロードを追加
+- `error_codes`に`boost::source_location`を追加
+- JSON Pointerのサポートを追加
+- シリアライズ中に文字列を自然に伸長させるようにした
+
+
+## &amp;lt;a id=&amp;#34;leaf&amp;#34; href=&amp;#34;#leaf&amp;#34;&amp;gt;LEAF&amp;lt;/a&amp;gt;
+
+- FreeRTOSとその他の組み込みプラットフォームをサポート
+- 診断情報を改善
+- 設定マクロを改善
+- `__GNUC__`環境下では、`BOOST_LEAF_CHECK`はstatement expressionを使用するようにした
+- シンボルのデマングルバグを修正
+
+
+## &amp;lt;a id=&amp;#34;log&amp;#34; href=&amp;#34;#log&amp;#34;&amp;gt;Log&amp;lt;/a&amp;gt;
+
+- 全体的な変更
+    - `text_file_backend`において、ファイルローテーションが使用され、ログファイル名がファイルカウンタを使用する場合に、以前に書き込まれたログファイルに追記するためのサポートを追加
+    - &amp;lt;span style=&amp;#34;color:red;&amp;#34;&amp;gt;**破壊的変更**&amp;lt;/span&amp;gt; `file_collector`のインタフェースを以下のように変更：
+        - `scan_for_files`メンバ関数は、スキャン中に収集された情報を含む`scan_result`構造体を返す
+        - パスがターゲットストレージディレクトリ内のファイルを参照しているかどうかをテストするために、`is_in_storage`メンバ関数を追加
+    - ユーザーの関数をストリーム出力式に挿入するために使用できる新たな`invoke_manip`ストリームマニピュレータを追加
+- バグ修正
+    - [GitHub #179](https://github.com/boostorg/log/issues/179) ユーザーが`text_file_backend::scan_for_files`を複数回呼び出し、2回目以降の呼び出しで新しいファイルが見つからない場合に、ファイルカウンタがゼロに設定される問題を修正
+- 詳細は[changelog](https://www.boost.org/doc/libs/log/libs/log/doc/html/log/changelog.html)を参照
+
+
+## &amp;lt;a id=&amp;#34;multi-index&amp;#34; href=&amp;#34;#multi-index&amp;#34;&amp;gt;Multi-index&amp;lt;/a&amp;gt;
+
+- ranked indicesの`count`操作の効率を、`O(log(n) + count)`から`O(log(n))`に改善 (Damian Sawicki氏による貢献)
+- メンテナンス作業
+
+
+## &amp;lt;a id=&amp;#34;nowide&amp;#34; href=&amp;#34;#nowide&amp;#34;&amp;gt;Nowide&amp;lt;/a&amp;gt;
+
+- いくつかのプラットフォームでのコンパイル問題を修正 (例として、MinGW-w64やCygwinのGCC 11)
+- `BOOST_USE_WINDOWS_H`と`WIN32_LEAN_AND_MEAN`を使用した際の不足していたインクルードを修正
+- `boost::nowide::stat_t`をともなう`boost::nowide::stat`を使用した際のサニティチェックを追加
+
+
+## &amp;lt;a id=&amp;#34;predef&amp;#34; href=&amp;#34;#predef&amp;#34;&amp;gt;Predef&amp;lt;/a&amp;gt;
+
+- Version 1.14.0
+- LoongArchの検出を追加 (Zhang Na氏に感謝)
+
+
+## &amp;lt;a id=&amp;#34;qvm&amp;#34; href=&amp;#34;#qvm&amp;#34;&amp;gt;QVM&amp;lt;/a&amp;gt;
+
+- C++17の`constexpr`を追加
+- シングルヘッダの配布を改善
+
+
+## &amp;lt;a id=&amp;#34;smart-pointers&amp;#34; href=&amp;#34;#smart-pointers&amp;#34;&amp;gt;Smart Pointers&amp;lt;/a&amp;gt;
+
+- `boost::allocate_unique`の結果からアロケータへのポインタを取得するために、`boost::get_allocator_pointer`を追加 (Glen Fernandes氏に感謝)
+
+
+## &amp;lt;a id=&amp;#34;system&amp;#34; href=&amp;#34;#system&amp;#34;&amp;gt;System&amp;lt;/a&amp;gt;
+
+- `throw_exception_from_error`に`boost::source_location`パラメータを追加
+- `throw_exception_from_error`に、`errc::errc_t`, `std::error_code`, `std::errc`, `std::exception_ptr`のオーバーロードを追加
+- `result &amp;lt;T&amp;gt; :: value`は、デフォルトの引数を介して`BOOST_CURRENT_LOCATION`を`throw_exception_from_error`に自動的に供給するようになった
+- `errc::make_error_code`に、source locationを引数にとるオーバーロードを追加
+
+
+## &amp;lt;a id=&amp;#34;throw-exception&amp;#34; href=&amp;#34;#throw-exception&amp;#34;&amp;gt;ThrowException&amp;lt;/a&amp;gt;
+
+- Boost.Exceptionを使用しないプログラムのために、`BOOST_THROW_EXCEPTION`の軽量な代替手段である`boost::throw_with_location`を追加
+
+
+## &amp;lt;a id=&amp;#34;unordered&amp;#34; href=&amp;#34;#unordered&amp;#34;&amp;gt;Unordered&amp;lt;/a&amp;gt;
+
+- すべてのコンテナが、異種混合 (heterogeneous) の`count`、`equal_range`、`find`を持つよう更新した
+- すべてのコンテナに`contains`メンバ関数を実装
+- すべてのコンテナで使用できる`erase_if`を実装
+- すべてのコンテナが、異種混合の`erase`と`extract`を持つよう更新した
+- `reserve`が早期にアロケートするよう振る舞いを修正
+- テストスイートのさまざまな警告を修正
+- 内部で`boost::allocator_traits`を使用するよう更新
+- Fibonacci hashingに切り替え
+- ドキュメントをQuickBookからAsciiDocに置き換え
+
+
+## &amp;lt;a id=&amp;#34;variant2&amp;#34; href=&amp;#34;#variant2&amp;#34;&amp;gt;Variant2&amp;lt;/a&amp;gt;
+
+- `monostate`用の`operator&amp;lt;&amp;lt;`を追加
+
+
+## &amp;lt;a id=&amp;#34;wave&amp;#34; href=&amp;#34;#wave&amp;#34;&amp;gt;Wave&amp;lt;/a&amp;gt;
+
+- WaveのビルドにC++11を要求するようになった
+- バグ修正
+    - [GitHub #135](https://github.com/boostorg/wave/issues/135) C++20で非推奨になった配列の添字演算子中のカンマ演算子の使用を修正
+    - [GitHub #137](https://github.com/boostorg/wave/issues/137) C++11以降のモードでEOF前の改行を要求しないよう修正
+    - [GitHub #138](https://github.com/boostorg/wave/issues/138) 空のifdefブロックが空白を入れない限り行ディレクティブを発行しない問題を修正
+    - [GitHub #143](https://github.com/boostorg/wave/issues/143) `__has_include()`のあとにトークン (空白含む) があるとパースに失敗する問題を修正
+    - [GitHub #145](https://github.com/boostorg/wave/issues/145) `reset_version()`内でのsanitizerのエラーを修正
+    - [GitHub #147](https://github.com/boostorg/wave/issues/147) 異なる列挙型同士のビット演算がC++20で非推奨になったことによる警告を修正
+
+
+## &amp;lt;a id=&amp;#34;build&amp;#34; href=&amp;#34;#build&amp;#34;&amp;gt;Build&amp;lt;/a&amp;gt;
+
+- B2 version 4.8.2をリリース
+
 
 ## テスト済みコンパイラ
 主要なテストコンパイラ:
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>