<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2018-12-13T04:42:44.951716</updated>
  <id>3c0f6990-766e-4efd-822f-9a59d4e34b17</id>

  
    <entry>
      <title>Boost 1.69.0リリースノート -- 1.69.0リリースノート : テストコンパイラを追加</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>2ee8bb41095ae0a9ce47aec374eac5a07b410302:document/version/1_69_0.md</id>
      <updated>2018-12-13T13:38:40+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;非Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boostのビルドシステムが可視性をサポートし、デフォルトでは不可視 (hidden) の可視性をもつ共有ライブラリをビルドするようになった。その結果、Boostの共有ライブラリがより小さくなり、読み込み速度が速くなり、シンボルの衝突を起こす可能性が減る。&lt;/p&gt;
&lt;p&gt;詳細は、&lt;a href=&#34;https://boostorg.github.io/build/manual/develop/index.html#bbv2.builtin.features.visibility&#34; target=&#34;_blank&#34;&gt;Boost.Build visibility and local-visibilityのドキュメントを参照&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;この機能を無効にするには、ビルド時に&lt;code&gt;./b2 visibility=global&lt;/code&gt;コマンドを使用すること。&lt;/p&gt;
&lt;h2&gt;削除ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost 1.54.0から非推奨となり、1.68.0で削除予定のアナウンスが出ていたSignalsライブラリを、このバージョン1.69.0で削除した。代わりにSignals2を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34;&gt;Assign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34;&gt;Logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34;&gt;Pool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34;&gt;YAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、隠れた可視性 (hidden visibility) をもつ共有ライブラリで構築された&lt;code&gt;boost::any&lt;/code&gt;変数が、隠れた可視性をもつ他の共有ライブラリで使用、破棄できるようになった&lt;/li&gt;
&lt;li&gt;メンテナンス： いくつかの依存ライブラリを落として、ドキュメントを修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;libstdc++での、&lt;code&gt;std::future&lt;/code&gt;の利用可能性の検出に関する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_until()&lt;/code&gt;の&lt;code&gt;regex&lt;/code&gt;版オーバーロードのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;キャンセルされたタイマーをムーブするときに発生する可能性のある、タイマーヒープの破損問題を修正&lt;/li&gt;
&lt;li&gt;最近のclang/libc++バージョンでの&lt;code&gt;std::experimental::string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の検出を修正&lt;/li&gt;
&lt;li&gt;MSVCのバージョンによる&lt;code&gt;std::invoke_result&lt;/code&gt;の利用可能性の検出を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;decltype&lt;/code&gt;が利用可能である場合の、新たな要件をテストするためのbuffer sequence traitsを修正&lt;/li&gt;
&lt;li&gt;MSVCで例外を無効にしたときのビルド問題を修正&lt;/li&gt;
&lt;li&gt;TLS v1.3向けのSSL contextオプションを追加&lt;/li&gt;
&lt;li&gt;TLS v1.2サポートのための、マクロを使用したテストを修正&lt;/li&gt;
&lt;li&gt;Windowsで、スレッドごとに一度グローバルオブジェクトが作られてしまうのを防いだ&lt;/li&gt;
&lt;li&gt;デフォルト構築したresolver resultsに対して&lt;code&gt;size()&lt;/code&gt;、&lt;code&gt;max_size()&lt;/code&gt;、&lt;code&gt;empty()&lt;/code&gt;を呼び出すとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;コピーを避けるために、&lt;code&gt;basic_resolver_results::begin()&lt;/code&gt;の戻り値をムーブするよう修正&lt;/li&gt;
&lt;li&gt;Intelコンパイラでムーブを有効にした&lt;/li&gt;
&lt;li&gt;clang-clでの&lt;code&gt;std::string_view&lt;/code&gt;の検出問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_context::executor_type::dispatch&lt;/code&gt;のハンドラトラッキングのoperation nameを修正&lt;/li&gt;
&lt;li&gt;64ビットのスコープIDでアドレス文字列をパースする際に発生していた、バッファオーバーフローを修正&lt;/li&gt;
&lt;li&gt;いかにして合成操作を書くか (how to write composed operations) のサンプルを追加&lt;/li&gt;
&lt;li&gt;C++11バージョンのタイムアウト、タイマー、SOCKS4、SSLのサンプルを追加&lt;/li&gt;
&lt;li&gt;ドキュメントとサンプルコードでの小さな問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34; id=&#34;assign&#34;&gt;Assign&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/6&#34; target=&#34;_blank&#34;&gt;GitHub #6&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10477&#34; target=&#34;_blank&#34;&gt;Trac #10477&lt;/a&gt; 右辺値参照、完全転送、可変引数テンプレートのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5419&#34; target=&#34;_blank&#34;&gt;Trac #5419&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7364&#34; target=&#34;_blank&#34;&gt;Trac #7364&lt;/a&gt; コンテナのアロケータへの変換を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、サンプルコードの問題をいくつか修正し、非同期操作に対するビルトインタイムアウトをサポートしたソケット&lt;code&gt;timeout_socket&lt;/code&gt;を実験的に追加した&lt;/li&gt;
&lt;li&gt;CppCon 2018での&lt;a href=&#34;https://www.boost.org/doc/libs/master/libs/beast/doc/html/beast/examples.html#beast.examples.cppcon_2018&#34; target=&#34;_blank&#34;&gt;WebSocketチャットのサンプルコード&lt;/a&gt;と&lt;a href=&#34;https://www.youtube.com/watch?v=7FQwAjELMek&#34; target=&#34;_blank&#34;&gt;プレゼンテーションビデオ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1133&#34; target=&#34;_blank&#34;&gt;GitHub #1133&lt;/a&gt; &lt;code&gt;BOOST_BEAST_USE_STD_STRING_VIEW&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1245&#34; target=&#34;_blank&#34;&gt;GitHub #1245&lt;/a&gt; UTF-8の妥当性検証が間違っていたレアケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1237&#34; target=&#34;_blank&#34;&gt;GitHub #1237&lt;/a&gt; SSLクライアントのサンプルコードに、証明書の検証を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1091&#34; target=&#34;_blank&#34;&gt;GitHub #1091&lt;/a&gt; WebSocketのサンプルコードで、タイムアウトのハンドリングが間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1270&#34; target=&#34;_blank&#34;&gt;GitHub #1270&lt;/a&gt; 侵入ベースのフックに、&lt;code&gt;basic_fields&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1267&#34; target=&#34;_blank&#34;&gt;GitHub #1267&lt;/a&gt; 16進数の範囲外の値のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1263&#34; target=&#34;_blank&#34;&gt;GitHub #1263&lt;/a&gt; バッファイテレータで、未初期化値を比較していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1288&#34; target=&#34;_blank&#34;&gt;GitHub #1288&lt;/a&gt; サンプルコードから、本質的でない&lt;code&gt;strand&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;http-server-fastとlibstdc++へのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;の部分的なサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34; id=&#34;concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/concept_check/pull/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; MPLへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/85&#34; target=&#34;_blank&#34;&gt;github context 85&lt;/a&gt;: &lt;code&gt;asm_sources&lt;/code&gt; のエイリアスが重複していたため、&lt;code&gt;sysv-power-32-elf-gcc&lt;/code&gt; がなくなっていたバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/87&#34; target=&#34;_blank&#34;&gt;github context 87&lt;/a&gt;: clang-win のツールセット (clang-cl.exe) は、msvc では masm を使う&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/90&#34; target=&#34;_blank&#34;&gt;github context 90&lt;/a&gt;: Jamfile.v2 の未使用の行を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/91&#34; target=&#34;_blank&#34;&gt;github context 91&lt;/a&gt;: 全ての *_elf_gas.S に該当するファイルに対して、 .file セクションを設定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; スマートライブラリでのリンクの問題を解決&lt;/li&gt;
&lt;li&gt;メンテナンス： ドキュメントとテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub #26&lt;/a&gt; パフォーマンスを改善 (いくつかのケースで2倍以上高速になった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; 範囲版の&lt;code&gt;set&lt;/code&gt;、&lt;code&gt;reset&lt;/code&gt;、&lt;code&gt;flip&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; &lt;code&gt;unbuffered_channel&lt;/code&gt;の&lt;code&gt;push&lt;/code&gt;が返ってこない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/182&#34; target=&#34;_blank&#34;&gt;GitHub #182&lt;/a&gt; UTF-8ソースコードのBOMを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/183&#34; target=&#34;_blank&#34;&gt;GitHub #183&lt;/a&gt; boost-installの使用を修正。一度だけ発行すべきだった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/function/pull/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/function/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; MPLとTestへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/486&#34; target=&#34;_blank&#34;&gt;GitHub #486&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) のKarney&#39;s solutionを導入 (Adeel Ahmad氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/490&#34; target=&#34;_blank&#34;&gt;GitHub #490&lt;/a&gt; Discrete FrechetとHausdorffの距離 (distance) アルゴリズムを追加 (Yaghyavardhan Singh Khangarot氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/496&#34; target=&#34;_blank&#34;&gt;GitHub #496&lt;/a&gt; パラメータの投影 (projection) と変換 (transformation) を実行時とコンパイル時に行う機能を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/520&#34; target=&#34;_blank&#34;&gt;GitHub #520&lt;/a&gt; &lt;code&gt;dsv()&lt;/code&gt;のドキュメントが不足していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/521&#34; target=&#34;_blank&#34;&gt;GitHub #521&lt;/a&gt; &lt;code&gt;distance()&lt;/code&gt;のドキュメントの説明が間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/524&#34; target=&#34;_blank&#34;&gt;GitHub #524&lt;/a&gt; 「&lt;code&gt;switch&lt;/code&gt;文でハンドリングされていない列挙値がある」という警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/527&#34; target=&#34;_blank&#34;&gt;GitHub #527&lt;/a&gt; VS 2017 (msvc-15) 向けのワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/505&#34; target=&#34;_blank&#34;&gt;GitHub #505&lt;/a&gt; overlayアルゴリズムでのオーバーフローを修正 (Dane Springmeyer氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/518&#34; target=&#34;_blank&#34;&gt;GitHub #518&lt;/a&gt; &lt;code&gt;append()&lt;/code&gt;での一時オブジェクトの渡し方を修正 (xventura81氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/522&#34; target=&#34;_blank&#34;&gt;GitHub #522&lt;/a&gt; ビルド方法のドキュメントでpython3環境をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34; id=&#34;iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iostreams/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;std::fpos&lt;/code&gt;クラスに存在しない&lt;code&gt;seekpos()&lt;/code&gt;メンバ関数の呼び出しを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8991&#34; target=&#34;_blank&#34;&gt;Trac #8991&lt;/a&gt; 符号に関する変換の警告が出ていた点を修正&lt;/li&gt;
&lt;li&gt;メンテナンス: 他の Boost ライブラリへの依存を削除し、ビルドシステムの警告が出なくなるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全体的な変更&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; syslog sink backendで、Boost.Asioの非推奨インタフェースの使用を避けるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;いくつかのケースで、text file sinkのターゲットディレクトリ内の、合計サイズの概算が間違っている可能性があったところを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34; id=&#34;logic&#34;&gt;Logic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt; : &lt;a href=&#34;https://github.com/boostorg/logic/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 使用可能な場合に、&lt;code&gt;explicit operator bool&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LambertW 関数を追加&lt;/li&gt;
&lt;li&gt;複素被積分と複素数積分をサポートするために共通ルーチンを更新&lt;/li&gt;
&lt;li&gt;Barycentric rational approximation の実装を追加&lt;/li&gt;
&lt;li&gt;浮動小数点型の精度指定をよりよくサポートするための些細な修正&lt;/li&gt;
&lt;li&gt;Boost.Endian を使っている部分を削除。Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;complex型をサポートするために、連分数と級数を評価するコードを更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toms748_solve&lt;/code&gt; で、無限ループに繋がる論理エラーを回避。&lt;a href=&#34;https://github.com/boostorg/math/issues/138&#34; target=&#34;_blank&#34;&gt;#138&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extreme_value_distribution&lt;/code&gt; の &lt;code&gt;standard_deviation&lt;/code&gt; と &lt;code&gt;mean&lt;/code&gt; を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/139&#34; target=&#34;_blank&#34;&gt;#139&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;newton_raphson_iterate&lt;/code&gt; のヒューリスティックな実装を強化。&lt;a href=&#34;https://github.com/boostorg/math/issues/145&#34; target=&#34;_blank&#34;&gt;#145&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erf(NaN)&lt;/code&gt; の結果を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/141&#34; target=&#34;_blank&#34;&gt;#141&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;GCC の警告を減らすための巨大な修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/136&#34; target=&#34;_blank&#34;&gt;#136&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;polynomial クラスの addition メソッドをリファクタリング。&lt;a href=&#34;https://github.com/boostorg/math/issues/132&#34; target=&#34;_blank&#34;&gt;#132&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;vxWorks のために、グローバル名前空間の &lt;code&gt;real&lt;/code&gt; を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/131&#34; target=&#34;_blank&#34;&gt;#131&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinc&lt;/code&gt; 関数の近似の実装を向上させ、より優れたテストを追加&lt;/li&gt;
&lt;li&gt;Student-t 型の 仮説検定に関するドキュメントの Typoを修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/143&#34; target=&#34;_blank&#34;&gt;#143&lt;/a&gt; を参照。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34; id=&#34;multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11アロケータモデルのサポートを改善 (Glen Fernandes)&lt;ul&gt;
&lt;li&gt;C++11最小アロケータをサポート&lt;/li&gt;
&lt;li&gt;状態をもつアロケータをサポート&lt;/li&gt;
&lt;li&gt;値型の構築と破棄でのアロケータの使用&lt;/li&gt;
&lt;li&gt;空の型の保持、もしくは状態をもたないアロケータの場合に、Empty Base Optimizationが行われるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;メンバ変数や、メンバ関数の戻り値をキーにする機能として、従来は&lt;code&gt;member&lt;/code&gt;、&lt;code&gt;const_mem_fun&lt;/code&gt;などのメタ関数を使用していた。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;member&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;const_mem_fun&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、C++17の簡略構文を使用した&lt;code&gt;key&lt;/code&gt;エイリアステンプレートを導入することで、キーの抽出をより簡潔に書けるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/multi_index/&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34; id=&#34;multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変換結果の精度が、常に全ての引数の最大のものになるようにするため、精度型をうまくサポートすることを目的とした大幅な更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__cpp_int&lt;/code&gt; 内でしか使えない &lt;code&gt;final&lt;/code&gt; 扱いのアロケータのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の Boost.Endian を使用していた箇所を削除。Boost.Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt; のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; 定数の初期化に関する軽微なバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt; の値に 無限値を割り当てたことで、実行時エラーが起きる事象を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float_oct&lt;/code&gt; 型と &lt;code&gt;cpp_complex_oct&lt;/code&gt; 型への typedef を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34; id=&#34;pool&#34;&gt;Pool&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pool/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; Boost.Threadへの依存をなくすために、&lt;code&gt;boost::mutex&lt;/code&gt;の使用を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34; id=&#34;preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VC++ 14.1 (Visual Studio 2017) で、新しいC++標準準拠のプリプロセッサ (C++11可変引数マクロ) をサポート。Visual Studio 2017 15.8以降では、&lt;code&gt;/experimental:preprocessor&lt;/code&gt;スイッチを使用して有効にする&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/07/06/msvc-preprocessor-progress-towards-conformance/&#34; target=&#34;_blank&#34;&gt;MSVC Preprocessor Progress towards Conformance - Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/rational/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub #32&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spirit.X3&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.V2&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/407&#34; target=&#34;_blank&#34;&gt;GitHUb #407&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/396&#34; target=&#34;_blank&#34;&gt;GitHub #396&lt;/a&gt; &lt;code&gt;transform_attribute&lt;/code&gt;の曖昧さを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Classic&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libbacktrace&lt;/code&gt;の使い方を大幅に改善。&lt;code&gt;BOOST_STACKTRACE_USE_BACKTRACE&lt;/code&gt;や&lt;code&gt;boost_stacktrace_backtrace&lt;/code&gt;のユーザーは、以下のためにアップデートすることを推奨する：&lt;ul&gt;
&lt;li&gt;メモリ使用量が減少した&lt;/li&gt;
&lt;li&gt;magnitudeの順番によって、スタックのキャプチャが高速化した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; デバッグ情報なしでも見える&lt;code&gt;syminfo&lt;/code&gt;のフォールバックを提供 (&lt;a href=&#34;https://github.com/driesdeschout&#34; target=&#34;_blank&#34;&gt;driesdeschout&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;backtrace.h&lt;/code&gt;ヘッダの正確な位置を&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_INCLUDE_FILE&lt;/code&gt;で指定できるようにした。これにより、そのヘッダに到達不可能なプラットフォーム (たとえばUbuntu Xenial + Clang) で&lt;code&gt;bracktrace.h&lt;/code&gt;を使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;max_depth&lt;/code&gt;を設定したときのスタックキャプチャを最適化 (Jan Eisenhauer氏のPull Requestに感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; スタックトレースを高速に&lt;code&gt;std::string&lt;/code&gt;に変換する&lt;code&gt;to_string(const stacktrace&amp;amp;)&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;メンテナンス：&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; ドキュメントとテストを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Test v3.9 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_69_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;複数の翻訳単位でのヘッダオンリー版Boost.Testを、正式にサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを使用して、名前付きのテストを手動で追加できるようにした&lt;/li&gt;
&lt;li&gt;ログでの&lt;code&gt;boost::exception&lt;/code&gt;サポートを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正とPull Request&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13380&#34; target=&#34;_blank&#34;&gt;Trac #13380&lt;/a&gt; データセットをつなげたときの、ぶらさがり参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13625&#34; target=&#34;_blank&#34;&gt;Trac #13625&lt;/a&gt; コンパイルオプション&lt;code&gt;-Werror=missing-declarations&lt;/code&gt;を付けた際に、いくつかの環境でコンパイルエラーになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13637&#34; target=&#34;_blank&#34;&gt;Trac #13637&lt;/a&gt; 手動でテストケースを追加した際に、テストケース名前が衝突してしまう問題への対処として、名前を指定できる&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; &lt;code&gt;--color_output=no&lt;/code&gt;オプションを付けた際に、カラーコードを出力しないよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/161&#34; target=&#34;_blank&#34;&gt;GitHub #161&lt;/a&gt; インクルードの不足により、ヘッダファイル単体でのコンパイルに失敗していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; &lt;code&gt;close_at_tolerance()&lt;/code&gt;が、無限大の比較で常に&lt;code&gt;false&lt;/code&gt;を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; &lt;code&gt;boost_test_print_type&lt;/code&gt;が、&lt;code&gt;explicit operator bool&lt;/code&gt;のテストとして機能していなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/163&#34; target=&#34;_blank&#34;&gt;GitHub #163&lt;/a&gt; Boost 1.68.0にバージョンアップしたら、MSVC x64/Debug環境で遅くなった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/147&#34; target=&#34;_blank&#34;&gt;GitHub #147&lt;/a&gt; &lt;code&gt;execution_monitor::execute()&lt;/code&gt;で、&lt;code&gt;std::exception&lt;/code&gt;のあとに&lt;code&gt;boost::exception&lt;/code&gt;のブロックが表示されてしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; 色付き出力についてのドキュメントミスを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/151&#34; target=&#34;_blank&#34;&gt;GitHub #151&lt;/a&gt; &lt;code&gt;#if BOOST_CLANG&lt;/code&gt;を&lt;code&gt;#ifdef BOOST_CLANG&lt;/code&gt;に修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34; id=&#34;yap&#34;&gt;YAP&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC++ version 14.15 (Visual Studio 2017 version 15.8) のサポートに対する小さな変更&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.69.0リリースノート -- 1.69.0リリースノート : Asioを追加 (close #334)</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>4e97a8c78d804340961b929fea29ce53fdd85734:document/version/1_69_0.md</id>
      <updated>2018-12-13T13:23:56+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;非Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boostのビルドシステムが可視性をサポートし、デフォルトでは不可視 (hidden) の可視性をもつ共有ライブラリをビルドするようになった。その結果、Boostの共有ライブラリがより小さくなり、読み込み速度が速くなり、シンボルの衝突を起こす可能性が減る。&lt;/p&gt;
&lt;p&gt;詳細は、&lt;a href=&#34;https://boostorg.github.io/build/manual/develop/index.html#bbv2.builtin.features.visibility&#34; target=&#34;_blank&#34;&gt;Boost.Build visibility and local-visibilityのドキュメントを参照&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;この機能を無効にするには、ビルド時に&lt;code&gt;./b2 visibility=global&lt;/code&gt;コマンドを使用すること。&lt;/p&gt;
&lt;h2&gt;削除ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost 1.54.0から非推奨となり、1.68.0で削除予定のアナウンスが出ていたSignalsライブラリを、このバージョン1.69.0で削除した。代わりにSignals2を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34;&gt;Assign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34;&gt;Logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34;&gt;Pool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34;&gt;YAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、隠れた可視性 (hidden visibility) をもつ共有ライブラリで構築された&lt;code&gt;boost::any&lt;/code&gt;変数が、隠れた可視性をもつ他の共有ライブラリで使用、破棄できるようになった&lt;/li&gt;
&lt;li&gt;メンテナンス： いくつかの依存ライブラリを落として、ドキュメントを修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;libstdc++での、&lt;code&gt;std::future&lt;/code&gt;の利用可能性の検出に関する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_until()&lt;/code&gt;の&lt;code&gt;regex&lt;/code&gt;版オーバーロードのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;キャンセルされたタイマーをムーブするときに発生する可能性のある、タイマーヒープの破損問題を修正&lt;/li&gt;
&lt;li&gt;最近のclang/libc++バージョンでの&lt;code&gt;std::experimental::string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の検出を修正&lt;/li&gt;
&lt;li&gt;MSVCのバージョンによる&lt;code&gt;std::invoke_result&lt;/code&gt;の利用可能性の検出を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;decltype&lt;/code&gt;が利用可能である場合の、新たな要件をテストするためのbuffer sequence traitsを修正&lt;/li&gt;
&lt;li&gt;MSVCで例外を無効にしたときのビルド問題を修正&lt;/li&gt;
&lt;li&gt;TLS v1.3向けのSSL contextオプションを追加&lt;/li&gt;
&lt;li&gt;TLS v1.2サポートのための、マクロを使用したテストを修正&lt;/li&gt;
&lt;li&gt;Windowsで、スレッドごとに一度グローバルオブジェクトが作られてしまうのを防いだ&lt;/li&gt;
&lt;li&gt;デフォルト構築したresolver resultsに対して&lt;code&gt;size()&lt;/code&gt;、&lt;code&gt;max_size()&lt;/code&gt;、&lt;code&gt;empty()&lt;/code&gt;を呼び出すとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;コピーを避けるために、&lt;code&gt;basic_resolver_results::begin()&lt;/code&gt;の戻り値をムーブするよう修正&lt;/li&gt;
&lt;li&gt;Intelコンパイラでムーブを有効にした&lt;/li&gt;
&lt;li&gt;clang-clでの&lt;code&gt;std::string_view&lt;/code&gt;の検出問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_context::executor_type::dispatch&lt;/code&gt;のハンドラトラッキングのoperation nameを修正&lt;/li&gt;
&lt;li&gt;64ビットのスコープIDでアドレス文字列をパースする際に発生していた、バッファオーバーフローを修正&lt;/li&gt;
&lt;li&gt;いかにして合成操作を書くか (how to write composed operations) のサンプルを追加&lt;/li&gt;
&lt;li&gt;C++11バージョンのタイムアウト、タイマー、SOCKS4、SSLのサンプルを追加&lt;/li&gt;
&lt;li&gt;ドキュメントとサンプルコードでの小さな問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34; id=&#34;assign&#34;&gt;Assign&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/6&#34; target=&#34;_blank&#34;&gt;GitHub #6&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10477&#34; target=&#34;_blank&#34;&gt;Trac #10477&lt;/a&gt; 右辺値参照、完全転送、可変引数テンプレートのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5419&#34; target=&#34;_blank&#34;&gt;Trac #5419&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7364&#34; target=&#34;_blank&#34;&gt;Trac #7364&lt;/a&gt; コンテナのアロケータへの変換を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、サンプルコードの問題をいくつか修正し、非同期操作に対するビルトインタイムアウトをサポートしたソケット&lt;code&gt;timeout_socket&lt;/code&gt;を実験的に追加した&lt;/li&gt;
&lt;li&gt;CppCon 2018での&lt;a href=&#34;https://www.boost.org/doc/libs/master/libs/beast/doc/html/beast/examples.html#beast.examples.cppcon_2018&#34; target=&#34;_blank&#34;&gt;WebSocketチャットのサンプルコード&lt;/a&gt;と&lt;a href=&#34;https://www.youtube.com/watch?v=7FQwAjELMek&#34; target=&#34;_blank&#34;&gt;プレゼンテーションビデオ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1133&#34; target=&#34;_blank&#34;&gt;GitHub #1133&lt;/a&gt; &lt;code&gt;BOOST_BEAST_USE_STD_STRING_VIEW&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1245&#34; target=&#34;_blank&#34;&gt;GitHub #1245&lt;/a&gt; UTF-8の妥当性検証が間違っていたレアケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1237&#34; target=&#34;_blank&#34;&gt;GitHub #1237&lt;/a&gt; SSLクライアントのサンプルコードに、証明書の検証を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1091&#34; target=&#34;_blank&#34;&gt;GitHub #1091&lt;/a&gt; WebSocketのサンプルコードで、タイムアウトのハンドリングが間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1270&#34; target=&#34;_blank&#34;&gt;GitHub #1270&lt;/a&gt; 侵入ベースのフックに、&lt;code&gt;basic_fields&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1267&#34; target=&#34;_blank&#34;&gt;GitHub #1267&lt;/a&gt; 16進数の範囲外の値のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1263&#34; target=&#34;_blank&#34;&gt;GitHub #1263&lt;/a&gt; バッファイテレータで、未初期化値を比較していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1288&#34; target=&#34;_blank&#34;&gt;GitHub #1288&lt;/a&gt; サンプルコードから、本質的でない&lt;code&gt;strand&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;http-server-fastとlibstdc++へのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;の部分的なサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34; id=&#34;concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/concept_check/pull/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; MPLへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/85&#34; target=&#34;_blank&#34;&gt;github context 85&lt;/a&gt;: &lt;code&gt;asm_sources&lt;/code&gt; のエイリアスが重複していたため、&lt;code&gt;sysv-power-32-elf-gcc&lt;/code&gt; がなくなっていたバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/87&#34; target=&#34;_blank&#34;&gt;github context 87&lt;/a&gt;: clang-win のツールセット (clang-cl.exe) は、msvc では masm を使う&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/90&#34; target=&#34;_blank&#34;&gt;github context 90&lt;/a&gt;: Jamfile.v2 の未使用の行を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/91&#34; target=&#34;_blank&#34;&gt;github context 91&lt;/a&gt;: 全ての *_elf_gas.S に該当するファイルに対して、 .file セクションを設定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; スマートライブラリでのリンクの問題を解決&lt;/li&gt;
&lt;li&gt;メンテナンス： ドキュメントとテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub #26&lt;/a&gt; パフォーマンスを改善 (いくつかのケースで2倍以上高速になった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; 範囲版の&lt;code&gt;set&lt;/code&gt;、&lt;code&gt;reset&lt;/code&gt;、&lt;code&gt;flip&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; &lt;code&gt;unbuffered_channel&lt;/code&gt;の&lt;code&gt;push&lt;/code&gt;が返ってこない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/182&#34; target=&#34;_blank&#34;&gt;GitHub #182&lt;/a&gt; UTF-8ソースコードのBOMを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/183&#34; target=&#34;_blank&#34;&gt;GitHub #183&lt;/a&gt; boost-installの使用を修正。一度だけ発行すべきだった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/function/pull/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/function/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; MPLとTestへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/486&#34; target=&#34;_blank&#34;&gt;GitHub #486&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) のKarney&#39;s solutionを導入 (Adeel Ahmad氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/490&#34; target=&#34;_blank&#34;&gt;GitHub #490&lt;/a&gt; Discrete FrechetとHausdorffの距離 (distance) アルゴリズムを追加 (Yaghyavardhan Singh Khangarot氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/496&#34; target=&#34;_blank&#34;&gt;GitHub #496&lt;/a&gt; パラメータの投影 (projection) と変換 (transformation) を実行時とコンパイル時に行う機能を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/520&#34; target=&#34;_blank&#34;&gt;GitHub #520&lt;/a&gt; &lt;code&gt;dsv()&lt;/code&gt;のドキュメントが不足していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/521&#34; target=&#34;_blank&#34;&gt;GitHub #521&lt;/a&gt; &lt;code&gt;distance()&lt;/code&gt;のドキュメントの説明が間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/524&#34; target=&#34;_blank&#34;&gt;GitHub #524&lt;/a&gt; 「&lt;code&gt;switch&lt;/code&gt;文でハンドリングされていない列挙値がある」という警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/527&#34; target=&#34;_blank&#34;&gt;GitHub #527&lt;/a&gt; VS 2017 (msvc-15) 向けのワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/505&#34; target=&#34;_blank&#34;&gt;GitHub #505&lt;/a&gt; overlayアルゴリズムでのオーバーフローを修正 (Dane Springmeyer氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/518&#34; target=&#34;_blank&#34;&gt;GitHub #518&lt;/a&gt; &lt;code&gt;append()&lt;/code&gt;での一時オブジェクトの渡し方を修正 (xventura81氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/522&#34; target=&#34;_blank&#34;&gt;GitHub #522&lt;/a&gt; ビルド方法のドキュメントでpython3環境をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34; id=&#34;iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iostreams/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;std::fpos&lt;/code&gt;クラスに存在しない&lt;code&gt;seekpos()&lt;/code&gt;メンバ関数の呼び出しを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8991&#34; target=&#34;_blank&#34;&gt;Trac #8991&lt;/a&gt; 符号に関する変換の警告が出ていた点を修正&lt;/li&gt;
&lt;li&gt;メンテナンス: 他の Boost ライブラリへの依存を削除し、ビルドシステムの警告が出なくなるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全体的な変更&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; syslog sink backendで、Boost.Asioの非推奨インタフェースの使用を避けるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;いくつかのケースで、text file sinkのターゲットディレクトリ内の、合計サイズの概算が間違っている可能性があったところを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34; id=&#34;logic&#34;&gt;Logic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt; : &lt;a href=&#34;https://github.com/boostorg/logic/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 使用可能な場合に、&lt;code&gt;explicit operator bool&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LambertW 関数を追加&lt;/li&gt;
&lt;li&gt;複素被積分と複素数積分をサポートするために共通ルーチンを更新&lt;/li&gt;
&lt;li&gt;Barycentric rational approximation の実装を追加&lt;/li&gt;
&lt;li&gt;浮動小数点型の精度指定をよりよくサポートするための些細な修正&lt;/li&gt;
&lt;li&gt;Boost.Endian を使っている部分を削除。Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;complex型をサポートするために、連分数と級数を評価するコードを更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toms748_solve&lt;/code&gt; で、無限ループに繋がる論理エラーを回避。&lt;a href=&#34;https://github.com/boostorg/math/issues/138&#34; target=&#34;_blank&#34;&gt;#138&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extreme_value_distribution&lt;/code&gt; の &lt;code&gt;standard_deviation&lt;/code&gt; と &lt;code&gt;mean&lt;/code&gt; を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/139&#34; target=&#34;_blank&#34;&gt;#139&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;newton_raphson_iterate&lt;/code&gt; のヒューリスティックな実装を強化。&lt;a href=&#34;https://github.com/boostorg/math/issues/145&#34; target=&#34;_blank&#34;&gt;#145&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erf(NaN)&lt;/code&gt; の結果を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/141&#34; target=&#34;_blank&#34;&gt;#141&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;GCC の警告を減らすための巨大な修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/136&#34; target=&#34;_blank&#34;&gt;#136&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;polynomial クラスの addition メソッドをリファクタリング。&lt;a href=&#34;https://github.com/boostorg/math/issues/132&#34; target=&#34;_blank&#34;&gt;#132&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;vxWorks のために、グローバル名前空間の &lt;code&gt;real&lt;/code&gt; を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/131&#34; target=&#34;_blank&#34;&gt;#131&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinc&lt;/code&gt; 関数の近似の実装を向上させ、より優れたテストを追加&lt;/li&gt;
&lt;li&gt;Student-t 型の 仮説検定に関するドキュメントの Typoを修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/143&#34; target=&#34;_blank&#34;&gt;#143&lt;/a&gt; を参照。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34; id=&#34;multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11アロケータモデルのサポートを改善 (Glen Fernandes)&lt;ul&gt;
&lt;li&gt;C++11最小アロケータをサポート&lt;/li&gt;
&lt;li&gt;状態をもつアロケータをサポート&lt;/li&gt;
&lt;li&gt;値型の構築と破棄でのアロケータの使用&lt;/li&gt;
&lt;li&gt;空の型の保持、もしくは状態をもたないアロケータの場合に、Empty Base Optimizationが行われるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;メンバ変数や、メンバ関数の戻り値をキーにする機能として、従来は&lt;code&gt;member&lt;/code&gt;、&lt;code&gt;const_mem_fun&lt;/code&gt;などのメタ関数を使用していた。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;member&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;const_mem_fun&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、C++17の簡略構文を使用した&lt;code&gt;key&lt;/code&gt;エイリアステンプレートを導入することで、キーの抽出をより簡潔に書けるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/multi_index/&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34; id=&#34;multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変換結果の精度が、常に全ての引数の最大のものになるようにするため、精度型をうまくサポートすることを目的とした大幅な更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__cpp_int&lt;/code&gt; 内でしか使えない &lt;code&gt;final&lt;/code&gt; 扱いのアロケータのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の Boost.Endian を使用していた箇所を削除。Boost.Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt; のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; 定数の初期化に関する軽微なバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt; の値に 無限値を割り当てたことで、実行時エラーが起きる事象を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float_oct&lt;/code&gt; 型と &lt;code&gt;cpp_complex_oct&lt;/code&gt; 型への typedef を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34; id=&#34;pool&#34;&gt;Pool&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pool/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; Boost.Threadへの依存をなくすために、&lt;code&gt;boost::mutex&lt;/code&gt;の使用を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34; id=&#34;preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VC++ 14.1 (Visual Studio 2017) で、新しいC++標準準拠のプリプロセッサ (C++11可変引数マクロ) をサポート。Visual Studio 2017 15.8以降では、&lt;code&gt;/experimental:preprocessor&lt;/code&gt;スイッチを使用して有効にする&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/07/06/msvc-preprocessor-progress-towards-conformance/&#34; target=&#34;_blank&#34;&gt;MSVC Preprocessor Progress towards Conformance - Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/rational/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub #32&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spirit.X3&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.V2&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/407&#34; target=&#34;_blank&#34;&gt;GitHUb #407&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/396&#34; target=&#34;_blank&#34;&gt;GitHub #396&lt;/a&gt; &lt;code&gt;transform_attribute&lt;/code&gt;の曖昧さを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Classic&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libbacktrace&lt;/code&gt;の使い方を大幅に改善。&lt;code&gt;BOOST_STACKTRACE_USE_BACKTRACE&lt;/code&gt;や&lt;code&gt;boost_stacktrace_backtrace&lt;/code&gt;のユーザーは、以下のためにアップデートすることを推奨する：&lt;ul&gt;
&lt;li&gt;メモリ使用量が減少した&lt;/li&gt;
&lt;li&gt;magnitudeの順番によって、スタックのキャプチャが高速化した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; デバッグ情報なしでも見える&lt;code&gt;syminfo&lt;/code&gt;のフォールバックを提供 (&lt;a href=&#34;https://github.com/driesdeschout&#34; target=&#34;_blank&#34;&gt;driesdeschout&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;backtrace.h&lt;/code&gt;ヘッダの正確な位置を&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_INCLUDE_FILE&lt;/code&gt;で指定できるようにした。これにより、そのヘッダに到達不可能なプラットフォーム (たとえばUbuntu Xenial + Clang) で&lt;code&gt;bracktrace.h&lt;/code&gt;を使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;max_depth&lt;/code&gt;を設定したときのスタックキャプチャを最適化 (Jan Eisenhauer氏のPull Requestに感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; スタックトレースを高速に&lt;code&gt;std::string&lt;/code&gt;に変換する&lt;code&gt;to_string(const stacktrace&amp;amp;)&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;メンテナンス：&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; ドキュメントとテストを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Test v3.9 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_69_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;複数の翻訳単位でのヘッダオンリー版Boost.Testを、正式にサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを使用して、名前付きのテストを手動で追加できるようにした&lt;/li&gt;
&lt;li&gt;ログでの&lt;code&gt;boost::exception&lt;/code&gt;サポートを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正とPull Request&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13380&#34; target=&#34;_blank&#34;&gt;Trac #13380&lt;/a&gt; データセットをつなげたときの、ぶらさがり参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13625&#34; target=&#34;_blank&#34;&gt;Trac #13625&lt;/a&gt; コンパイルオプション&lt;code&gt;-Werror=missing-declarations&lt;/code&gt;を付けた際に、いくつかの環境でコンパイルエラーになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13637&#34; target=&#34;_blank&#34;&gt;Trac #13637&lt;/a&gt; 手動でテストケースを追加した際に、テストケース名前が衝突してしまう問題への対処として、名前を指定できる&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; &lt;code&gt;--color_output=no&lt;/code&gt;オプションを付けた際に、カラーコードを出力しないよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/161&#34; target=&#34;_blank&#34;&gt;GitHub #161&lt;/a&gt; インクルードの不足により、ヘッダファイル単体でのコンパイルに失敗していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; &lt;code&gt;close_at_tolerance()&lt;/code&gt;が、無限大の比較で常に&lt;code&gt;false&lt;/code&gt;を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; &lt;code&gt;boost_test_print_type&lt;/code&gt;が、&lt;code&gt;explicit operator bool&lt;/code&gt;のテストとして機能していなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/163&#34; target=&#34;_blank&#34;&gt;GitHub #163&lt;/a&gt; Boost 1.68.0にバージョンアップしたら、MSVC x64/Debug環境で遅くなった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/147&#34; target=&#34;_blank&#34;&gt;GitHub #147&lt;/a&gt; &lt;code&gt;execution_monitor::execute()&lt;/code&gt;で、&lt;code&gt;std::exception&lt;/code&gt;のあとに&lt;code&gt;boost::exception&lt;/code&gt;のブロックが表示されてしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; 色付き出力についてのドキュメントミスを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/151&#34; target=&#34;_blank&#34;&gt;GitHub #151&lt;/a&gt; &lt;code&gt;#if BOOST_CLANG&lt;/code&gt;を&lt;code&gt;#ifdef BOOST_CLANG&lt;/code&gt;に修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34; id=&#34;yap&#34;&gt;YAP&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC++ version 14.15 (Visual Studio 2017 version 15.8) のサポートに対する小さな変更&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.69.0リリースノート -- Merge pull request #333 from boostjp/release_note_1_69_math</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>241a70cbc48a1921aadb1a1cc3b7d282b5f8961b:document/version/1_69_0.md</id>
      <updated>2018-12-04T11:09:01+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;非Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boostのビルドシステムが可視性をサポートし、デフォルトでは不可視 (hidden) の可視性をもつ共有ライブラリをビルドするようになった。その結果、Boostの共有ライブラリがより小さくなり、読み込み速度が速くなり、シンボルの衝突を起こす可能性が減る。&lt;/p&gt;
&lt;p&gt;詳細は、&lt;a href=&#34;https://boostorg.github.io/build/manual/develop/index.html#bbv2.builtin.features.visibility&#34; target=&#34;_blank&#34;&gt;Boost.Build visibility and local-visibilityのドキュメントを参照&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;この機能を無効にするには、ビルド時に&lt;code&gt;./b2 visibility=global&lt;/code&gt;コマンドを使用すること。&lt;/p&gt;
&lt;h2&gt;削除ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost 1.54.0から非推奨となり、1.68.0で削除予定のアナウンスが出ていたSignalsライブラリを、このバージョン1.69.0で削除した。代わりにSignals2を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34;&gt;Assign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34;&gt;Logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34;&gt;Pool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34;&gt;YAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、隠れた可視性 (hidden visibility) をもつ共有ライブラリで構築された&lt;code&gt;boost::any&lt;/code&gt;変数が、隠れた可視性をもつ他の共有ライブラリで使用、破棄できるようになった&lt;/li&gt;
&lt;li&gt;メンテナンス： いくつかの依存ライブラリを落として、ドキュメントを修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34; id=&#34;assign&#34;&gt;Assign&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/6&#34; target=&#34;_blank&#34;&gt;GitHub #6&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10477&#34; target=&#34;_blank&#34;&gt;Trac #10477&lt;/a&gt; 右辺値参照、完全転送、可変引数テンプレートのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5419&#34; target=&#34;_blank&#34;&gt;Trac #5419&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7364&#34; target=&#34;_blank&#34;&gt;Trac #7364&lt;/a&gt; コンテナのアロケータへの変換を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、サンプルコードの問題をいくつか修正し、非同期操作に対するビルトインタイムアウトをサポートしたソケット&lt;code&gt;timeout_socket&lt;/code&gt;を実験的に追加した&lt;/li&gt;
&lt;li&gt;CppCon 2018での&lt;a href=&#34;https://www.boost.org/doc/libs/master/libs/beast/doc/html/beast/examples.html#beast.examples.cppcon_2018&#34; target=&#34;_blank&#34;&gt;WebSocketチャットのサンプルコード&lt;/a&gt;と&lt;a href=&#34;https://www.youtube.com/watch?v=7FQwAjELMek&#34; target=&#34;_blank&#34;&gt;プレゼンテーションビデオ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1133&#34; target=&#34;_blank&#34;&gt;GitHub #1133&lt;/a&gt; &lt;code&gt;BOOST_BEAST_USE_STD_STRING_VIEW&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1245&#34; target=&#34;_blank&#34;&gt;GitHub #1245&lt;/a&gt; UTF-8の妥当性検証が間違っていたレアケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1237&#34; target=&#34;_blank&#34;&gt;GitHub #1237&lt;/a&gt; SSLクライアントのサンプルコードに、証明書の検証を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1091&#34; target=&#34;_blank&#34;&gt;GitHub #1091&lt;/a&gt; WebSocketのサンプルコードで、タイムアウトのハンドリングが間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1270&#34; target=&#34;_blank&#34;&gt;GitHub #1270&lt;/a&gt; 侵入ベースのフックに、&lt;code&gt;basic_fields&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1267&#34; target=&#34;_blank&#34;&gt;GitHub #1267&lt;/a&gt; 16進数の範囲外の値のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1263&#34; target=&#34;_blank&#34;&gt;GitHub #1263&lt;/a&gt; バッファイテレータで、未初期化値を比較していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1288&#34; target=&#34;_blank&#34;&gt;GitHub #1288&lt;/a&gt; サンプルコードから、本質的でない&lt;code&gt;strand&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;http-server-fastとlibstdc++へのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;の部分的なサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34; id=&#34;concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/concept_check/pull/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; MPLへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/85&#34; target=&#34;_blank&#34;&gt;github context 85&lt;/a&gt;: &lt;code&gt;asm_sources&lt;/code&gt; のエイリアスが重複していたため、&lt;code&gt;sysv-power-32-elf-gcc&lt;/code&gt; がなくなっていたバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/87&#34; target=&#34;_blank&#34;&gt;github context 87&lt;/a&gt;: clang-win のツールセット (clang-cl.exe) は、msvc では masm を使う&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/90&#34; target=&#34;_blank&#34;&gt;github context 90&lt;/a&gt;: Jamfile.v2 の未使用の行を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/91&#34; target=&#34;_blank&#34;&gt;github context 91&lt;/a&gt;: 全ての *_elf_gas.S に該当するファイルに対して、 .file セクションを設定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; スマートライブラリでのリンクの問題を解決&lt;/li&gt;
&lt;li&gt;メンテナンス： ドキュメントとテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub #26&lt;/a&gt; パフォーマンスを改善 (いくつかのケースで2倍以上高速になった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; 範囲版の&lt;code&gt;set&lt;/code&gt;、&lt;code&gt;reset&lt;/code&gt;、&lt;code&gt;flip&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; &lt;code&gt;unbuffered_channel&lt;/code&gt;の&lt;code&gt;push&lt;/code&gt;が返ってこない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/182&#34; target=&#34;_blank&#34;&gt;GitHub #182&lt;/a&gt; UTF-8ソースコードのBOMを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/183&#34; target=&#34;_blank&#34;&gt;GitHub #183&lt;/a&gt; boost-installの使用を修正。一度だけ発行すべきだった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/function/pull/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/function/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; MPLとTestへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/486&#34; target=&#34;_blank&#34;&gt;GitHub #486&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) のKarney&#39;s solutionを導入 (Adeel Ahmad氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/490&#34; target=&#34;_blank&#34;&gt;GitHub #490&lt;/a&gt; Discrete FrechetとHausdorffの距離 (distance) アルゴリズムを追加 (Yaghyavardhan Singh Khangarot氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/496&#34; target=&#34;_blank&#34;&gt;GitHub #496&lt;/a&gt; パラメータの投影 (projection) と変換 (transformation) を実行時とコンパイル時に行う機能を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/520&#34; target=&#34;_blank&#34;&gt;GitHub #520&lt;/a&gt; &lt;code&gt;dsv()&lt;/code&gt;のドキュメントが不足していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/521&#34; target=&#34;_blank&#34;&gt;GitHub #521&lt;/a&gt; &lt;code&gt;distance()&lt;/code&gt;のドキュメントの説明が間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/524&#34; target=&#34;_blank&#34;&gt;GitHub #524&lt;/a&gt; 「&lt;code&gt;switch&lt;/code&gt;文でハンドリングされていない列挙値がある」という警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/527&#34; target=&#34;_blank&#34;&gt;GitHub #527&lt;/a&gt; VS 2017 (msvc-15) 向けのワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/505&#34; target=&#34;_blank&#34;&gt;GitHub #505&lt;/a&gt; overlayアルゴリズムでのオーバーフローを修正 (Dane Springmeyer氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/518&#34; target=&#34;_blank&#34;&gt;GitHub #518&lt;/a&gt; &lt;code&gt;append()&lt;/code&gt;での一時オブジェクトの渡し方を修正 (xventura81氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/522&#34; target=&#34;_blank&#34;&gt;GitHub #522&lt;/a&gt; ビルド方法のドキュメントでpython3環境をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34; id=&#34;iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iostreams/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;std::fpos&lt;/code&gt;クラスに存在しない&lt;code&gt;seekpos()&lt;/code&gt;メンバ関数の呼び出しを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8991&#34; target=&#34;_blank&#34;&gt;Trac #8991&lt;/a&gt; 符号に関する変換の警告が出ていた点を修正&lt;/li&gt;
&lt;li&gt;メンテナンス: 他の Boost ライブラリへの依存を削除し、ビルドシステムの警告が出なくなるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全体的な変更&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; syslog sink backendで、Boost.Asioの非推奨インタフェースの使用を避けるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;いくつかのケースで、text file sinkのターゲットディレクトリ内の、合計サイズの概算が間違っている可能性があったところを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34; id=&#34;logic&#34;&gt;Logic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt; : &lt;a href=&#34;https://github.com/boostorg/logic/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 使用可能な場合に、&lt;code&gt;explicit operator bool&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LambertW 関数を追加&lt;/li&gt;
&lt;li&gt;複素被積分と複素数積分をサポートするために共通ルーチンを更新&lt;/li&gt;
&lt;li&gt;Barycentric rational approximation の実装を追加&lt;/li&gt;
&lt;li&gt;浮動小数点型の精度指定をよりよくサポートするための些細な修正&lt;/li&gt;
&lt;li&gt;Boost.Endian を使っている部分を削除。Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;complex型をサポートするために、連分数と級数を評価するコードを更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toms748_solve&lt;/code&gt; で、無限ループに繋がる論理エラーを回避。&lt;a href=&#34;https://github.com/boostorg/math/issues/138&#34; target=&#34;_blank&#34;&gt;#138&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extreme_value_distribution&lt;/code&gt; の &lt;code&gt;standard_deviation&lt;/code&gt; と &lt;code&gt;mean&lt;/code&gt; を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/139&#34; target=&#34;_blank&#34;&gt;#139&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;newton_raphson_iterate&lt;/code&gt; のヒューリスティックな実装を強化。&lt;a href=&#34;https://github.com/boostorg/math/issues/145&#34; target=&#34;_blank&#34;&gt;#145&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erf(NaN)&lt;/code&gt; の結果を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/141&#34; target=&#34;_blank&#34;&gt;#141&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;GCC の警告を減らすための巨大な修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/136&#34; target=&#34;_blank&#34;&gt;#136&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;polynomial クラスの addition メソッドをリファクタリング。&lt;a href=&#34;https://github.com/boostorg/math/issues/132&#34; target=&#34;_blank&#34;&gt;#132&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;vxWorks のために、グローバル名前空間の &lt;code&gt;real&lt;/code&gt; を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/131&#34; target=&#34;_blank&#34;&gt;#131&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinc&lt;/code&gt; 関数の近似の実装を向上させ、より優れたテストを追加&lt;/li&gt;
&lt;li&gt;Student-t 型の 仮説検定に関するドキュメントの Typoを修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/143&#34; target=&#34;_blank&#34;&gt;#143&lt;/a&gt; を参照。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34; id=&#34;multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11アロケータモデルのサポートを改善 (Glen Fernandes)&lt;ul&gt;
&lt;li&gt;C++11最小アロケータをサポート&lt;/li&gt;
&lt;li&gt;状態をもつアロケータをサポート&lt;/li&gt;
&lt;li&gt;値型の構築と破棄でのアロケータの使用&lt;/li&gt;
&lt;li&gt;空の型の保持、もしくは状態をもたないアロケータの場合に、Empty Base Optimizationが行われるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;メンバ変数や、メンバ関数の戻り値をキーにする機能として、従来は&lt;code&gt;member&lt;/code&gt;、&lt;code&gt;const_mem_fun&lt;/code&gt;などのメタ関数を使用していた。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;member&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;const_mem_fun&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、C++17の簡略構文を使用した&lt;code&gt;key&lt;/code&gt;エイリアステンプレートを導入することで、キーの抽出をより簡潔に書けるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/multi_index/&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34; id=&#34;multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変換結果の精度が、常に全ての引数の最大のものになるようにするため、精度型をうまくサポートすることを目的とした大幅な更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__cpp_int&lt;/code&gt; 内でしか使えない &lt;code&gt;final&lt;/code&gt; 扱いのアロケータのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の Boost.Endian を使用していた箇所を削除。Boost.Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt; のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; 定数の初期化に関する軽微なバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt; の値に 無限値を割り当てたことで、実行時エラーが起きる事象を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float_oct&lt;/code&gt; 型と &lt;code&gt;cpp_complex_oct&lt;/code&gt; 型への typedef を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34; id=&#34;pool&#34;&gt;Pool&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pool/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; Boost.Threadへの依存をなくすために、&lt;code&gt;boost::mutex&lt;/code&gt;の使用を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34; id=&#34;preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VC++ 14.1 (Visual Studio 2017) で、新しいC++標準準拠のプリプロセッサ (C++11可変引数マクロ) をサポート。Visual Studio 2017 15.8以降では、&lt;code&gt;/experimental:preprocessor&lt;/code&gt;スイッチを使用して有効にする&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/07/06/msvc-preprocessor-progress-towards-conformance/&#34; target=&#34;_blank&#34;&gt;MSVC Preprocessor Progress towards Conformance - Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/rational/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub #32&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spirit.X3&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.V2&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/407&#34; target=&#34;_blank&#34;&gt;GitHUb #407&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/396&#34; target=&#34;_blank&#34;&gt;GitHub #396&lt;/a&gt; &lt;code&gt;transform_attribute&lt;/code&gt;の曖昧さを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Classic&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libbacktrace&lt;/code&gt;の使い方を大幅に改善。&lt;code&gt;BOOST_STACKTRACE_USE_BACKTRACE&lt;/code&gt;や&lt;code&gt;boost_stacktrace_backtrace&lt;/code&gt;のユーザーは、以下のためにアップデートすることを推奨する：&lt;ul&gt;
&lt;li&gt;メモリ使用量が減少した&lt;/li&gt;
&lt;li&gt;magnitudeの順番によって、スタックのキャプチャが高速化した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; デバッグ情報なしでも見える&lt;code&gt;syminfo&lt;/code&gt;のフォールバックを提供 (&lt;a href=&#34;https://github.com/driesdeschout&#34; target=&#34;_blank&#34;&gt;driesdeschout&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;backtrace.h&lt;/code&gt;ヘッダの正確な位置を&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_INCLUDE_FILE&lt;/code&gt;で指定できるようにした。これにより、そのヘッダに到達不可能なプラットフォーム (たとえばUbuntu Xenial + Clang) で&lt;code&gt;bracktrace.h&lt;/code&gt;を使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;max_depth&lt;/code&gt;を設定したときのスタックキャプチャを最適化 (Jan Eisenhauer氏のPull Requestに感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; スタックトレースを高速に&lt;code&gt;std::string&lt;/code&gt;に変換する&lt;code&gt;to_string(const stacktrace&amp;amp;)&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;メンテナンス：&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; ドキュメントとテストを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Test v3.9 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_69_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;複数の翻訳単位でのヘッダオンリー版Boost.Testを、正式にサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを使用して、名前付きのテストを手動で追加できるようにした&lt;/li&gt;
&lt;li&gt;ログでの&lt;code&gt;boost::exception&lt;/code&gt;サポートを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正とPull Request&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13380&#34; target=&#34;_blank&#34;&gt;Trac #13380&lt;/a&gt; データセットをつなげたときの、ぶらさがり参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13625&#34; target=&#34;_blank&#34;&gt;Trac #13625&lt;/a&gt; コンパイルオプション&lt;code&gt;-Werror=missing-declarations&lt;/code&gt;を付けた際に、いくつかの環境でコンパイルエラーになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13637&#34; target=&#34;_blank&#34;&gt;Trac #13637&lt;/a&gt; 手動でテストケースを追加した際に、テストケース名前が衝突してしまう問題への対処として、名前を指定できる&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; &lt;code&gt;--color_output=no&lt;/code&gt;オプションを付けた際に、カラーコードを出力しないよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/161&#34; target=&#34;_blank&#34;&gt;GitHub #161&lt;/a&gt; インクルードの不足により、ヘッダファイル単体でのコンパイルに失敗していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; &lt;code&gt;close_at_tolerance()&lt;/code&gt;が、無限大の比較で常に&lt;code&gt;false&lt;/code&gt;を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; &lt;code&gt;boost_test_print_type&lt;/code&gt;が、&lt;code&gt;explicit operator bool&lt;/code&gt;のテストとして機能していなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/163&#34; target=&#34;_blank&#34;&gt;GitHub #163&lt;/a&gt; Boost 1.68.0にバージョンアップしたら、MSVC x64/Debug環境で遅くなった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/147&#34; target=&#34;_blank&#34;&gt;GitHub #147&lt;/a&gt; &lt;code&gt;execution_monitor::execute()&lt;/code&gt;で、&lt;code&gt;std::exception&lt;/code&gt;のあとに&lt;code&gt;boost::exception&lt;/code&gt;のブロックが表示されてしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; 色付き出力についてのドキュメントミスを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/151&#34; target=&#34;_blank&#34;&gt;GitHub #151&lt;/a&gt; &lt;code&gt;#if BOOST_CLANG&lt;/code&gt;を&lt;code&gt;#ifdef BOOST_CLANG&lt;/code&gt;に修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34; id=&#34;yap&#34;&gt;YAP&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC++ version 14.15 (Visual Studio 2017 version 15.8) のサポートに対する小さな変更&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.69.0リリースノート -- Merge pull request #332 from boostjp/release_note_1_69_context</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>8741769fb9571f7106b31631002f72b50755b1d8:document/version/1_69_0.md</id>
      <updated>2018-12-04T11:08:18+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;非Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boostのビルドシステムが可視性をサポートし、デフォルトでは不可視 (hidden) の可視性をもつ共有ライブラリをビルドするようになった。その結果、Boostの共有ライブラリがより小さくなり、読み込み速度が速くなり、シンボルの衝突を起こす可能性が減る。&lt;/p&gt;
&lt;p&gt;詳細は、&lt;a href=&#34;https://boostorg.github.io/build/manual/develop/index.html#bbv2.builtin.features.visibility&#34; target=&#34;_blank&#34;&gt;Boost.Build visibility and local-visibilityのドキュメントを参照&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;この機能を無効にするには、ビルド時に&lt;code&gt;./b2 visibility=global&lt;/code&gt;コマンドを使用すること。&lt;/p&gt;
&lt;h2&gt;削除ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost 1.54.0から非推奨となり、1.68.0で削除予定のアナウンスが出ていたSignalsライブラリを、このバージョン1.69.0で削除した。代わりにSignals2を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34;&gt;Assign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34;&gt;Logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34;&gt;Pool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34;&gt;YAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、隠れた可視性 (hidden visibility) をもつ共有ライブラリで構築された&lt;code&gt;boost::any&lt;/code&gt;変数が、隠れた可視性をもつ他の共有ライブラリで使用、破棄できるようになった&lt;/li&gt;
&lt;li&gt;メンテナンス： いくつかの依存ライブラリを落として、ドキュメントを修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34; id=&#34;assign&#34;&gt;Assign&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/6&#34; target=&#34;_blank&#34;&gt;GitHub #6&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10477&#34; target=&#34;_blank&#34;&gt;Trac #10477&lt;/a&gt; 右辺値参照、完全転送、可変引数テンプレートのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5419&#34; target=&#34;_blank&#34;&gt;Trac #5419&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7364&#34; target=&#34;_blank&#34;&gt;Trac #7364&lt;/a&gt; コンテナのアロケータへの変換を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、サンプルコードの問題をいくつか修正し、非同期操作に対するビルトインタイムアウトをサポートしたソケット&lt;code&gt;timeout_socket&lt;/code&gt;を実験的に追加した&lt;/li&gt;
&lt;li&gt;CppCon 2018での&lt;a href=&#34;https://www.boost.org/doc/libs/master/libs/beast/doc/html/beast/examples.html#beast.examples.cppcon_2018&#34; target=&#34;_blank&#34;&gt;WebSocketチャットのサンプルコード&lt;/a&gt;と&lt;a href=&#34;https://www.youtube.com/watch?v=7FQwAjELMek&#34; target=&#34;_blank&#34;&gt;プレゼンテーションビデオ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1133&#34; target=&#34;_blank&#34;&gt;GitHub #1133&lt;/a&gt; &lt;code&gt;BOOST_BEAST_USE_STD_STRING_VIEW&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1245&#34; target=&#34;_blank&#34;&gt;GitHub #1245&lt;/a&gt; UTF-8の妥当性検証が間違っていたレアケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1237&#34; target=&#34;_blank&#34;&gt;GitHub #1237&lt;/a&gt; SSLクライアントのサンプルコードに、証明書の検証を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1091&#34; target=&#34;_blank&#34;&gt;GitHub #1091&lt;/a&gt; WebSocketのサンプルコードで、タイムアウトのハンドリングが間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1270&#34; target=&#34;_blank&#34;&gt;GitHub #1270&lt;/a&gt; 侵入ベースのフックに、&lt;code&gt;basic_fields&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1267&#34; target=&#34;_blank&#34;&gt;GitHub #1267&lt;/a&gt; 16進数の範囲外の値のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1263&#34; target=&#34;_blank&#34;&gt;GitHub #1263&lt;/a&gt; バッファイテレータで、未初期化値を比較していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1288&#34; target=&#34;_blank&#34;&gt;GitHub #1288&lt;/a&gt; サンプルコードから、本質的でない&lt;code&gt;strand&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;http-server-fastとlibstdc++へのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;の部分的なサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34; id=&#34;concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/concept_check/pull/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; MPLへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/85&#34; target=&#34;_blank&#34;&gt;github context 85&lt;/a&gt;: &lt;code&gt;asm_sources&lt;/code&gt; のエイリアスが重複していたため、&lt;code&gt;sysv-power-32-elf-gcc&lt;/code&gt; がなくなっていたバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/87&#34; target=&#34;_blank&#34;&gt;github context 87&lt;/a&gt;: clang-win のツールセット (clang-cl.exe) は、msvc では masm を使う&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/90&#34; target=&#34;_blank&#34;&gt;github context 90&lt;/a&gt;: Jamfile.v2 の未使用の行を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/91&#34; target=&#34;_blank&#34;&gt;github context 91&lt;/a&gt;: 全ての *_elf_gas.S に該当するファイルに対して、 .file セクションを設定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; スマートライブラリでのリンクの問題を解決&lt;/li&gt;
&lt;li&gt;メンテナンス： ドキュメントとテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub #26&lt;/a&gt; パフォーマンスを改善 (いくつかのケースで2倍以上高速になった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; 範囲版の&lt;code&gt;set&lt;/code&gt;、&lt;code&gt;reset&lt;/code&gt;、&lt;code&gt;flip&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; &lt;code&gt;unbuffered_channel&lt;/code&gt;の&lt;code&gt;push&lt;/code&gt;が返ってこない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/182&#34; target=&#34;_blank&#34;&gt;GitHub #182&lt;/a&gt; UTF-8ソースコードのBOMを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/183&#34; target=&#34;_blank&#34;&gt;GitHub #183&lt;/a&gt; boost-installの使用を修正。一度だけ発行すべきだった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/function/pull/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/function/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; MPLとTestへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/486&#34; target=&#34;_blank&#34;&gt;GitHub #486&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) のKarney&#39;s solutionを導入 (Adeel Ahmad氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/490&#34; target=&#34;_blank&#34;&gt;GitHub #490&lt;/a&gt; Discrete FrechetとHausdorffの距離 (distance) アルゴリズムを追加 (Yaghyavardhan Singh Khangarot氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/496&#34; target=&#34;_blank&#34;&gt;GitHub #496&lt;/a&gt; パラメータの投影 (projection) と変換 (transformation) を実行時とコンパイル時に行う機能を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/520&#34; target=&#34;_blank&#34;&gt;GitHub #520&lt;/a&gt; &lt;code&gt;dsv()&lt;/code&gt;のドキュメントが不足していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/521&#34; target=&#34;_blank&#34;&gt;GitHub #521&lt;/a&gt; &lt;code&gt;distance()&lt;/code&gt;のドキュメントの説明が間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/524&#34; target=&#34;_blank&#34;&gt;GitHub #524&lt;/a&gt; 「&lt;code&gt;switch&lt;/code&gt;文でハンドリングされていない列挙値がある」という警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/527&#34; target=&#34;_blank&#34;&gt;GitHub #527&lt;/a&gt; VS 2017 (msvc-15) 向けのワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/505&#34; target=&#34;_blank&#34;&gt;GitHub #505&lt;/a&gt; overlayアルゴリズムでのオーバーフローを修正 (Dane Springmeyer氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/518&#34; target=&#34;_blank&#34;&gt;GitHub #518&lt;/a&gt; &lt;code&gt;append()&lt;/code&gt;での一時オブジェクトの渡し方を修正 (xventura81氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/522&#34; target=&#34;_blank&#34;&gt;GitHub #522&lt;/a&gt; ビルド方法のドキュメントでpython3環境をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34; id=&#34;iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iostreams/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;std::fpos&lt;/code&gt;クラスに存在しない&lt;code&gt;seekpos()&lt;/code&gt;メンバ関数の呼び出しを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8991&#34; target=&#34;_blank&#34;&gt;Trac #8991&lt;/a&gt; 符号に関する変換の警告が出ていた点を修正&lt;/li&gt;
&lt;li&gt;メンテナンス: 他の Boost ライブラリへの依存を削除し、ビルドシステムの警告が出なくなるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全体的な変更&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; syslog sink backendで、Boost.Asioの非推奨インタフェースの使用を避けるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;いくつかのケースで、text file sinkのターゲットディレクトリ内の、合計サイズの概算が間違っている可能性があったところを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34; id=&#34;logic&#34;&gt;Logic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt; : &lt;a href=&#34;https://github.com/boostorg/logic/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 使用可能な場合に、&lt;code&gt;explicit operator bool&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34; id=&#34;multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11アロケータモデルのサポートを改善 (Glen Fernandes)&lt;ul&gt;
&lt;li&gt;C++11最小アロケータをサポート&lt;/li&gt;
&lt;li&gt;状態をもつアロケータをサポート&lt;/li&gt;
&lt;li&gt;値型の構築と破棄でのアロケータの使用&lt;/li&gt;
&lt;li&gt;空の型の保持、もしくは状態をもたないアロケータの場合に、Empty Base Optimizationが行われるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;メンバ変数や、メンバ関数の戻り値をキーにする機能として、従来は&lt;code&gt;member&lt;/code&gt;、&lt;code&gt;const_mem_fun&lt;/code&gt;などのメタ関数を使用していた。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;member&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;const_mem_fun&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、C++17の簡略構文を使用した&lt;code&gt;key&lt;/code&gt;エイリアステンプレートを導入することで、キーの抽出をより簡潔に書けるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/multi_index/&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34; id=&#34;multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変換結果の精度が、常に全ての引数の最大のものになるようにするため、精度型をうまくサポートすることを目的とした大幅な更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__cpp_int&lt;/code&gt; 内でしか使えない &lt;code&gt;final&lt;/code&gt; 扱いのアロケータのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の Boost.Endian を使用していた箇所を削除。Boost.Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt; のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; 定数の初期化に関する軽微なバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt; の値に 無限値を割り当てたことで、実行時エラーが起きる事象を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float_oct&lt;/code&gt; 型と &lt;code&gt;cpp_complex_oct&lt;/code&gt; 型への typedef を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34; id=&#34;pool&#34;&gt;Pool&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pool/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; Boost.Threadへの依存をなくすために、&lt;code&gt;boost::mutex&lt;/code&gt;の使用を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34; id=&#34;preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VC++ 14.1 (Visual Studio 2017) で、新しいC++標準準拠のプリプロセッサ (C++11可変引数マクロ) をサポート。Visual Studio 2017 15.8以降では、&lt;code&gt;/experimental:preprocessor&lt;/code&gt;スイッチを使用して有効にする&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/07/06/msvc-preprocessor-progress-towards-conformance/&#34; target=&#34;_blank&#34;&gt;MSVC Preprocessor Progress towards Conformance - Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/rational/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub #32&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spirit.X3&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.V2&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/407&#34; target=&#34;_blank&#34;&gt;GitHUb #407&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/396&#34; target=&#34;_blank&#34;&gt;GitHub #396&lt;/a&gt; &lt;code&gt;transform_attribute&lt;/code&gt;の曖昧さを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Classic&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libbacktrace&lt;/code&gt;の使い方を大幅に改善。&lt;code&gt;BOOST_STACKTRACE_USE_BACKTRACE&lt;/code&gt;や&lt;code&gt;boost_stacktrace_backtrace&lt;/code&gt;のユーザーは、以下のためにアップデートすることを推奨する：&lt;ul&gt;
&lt;li&gt;メモリ使用量が減少した&lt;/li&gt;
&lt;li&gt;magnitudeの順番によって、スタックのキャプチャが高速化した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; デバッグ情報なしでも見える&lt;code&gt;syminfo&lt;/code&gt;のフォールバックを提供 (&lt;a href=&#34;https://github.com/driesdeschout&#34; target=&#34;_blank&#34;&gt;driesdeschout&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;backtrace.h&lt;/code&gt;ヘッダの正確な位置を&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_INCLUDE_FILE&lt;/code&gt;で指定できるようにした。これにより、そのヘッダに到達不可能なプラットフォーム (たとえばUbuntu Xenial + Clang) で&lt;code&gt;bracktrace.h&lt;/code&gt;を使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;max_depth&lt;/code&gt;を設定したときのスタックキャプチャを最適化 (Jan Eisenhauer氏のPull Requestに感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; スタックトレースを高速に&lt;code&gt;std::string&lt;/code&gt;に変換する&lt;code&gt;to_string(const stacktrace&amp;amp;)&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;メンテナンス：&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; ドキュメントとテストを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Test v3.9 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_69_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;複数の翻訳単位でのヘッダオンリー版Boost.Testを、正式にサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを使用して、名前付きのテストを手動で追加できるようにした&lt;/li&gt;
&lt;li&gt;ログでの&lt;code&gt;boost::exception&lt;/code&gt;サポートを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正とPull Request&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13380&#34; target=&#34;_blank&#34;&gt;Trac #13380&lt;/a&gt; データセットをつなげたときの、ぶらさがり参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13625&#34; target=&#34;_blank&#34;&gt;Trac #13625&lt;/a&gt; コンパイルオプション&lt;code&gt;-Werror=missing-declarations&lt;/code&gt;を付けた際に、いくつかの環境でコンパイルエラーになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13637&#34; target=&#34;_blank&#34;&gt;Trac #13637&lt;/a&gt; 手動でテストケースを追加した際に、テストケース名前が衝突してしまう問題への対処として、名前を指定できる&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; &lt;code&gt;--color_output=no&lt;/code&gt;オプションを付けた際に、カラーコードを出力しないよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/161&#34; target=&#34;_blank&#34;&gt;GitHub #161&lt;/a&gt; インクルードの不足により、ヘッダファイル単体でのコンパイルに失敗していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; &lt;code&gt;close_at_tolerance()&lt;/code&gt;が、無限大の比較で常に&lt;code&gt;false&lt;/code&gt;を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; &lt;code&gt;boost_test_print_type&lt;/code&gt;が、&lt;code&gt;explicit operator bool&lt;/code&gt;のテストとして機能していなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/163&#34; target=&#34;_blank&#34;&gt;GitHub #163&lt;/a&gt; Boost 1.68.0にバージョンアップしたら、MSVC x64/Debug環境で遅くなった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/147&#34; target=&#34;_blank&#34;&gt;GitHub #147&lt;/a&gt; &lt;code&gt;execution_monitor::execute()&lt;/code&gt;で、&lt;code&gt;std::exception&lt;/code&gt;のあとに&lt;code&gt;boost::exception&lt;/code&gt;のブロックが表示されてしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; 色付き出力についてのドキュメントミスを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/151&#34; target=&#34;_blank&#34;&gt;GitHub #151&lt;/a&gt; &lt;code&gt;#if BOOST_CLANG&lt;/code&gt;を&lt;code&gt;#ifdef BOOST_CLANG&lt;/code&gt;に修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34; id=&#34;yap&#34;&gt;YAP&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC++ version 14.15 (Visual Studio 2017 version 15.8) のサポートに対する小さな変更&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.69.0リリースノート -- [1.69.0 リリースノート] Math の翻訳を追加</title>
      <link href="https://boostjp.github.io/document/version/1_69_0.html"/>
      <id>b5a76ec5d695d6c494b48a2e910ceb14199153c9:document/version/1_69_0.md</id>
      <updated>2018-12-03T19:38:59+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.69.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_69_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_69_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_69_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;非Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boostのビルドシステムが可視性をサポートし、デフォルトでは不可視 (hidden) の可視性をもつ共有ライブラリをビルドするようになった。その結果、Boostの共有ライブラリがより小さくなり、読み込み速度が速くなり、シンボルの衝突を起こす可能性が減る。&lt;/p&gt;
&lt;p&gt;詳細は、&lt;a href=&#34;https://boostorg.github.io/build/manual/develop/index.html#bbv2.builtin.features.visibility&#34; target=&#34;_blank&#34;&gt;Boost.Build visibility and local-visibilityのドキュメントを参照&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;この機能を無効にするには、ビルド時に&lt;code&gt;./b2 visibility=global&lt;/code&gt;コマンドを使用すること。&lt;/p&gt;
&lt;h2&gt;削除ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost 1.54.0から非推奨となり、1.68.0で削除予定のアナウンスが出ていたSignalsライブラリを、このバージョン1.69.0で削除した。代わりにSignals2を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34;&gt;Assign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34;&gt;Logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34;&gt;Pool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34;&gt;YAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、隠れた可視性 (hidden visibility) をもつ共有ライブラリで構築された&lt;code&gt;boost::any&lt;/code&gt;変数が、隠れた可視性をもつ他の共有ライブラリで使用、破棄できるようになった&lt;/li&gt;
&lt;li&gt;メンテナンス： いくつかの依存ライブラリを落として、ドキュメントを修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#assign&#34; id=&#34;assign&#34;&gt;Assign&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/6&#34; target=&#34;_blank&#34;&gt;GitHub #6&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10477&#34; target=&#34;_blank&#34;&gt;Trac #10477&lt;/a&gt; 右辺値参照、完全転送、可変引数テンプレートのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/assign/pull/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/5419&#34; target=&#34;_blank&#34;&gt;Trac #5419&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/7364&#34; target=&#34;_blank&#34;&gt;Trac #7364&lt;/a&gt; コンテナのアロケータへの変換を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、サンプルコードの問題をいくつか修正し、非同期操作に対するビルトインタイムアウトをサポートしたソケット&lt;code&gt;timeout_socket&lt;/code&gt;を実験的に追加した&lt;/li&gt;
&lt;li&gt;CppCon 2018での&lt;a href=&#34;https://www.boost.org/doc/libs/master/libs/beast/doc/html/beast/examples.html#beast.examples.cppcon_2018&#34; target=&#34;_blank&#34;&gt;WebSocketチャットのサンプルコード&lt;/a&gt;と&lt;a href=&#34;https://www.youtube.com/watch?v=7FQwAjELMek&#34; target=&#34;_blank&#34;&gt;プレゼンテーションビデオ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1133&#34; target=&#34;_blank&#34;&gt;GitHub #1133&lt;/a&gt; &lt;code&gt;BOOST_BEAST_USE_STD_STRING_VIEW&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1245&#34; target=&#34;_blank&#34;&gt;GitHub #1245&lt;/a&gt; UTF-8の妥当性検証が間違っていたレアケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1237&#34; target=&#34;_blank&#34;&gt;GitHub #1237&lt;/a&gt; SSLクライアントのサンプルコードに、証明書の検証を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1091&#34; target=&#34;_blank&#34;&gt;GitHub #1091&lt;/a&gt; WebSocketのサンプルコードで、タイムアウトのハンドリングが間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1270&#34; target=&#34;_blank&#34;&gt;GitHub #1270&lt;/a&gt; 侵入ベースのフックに、&lt;code&gt;basic_fields&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1267&#34; target=&#34;_blank&#34;&gt;GitHub #1267&lt;/a&gt; 16進数の範囲外の値のパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1263&#34; target=&#34;_blank&#34;&gt;GitHub #1263&lt;/a&gt; バッファイテレータで、未初期化値を比較していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1288&#34; target=&#34;_blank&#34;&gt;GitHub #1288&lt;/a&gt; サンプルコードから、本質的でない&lt;code&gt;strand&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;http-server-fastとlibstdc++へのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;の部分的なサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空であり&lt;code&gt;final&lt;/code&gt;ではないアロケータを保持する際に、Empty Base Optimizationが行われるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#concept-check&#34; id=&#34;concept-check&#34;&gt;ConceptCheck&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/concept_check/pull/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; MPLへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::empty_value&lt;/code&gt;を実装した。これは、ライブラリ作者が空の可能性がある型を保持するためにEmpty Base Optimizationを手軽に行うためにある (作者Glen Fernandes)。この機能は、Boost.Beast、Boost.CircularBuffer、Boost.MultiArrayなどで利用されている&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::quick_exit()&lt;/code&gt;を実装した。これはC++11標準ライブラリの&lt;code&gt;std::quick_exit()&lt;/code&gt;機能を提供するものである (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;Lightweight Testでの統計数を減らし、&lt;code&gt;boost::report_errors()&lt;/code&gt;の呼び出し時にMSVCではより軽量なabort動作をするようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; スマートライブラリでのリンクの問題を解決&lt;/li&gt;
&lt;li&gt;メンテナンス： ドキュメントとテストを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#dynamic-bitset&#34; id=&#34;dynamic-bitset&#34;&gt;DynamicBitset&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub #26&lt;/a&gt; パフォーマンスを改善 (いくつかのケースで2倍以上高速になった)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dynamic_bitset/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt; 範囲版の&lt;code&gt;set&lt;/code&gt;、&lt;code&gt;reset&lt;/code&gt;、&lt;code&gt;flip&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; &lt;code&gt;unbuffered_channel&lt;/code&gt;の&lt;code&gt;push&lt;/code&gt;が返ってこない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/182&#34; target=&#34;_blank&#34;&gt;GitHub #182&lt;/a&gt; UTF-8ソースコードのBOMを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/pull/183&#34; target=&#34;_blank&#34;&gt;GitHub #183&lt;/a&gt; boost-installの使用を修正。一度だけ発行すべきだった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; &lt;code&gt;readdir&lt;/code&gt;はすでにスレッドセーフになったので、LinuxとAndroid上では&lt;code&gt;readdir_r&lt;/code&gt;を使用しないこと&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; &lt;code&gt;boost::filesystem::copy()&lt;/code&gt;が未定義動作によってクラッシュしていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/77&#34; target=&#34;_blank&#34;&gt;GitHub #77&lt;/a&gt; &lt;code&gt;boost::filesystem::directory_iterator&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FOREACH&lt;/code&gt;でディレクトリイテレータを使用した際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; 古いPGI C++コンパイラに対するワークアラウンドを削除し、新しいバージョンでのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/44&#34; target=&#34;_blank&#34;&gt;GitHub #44&lt;/a&gt; MSVCでの、縮小変換による警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCでの、Boost.MPLプレースホルダー式のハンドリングでのいくつかの問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/function/pull/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/function/pull/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; MPLとTestへの依存を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/486&#34; target=&#34;_blank&#34;&gt;GitHub #486&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) のKarney&#39;s solutionを導入 (Adeel Ahmad氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/490&#34; target=&#34;_blank&#34;&gt;GitHub #490&lt;/a&gt; Discrete FrechetとHausdorffの距離 (distance) アルゴリズムを追加 (Yaghyavardhan Singh Khangarot氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/496&#34; target=&#34;_blank&#34;&gt;GitHub #496&lt;/a&gt; パラメータの投影 (projection) と変換 (transformation) を実行時とコンパイル時に行う機能を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/520&#34; target=&#34;_blank&#34;&gt;GitHub #520&lt;/a&gt; &lt;code&gt;dsv()&lt;/code&gt;のドキュメントが不足していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/521&#34; target=&#34;_blank&#34;&gt;GitHub #521&lt;/a&gt; &lt;code&gt;distance()&lt;/code&gt;のドキュメントの説明が間違っていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/524&#34; target=&#34;_blank&#34;&gt;GitHub #524&lt;/a&gt; 「&lt;code&gt;switch&lt;/code&gt;文でハンドリングされていない列挙値がある」という警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/527&#34; target=&#34;_blank&#34;&gt;GitHub #527&lt;/a&gt; VS 2017 (msvc-15) 向けのワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/505&#34; target=&#34;_blank&#34;&gt;GitHub #505&lt;/a&gt; overlayアルゴリズムでのオーバーフローを修正 (Dane Springmeyer氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/518&#34; target=&#34;_blank&#34;&gt;GitHub #518&lt;/a&gt; &lt;code&gt;append()&lt;/code&gt;での一時オブジェクトの渡し方を修正 (xventura81氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/522&#34; target=&#34;_blank&#34;&gt;GitHub #522&lt;/a&gt; ビルド方法のドキュメントでpython3環境をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/pending/integer_log2.hpp&lt;/code&gt;を非推奨化した。このヘッダは将来のリリースで削除される。代わりに&lt;code&gt;boost/integer/integer_log2.hpp&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iostreams&#34; id=&#34;iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iostreams/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;std::fpos&lt;/code&gt;クラスに存在しない&lt;code&gt;seekpos()&lt;/code&gt;メンバ関数の呼び出しを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/43&#34; target=&#34;_blank&#34;&gt;GitHub #43&lt;/a&gt; &lt;code&gt;boost&lt;/code&gt;名前空間内での、イテレータに対する非修飾の&lt;code&gt;advance&lt;/code&gt;と&lt;code&gt;distance&lt;/code&gt;の呼び出しが曖昧になっていたことによるコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8991&#34; target=&#34;_blank&#34;&gt;Trac #8991&lt;/a&gt; 符号に関する変換の警告が出ていた点を修正&lt;/li&gt;
&lt;li&gt;メンテナンス: 他の Boost ライブラリへの依存を削除し、ビルドシステムの警告が出なくなるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全体的な変更&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; syslog sink backendで、Boost.Asioの非推奨インタフェースの使用を避けるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;いくつかのケースで、text file sinkのターゲットディレクトリ内の、合計サイズの概算が間違っている可能性があったところを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#logic&#34; id=&#34;logic&#34;&gt;Logic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt; : &lt;a href=&#34;https://github.com/boostorg/logic/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 使用可能な場合に、&lt;code&gt;explicit operator bool&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LambertW 関数を追加&lt;/li&gt;
&lt;li&gt;複素被積分と複素数積分をサポートするために共通ルーチンを更新&lt;/li&gt;
&lt;li&gt;Barycentric rational approximation の実装を追加&lt;/li&gt;
&lt;li&gt;浮動小数点型の精度指定をよりよくサポートするための些細な修正&lt;/li&gt;
&lt;li&gt;Boost.Endian を使っている部分を削除。Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;complex型をサポートするために、連分数と級数を評価するコードを更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toms748_solve&lt;/code&gt; で、無限ループに繋がる論理エラーを回避。&lt;a href=&#34;https://github.com/boostorg/math/issues/138&#34; target=&#34;_blank&#34;&gt;#138&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extreme_value_distribution&lt;/code&gt; の &lt;code&gt;standard_deviation&lt;/code&gt; と &lt;code&gt;mean&lt;/code&gt; を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/139&#34; target=&#34;_blank&#34;&gt;#139&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;newton_raphson_iterate&lt;/code&gt; のヒューリスティックな実装を強化。&lt;a href=&#34;https://github.com/boostorg/math/issues/145&#34; target=&#34;_blank&#34;&gt;#145&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erf(NaN)&lt;/code&gt; の結果を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/141&#34; target=&#34;_blank&#34;&gt;#141&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;GCC の警告を減らすための巨大な修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/136&#34; target=&#34;_blank&#34;&gt;#136&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;polynomial クラスの addition メソッドをリファクタリング。&lt;a href=&#34;https://github.com/boostorg/math/issues/132&#34; target=&#34;_blank&#34;&gt;#132&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;vxWorks のために、グローバル名前空間の &lt;code&gt;real&lt;/code&gt; を修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/131&#34; target=&#34;_blank&#34;&gt;#131&lt;/a&gt; を参照。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinc&lt;/code&gt; 関数の近似の実装を向上させ、より優れたテストを追加&lt;/li&gt;
&lt;li&gt;Student-t 型の 仮説検定に関するドキュメントの Typoを修正。&lt;a href=&#34;https://github.com/boostorg/math/issues/143&#34; target=&#34;_blank&#34;&gt;#143&lt;/a&gt; を参照。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_starts_with&lt;/code&gt;機能を実装 (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-array&#34; id=&#34;multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11アロケータモデルのサポートを改善 (Glen Fernandes)&lt;ul&gt;
&lt;li&gt;C++11最小アロケータをサポート&lt;/li&gt;
&lt;li&gt;状態をもつアロケータをサポート&lt;/li&gt;
&lt;li&gt;値型の構築と破棄でのアロケータの使用&lt;/li&gt;
&lt;li&gt;空の型の保持、もしくは状態をもたないアロケータの場合に、Empty Base Optimizationが行われるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;メンバ変数や、メンバ関数の戻り値をキーにする機能として、従来は&lt;code&gt;member&lt;/code&gt;、&lt;code&gt;const_mem_fun&lt;/code&gt;などのメタ関数を使用していた。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;member&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;const_mem_fun&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;このバージョンでは、C++17の簡略構文を使用した&lt;code&gt;key&lt;/code&gt;エイリアステンプレートを導入することで、キーの抽出をより簡潔に書けるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/multi_index/&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_non_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#multi-precision&#34; id=&#34;multi-precision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変換結果の精度が、常に全ての引数の最大のものになるようにするため、精度型をうまくサポートすることを目的とした大幅な更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__cpp_int&lt;/code&gt; 内でしか使えない &lt;code&gt;final&lt;/code&gt; 扱いのアロケータのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の Boost.Endian を使用していた箇所を削除。Boost.Predef を使うのが好ましいため&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::string_view&lt;/code&gt; のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; 定数の初期化に関する軽微なバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt; の値に 無限値を割り当てたことで、実行時エラーが起きる事象を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float_oct&lt;/code&gt; 型と &lt;code&gt;cpp_complex_oct&lt;/code&gt; 型への typedef を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::for_each_n()&lt;/code&gt;と&lt;code&gt;std::sample()&lt;/code&gt;アルゴリズムのBost.PolyCollection仕様バージョンを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#pool&#34; id=&#34;pool&#34;&gt;Pool&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pool/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; Boost.Threadへの依存をなくすために、&lt;code&gt;boost::mutex&lt;/code&gt;の使用を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#preprocessor&#34; id=&#34;preprocessor&#34;&gt;Preprocessor&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VC++ 14.1 (Visual Studio 2017) で、新しいC++標準準拠のプリプロセッサ (C++11可変引数マクロ) をサポート。Visual Studio 2017 15.8以降では、&lt;code&gt;/experimental:preprocessor&lt;/code&gt;スイッチを使用して有効にする&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/07/06/msvc-preprocessor-progress-towards-conformance/&#34; target=&#34;_blank&#34;&gt;MSVC Preprocessor Progress towards Conformance - Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/rational/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub #32&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spirit.X3&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.V2&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/392&#34; target=&#34;_blank&#34;&gt;GitHub #392&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13531&#34; target=&#34;_blank&#34;&gt;Trac #13531&lt;/a&gt; &lt;code&gt;boost::math&lt;/code&gt;の恩恵を受けるために、自身の浮動小数点数ルーチンを落とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/407&#34; target=&#34;_blank&#34;&gt;GitHUb #407&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/396&#34; target=&#34;_blank&#34;&gt;GitHub #396&lt;/a&gt; &lt;code&gt;transform_attribute&lt;/code&gt;の曖昧さを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/413&#34; target=&#34;_blank&#34;&gt;GitHub #413&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/issues/395&#34; target=&#34;_blank&#34;&gt;GitHub #395&lt;/a&gt; &lt;code&gt;to_utf8&lt;/code&gt; : Windowsでの&lt;code&gt;wchar_t&lt;/code&gt;のハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Classic&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/409&#34; target=&#34;_blank&#34;&gt;GitHub #409&lt;/a&gt; 例外型に、可視性の指定が抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libbacktrace&lt;/code&gt;の使い方を大幅に改善。&lt;code&gt;BOOST_STACKTRACE_USE_BACKTRACE&lt;/code&gt;や&lt;code&gt;boost_stacktrace_backtrace&lt;/code&gt;のユーザーは、以下のためにアップデートすることを推奨する：&lt;ul&gt;
&lt;li&gt;メモリ使用量が減少した&lt;/li&gt;
&lt;li&gt;magnitudeの順番によって、スタックのキャプチャが高速化した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; デバッグ情報なしでも見える&lt;code&gt;syminfo&lt;/code&gt;のフォールバックを提供 (&lt;a href=&#34;https://github.com/driesdeschout&#34; target=&#34;_blank&#34;&gt;driesdeschout&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;backtrace.h&lt;/code&gt;ヘッダの正確な位置を&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_INCLUDE_FILE&lt;/code&gt;で指定できるようにした。これにより、そのヘッダに到達不可能なプラットフォーム (たとえばUbuntu Xenial + Clang) で&lt;code&gt;bracktrace.h&lt;/code&gt;を使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;max_depth&lt;/code&gt;を設定したときのスタックキャプチャを最適化 (Jan Eisenhauer氏のPull Requestに感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; スタックトレースを高速に&lt;code&gt;std::string&lt;/code&gt;に変換する&lt;code&gt;to_string(const stacktrace&amp;amp;)&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;メンテナンス：&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; ドキュメントとテストを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Systemライブラリをヘッダオンリーにした。スタブライブラリは互換性のためにビルドされるが、そのライブラリをリンクする必要はない&lt;/li&gt;
&lt;li&gt;さらに多くの関数に&lt;code&gt;constexpr&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;クラスのデストラクタが&lt;code&gt;protected&lt;/code&gt;となり、&lt;code&gt;virtual&lt;/code&gt;ではなくなった。これは潜在的な破壊的変更だが、その影響は限定的であると予想される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;に64ビット識別子を受け取るコンストラクタを追加し、異なるカテゴリのオブジェクトと比較できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;のコンストラクタを&lt;code&gt;protected&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message()&lt;/code&gt;メンバ関数に、メモリ確保せず、例外も投げないオーバーロードを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;仮想メンバ関数を追加し、成功が値&lt;code&gt;0&lt;/code&gt;ではないカテゴリを定義できるようにした&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;boost::system::throws&lt;/code&gt;オブジェクトを削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::throws()&lt;/code&gt;関数を非推奨化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error&lt;/code&gt;クラスの&lt;code&gt;error_code&lt;/code&gt;ひとつをとるコンストラクタを&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system_error::code()&lt;/code&gt;が値を返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Test v3.9 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_69_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;複数の翻訳単位でのヘッダオンリー版Boost.Testを、正式にサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを使用して、名前付きのテストを手動で追加できるようにした&lt;/li&gt;
&lt;li&gt;ログでの&lt;code&gt;boost::exception&lt;/code&gt;サポートを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正とPull Request&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13380&#34; target=&#34;_blank&#34;&gt;Trac #13380&lt;/a&gt; データセットをつなげたときの、ぶらさがり参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13625&#34; target=&#34;_blank&#34;&gt;Trac #13625&lt;/a&gt; コンパイルオプション&lt;code&gt;-Werror=missing-declarations&lt;/code&gt;を付けた際に、いくつかの環境でコンパイルエラーになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13637&#34; target=&#34;_blank&#34;&gt;Trac #13637&lt;/a&gt; 手動でテストケースを追加した際に、テストケース名前が衝突してしまう問題への対処として、名前を指定できる&lt;code&gt;BOOST_TEST_CASE_NAME&lt;/code&gt;マクロを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; &lt;code&gt;--color_output=no&lt;/code&gt;オプションを付けた際に、カラーコードを出力しないよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/test/pull/161&#34; target=&#34;_blank&#34;&gt;GitHub #161&lt;/a&gt; インクルードの不足により、ヘッダファイル単体でのコンパイルに失敗していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/156&#34; target=&#34;_blank&#34;&gt;GitHub #156&lt;/a&gt; &lt;code&gt;close_at_tolerance()&lt;/code&gt;が、無限大の比較で常に&lt;code&gt;false&lt;/code&gt;を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/158&#34; target=&#34;_blank&#34;&gt;GitHub #158&lt;/a&gt; &lt;code&gt;boost_test_print_type&lt;/code&gt;が、&lt;code&gt;explicit operator bool&lt;/code&gt;のテストとして機能していなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/163&#34; target=&#34;_blank&#34;&gt;GitHub #163&lt;/a&gt; Boost 1.68.0にバージョンアップしたら、MSVC x64/Debug環境で遅くなった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/issues/147&#34; target=&#34;_blank&#34;&gt;GitHub #147&lt;/a&gt; &lt;code&gt;execution_monitor::execute()&lt;/code&gt;で、&lt;code&gt;std::exception&lt;/code&gt;のあとに&lt;code&gt;boost::exception&lt;/code&gt;のブロックが表示されてしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; 色付き出力についてのドキュメントミスを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/151&#34; target=&#34;_blank&#34;&gt;GitHub #151&lt;/a&gt; &lt;code&gt;#if BOOST_CLANG&lt;/code&gt;を&lt;code&gt;#ifdef BOOST_CLANG&lt;/code&gt;に修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#type-index&#34; id=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/21&#34; target=&#34;_blank&#34;&gt;GitHub #21&lt;/a&gt; レグレッションを修正し、&lt;code&gt;boost/type_traits.hpp&lt;/code&gt;ヘッダのパースを30%高速化した (Nikita Kniazev氏のPull Requestに感謝！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::compressed_pair&lt;/code&gt;に、継承できない空の型 (non-inheritable empty types) のサポートを追加。&lt;code&gt;final&lt;/code&gt;として宣言された型に対するEmpty Base Optimizationを避けるようにした (Glen Fernandes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可視性の問題を修正。現在は、&lt;code&gt;boost::bad_visit&lt;/code&gt;例外が隠された可視性 (hidden visibility) をもつ共有ライブラリを越えて、隠された可視性をもつ他の共有ライブラリで捕捉できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html#yap&#34; id=&#34;yap&#34;&gt;YAP&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC++ version 14.15 (Visual Studio 2017 version 15.8) のサポートに対する小さな変更&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Yoshinari Takaoka</name>
        <email>mumumu@mumumu.org</email>
      </author>
    </entry>
  
</feed>