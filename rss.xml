<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2024-04-16T02:38:03.140247</updated>
  <id>681f070f-c013-4a85-a6dd-8a4d4a64c8f6</id>

  
    <entry>
      <title>Boost 1.85.0リリースノート -- リンク修正</title>
      <link href="https://boostjp.github.io/document/version/1_85_0.html"/>
      <id>66b1a909c444de234901b4ca402348991a948ef6:document/version/1_85_0.md</id>
      <updated>2024-04-16T11:36:42+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.85.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_85_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_85_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_85_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_85_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/charconv&#34; target=&#34;_blank&#34;&gt;CharConv&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11での&lt;code&gt;&amp;lt;charconv&amp;gt;&lt;/code&gt;の高品質な実装 (作者Matt Borland氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/scope&#34; target=&#34;_blank&#34;&gt;Scope&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Scope Guardユーティリティと&lt;code&gt;unique_resource&lt;/code&gt;ラッパーのコレクション (作者Andrey Semashev氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#msm&#34;&gt;MSM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multi_index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#random&#34;&gt;Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;左辺値修飾された完了シグネチャを正しく処理するために、&lt;code&gt;async_result&lt;/code&gt;プライマリテンプレートのコンセプトチェックを修正&lt;/li&gt;
&lt;li&gt;完了トークンアダプタ&lt;code&gt;bind_allocator&lt;/code&gt;、&lt;code&gt;bind_executor&lt;/code&gt;、&lt;code&gt;bind_immediate_executor&lt;/code&gt;、&lt;code&gt;bind_cancellation_slot&lt;/code&gt;を使用して互いをアダプトさせる際に発生する可能性があるいくつかのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;操作を変更し、完了ハンドラを呼び出す際に&lt;code&gt;completion_order&lt;/code&gt; vectorをムーブするようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ip::basic_resolver_query&lt;/code&gt;、&lt;code&gt;io_context::strand&lt;/code&gt;、&lt;code&gt;coroutine&lt;/code&gt;で非推奨の暗黙のコピーコンストラクタに関する警告を修正&lt;/li&gt;
&lt;li&gt;Winsockの初期化に使用されるバージョン指定を更新&lt;/li&gt;
&lt;li&gt;キャンセルによって発生した例外を完了ハンドラに正しく伝播するように&lt;code&gt;co_spawn&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt;の内部ストレージにおける未定義の動作を修正するために、&lt;code&gt;std::launder&lt;/code&gt;の呼び出しを追加&lt;/li&gt;
&lt;li&gt;Windowsのファイルサポートの実装において、&lt;code&gt;file_base::append&lt;/code&gt;フラグの処理が欠落していたのを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ioctl&lt;/code&gt;の呼び出しが失敗した場合、ソケットとディスクリプタの実装を更新し、&lt;code&gt;fcntl&lt;/code&gt;にフォールバックするケースを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/asio/experimental/parallel_group.hpp&lt;/code&gt;ヘッダが自己完結するように修正&lt;/li&gt;
&lt;li&gt;channelと&lt;code&gt;experimental::coro&lt;/code&gt;が同じ翻訳単位で使用された場合に発生していたコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;ドキュメントに欠落していたCancellationSlotの型要件を追加&lt;/li&gt;
&lt;li&gt;非同期操作の開始関数の推定戻り値型に対するドキュメントのハイパーリンクを修正&lt;/li&gt;
&lt;li&gt;その他の小さなドキュメント更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/pull/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; RISC-Vで&lt;code&gt;pause&lt;/code&gt;命令のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;API変更&lt;ul&gt;
&lt;li&gt;ステータスコードのリストを、IANAレジストリに準拠するよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_cat.hpp&lt;/code&gt; での到達不能コードの警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocker_server_awaitable&lt;/code&gt; サンプルコードの接続エラー処理を修正&lt;/li&gt;
&lt;li&gt;高度なサーバーのサンプルコードにおける &lt;code&gt;async_write&lt;/code&gt; の並行呼び出しを修正&lt;/li&gt;
&lt;li&gt;zlib 名が minizip と競合する問題を修正&lt;/li&gt;
&lt;li&gt;ホスト文字列が &lt;code&gt;SSL_set_tlsext_host_name()&lt;/code&gt; 呼び出しのあとに更新されるべきであった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asio::associator&lt;/code&gt; の &lt;code&gt;bind_wrapper&lt;/code&gt; と &lt;code&gt;bind_front_wrapper&lt;/code&gt; 向け特殊化を追加&lt;/li&gt;
&lt;li&gt;error categoryのmessage関数に、アロケータを指定しないオーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメント&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http::message::prepare_payload()&lt;/code&gt; は、必要がなければ呼び出さなくてよいと規定した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_stream::expires_after()&lt;/code&gt; の影響を受ける操作を記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;teardown()&lt;/code&gt; と &lt;code&gt;async_teardown()&lt;/code&gt; はカスタマイズポイントであることを記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::serializer&lt;/code&gt; の最初の使用後にムーブまたはコピーすることは未定義動作であることを記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WebSocket::permessage_deflate&lt;/code&gt; は WebSocket ハンドシェイクを行う前に設定すべきであることを記載&lt;/li&gt;
&lt;li&gt;http read 操作の &lt;code&gt;bytes_transferred&lt;/code&gt; は HTTP パーサーが消費したバイト数を報告することを記載&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Emile Cormier, JohannesWilde, yhzx233&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bimap&#34; id=&#34;bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/bimap/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; &lt;code&gt;bimap&lt;/code&gt;内で使用するサブコンテナ (&lt;code&gt;set_of&lt;/code&gt;や&lt;code&gt;unordered_set_of&lt;/code&gt;) の異種混合ルックアップ (heterogeneous lookup) を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了。C++11コンパイラを要求するようになった&lt;ul&gt;
&lt;li&gt;GCCは4.7以降、MSVCは12.0 (VS 2013) 以降&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/conversion/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt; ライブラリの一部ではなくなった&lt;code&gt;boost::lexical_cast&lt;/code&gt;関連の古い記述を削除 (&lt;a href=&#34;https://github.com/eoan-ermine&#34; target=&#34;_blank&#34;&gt;Danil Sidoruk&lt;/a&gt;氏のPRに感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;生の関数を関数オブジェクトクラスでラップするための&lt;code&gt;functor&lt;/code&gt;クラステンプレートを持つ新しい&lt;code&gt;boost/core/functor.hpp&lt;/code&gt;ヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;null_deleter&lt;/code&gt;、&lt;code&gt;fclose_deleter&lt;/code&gt;、チェックされたデリーター定義を変更し、引数依存の名前探索 (ADL) で名前空間&lt;code&gt;boost&lt;/code&gt;が持ち込まれないようにした。ユーザーは、呼び出される関数の名前空間を明示的に修飾するか、&lt;code&gt;using&lt;/code&gt;宣言を追加する必要があるかもしれない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path::generic_path&lt;/code&gt;と&lt;code&gt;path::generic_string&lt;/code&gt;メソッドは、返されるパスの中の重複したディレクトリセパレータを削除するようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;code&gt;path::generic_path&lt;/code&gt;、&lt;code&gt;path::generic_string&lt;/code&gt;、&lt;code&gt;path::make_preferred&lt;/code&gt;、&lt;code&gt;path::lexically_normal&lt;/code&gt;は、パスのルート名におけるバックスラッシュとフォワードスラッシュの変換を避けるようになった。例として、Windows上で&lt;code&gt;path(&#34;\\\\\\\\?\\\\c:\\\\foo&#34;).generic_string()&lt;/code&gt;は、&lt;code&gt;&#34;//?/c:/foo&#34;&lt;/code&gt;の代わりに&lt;code&gt;&#34;\\\\\\\\?\\\\c:/foo&#34;&lt;/code&gt;を返すようになった。同様に、&lt;code&gt;path(&#34;\\\\\\\\host/share/foo/..&#34;).lexically_normal()&lt;/code&gt;は&lt;code&gt;&#34;\\\\\\\\host\\\\share&#34;を&lt;/code&gt;返すようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;code&gt;equivalent&lt;/code&gt;は、どちらかのパスが存在しない場合にエラーを示すようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/301&#34; target=&#34;_blank&#34;&gt;GitHub #301&lt;/a&gt; &lt;code&gt;absolute&lt;/code&gt;は、入力パスの&lt;code&gt;relative_path()&lt;/code&gt;が空の場合、末尾にディレクトリセパレータを持つパスを返すようになった&lt;/li&gt;
&lt;li&gt;デフォルトのパスモデルを使用して一意のパスを生成する&lt;code&gt;unique_path&lt;/code&gt;関数の、単一の&lt;code&gt;error_code&amp;amp; ec&lt;/code&gt;引数をとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/300&#34; target=&#34;_blank&#34;&gt;GitHub #300&lt;/a&gt; &lt;code&gt;weakly_canonical&lt;/code&gt;は、入力パスが相対パスであり、ファイルシステムに存在する要素を含まない場合、絶対パスを生成するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/179&#34; target=&#34;_blank&#34;&gt;GitHub #179&lt;/a&gt; &lt;code&gt;copy_file&lt;/code&gt;と&lt;code&gt;copy&lt;/code&gt;操作に、新しい&lt;code&gt;copy_options::ignore_attribute_errors&lt;/code&gt;オプションを追加。この新しいオプションにより、ファイル属性のコピー中に発生する可能性のあるエラーを無視できる&lt;/li&gt;
&lt;li&gt;Linuxでは、&lt;code&gt;sendfile&lt;/code&gt;と&lt;code&gt;copy_file_range&lt;/code&gt;システムコールに基づく&lt;code&gt;copy_file&lt;/code&gt;バックエンドが、ターゲットファイルのストレージを事前に割り当てようとする。これにより、ファイルシステムの断片化が減少し、十分な空き容量がない場合に早期にエラーが示される。すべてのファイルシステムがこの機能をサポートしているわけではない。ストレージの事前割り当てがサポートされていない場合、ファイルのコピーは続行される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://pubs.opengroup.org/onlinepubs/9699919799/functions/fdopendir.html&#34; target=&#34;_blank&#34;&gt;fdopendir&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;openat&lt;/code&gt;、POSIX.1-2008で定義されている関連APIをサポートするPOSIXシステム、およびWindowsでは、&lt;code&gt;recursive_directory_iterator&lt;/code&gt;は、反復中にファイルのステータスを問い合わせ、ネストされたディレクトリを開くために、パスの代わりにファイル記述子/ハンドルを使用するようになった。これにより、ファイルシステムの同時変更に対するディレクトリ反復の回復力が向上する&lt;/li&gt;
&lt;li&gt;以前に非推奨として宣言されていたAPIを削除しました。とくに、&lt;code&gt;path&lt;/code&gt;と&lt;code&gt;recursive_directory_iterator&lt;/code&gt;のメンバ関数、&lt;code&gt;is_regular&lt;/code&gt;、&lt;code&gt;copy_directory&lt;/code&gt;、&lt;code&gt;symbolic_link_exists&lt;/code&gt;、&lt;code&gt;complete&lt;/code&gt;、&lt;code&gt;copy_option&lt;/code&gt;、&lt;code&gt;symlink_option&lt;/code&gt;、および&lt;code&gt;boost/filesystem/convenience.hpp&lt;/code&gt;と&lt;code&gt;boost/filesystem/path_traits.hpp&lt;/code&gt;ヘッダが削除された。削除されたコンポーネントの代替はドキュメントに記載されている&lt;/li&gt;
&lt;li&gt;コンテナ型（例として&lt;code&gt;std::vector&amp;lt;char&amp;gt;&lt;/code&gt;）からの&lt;code&gt;path&lt;/code&gt;の構築、代入、追加のサポートは、デフォルトで無効になった。ユーザーは&lt;code&gt;BOOST_FILESYSTEM_DEPRECATED&lt;/code&gt;を定義することで、この機能を有効にすることができる。この機能は非推奨のままであり、将来のリリースで完全に削除される予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了。C++11コンパイラを要求するようになった&lt;ul&gt;
&lt;li&gt;GCCは4.7以降、MSVCは12.0 (VS 2013) 以降&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1247&#34; target=&#34;_blank&#34;&gt;GitHub #1247&lt;/a&gt; &lt;code&gt;condition&lt;/code&gt; マクロの代わりに &lt;code&gt;if constexpr&lt;/code&gt; マクロを使用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1242&#34; target=&#34;_blank&#34;&gt;GitHub #1242&lt;/a&gt; sideで並べ替えるためのstrategyを渡すようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1234&#34; target=&#34;_blank&#34;&gt;GitHub #1234&lt;/a&gt; clang/mac/darwin/arm64 用の CMake ファイルを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決した課題&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1231&#34; target=&#34;_blank&#34;&gt;GitHub #1231&lt;/a&gt;、&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1244&#34; target=&#34;_blank&#34;&gt;GitHub #1244&lt;/a&gt; 反時計回りのポリゴンに対する不正な集合操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1259&#34; target=&#34;_blank&#34;&gt;GitHub #1259&lt;/a&gt; CUDA NVCC コンパイラでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1250&#34; target=&#34;_blank&#34;&gt;GitHub #1250&lt;/a&gt; linestringのバッファが不正なinner polygonを返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1230&#34; target=&#34;_blank&#34;&gt;GitHub #1230&lt;/a&gt; union操作がpointに悪影響 (perturbing) し、間違った結果を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1229&#34; target=&#34;_blank&#34;&gt;GitHub #1229&lt;/a&gt; union操作が自己交差を生成する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1248&#34; target=&#34;_blank&#34;&gt;GitHub #1248&lt;/a&gt; 閉じたクラスタ内の交点を非横断可能に設定することでバッファの問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1246&#34; target=&#34;_blank&#34;&gt;GitHub #1246&lt;/a&gt; コンバーターおよび &lt;code&gt;is_base_of&lt;/code&gt; のコンパイルを修正&lt;/li&gt;
&lt;li&gt;さまざまなエラーと警告の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを非推奨化。将来のリリースから削除される予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;エンディアンを扱うためにBoost.Endianを使用するようになった&lt;/li&gt;
&lt;li&gt;Boost.SystemとBoost.Containerコンポーネントへのエイリアスは非推奨となり、1.87.0で完全に削除される予定&lt;/li&gt;
&lt;li&gt;記述されたクラスへの変換がプライベートメンバをサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visit&lt;/code&gt;に右辺値参照のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;のような型 (path-like types) への変換サポートを追加&lt;/li&gt;
&lt;li&gt;記述されたクラスへのparseが継承したメンバを正しく考慮するようになった&lt;/li&gt;
&lt;li&gt;自己参照するシーケンスの変換を無効化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visit&lt;/code&gt;の参照ハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#leaf&#34; id=&#34;leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;スレッド間でエラーオブジェクトと例外を転送するための新たなAPI: &lt;code&gt;try_capture_all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;try_capture_all&lt;/code&gt;を介してキャプチャされた例外を&lt;code&gt;result&amp;lt;T&amp;gt;&lt;/code&gt;が転送できるようになった&lt;/li&gt;
&lt;li&gt;動的にキャプチャされたエラーオブジェクトを&lt;code&gt;result&amp;lt;T&amp;gt;&lt;/code&gt;が改善された効率で転送できるようになった&lt;/li&gt;
&lt;li&gt;古い&lt;code&gt;make_shared_context&lt;/code&gt;/&lt;code&gt;capture&lt;/code&gt; APIは非推奨となり、次のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;例外で動的にキャプチャされたエラーオブジェクトを転送するサポートを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#lexical_cast&#34; id=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最適化されたストリームとC++標準ライブラリIOベースのストリームを分離するための内部ロジックの大幅な書き換え:&lt;ul&gt;
&lt;li&gt;C++標準ライブラリベースのストリームは、より良いパフォーマンスを実現するために、より少ないケースで構築されるようになった&lt;/li&gt;
&lt;li&gt;テンプレートのインスタンス化を減らし、コードがシンプルになった&lt;/li&gt;
&lt;li&gt;常に&lt;code&gt;std::char_traits&lt;/code&gt;を使用するようにした (入力/出力型からカスタムトレイトを使用しないようにした。リンク時または実行時エラーの原因になるため)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 前方宣言された&lt;code&gt;boost::array&lt;/code&gt;の誤用を修正 (報告をしてくれた&lt;a href=&#34;https://github.com/13steinj&#34; target=&#34;_blank&#34;&gt;13steinj&lt;/a&gt;氏に感謝！)&lt;/li&gt;
&lt;li&gt;C++標準ライブラリの傾向に従い、&lt;code&gt;volatile&lt;/code&gt;入力型のサポートを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; &lt;code&gt;std::basic_string_view&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;からの変換を最適化&lt;/li&gt;
&lt;li&gt;Boost.NumericConversionとBoost.MPLへの依存関係を削除。浮動小数点型から算術型への一部の変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; このライブラリが、&lt;code&gt;-fno-sanitize-recover=integer&lt;/code&gt;オプションをつけてもコンパイルおよび動作するようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20モードで&lt;code&gt;char8_t&lt;/code&gt;の型情報が欠落していたことによるリンカーの問題を修正&lt;/li&gt;
&lt;li&gt;バンドルされたIConvを使用する際のIConvコンパイルフラグを修正&lt;/li&gt;
&lt;li&gt;ドキュメント化されているように、&lt;code&gt;collator&lt;/code&gt;はコンストラクタで例外を投げるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/216&#34; target=&#34;_blank&#34;&gt;GitHub #216&lt;/a&gt; 現在のバックエンドで利用できない場合の型の混同を避けるため、&lt;code&gt;collator&lt;/code&gt;は&lt;code&gt;std::collator&lt;/code&gt;を継承しなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/218&#34; target=&#34;_blank&#34;&gt;GitHub #218&lt;/a&gt; 無限ループを回避するため、不正なIConvライブラリ (一部のMacOSバージョンなど) が検出された場合に例外を投げるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/issues/221&#34; target=&#34;_blank&#34;&gt;GitHub #221&lt;/a&gt; &lt;code&gt;date_time&lt;/code&gt;の分解能がミリ秒単位だと混乱が起きていたため、秒に変更&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい最適化アルゴリズムのコレクションが追加されました:&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1062&#34; target=&#34;_blank&#34;&gt;GitHub #1062&lt;/a&gt; 差分進化 (Differential Evolution)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1065&#34; target=&#34;_blank&#34;&gt;GitHub #1065&lt;/a&gt; JSO&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1071&#34; target=&#34;_blank&#34;&gt;GitHub #1071&lt;/a&gt; ランダム探索&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1074&#34; target=&#34;_blank&#34;&gt;GitHub #1074&lt;/a&gt; CMA-ES&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NCF生存関数 (NCF survival function) における0による割り算の警告を修正&lt;/li&gt;
&lt;li&gt;ccmath::floor/ceilの大きな引数に対する&lt;code&gt;constexpr&lt;/code&gt;深さの制限を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quartic_roots&lt;/code&gt;の精度を改善&lt;/li&gt;
&lt;li&gt;libstdc++14のcstdfloatのnumeric limits検出マクロを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1060&#34; target=&#34;_blank&#34;&gt;GitHub #1060&lt;/a&gt; C++14を使用する際にMSVC UCRTがcomplex.hで&lt;code&gt;_Complex_I&lt;/code&gt;を定義する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1066&#34; target=&#34;_blank&#34;&gt;GitHub #1066&lt;/a&gt; cstdfloat iostreamを改善&lt;/li&gt;
&lt;li&gt;スタンドアロンモードではない環境でスタンドアロンモードを使用する際のBoost.Configマクロの再定義を修正&lt;/li&gt;
&lt;li&gt;コードカバレッジを大幅に改善し、関連するバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#msm&#34; id=&#34;msm&#34;&gt;MSM&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下は、指定された内容を日本語に翻訳したものです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt; バックエンドを更新 (back11)。C++11が必要となる。ドキュメントではこれがデフォルトとなった&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大きな新機能&lt;/strong&gt; 新しいフロントエンド (PlantUML) を追加。C++20が必要となる&lt;/li&gt;
&lt;li&gt;様々なバグ修正 (コンパイルエラーと警告、遅延イベントの優先度)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multi_index&#34; id=&#34;multi_index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/575&#34; target=&#34;_blank&#34;&gt;GitHub #575&lt;/a&gt; C++23 &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt;から発生する非推奨警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/577&#34; target=&#34;_blank&#34;&gt;GitHub #577&lt;/a&gt; 小さなビット数に対する&lt;code&gt;cpp_bin_float&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/580&#34; target=&#34;_blank&#34;&gt;GitHub #580&lt;/a&gt; &lt;code&gt;-Wpessimizing-move&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;covecovの実行を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/585&#34; target=&#34;_blank&#34;&gt;GitHub #585&lt;/a&gt; &lt;code&gt;cpp_dec_float&lt;/code&gt;乗算での切り捨てを減らすよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/597&#34; target=&#34;_blank&#34;&gt;GitHub #597&lt;/a&gt; 精度要件を満たすよう&lt;code&gt;complex_adaptor&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/603&#34; target=&#34;_blank&#34;&gt;GitHub #603&lt;/a&gt; tommathの破壊的変更に対する修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/608&#34; target=&#34;_blank&#34;&gt;GitHub #608&lt;/a&gt; 数値に変換可能な型が算術演算子オーバーロードに参加できるように修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;: Boost.MySQLでは、新たにコンパイルされたBoost.Charconvライブラリへのリンクが必要になった&lt;ul&gt;
&lt;li&gt;これは、ロケール依存の問題を解決し、効率を向上させ、新しいクライアント側SQLフォーマット機能を提供する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接続プールの実験的サポートを追加。これにより、セッションを再利用でき、組み込みの再接続とエラー処理が提供される&lt;/li&gt;
&lt;li&gt;型消去された接続 (&lt;code&gt;any_connection&lt;/code&gt;クラス) の実験的サポートを追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;any_connection&lt;/code&gt;はテンプレートではなく、より簡単な接続の確立と再接続のセマンティクスを特徴としている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;クライアント側SQLフォーマット関数 (&lt;code&gt;format_sql&lt;/code&gt;と&lt;code&gt;format_sql_to&lt;/code&gt;) の実験的サポートを追加&lt;ul&gt;
&lt;li&gt;これにより、クライアント側で安全にクエリを構成できるため、バッチインサートや動的フィルタ、PATCH-like updateなどのパターンが可能になる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;close_statement&lt;/code&gt;と&lt;code&gt;async_close_statement&lt;/code&gt;での、アプリケーションコードに大幅な遅延を引き起こす可能性のあるパフォーマンスの問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT&lt;/code&gt;を使用したビルドのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の実行インターフェース (&lt;code&gt;connection::query&lt;/code&gt;、&lt;code&gt;connection::start_query&lt;/code&gt;、&lt;code&gt;connection::execute_statement&lt;/code&gt;、&lt;code&gt;connection::start_statement_execution&lt;/code&gt;とそれらの非同期対応版) は、Boost 1.86で削除が予定されているため、警告が発生するようになった&lt;/li&gt;
&lt;li&gt;一部のエラーメッセージが切り捨てられるバグを修正&lt;/li&gt;
&lt;li&gt;警告を整理。&lt;code&gt;-Wall&lt;/code&gt;と&lt;code&gt;-Wextra&lt;/code&gt;を使用したビルドで警告は発生しなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field_view&lt;/code&gt;のすべてのコンストラクタを安定化&lt;/li&gt;
&lt;li&gt;ライブラリ内部をsans-ioアプローチで書き換え、複雑さが減った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#odeint&#34; id=&#34;odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;: このライブラリは、Boost.Mathをインクルードすることによる暗黙の要件ではなく、明示的にC++14を要求するようになった&lt;/li&gt;
&lt;li&gt;Thrust 1.10.0との互換性を修正&lt;/li&gt;
&lt;li&gt;以下のC++03 Boostコンポーネントを削除:&lt;ul&gt;
&lt;li&gt;Array&lt;/li&gt;
&lt;li&gt;Bind  &lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Static_assert&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/152&#34; target=&#34;_blank&#34;&gt;GitHub #152&lt;/a&gt; &lt;code&gt;boost::pfr::get_name&lt;/code&gt;は、一部のコンパイラでローカル型で動作するようになった&lt;ul&gt;
&lt;li&gt;PRをしてくれた&lt;a href=&#34;https://github.com/schaumb&#34; target=&#34;_blank&#34;&gt;Bela Schaum&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; 未使用の実装の詳細を削除しました。PRをしてくれた&lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;Denis Mikhailov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; &lt;code&gt;boost::pfr::structure_to_tuple&lt;/code&gt;から例外を送出できるようになった。バグ報告をしてくれた&lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;Denis Mikhailov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;フィールド・リフレクションのトリックがドキュメントに記述された。&lt;a href=&#34;https://github.com/boostorg/pfr/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;の議論に参加してくれた全ての人に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#random&#34; id=&#34;random&#34;&gt;Random&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/random/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; splitmix64擬似乱数生成器を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03はサポートされなくなった。C++11コンパイラが必要となる&lt;ul&gt;
&lt;li&gt;これにはGCC 4.8以降、およびMSVC 14.0 (VS 2015) 以降が含まれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非推奨のヘッダー &lt;code&gt;boost/system/cygwin_error.hpp&lt;/code&gt; を削除&lt;/li&gt;
&lt;li&gt;旧式のMinGW (32ビット) はサポートされなくなった。MinGW-w64 (64ビットと32ビット) はサポート対象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;void&amp;gt;&lt;/code&gt;で&lt;code&gt;operator&amp;amp;&lt;/code&gt;が使用可能になった (&lt;code&gt;nullary&lt;/code&gt;関数を介して)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&lt;/code&gt;に&lt;code&gt;operator|=&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下は指定された内容の日本語訳です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;大きな新機能: 任意の例外からのスタックトレース&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一部のPOSIXプラットフォームで、&lt;code&gt;std::stacktrace::from_current_exception()&lt;/code&gt;が現在の例外オブジェクトのスタックトレースを返すようになった。これは、例外が送出された時点でスタックトレースがキャプチャされたかのように動作する。この機能のプロトタイプを&lt;code&gt;libsfe&lt;/code&gt;で作成してくれたAndrei Nekrashevich氏に感謝します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost_stacktrace_windbg&lt;/code&gt;でのWindows上のメモリ消費を修正した。問題を報告してくれた&lt;a href=&#34;https://github.com/ycyclop&#34; target=&#34;_blank&#34;&gt;ycyclop&lt;/a&gt;氏、詳細を提供してくれた&lt;a href=&#34;https://github.com/correa&#34; target=&#34;_blank&#34;&gt;Thiago A. Correa&lt;/a&gt;氏、可能な修正を提供してくれた&lt;a href=&#34;https://github.com/akarpovskii&#34; target=&#34;_blank&#34;&gt;Andrei Karpovskii&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;non hidden visibilityでのライブラリビルドを修正。報告と修正方法の情報を提供してくれた&lt;a href=&#34;https://github.com/JBouwer&#34; target=&#34;_blank&#34;&gt;Jan Bouwer&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; ドキュメントに非同期シグナル安全に関する独立したセクションを追加。問題を指摘してくれた&lt;a href=&#34;https://github.com/tworonix&#34; target=&#34;_blank&#34;&gt;tworonix&lt;/a&gt;氏と、問題に関する情報を提供してくれた&lt;a href=&#34;https://github.com/itrofimow&#34; target=&#34;_blank&#34;&gt;itrofimow&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stl_interfaces&#34; id=&#34;stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降、&lt;code&gt;iterator_interface&lt;/code&gt;の入力イテレータの動作を変更し、C++20のコンセプトにより密接に従うようにした&lt;/li&gt;
&lt;li&gt;コンセプトが異なる制約で再定義されているというエラーを修正するため、&lt;code&gt;iterator_interface&lt;/code&gt;からHidden Friendsを削除&lt;/li&gt;
&lt;li&gt;CRTPの代わりに deducing this に基づいた新しい &lt;code&gt;iterator_interface&lt;/code&gt; を含む新しい &lt;code&gt;v3&lt;/code&gt; インライン名前空間を追加（C++23以降）&lt;/li&gt;
&lt;li&gt;一時オブジェクトのダングリングを防ぐために、&lt;code&gt;closure::operator()&lt;/code&gt;の右辺値修飾オーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/406&#34; target=&#34;_blank&#34;&gt;GitHub #406&lt;/a&gt; ライブラリ固有の &lt;code&gt;_NO_LIB&lt;/code&gt; マクロを考慮するようにした&lt;/li&gt;
&lt;li&gt;意図的に到達不能なコードの &lt;code&gt;__builtin\_unreachable()&lt;/code&gt; で MSVC C4702 を抑制するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/411&#34; target=&#34;_blank&#34;&gt;GitHub #411&lt;/a&gt; &lt;code&gt;boost::function&lt;/code&gt; のストリーミングエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value_type&lt;/code&gt; または &lt;code&gt;init_type&lt;/code&gt;（該当する場合）の引数に対して &lt;code&gt;emplace()&lt;/code&gt; を最適化し、中間オブジェクトの作成を回避するようにした。引数はすでに中間オブジェクトと同じ型になっている&lt;/li&gt;
&lt;li&gt;マップコンテナの &lt;code&gt;k,v&lt;/code&gt; 引数に対して &lt;code&gt;emplace()&lt;/code&gt; を最適化し、要素を挿入すべきであることが確実になるまでオブジェクトの構築を遅延させるようにした。この最適化は、マップの &lt;code&gt;key_type&lt;/code&gt; がムーブ構築可能であるか、&lt;code&gt;k&lt;/code&gt; 引数が &lt;code&gt;key_type&lt;/code&gt; である場合に行われる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt; &lt;code&gt;explicit&lt;/code&gt;なコピーコンストラクタを持つアロケータのサポートを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;unordered_multimap::find(k, hash, eq)&lt;/code&gt; の &lt;code&gt;const&lt;/code&gt; バージョンのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11より前のマクロとワークアラウンドをさらに削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt;: 出力されたpragmaが改行で終了していない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt;: &lt;code&gt;BOOST_WAVE_BSIZE&lt;/code&gt;境界でfillが呼び出されたときにYYMARKERが更新されない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2の&lt;a href=&#34;https://www.boost.org/doc/libs/release/tools/build/doc/html/index.html#b2.history&#34; target=&#34;_blank&#34;&gt;バージョン5.1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.85.0リリースノート -- 1.85 : Asioを追加</title>
      <link href="https://boostjp.github.io/document/version/1_85_0.html"/>
      <id>dcea9c7287e06cff4cbf5fa2571b7ac948918b75:document/version/1_85_0.md</id>
      <updated>2024-04-16T11:30:13+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.85.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_xx_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_xx_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_xx_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_xx_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/charconv&#34; target=&#34;_blank&#34;&gt;CharConv&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11での&lt;code&gt;&amp;lt;charconv&amp;gt;&lt;/code&gt;の高品質な実装 (作者Matt Borland氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/scope&#34; target=&#34;_blank&#34;&gt;Scope&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Scope Guardユーティリティと&lt;code&gt;unique_resource&lt;/code&gt;ラッパーのコレクション (作者Andrey Semashev氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#msm&#34;&gt;MSM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multi_index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#random&#34;&gt;Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;左辺値修飾された完了シグネチャを正しく処理するために、&lt;code&gt;async_result&lt;/code&gt;プライマリテンプレートのコンセプトチェックを修正&lt;/li&gt;
&lt;li&gt;完了トークンアダプタ&lt;code&gt;bind_allocator&lt;/code&gt;、&lt;code&gt;bind_executor&lt;/code&gt;、&lt;code&gt;bind_immediate_executor&lt;/code&gt;、&lt;code&gt;bind_cancellation_slot&lt;/code&gt;を使用して互いをアダプトさせる際に発生する可能性があるいくつかのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::ranged_parallel_group&lt;/code&gt;操作を変更し、完了ハンドラを呼び出す際に&lt;code&gt;completion_order&lt;/code&gt; vectorをムーブするようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ip::basic_resolver_query&lt;/code&gt;、&lt;code&gt;io_context::strand&lt;/code&gt;、&lt;code&gt;coroutine&lt;/code&gt;で非推奨の暗黙のコピーコンストラクタに関する警告を修正&lt;/li&gt;
&lt;li&gt;Winsockの初期化に使用されるバージョン指定を更新&lt;/li&gt;
&lt;li&gt;キャンセルによって発生した例外を完了ハンドラに正しく伝播するように&lt;code&gt;co_spawn&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt;の内部ストレージにおける未定義の動作を修正するために、&lt;code&gt;std::launder&lt;/code&gt;の呼び出しを追加&lt;/li&gt;
&lt;li&gt;Windowsのファイルサポートの実装において、&lt;code&gt;file_base::append&lt;/code&gt;フラグの処理が欠落していたのを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ioctl&lt;/code&gt;の呼び出しが失敗した場合、ソケットとディスクリプタの実装を更新し、&lt;code&gt;fcntl&lt;/code&gt;にフォールバックするケースを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/asio/experimental/parallel_group.hpp&lt;/code&gt;ヘッダが自己完結するように修正&lt;/li&gt;
&lt;li&gt;channelと&lt;code&gt;experimental::coro&lt;/code&gt;が同じ翻訳単位で使用された場合に発生していたコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;ドキュメントに欠落していたCancellationSlotの型要件を追加&lt;/li&gt;
&lt;li&gt;非同期操作の開始関数の推定戻り値型に対するドキュメントのハイパーリンクを修正&lt;/li&gt;
&lt;li&gt;その他の小さなドキュメント更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/pull/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; RISC-Vで&lt;code&gt;pause&lt;/code&gt;命令のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;API変更&lt;ul&gt;
&lt;li&gt;ステータスコードのリストを、IANAレジストリに準拠するよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_cat.hpp&lt;/code&gt; での到達不能コードの警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocker_server_awaitable&lt;/code&gt; サンプルコードの接続エラー処理を修正&lt;/li&gt;
&lt;li&gt;高度なサーバーのサンプルコードにおける &lt;code&gt;async_write&lt;/code&gt; の並行呼び出しを修正&lt;/li&gt;
&lt;li&gt;zlib 名が minizip と競合する問題を修正&lt;/li&gt;
&lt;li&gt;ホスト文字列が &lt;code&gt;SSL_set_tlsext_host_name()&lt;/code&gt; 呼び出しのあとに更新されるべきであった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asio::associator&lt;/code&gt; の &lt;code&gt;bind_wrapper&lt;/code&gt; と &lt;code&gt;bind_front_wrapper&lt;/code&gt; 向け特殊化を追加&lt;/li&gt;
&lt;li&gt;error categoryのmessage関数に、アロケータを指定しないオーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメント&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http::message::prepare_payload()&lt;/code&gt; は、必要がなければ呼び出さなくてよいと規定した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_stream::expires_after()&lt;/code&gt; の影響を受ける操作を記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;teardown()&lt;/code&gt; と &lt;code&gt;async_teardown()&lt;/code&gt; はカスタマイズポイントであることを記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::serializer&lt;/code&gt; の最初の使用後にムーブまたはコピーすることは未定義動作であることを記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WebSocket::permessage_deflate&lt;/code&gt; は WebSocket ハンドシェイクを行う前に設定すべきであることを記載&lt;/li&gt;
&lt;li&gt;http read 操作の &lt;code&gt;bytes_transferred&lt;/code&gt; は HTTP パーサーが消費したバイト数を報告することを記載&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Emile Cormier, JohannesWilde, yhzx233&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bimap&#34; id=&#34;bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/bimap/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; &lt;code&gt;bimap&lt;/code&gt;内で使用するサブコンテナ (&lt;code&gt;set_of&lt;/code&gt;や&lt;code&gt;unordered_set_of&lt;/code&gt;) の異種混合ルックアップ (heterogeneous lookup) を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了。C++11コンパイラを要求するようになった&lt;ul&gt;
&lt;li&gt;GCCは4.7以降、MSVCは12.0 (VS 2013) 以降&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/conversion/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt; ライブラリの一部ではなくなった&lt;code&gt;boost::lexical_cast&lt;/code&gt;関連の古い記述を削除 (&lt;a href=&#34;https://github.com/eoan-ermine&#34; target=&#34;_blank&#34;&gt;Danil Sidoruk&lt;/a&gt;氏のPRに感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;生の関数を関数オブジェクトクラスでラップするための&lt;code&gt;functor&lt;/code&gt;クラステンプレートを持つ新しい&lt;code&gt;boost/core/functor.hpp&lt;/code&gt;ヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;null_deleter&lt;/code&gt;、&lt;code&gt;fclose_deleter&lt;/code&gt;、チェックされたデリーター定義を変更し、引数依存の名前探索 (ADL) で名前空間&lt;code&gt;boost&lt;/code&gt;が持ち込まれないようにした。ユーザーは、呼び出される関数の名前空間を明示的に修飾するか、&lt;code&gt;using&lt;/code&gt;宣言を追加する必要があるかもしれない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path::generic_path&lt;/code&gt;と&lt;code&gt;path::generic_string&lt;/code&gt;メソッドは、返されるパスの中の重複したディレクトリセパレータを削除するようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;code&gt;path::generic_path&lt;/code&gt;、&lt;code&gt;path::generic_string&lt;/code&gt;、&lt;code&gt;path::make_preferred&lt;/code&gt;、&lt;code&gt;path::lexically_normal&lt;/code&gt;は、パスのルート名におけるバックスラッシュとフォワードスラッシュの変換を避けるようになった。例として、Windows上で&lt;code&gt;path(&#34;\\\\\\\\?\\\\c:\\\\foo&#34;).generic_string()&lt;/code&gt;は、&lt;code&gt;&#34;//?/c:/foo&#34;&lt;/code&gt;の代わりに&lt;code&gt;&#34;\\\\\\\\?\\\\c:/foo&#34;&lt;/code&gt;を返すようになった。同様に、&lt;code&gt;path(&#34;\\\\\\\\host/share/foo/..&#34;).lexically_normal()&lt;/code&gt;は&lt;code&gt;&#34;\\\\\\\\host\\\\share&#34;を&lt;/code&gt;返すようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;code&gt;equivalent&lt;/code&gt;は、どちらかのパスが存在しない場合にエラーを示すようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/301&#34; target=&#34;_blank&#34;&gt;GitHub #301&lt;/a&gt; &lt;code&gt;absolute&lt;/code&gt;は、入力パスの&lt;code&gt;relative_path()&lt;/code&gt;が空の場合、末尾にディレクトリセパレータを持つパスを返すようになった&lt;/li&gt;
&lt;li&gt;デフォルトのパスモデルを使用して一意のパスを生成する&lt;code&gt;unique_path&lt;/code&gt;関数の、単一の&lt;code&gt;error_code&amp;amp; ec&lt;/code&gt;引数をとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/300&#34; target=&#34;_blank&#34;&gt;GitHub #300&lt;/a&gt; &lt;code&gt;weakly_canonical&lt;/code&gt;は、入力パスが相対パスであり、ファイルシステムに存在する要素を含まない場合、絶対パスを生成するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/179&#34; target=&#34;_blank&#34;&gt;GitHub #179&lt;/a&gt; &lt;code&gt;copy_file&lt;/code&gt;と&lt;code&gt;copy&lt;/code&gt;操作に、新しい&lt;code&gt;copy_options::ignore_attribute_errors&lt;/code&gt;オプションを追加。この新しいオプションにより、ファイル属性のコピー中に発生する可能性のあるエラーを無視できる&lt;/li&gt;
&lt;li&gt;Linuxでは、&lt;code&gt;sendfile&lt;/code&gt;と&lt;code&gt;copy_file_range&lt;/code&gt;システムコールに基づく&lt;code&gt;copy_file&lt;/code&gt;バックエンドが、ターゲットファイルのストレージを事前に割り当てようとする。これにより、ファイルシステムの断片化が減少し、十分な空き容量がない場合に早期にエラーが示される。すべてのファイルシステムがこの機能をサポートしているわけではない。ストレージの事前割り当てがサポートされていない場合、ファイルのコピーは続行される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://pubs.opengroup.org/onlinepubs/9699919799/functions/fdopendir.html&#34; target=&#34;_blank&#34;&gt;fdopendir&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;openat&lt;/code&gt;、POSIX.1-2008で定義されている関連APIをサポートするPOSIXシステム、およびWindowsでは、&lt;code&gt;recursive_directory_iterator&lt;/code&gt;は、反復中にファイルのステータスを問い合わせ、ネストされたディレクトリを開くために、パスの代わりにファイル記述子/ハンドルを使用するようになった。これにより、ファイルシステムの同時変更に対するディレクトリ反復の回復力が向上する&lt;/li&gt;
&lt;li&gt;以前に非推奨として宣言されていたAPIを削除しました。とくに、&lt;code&gt;path&lt;/code&gt;と&lt;code&gt;recursive_directory_iterator&lt;/code&gt;のメンバ関数、&lt;code&gt;is_regular&lt;/code&gt;、&lt;code&gt;copy_directory&lt;/code&gt;、&lt;code&gt;symbolic_link_exists&lt;/code&gt;、&lt;code&gt;complete&lt;/code&gt;、&lt;code&gt;copy_option&lt;/code&gt;、&lt;code&gt;symlink_option&lt;/code&gt;、および&lt;code&gt;boost/filesystem/convenience.hpp&lt;/code&gt;と&lt;code&gt;boost/filesystem/path_traits.hpp&lt;/code&gt;ヘッダが削除された。削除されたコンポーネントの代替はドキュメントに記載されている&lt;/li&gt;
&lt;li&gt;コンテナ型（例として&lt;code&gt;std::vector&amp;lt;char&amp;gt;&lt;/code&gt;）からの&lt;code&gt;path&lt;/code&gt;の構築、代入、追加のサポートは、デフォルトで無効になった。ユーザーは&lt;code&gt;BOOST_FILESYSTEM_DEPRECATED&lt;/code&gt;を定義することで、この機能を有効にすることができる。この機能は非推奨のままであり、将来のリリースで完全に削除される予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了。C++11コンパイラを要求するようになった&lt;ul&gt;
&lt;li&gt;GCCは4.7以降、MSVCは12.0 (VS 2013) 以降&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1247&#34; target=&#34;_blank&#34;&gt;GitHub #1247&lt;/a&gt; &lt;code&gt;condition&lt;/code&gt; マクロの代わりに &lt;code&gt;if constexpr&lt;/code&gt; マクロを使用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1242&#34; target=&#34;_blank&#34;&gt;GitHub #1242&lt;/a&gt; sideで並べ替えるためのstrategyを渡すようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1234&#34; target=&#34;_blank&#34;&gt;GitHub #1234&lt;/a&gt; clang/mac/darwin/arm64 用の CMake ファイルを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決した課題&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1231&#34; target=&#34;_blank&#34;&gt;GitHub #1231&lt;/a&gt;、&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1244&#34; target=&#34;_blank&#34;&gt;GitHub #1244&lt;/a&gt; 反時計回りのポリゴンに対する不正な集合操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1259&#34; target=&#34;_blank&#34;&gt;GitHub #1259&lt;/a&gt; CUDA NVCC コンパイラでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1250&#34; target=&#34;_blank&#34;&gt;GitHub #1250&lt;/a&gt; linestringのバッファが不正なinner polygonを返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1230&#34; target=&#34;_blank&#34;&gt;GitHub #1230&lt;/a&gt; union操作がpointに悪影響 (perturbing) し、間違った結果を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1229&#34; target=&#34;_blank&#34;&gt;GitHub #1229&lt;/a&gt; union操作が自己交差を生成する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1248&#34; target=&#34;_blank&#34;&gt;GitHub #1248&lt;/a&gt; 閉じたクラスタ内の交点を非横断可能に設定することでバッファの問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1246&#34; target=&#34;_blank&#34;&gt;GitHub #1246&lt;/a&gt; コンバーターおよび &lt;code&gt;is_base_of&lt;/code&gt; のコンパイルを修正&lt;/li&gt;
&lt;li&gt;さまざまなエラーと警告の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを非推奨化。将来のリリースから削除される予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;エンディアンを扱うためにBoost.Endianを使用するようになった&lt;/li&gt;
&lt;li&gt;Boost.SystemとBoost.Containerコンポーネントへのエイリアスは非推奨となり、1.87.0で完全に削除される予定&lt;/li&gt;
&lt;li&gt;記述されたクラスへの変換がプライベートメンバをサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visit&lt;/code&gt;に右辺値参照のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;のような型 (path-like types) への変換サポートを追加&lt;/li&gt;
&lt;li&gt;記述されたクラスへのparseが継承したメンバを正しく考慮するようになった&lt;/li&gt;
&lt;li&gt;自己参照するシーケンスの変換を無効化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visit&lt;/code&gt;の参照ハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#leaf&#34; id=&#34;leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;スレッド間でエラーオブジェクトと例外を転送するための新たなAPI: &lt;code&gt;try_capture_all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;try_capture_all&lt;/code&gt;を介してキャプチャされた例外を&lt;code&gt;result&amp;lt;T&amp;gt;&lt;/code&gt;が転送できるようになった&lt;/li&gt;
&lt;li&gt;動的にキャプチャされたエラーオブジェクトを&lt;code&gt;result&amp;lt;T&amp;gt;&lt;/code&gt;が改善された効率で転送できるようになった&lt;/li&gt;
&lt;li&gt;古い&lt;code&gt;make_shared_context&lt;/code&gt;/&lt;code&gt;capture&lt;/code&gt; APIは非推奨となり、次のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;例外で動的にキャプチャされたエラーオブジェクトを転送するサポートを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#lexical_cast&#34; id=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最適化されたストリームとC++標準ライブラリIOベースのストリームを分離するための内部ロジックの大幅な書き換え:&lt;ul&gt;
&lt;li&gt;C++標準ライブラリベースのストリームは、より良いパフォーマンスを実現するために、より少ないケースで構築されるようになった&lt;/li&gt;
&lt;li&gt;テンプレートのインスタンス化を減らし、コードがシンプルになった&lt;/li&gt;
&lt;li&gt;常に&lt;code&gt;std::char_traits&lt;/code&gt;を使用するようにした (入力/出力型からカスタムトレイトを使用しないようにした。リンク時または実行時エラーの原因になるため)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 前方宣言された&lt;code&gt;boost::array&lt;/code&gt;の誤用を修正 (報告をしてくれた&lt;a href=&#34;https://github.com/13steinj&#34; target=&#34;_blank&#34;&gt;13steinj&lt;/a&gt;氏に感謝！)&lt;/li&gt;
&lt;li&gt;C++標準ライブラリの傾向に従い、&lt;code&gt;volatile&lt;/code&gt;入力型のサポートを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; &lt;code&gt;std::basic_string_view&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;からの変換を最適化&lt;/li&gt;
&lt;li&gt;Boost.NumericConversionとBoost.MPLへの依存関係を削除。浮動小数点型から算術型への一部の変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; このライブラリが、&lt;code&gt;-fno-sanitize-recover=integer&lt;/code&gt;オプションをつけてもコンパイルおよび動作するようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20モードで&lt;code&gt;char8_t&lt;/code&gt;の型情報が欠落していたことによるリンカーの問題を修正&lt;/li&gt;
&lt;li&gt;バンドルされたIConvを使用する際のIConvコンパイルフラグを修正&lt;/li&gt;
&lt;li&gt;ドキュメント化されているように、&lt;code&gt;collator&lt;/code&gt;はコンストラクタで例外を投げるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/216&#34; target=&#34;_blank&#34;&gt;GitHub #216&lt;/a&gt; 現在のバックエンドで利用できない場合の型の混同を避けるため、&lt;code&gt;collator&lt;/code&gt;は&lt;code&gt;std::collator&lt;/code&gt;を継承しなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/218&#34; target=&#34;_blank&#34;&gt;GitHub #218&lt;/a&gt; 無限ループを回避するため、不正なIConvライブラリ (一部のMacOSバージョンなど) が検出された場合に例外を投げるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/issues/221&#34; target=&#34;_blank&#34;&gt;GitHub #221&lt;/a&gt; &lt;code&gt;date_time&lt;/code&gt;の分解能がミリ秒単位だと混乱が起きていたため、秒に変更&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい最適化アルゴリズムのコレクションが追加されました:&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1062&#34; target=&#34;_blank&#34;&gt;GitHub #1062&lt;/a&gt; 差分進化 (Differential Evolution)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1065&#34; target=&#34;_blank&#34;&gt;GitHub #1065&lt;/a&gt; JSO&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1071&#34; target=&#34;_blank&#34;&gt;GitHub #1071&lt;/a&gt; ランダム探索&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1074&#34; target=&#34;_blank&#34;&gt;GitHub #1074&lt;/a&gt; CMA-ES&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NCF生存関数 (NCF survival function) における0による割り算の警告を修正&lt;/li&gt;
&lt;li&gt;ccmath::floor/ceilの大きな引数に対する&lt;code&gt;constexpr&lt;/code&gt;深さの制限を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quartic_roots&lt;/code&gt;の精度を改善&lt;/li&gt;
&lt;li&gt;libstdc++14のcstdfloatのnumeric limits検出マクロを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1060&#34; target=&#34;_blank&#34;&gt;GitHub #1060&lt;/a&gt; C++14を使用する際にMSVC UCRTがcomplex.hで&lt;code&gt;_Complex_I&lt;/code&gt;を定義する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1066&#34; target=&#34;_blank&#34;&gt;GitHub #1066&lt;/a&gt; cstdfloat iostreamを改善&lt;/li&gt;
&lt;li&gt;スタンドアロンモードではない環境でスタンドアロンモードを使用する際のBoost.Configマクロの再定義を修正&lt;/li&gt;
&lt;li&gt;コードカバレッジを大幅に改善し、関連するバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#msm&#34; id=&#34;msm&#34;&gt;MSM&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下は、指定された内容を日本語に翻訳したものです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt; バックエンドを更新 (back11)。C++11が必要となる。ドキュメントではこれがデフォルトとなった&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大きな新機能&lt;/strong&gt; 新しいフロントエンド (PlantUML) を追加。C++20が必要となる&lt;/li&gt;
&lt;li&gt;様々なバグ修正 (コンパイルエラーと警告、遅延イベントの優先度)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multi_index&#34; id=&#34;multi_index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/575&#34; target=&#34;_blank&#34;&gt;GitHub #575&lt;/a&gt; C++23 &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt;から発生する非推奨警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/577&#34; target=&#34;_blank&#34;&gt;GitHub #577&lt;/a&gt; 小さなビット数に対する&lt;code&gt;cpp_bin_float&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/580&#34; target=&#34;_blank&#34;&gt;GitHub #580&lt;/a&gt; &lt;code&gt;-Wpessimizing-move&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;covecovの実行を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/585&#34; target=&#34;_blank&#34;&gt;GitHub #585&lt;/a&gt; &lt;code&gt;cpp_dec_float&lt;/code&gt;乗算での切り捨てを減らすよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/597&#34; target=&#34;_blank&#34;&gt;GitHub #597&lt;/a&gt; 精度要件を満たすよう&lt;code&gt;complex_adaptor&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/603&#34; target=&#34;_blank&#34;&gt;GitHub #603&lt;/a&gt; tommathの破壊的変更に対する修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/608&#34; target=&#34;_blank&#34;&gt;GitHub #608&lt;/a&gt; 数値に変換可能な型が算術演算子オーバーロードに参加できるように修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;: Boost.MySQLでは、新たにコンパイルされたBoost.Charconvライブラリへのリンクが必要になった&lt;ul&gt;
&lt;li&gt;これは、ロケール依存の問題を解決し、効率を向上させ、新しいクライアント側SQLフォーマット機能を提供する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接続プールの実験的サポートを追加。これにより、セッションを再利用でき、組み込みの再接続とエラー処理が提供される&lt;/li&gt;
&lt;li&gt;型消去された接続 (&lt;code&gt;any_connection&lt;/code&gt;クラス) の実験的サポートを追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;any_connection&lt;/code&gt;はテンプレートではなく、より簡単な接続の確立と再接続のセマンティクスを特徴としている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;クライアント側SQLフォーマット関数 (&lt;code&gt;format_sql&lt;/code&gt;と&lt;code&gt;format_sql_to&lt;/code&gt;) の実験的サポートを追加&lt;ul&gt;
&lt;li&gt;これにより、クライアント側で安全にクエリを構成できるため、バッチインサートや動的フィルタ、PATCH-like updateなどのパターンが可能になる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;close_statement&lt;/code&gt;と&lt;code&gt;async_close_statement&lt;/code&gt;での、アプリケーションコードに大幅な遅延を引き起こす可能性のあるパフォーマンスの問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT&lt;/code&gt;を使用したビルドのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の実行インターフェース (&lt;code&gt;connection::query&lt;/code&gt;、&lt;code&gt;connection::start_query&lt;/code&gt;、&lt;code&gt;connection::execute_statement&lt;/code&gt;、&lt;code&gt;connection::start_statement_execution&lt;/code&gt;とそれらの非同期対応版) は、Boost 1.86で削除が予定されているため、警告が発生するようになった&lt;/li&gt;
&lt;li&gt;一部のエラーメッセージが切り捨てられるバグを修正&lt;/li&gt;
&lt;li&gt;警告を整理。&lt;code&gt;-Wall&lt;/code&gt;と&lt;code&gt;-Wextra&lt;/code&gt;を使用したビルドで警告は発生しなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field_view&lt;/code&gt;のすべてのコンストラクタを安定化&lt;/li&gt;
&lt;li&gt;ライブラリ内部をsans-ioアプローチで書き換え、複雑さが減った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#odeint&#34; id=&#34;odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;: このライブラリは、Boost.Mathをインクルードすることによる暗黙の要件ではなく、明示的にC++14を要求するようになった&lt;/li&gt;
&lt;li&gt;Thrust 1.10.0との互換性を修正&lt;/li&gt;
&lt;li&gt;以下のC++03 Boostコンポーネントを削除:&lt;ul&gt;
&lt;li&gt;Array&lt;/li&gt;
&lt;li&gt;Bind  &lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Static_assert&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/152&#34; target=&#34;_blank&#34;&gt;GitHub #152&lt;/a&gt; &lt;code&gt;boost::pfr::get_name&lt;/code&gt;は、一部のコンパイラでローカル型で動作するようになった&lt;ul&gt;
&lt;li&gt;PRをしてくれた&lt;a href=&#34;https://github.com/schaumb&#34; target=&#34;_blank&#34;&gt;Bela Schaum&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; 未使用の実装の詳細を削除しました。PRをしてくれた&lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;Denis Mikhailov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; &lt;code&gt;boost::pfr::structure_to_tuple&lt;/code&gt;から例外を送出できるようになった。バグ報告をしてくれた&lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;Denis Mikhailov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;フィールド・リフレクションのトリックがドキュメントに記述された。&lt;a href=&#34;https://github.com/boostorg/pfr/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;の議論に参加してくれた全ての人に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#random&#34; id=&#34;random&#34;&gt;Random&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/random/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; splitmix64擬似乱数生成器を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03はサポートされなくなった。C++11コンパイラが必要となる&lt;ul&gt;
&lt;li&gt;これにはGCC 4.8以降、およびMSVC 14.0 (VS 2015) 以降が含まれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非推奨のヘッダー &lt;code&gt;boost/system/cygwin_error.hpp&lt;/code&gt; を削除&lt;/li&gt;
&lt;li&gt;旧式のMinGW (32ビット) はサポートされなくなった。MinGW-w64 (64ビットと32ビット) はサポート対象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;void&amp;gt;&lt;/code&gt;で&lt;code&gt;operator&amp;amp;&lt;/code&gt;が使用可能になった (&lt;code&gt;nullary&lt;/code&gt;関数を介して)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&lt;/code&gt;に&lt;code&gt;operator|=&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下は指定された内容の日本語訳です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;大きな新機能: 任意の例外からのスタックトレース&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一部のPOSIXプラットフォームで、&lt;code&gt;std::stacktrace::from_current_exception()&lt;/code&gt;が現在の例外オブジェクトのスタックトレースを返すようになった。これは、例外が送出された時点でスタックトレースがキャプチャされたかのように動作する。この機能のプロトタイプを&lt;code&gt;libsfe&lt;/code&gt;で作成してくれたAndrei Nekrashevich氏に感謝します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost_stacktrace_windbg&lt;/code&gt;でのWindows上のメモリ消費を修正した。問題を報告してくれた&lt;a href=&#34;https://github.com/ycyclop&#34; target=&#34;_blank&#34;&gt;ycyclop&lt;/a&gt;氏、詳細を提供してくれた&lt;a href=&#34;https://github.com/correa&#34; target=&#34;_blank&#34;&gt;Thiago A. Correa&lt;/a&gt;氏、可能な修正を提供してくれた&lt;a href=&#34;https://github.com/akarpovskii&#34; target=&#34;_blank&#34;&gt;Andrei Karpovskii&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;non hidden visibilityでのライブラリビルドを修正。報告と修正方法の情報を提供してくれた&lt;a href=&#34;https://github.com/JBouwer&#34; target=&#34;_blank&#34;&gt;Jan Bouwer&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; ドキュメントに非同期シグナル安全に関する独立したセクションを追加。問題を指摘してくれた&lt;a href=&#34;https://github.com/tworonix&#34; target=&#34;_blank&#34;&gt;tworonix&lt;/a&gt;氏と、問題に関する情報を提供してくれた&lt;a href=&#34;https://github.com/itrofimow&#34; target=&#34;_blank&#34;&gt;itrofimow&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stl_interfaces&#34; id=&#34;stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降、&lt;code&gt;iterator_interface&lt;/code&gt;の入力イテレータの動作を変更し、C++20のコンセプトにより密接に従うようにした&lt;/li&gt;
&lt;li&gt;コンセプトが異なる制約で再定義されているというエラーを修正するため、&lt;code&gt;iterator_interface&lt;/code&gt;からHidden Friendsを削除&lt;/li&gt;
&lt;li&gt;CRTPの代わりに deducing this に基づいた新しい &lt;code&gt;iterator_interface&lt;/code&gt; を含む新しい &lt;code&gt;v3&lt;/code&gt; インライン名前空間を追加（C++23以降）&lt;/li&gt;
&lt;li&gt;一時オブジェクトのダングリングを防ぐために、&lt;code&gt;closure::operator()&lt;/code&gt;の右辺値修飾オーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/406&#34; target=&#34;_blank&#34;&gt;GitHub #406&lt;/a&gt; ライブラリ固有の &lt;code&gt;_NO_LIB&lt;/code&gt; マクロを考慮するようにした&lt;/li&gt;
&lt;li&gt;意図的に到達不能なコードの &lt;code&gt;__builtin\_unreachable()&lt;/code&gt; で MSVC C4702 を抑制するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/411&#34; target=&#34;_blank&#34;&gt;GitHub #411&lt;/a&gt; &lt;code&gt;boost::function&lt;/code&gt; のストリーミングエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value_type&lt;/code&gt; または &lt;code&gt;init_type&lt;/code&gt;（該当する場合）の引数に対して &lt;code&gt;emplace()&lt;/code&gt; を最適化し、中間オブジェクトの作成を回避するようにした。引数はすでに中間オブジェクトと同じ型になっている&lt;/li&gt;
&lt;li&gt;マップコンテナの &lt;code&gt;k,v&lt;/code&gt; 引数に対して &lt;code&gt;emplace()&lt;/code&gt; を最適化し、要素を挿入すべきであることが確実になるまでオブジェクトの構築を遅延させるようにした。この最適化は、マップの &lt;code&gt;key_type&lt;/code&gt; がムーブ構築可能であるか、&lt;code&gt;k&lt;/code&gt; 引数が &lt;code&gt;key_type&lt;/code&gt; である場合に行われる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt; &lt;code&gt;explicit&lt;/code&gt;なコピーコンストラクタを持つアロケータのサポートを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;unordered_multimap::find(k, hash, eq)&lt;/code&gt; の &lt;code&gt;const&lt;/code&gt; バージョンのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11より前のマクロとワークアラウンドをさらに削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt;: 出力されたpragmaが改行で終了していない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt;: &lt;code&gt;BOOST_WAVE_BSIZE&lt;/code&gt;境界でfillが呼び出されたときにYYMARKERが更新されない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2の&lt;a href=&#34;https://www.boost.org/doc/libs/release/tools/build/doc/html/index.html#b2.history&#34; target=&#34;_blank&#34;&gt;バージョン5.1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.85.0リリースノート -- 1.85.0 : Atomic, Core, Filesystem, Iteratorを追加</title>
      <link href="https://boostjp.github.io/document/version/1_85_0.html"/>
      <id>558fa8aee474aca4b8a95788ca26d2c6d528ca6f:document/version/1_85_0.md</id>
      <updated>2024-04-06T12:57:59+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.85.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_xx_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_xx_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_xx_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_xx_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/charconv&#34; target=&#34;_blank&#34;&gt;CharConv&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11での&lt;code&gt;&amp;lt;charconv&amp;gt;&lt;/code&gt;の高品質な実装 (作者Matt Borland氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/scope&#34; target=&#34;_blank&#34;&gt;Scope&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Scope Guardユーティリティと&lt;code&gt;unique_resource&lt;/code&gt;ラッパーのコレクション (作者Andrey Semashev氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#msm&#34;&gt;MSM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multi_index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#random&#34;&gt;Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/pull/65&#34; target=&#34;_blank&#34;&gt;GitHub #65&lt;/a&gt; RISC-Vで&lt;code&gt;pause&lt;/code&gt;命令のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;API変更&lt;ul&gt;
&lt;li&gt;ステータスコードのリストを、IANAレジストリに準拠するよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_cat.hpp&lt;/code&gt; での到達不能コードの警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocker_server_awaitable&lt;/code&gt; サンプルコードの接続エラー処理を修正&lt;/li&gt;
&lt;li&gt;高度なサーバーのサンプルコードにおける &lt;code&gt;async_write&lt;/code&gt; の並行呼び出しを修正&lt;/li&gt;
&lt;li&gt;zlib 名が minizip と競合する問題を修正&lt;/li&gt;
&lt;li&gt;ホスト文字列が &lt;code&gt;SSL_set_tlsext_host_name()&lt;/code&gt; 呼び出しのあとに更新されるべきであった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asio::associator&lt;/code&gt; の &lt;code&gt;bind_wrapper&lt;/code&gt; と &lt;code&gt;bind_front_wrapper&lt;/code&gt; 向け特殊化を追加&lt;/li&gt;
&lt;li&gt;error categoryのmessage関数に、アロケータを指定しないオーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメント&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http::message::prepare_payload()&lt;/code&gt; は、必要がなければ呼び出さなくてよいと規定した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_stream::expires_after()&lt;/code&gt; の影響を受ける操作を記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;teardown()&lt;/code&gt; と &lt;code&gt;async_teardown()&lt;/code&gt; はカスタマイズポイントであることを記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::serializer&lt;/code&gt; の最初の使用後にムーブまたはコピーすることは未定義動作であることを記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WebSocket::permessage_deflate&lt;/code&gt; は WebSocket ハンドシェイクを行う前に設定すべきであることを記載&lt;/li&gt;
&lt;li&gt;http read 操作の &lt;code&gt;bytes_transferred&lt;/code&gt; は HTTP パーサーが消費したバイト数を報告することを記載&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Emile Cormier, JohannesWilde, yhzx233&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bimap&#34; id=&#34;bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/bimap/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; &lt;code&gt;bimap&lt;/code&gt;内で使用するサブコンテナ (&lt;code&gt;set_of&lt;/code&gt;や&lt;code&gt;unordered_set_of&lt;/code&gt;) の異種混合ルックアップ (heterogeneous lookup) を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了。C++11コンパイラを要求するようになった&lt;ul&gt;
&lt;li&gt;GCCは4.7以降、MSVCは12.0 (VS 2013) 以降&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/conversion/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt; ライブラリの一部ではなくなった&lt;code&gt;boost::lexical_cast&lt;/code&gt;関連の古い記述を削除 (&lt;a href=&#34;https://github.com/eoan-ermine&#34; target=&#34;_blank&#34;&gt;Danil Sidoruk&lt;/a&gt;氏のPRに感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;生の関数を関数オブジェクトクラスでラップするための&lt;code&gt;functor&lt;/code&gt;クラステンプレートを持つ新しい&lt;code&gt;boost/core/functor.hpp&lt;/code&gt;ヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;null_deleter&lt;/code&gt;、&lt;code&gt;fclose_deleter&lt;/code&gt;、チェックされたデリーター定義を変更し、引数依存の名前探索 (ADL) で名前空間&lt;code&gt;boost&lt;/code&gt;が持ち込まれないようにした。ユーザーは、呼び出される関数の名前空間を明示的に修飾するか、&lt;code&gt;using&lt;/code&gt;宣言を追加する必要があるかもしれない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path::generic_path&lt;/code&gt;と&lt;code&gt;path::generic_string&lt;/code&gt;メソッドは、返されるパスの中の重複したディレクトリセパレータを削除するようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;code&gt;path::generic_path&lt;/code&gt;、&lt;code&gt;path::generic_string&lt;/code&gt;、&lt;code&gt;path::make_preferred&lt;/code&gt;、&lt;code&gt;path::lexically_normal&lt;/code&gt;は、パスのルート名におけるバックスラッシュとフォワードスラッシュの変換を避けるようになった。例として、Windows上で&lt;code&gt;path(&#34;\\\\\\\\?\\\\c:\\\\foo&#34;).generic_string()&lt;/code&gt;は、&lt;code&gt;&#34;//?/c:/foo&#34;&lt;/code&gt;の代わりに&lt;code&gt;&#34;\\\\\\\\?\\\\c:/foo&#34;&lt;/code&gt;を返すようになった。同様に、&lt;code&gt;path(&#34;\\\\\\\\host/share/foo/..&#34;).lexically_normal()&lt;/code&gt;は&lt;code&gt;&#34;\\\\\\\\host\\\\share&#34;を&lt;/code&gt;返すようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;code&gt;equivalent&lt;/code&gt;は、どちらかのパスが存在しない場合にエラーを示すようになった&lt;/li&gt;
&lt;li&gt;[v4:] &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/301&#34; target=&#34;_blank&#34;&gt;GitHub #301&lt;/a&gt; &lt;code&gt;absolute&lt;/code&gt;は、入力パスの&lt;code&gt;relative_path()&lt;/code&gt;が空の場合、末尾にディレクトリセパレータを持つパスを返すようになった&lt;/li&gt;
&lt;li&gt;デフォルトのパスモデルを使用して一意のパスを生成する&lt;code&gt;unique_path&lt;/code&gt;関数の、単一の&lt;code&gt;error_code&amp;amp; ec&lt;/code&gt;引数をとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/300&#34; target=&#34;_blank&#34;&gt;GitHub #300&lt;/a&gt; &lt;code&gt;weakly_canonical&lt;/code&gt;は、入力パスが相対パスであり、ファイルシステムに存在する要素を含まない場合、絶対パスを生成するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/179&#34; target=&#34;_blank&#34;&gt;GitHub #179&lt;/a&gt; &lt;code&gt;copy_file&lt;/code&gt;と&lt;code&gt;copy&lt;/code&gt;操作に、新しい&lt;code&gt;copy_options::ignore_attribute_errors&lt;/code&gt;オプションを追加。この新しいオプションにより、ファイル属性のコピー中に発生する可能性のあるエラーを無視できる&lt;/li&gt;
&lt;li&gt;Linuxでは、&lt;code&gt;sendfile&lt;/code&gt;と&lt;code&gt;copy_file_range&lt;/code&gt;システムコールに基づく&lt;code&gt;copy_file&lt;/code&gt;バックエンドが、ターゲットファイルのストレージを事前に割り当てようとする。これにより、ファイルシステムの断片化が減少し、十分な空き容量がない場合に早期にエラーが示される。すべてのファイルシステムがこの機能をサポートしているわけではない。ストレージの事前割り当てがサポートされていない場合、ファイルのコピーは続行される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://pubs.opengroup.org/onlinepubs/9699919799/functions/fdopendir.html&#34; target=&#34;_blank&#34;&gt;fdopendir&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;openat&lt;/code&gt;、POSIX.1-2008で定義されている関連APIをサポートするPOSIXシステム、およびWindowsでは、&lt;code&gt;recursive_directory_iterator&lt;/code&gt;は、反復中にファイルのステータスを問い合わせ、ネストされたディレクトリを開くために、パスの代わりにファイル記述子/ハンドルを使用するようになった。これにより、ファイルシステムの同時変更に対するディレクトリ反復の回復力が向上する&lt;/li&gt;
&lt;li&gt;以前に非推奨として宣言されていたAPIを削除しました。とくに、&lt;code&gt;path&lt;/code&gt;と&lt;code&gt;recursive_directory_iterator&lt;/code&gt;のメンバ関数、&lt;code&gt;is_regular&lt;/code&gt;、&lt;code&gt;copy_directory&lt;/code&gt;、&lt;code&gt;symbolic_link_exists&lt;/code&gt;、&lt;code&gt;complete&lt;/code&gt;、&lt;code&gt;copy_option&lt;/code&gt;、&lt;code&gt;symlink_option&lt;/code&gt;、および&lt;code&gt;boost/filesystem/convenience.hpp&lt;/code&gt;と&lt;code&gt;boost/filesystem/path_traits.hpp&lt;/code&gt;ヘッダが削除された。削除されたコンポーネントの代替はドキュメントに記載されている&lt;/li&gt;
&lt;li&gt;コンテナ型（例として&lt;code&gt;std::vector&amp;lt;char&amp;gt;&lt;/code&gt;）からの&lt;code&gt;path&lt;/code&gt;の構築、代入、追加のサポートは、デフォルトで無効になった。ユーザーは&lt;code&gt;BOOST_FILESYSTEM_DEPRECATED&lt;/code&gt;を定義することで、この機能を有効にすることができる。この機能は非推奨のままであり、将来のリリースで完全に削除される予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了。C++11コンパイラを要求するようになった&lt;ul&gt;
&lt;li&gt;GCCは4.7以降、MSVCは12.0 (VS 2013) 以降&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1247&#34; target=&#34;_blank&#34;&gt;GitHub #1247&lt;/a&gt; &lt;code&gt;condition&lt;/code&gt; マクロの代わりに &lt;code&gt;if constexpr&lt;/code&gt; マクロを使用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1242&#34; target=&#34;_blank&#34;&gt;GitHub #1242&lt;/a&gt; sideで並べ替えるためのstrategyを渡すようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1234&#34; target=&#34;_blank&#34;&gt;GitHub #1234&lt;/a&gt; clang/mac/darwin/arm64 用の CMake ファイルを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決した課題&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1231&#34; target=&#34;_blank&#34;&gt;GitHub #1231&lt;/a&gt;、&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1244&#34; target=&#34;_blank&#34;&gt;GitHub #1244&lt;/a&gt; 反時計回りのポリゴンに対する不正な集合操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1259&#34; target=&#34;_blank&#34;&gt;GitHub #1259&lt;/a&gt; CUDA NVCC コンパイラでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1250&#34; target=&#34;_blank&#34;&gt;GitHub #1250&lt;/a&gt; linestringのバッファが不正なinner polygonを返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1230&#34; target=&#34;_blank&#34;&gt;GitHub #1230&lt;/a&gt; union操作がpointに悪影響 (perturbing) し、間違った結果を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1229&#34; target=&#34;_blank&#34;&gt;GitHub #1229&lt;/a&gt; union操作が自己交差を生成する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1248&#34; target=&#34;_blank&#34;&gt;GitHub #1248&lt;/a&gt; 閉じたクラスタ内の交点を非横断可能に設定することでバッファの問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1246&#34; target=&#34;_blank&#34;&gt;GitHub #1246&lt;/a&gt; コンバーターおよび &lt;code&gt;is_base_of&lt;/code&gt; のコンパイルを修正&lt;/li&gt;
&lt;li&gt;さまざまなエラーと警告の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを非推奨化。将来のリリースから削除される予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;エンディアンを扱うためにBoost.Endianを使用するようになった&lt;/li&gt;
&lt;li&gt;Boost.SystemとBoost.Containerコンポーネントへのエイリアスは非推奨となり、1.87.0で完全に削除される予定&lt;/li&gt;
&lt;li&gt;記述されたクラスへの変換がプライベートメンバをサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visit&lt;/code&gt;に右辺値参照のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;のような型 (path-like types) への変換サポートを追加&lt;/li&gt;
&lt;li&gt;記述されたクラスへのparseが継承したメンバを正しく考慮するようになった&lt;/li&gt;
&lt;li&gt;自己参照するシーケンスの変換を無効化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visit&lt;/code&gt;の参照ハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#leaf&#34; id=&#34;leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;スレッド間でエラーオブジェクトと例外を転送するための新たなAPI: &lt;code&gt;try_capture_all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;try_capture_all&lt;/code&gt;を介してキャプチャされた例外を&lt;code&gt;result&amp;lt;T&amp;gt;&lt;/code&gt;が転送できるようになった&lt;/li&gt;
&lt;li&gt;動的にキャプチャされたエラーオブジェクトを&lt;code&gt;result&amp;lt;T&amp;gt;&lt;/code&gt;が改善された効率で転送できるようになった&lt;/li&gt;
&lt;li&gt;古い&lt;code&gt;make_shared_context&lt;/code&gt;/&lt;code&gt;capture&lt;/code&gt; APIは非推奨となり、次のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;例外で動的にキャプチャされたエラーオブジェクトを転送するサポートを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#lexical_cast&#34; id=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最適化されたストリームとC++標準ライブラリIOベースのストリームを分離するための内部ロジックの大幅な書き換え:&lt;ul&gt;
&lt;li&gt;C++標準ライブラリベースのストリームは、より良いパフォーマンスを実現するために、より少ないケースで構築されるようになった&lt;/li&gt;
&lt;li&gt;テンプレートのインスタンス化を減らし、コードがシンプルになった&lt;/li&gt;
&lt;li&gt;常に&lt;code&gt;std::char_traits&lt;/code&gt;を使用するようにした (入力/出力型からカスタムトレイトを使用しないようにした。リンク時または実行時エラーの原因になるため)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 前方宣言された&lt;code&gt;boost::array&lt;/code&gt;の誤用を修正 (報告をしてくれた&lt;a href=&#34;https://github.com/13steinj&#34; target=&#34;_blank&#34;&gt;13steinj&lt;/a&gt;氏に感謝！)&lt;/li&gt;
&lt;li&gt;C++標準ライブラリの傾向に従い、&lt;code&gt;volatile&lt;/code&gt;入力型のサポートを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; &lt;code&gt;std::basic_string_view&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;からの変換を最適化&lt;/li&gt;
&lt;li&gt;Boost.NumericConversionとBoost.MPLへの依存関係を削除。浮動小数点型から算術型への一部の変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; このライブラリが、&lt;code&gt;-fno-sanitize-recover=integer&lt;/code&gt;オプションをつけてもコンパイルおよび動作するようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20モードで&lt;code&gt;char8_t&lt;/code&gt;の型情報が欠落していたことによるリンカーの問題を修正&lt;/li&gt;
&lt;li&gt;バンドルされたIConvを使用する際のIConvコンパイルフラグを修正&lt;/li&gt;
&lt;li&gt;ドキュメント化されているように、&lt;code&gt;collator&lt;/code&gt;はコンストラクタで例外を投げるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/216&#34; target=&#34;_blank&#34;&gt;GitHub #216&lt;/a&gt; 現在のバックエンドで利用できない場合の型の混同を避けるため、&lt;code&gt;collator&lt;/code&gt;は&lt;code&gt;std::collator&lt;/code&gt;を継承しなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/218&#34; target=&#34;_blank&#34;&gt;GitHub #218&lt;/a&gt; 無限ループを回避するため、不正なIConvライブラリ (一部のMacOSバージョンなど) が検出された場合に例外を投げるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/issues/221&#34; target=&#34;_blank&#34;&gt;GitHub #221&lt;/a&gt; &lt;code&gt;date_time&lt;/code&gt;の分解能がミリ秒単位だと混乱が起きていたため、秒に変更&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい最適化アルゴリズムのコレクションが追加されました:&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1062&#34; target=&#34;_blank&#34;&gt;GitHub #1062&lt;/a&gt; 差分進化 (Differential Evolution)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1065&#34; target=&#34;_blank&#34;&gt;GitHub #1065&lt;/a&gt; JSO&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1071&#34; target=&#34;_blank&#34;&gt;GitHub #1071&lt;/a&gt; ランダム探索&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1074&#34; target=&#34;_blank&#34;&gt;GitHub #1074&lt;/a&gt; CMA-ES&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NCF生存関数 (NCF survival function) における0による割り算の警告を修正&lt;/li&gt;
&lt;li&gt;ccmath::floor/ceilの大きな引数に対する&lt;code&gt;constexpr&lt;/code&gt;深さの制限を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quartic_roots&lt;/code&gt;の精度を改善&lt;/li&gt;
&lt;li&gt;libstdc++14のcstdfloatのnumeric limits検出マクロを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1060&#34; target=&#34;_blank&#34;&gt;GitHub #1060&lt;/a&gt; C++14を使用する際にMSVC UCRTがcomplex.hで&lt;code&gt;_Complex_I&lt;/code&gt;を定義する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1066&#34; target=&#34;_blank&#34;&gt;GitHub #1066&lt;/a&gt; cstdfloat iostreamを改善&lt;/li&gt;
&lt;li&gt;スタンドアロンモードではない環境でスタンドアロンモードを使用する際のBoost.Configマクロの再定義を修正&lt;/li&gt;
&lt;li&gt;コードカバレッジを大幅に改善し、関連するバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#msm&#34; id=&#34;msm&#34;&gt;MSM&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下は、指定された内容を日本語に翻訳したものです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt; バックエンドを更新 (back11)。C++11が必要となる。ドキュメントではこれがデフォルトとなった&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大きな新機能&lt;/strong&gt; 新しいフロントエンド (PlantUML) を追加。C++20が必要となる&lt;/li&gt;
&lt;li&gt;様々なバグ修正 (コンパイルエラーと警告、遅延イベントの優先度)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multi_index&#34; id=&#34;multi_index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/575&#34; target=&#34;_blank&#34;&gt;GitHub #575&lt;/a&gt; C++23 &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt;から発生する非推奨警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/577&#34; target=&#34;_blank&#34;&gt;GitHub #577&lt;/a&gt; 小さなビット数に対する&lt;code&gt;cpp_bin_float&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/580&#34; target=&#34;_blank&#34;&gt;GitHub #580&lt;/a&gt; &lt;code&gt;-Wpessimizing-move&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;covecovの実行を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/585&#34; target=&#34;_blank&#34;&gt;GitHub #585&lt;/a&gt; &lt;code&gt;cpp_dec_float&lt;/code&gt;乗算での切り捨てを減らすよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/597&#34; target=&#34;_blank&#34;&gt;GitHub #597&lt;/a&gt; 精度要件を満たすよう&lt;code&gt;complex_adaptor&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/603&#34; target=&#34;_blank&#34;&gt;GitHub #603&lt;/a&gt; tommathの破壊的変更に対する修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/608&#34; target=&#34;_blank&#34;&gt;GitHub #608&lt;/a&gt; 数値に変換可能な型が算術演算子オーバーロードに参加できるように修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;: Boost.MySQLでは、新たにコンパイルされたBoost.Charconvライブラリへのリンクが必要になった&lt;ul&gt;
&lt;li&gt;これは、ロケール依存の問題を解決し、効率を向上させ、新しいクライアント側SQLフォーマット機能を提供する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接続プールの実験的サポートを追加。これにより、セッションを再利用でき、組み込みの再接続とエラー処理が提供される&lt;/li&gt;
&lt;li&gt;型消去された接続 (&lt;code&gt;any_connection&lt;/code&gt;クラス) の実験的サポートを追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;any_connection&lt;/code&gt;はテンプレートではなく、より簡単な接続の確立と再接続のセマンティクスを特徴としている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;クライアント側SQLフォーマット関数 (&lt;code&gt;format_sql&lt;/code&gt;と&lt;code&gt;format_sql_to&lt;/code&gt;) の実験的サポートを追加&lt;ul&gt;
&lt;li&gt;これにより、クライアント側で安全にクエリを構成できるため、バッチインサートや動的フィルタ、PATCH-like updateなどのパターンが可能になる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;close_statement&lt;/code&gt;と&lt;code&gt;async_close_statement&lt;/code&gt;での、アプリケーションコードに大幅な遅延を引き起こす可能性のあるパフォーマンスの問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT&lt;/code&gt;を使用したビルドのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の実行インターフェース (&lt;code&gt;connection::query&lt;/code&gt;、&lt;code&gt;connection::start_query&lt;/code&gt;、&lt;code&gt;connection::execute_statement&lt;/code&gt;、&lt;code&gt;connection::start_statement_execution&lt;/code&gt;とそれらの非同期対応版) は、Boost 1.86で削除が予定されているため、警告が発生するようになった&lt;/li&gt;
&lt;li&gt;一部のエラーメッセージが切り捨てられるバグを修正&lt;/li&gt;
&lt;li&gt;警告を整理。&lt;code&gt;-Wall&lt;/code&gt;と&lt;code&gt;-Wextra&lt;/code&gt;を使用したビルドで警告は発生しなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field_view&lt;/code&gt;のすべてのコンストラクタを安定化&lt;/li&gt;
&lt;li&gt;ライブラリ内部をsans-ioアプローチで書き換え、複雑さが減った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#odeint&#34; id=&#34;odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;: このライブラリは、Boost.Mathをインクルードすることによる暗黙の要件ではなく、明示的にC++14を要求するようになった&lt;/li&gt;
&lt;li&gt;Thrust 1.10.0との互換性を修正&lt;/li&gt;
&lt;li&gt;以下のC++03 Boostコンポーネントを削除:&lt;ul&gt;
&lt;li&gt;Array&lt;/li&gt;
&lt;li&gt;Bind  &lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Static_assert&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/152&#34; target=&#34;_blank&#34;&gt;GitHub #152&lt;/a&gt; &lt;code&gt;boost::pfr::get_name&lt;/code&gt;は、一部のコンパイラでローカル型で動作するようになった&lt;ul&gt;
&lt;li&gt;PRをしてくれた&lt;a href=&#34;https://github.com/schaumb&#34; target=&#34;_blank&#34;&gt;Bela Schaum&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; 未使用の実装の詳細を削除しました。PRをしてくれた&lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;Denis Mikhailov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; &lt;code&gt;boost::pfr::structure_to_tuple&lt;/code&gt;から例外を送出できるようになった。バグ報告をしてくれた&lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;Denis Mikhailov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;フィールド・リフレクションのトリックがドキュメントに記述された。&lt;a href=&#34;https://github.com/boostorg/pfr/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;の議論に参加してくれた全ての人に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#random&#34; id=&#34;random&#34;&gt;Random&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/random/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; splitmix64擬似乱数生成器を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03はサポートされなくなった。C++11コンパイラが必要となる&lt;ul&gt;
&lt;li&gt;これにはGCC 4.8以降、およびMSVC 14.0 (VS 2015) 以降が含まれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非推奨のヘッダー &lt;code&gt;boost/system/cygwin_error.hpp&lt;/code&gt; を削除&lt;/li&gt;
&lt;li&gt;旧式のMinGW (32ビット) はサポートされなくなった。MinGW-w64 (64ビットと32ビット) はサポート対象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;void&amp;gt;&lt;/code&gt;で&lt;code&gt;operator&amp;amp;&lt;/code&gt;が使用可能になった (&lt;code&gt;nullary&lt;/code&gt;関数を介して)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&lt;/code&gt;に&lt;code&gt;operator|=&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下は指定された内容の日本語訳です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;大きな新機能: 任意の例外からのスタックトレース&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一部のPOSIXプラットフォームで、&lt;code&gt;std::stacktrace::from_current_exception()&lt;/code&gt;が現在の例外オブジェクトのスタックトレースを返すようになった。これは、例外が送出された時点でスタックトレースがキャプチャされたかのように動作する。この機能のプロトタイプを&lt;code&gt;libsfe&lt;/code&gt;で作成してくれたAndrei Nekrashevich氏に感謝します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost_stacktrace_windbg&lt;/code&gt;でのWindows上のメモリ消費を修正した。問題を報告してくれた&lt;a href=&#34;https://github.com/ycyclop&#34; target=&#34;_blank&#34;&gt;ycyclop&lt;/a&gt;氏、詳細を提供してくれた&lt;a href=&#34;https://github.com/correa&#34; target=&#34;_blank&#34;&gt;Thiago A. Correa&lt;/a&gt;氏、可能な修正を提供してくれた&lt;a href=&#34;https://github.com/akarpovskii&#34; target=&#34;_blank&#34;&gt;Andrei Karpovskii&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;non hidden visibilityでのライブラリビルドを修正。報告と修正方法の情報を提供してくれた&lt;a href=&#34;https://github.com/JBouwer&#34; target=&#34;_blank&#34;&gt;Jan Bouwer&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; ドキュメントに非同期シグナル安全に関する独立したセクションを追加。問題を指摘してくれた&lt;a href=&#34;https://github.com/tworonix&#34; target=&#34;_blank&#34;&gt;tworonix&lt;/a&gt;氏と、問題に関する情報を提供してくれた&lt;a href=&#34;https://github.com/itrofimow&#34; target=&#34;_blank&#34;&gt;itrofimow&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stl_interfaces&#34; id=&#34;stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降、&lt;code&gt;iterator_interface&lt;/code&gt;の入力イテレータの動作を変更し、C++20のコンセプトにより密接に従うようにした&lt;/li&gt;
&lt;li&gt;コンセプトが異なる制約で再定義されているというエラーを修正するため、&lt;code&gt;iterator_interface&lt;/code&gt;からHidden Friendsを削除&lt;/li&gt;
&lt;li&gt;CRTPの代わりに deducing this に基づいた新しい &lt;code&gt;iterator_interface&lt;/code&gt; を含む新しい &lt;code&gt;v3&lt;/code&gt; インライン名前空間を追加（C++23以降）&lt;/li&gt;
&lt;li&gt;一時オブジェクトのダングリングを防ぐために、&lt;code&gt;closure::operator()&lt;/code&gt;の右辺値修飾オーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/406&#34; target=&#34;_blank&#34;&gt;GitHub #406&lt;/a&gt; ライブラリ固有の &lt;code&gt;_NO_LIB&lt;/code&gt; マクロを考慮するようにした&lt;/li&gt;
&lt;li&gt;意図的に到達不能なコードの &lt;code&gt;__builtin\_unreachable()&lt;/code&gt; で MSVC C4702 を抑制するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/411&#34; target=&#34;_blank&#34;&gt;GitHub #411&lt;/a&gt; &lt;code&gt;boost::function&lt;/code&gt; のストリーミングエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value_type&lt;/code&gt; または &lt;code&gt;init_type&lt;/code&gt;（該当する場合）の引数に対して &lt;code&gt;emplace()&lt;/code&gt; を最適化し、中間オブジェクトの作成を回避するようにした。引数はすでに中間オブジェクトと同じ型になっている&lt;/li&gt;
&lt;li&gt;マップコンテナの &lt;code&gt;k,v&lt;/code&gt; 引数に対して &lt;code&gt;emplace()&lt;/code&gt; を最適化し、要素を挿入すべきであることが確実になるまでオブジェクトの構築を遅延させるようにした。この最適化は、マップの &lt;code&gt;key_type&lt;/code&gt; がムーブ構築可能であるか、&lt;code&gt;k&lt;/code&gt; 引数が &lt;code&gt;key_type&lt;/code&gt; である場合に行われる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt; &lt;code&gt;explicit&lt;/code&gt;なコピーコンストラクタを持つアロケータのサポートを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;unordered_multimap::find(k, hash, eq)&lt;/code&gt; の &lt;code&gt;const&lt;/code&gt; バージョンのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11より前のマクロとワークアラウンドをさらに削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt;: 出力されたpragmaが改行で終了していない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt;: &lt;code&gt;BOOST_WAVE_BSIZE&lt;/code&gt;境界でfillが呼び出されたときにYYMARKERが更新されない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2の&lt;a href=&#34;https://www.boost.org/doc/libs/release/tools/build/doc/html/index.html#b2.history&#34; target=&#34;_blank&#34;&gt;バージョン5.1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リリースノート -- 1.85.0のリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version.html"/>
      <id>cf9bb0d44215b8447d3dcae33eff5a6f231cf63f:document/version.md</id>
      <updated>2024-04-05T18:15:42+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;以下は、Boostの各バージョンのリリースノートを翻訳、情報補完したドキュメントです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html&#34;&gt;雛形ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html&#34;&gt;1.85.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_84_0.html&#34;&gt;1.84.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_83_0.html&#34;&gt;1.83.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_82_0.html&#34;&gt;1.82.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html&#34;&gt;1.81.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html&#34;&gt;1.80.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html&#34;&gt;1.79.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_78_0.html&#34;&gt;1.78.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_77_0.html&#34;&gt;1.77.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html&#34;&gt;1.76.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_75_0.html&#34;&gt;1.75.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_74_0.html&#34;&gt;1.74.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html&#34;&gt;1.73.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html&#34;&gt;1.72.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html&#34;&gt;1.71.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html&#34;&gt;1.70.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html&#34;&gt;1.69.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html&#34;&gt;1.68.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html&#34;&gt;1.67.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_66_0.html&#34;&gt;1.66.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_1.html&#34;&gt;1.65.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html&#34;&gt;1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html&#34;&gt;1.64.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_63_0.html&#34;&gt;1.63.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_62_0.html&#34;&gt;1.62.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_61_0.html&#34;&gt;1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html&#34;&gt;1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html&#34;&gt;1.59.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html&#34;&gt;1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_57_0.html&#34;&gt;1.57.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html&#34;&gt;1.56.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html&#34;&gt;1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_54_0.html&#34;&gt;1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_53_0.html&#34;&gt;1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_52_0.html&#34;&gt;1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_51_0.html&#34;&gt;1.51.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_50_0.html&#34;&gt;1.50.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_49_0.html&#34;&gt;1.49.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_48_0.html&#34;&gt;1.48.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_47_0.html&#34;&gt;1.47.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_1.html&#34;&gt;1.46.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_0.html&#34;&gt;1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_45_0.html&#34;&gt;1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.85.0リリースノート -- 1.85.0のリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version/1_85_0.html"/>
      <id>cf9bb0d44215b8447d3dcae33eff5a6f231cf63f:document/version/1_85_0.md</id>
      <updated>2024-04-05T18:15:42+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.85.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_xx_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_xx_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_xx_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_xx_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/charconv&#34; target=&#34;_blank&#34;&gt;CharConv&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11での&lt;code&gt;&amp;lt;charconv&amp;gt;&lt;/code&gt;の高品質な実装 (作者Matt Borland氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/scope&#34; target=&#34;_blank&#34;&gt;Scope&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Scope Guardユーティリティと&lt;code&gt;unique_resource&lt;/code&gt;ラッパーのコレクション (作者Andrey Semashev氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#msm&#34;&gt;MSM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multi_index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#random&#34;&gt;Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;API変更&lt;ul&gt;
&lt;li&gt;ステータスコードのリストを、IANAレジストリに準拠するよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_cat.hpp&lt;/code&gt; での到達不能コードの警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;websocker_server_awaitable&lt;/code&gt; サンプルコードの接続エラー処理を修正&lt;/li&gt;
&lt;li&gt;高度なサーバーのサンプルコードにおける &lt;code&gt;async_write&lt;/code&gt; の並行呼び出しを修正&lt;/li&gt;
&lt;li&gt;zlib 名が minizip と競合する問題を修正&lt;/li&gt;
&lt;li&gt;ホスト文字列が &lt;code&gt;SSL_set_tlsext_host_name()&lt;/code&gt; 呼び出しのあとに更新されるべきであった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asio::associator&lt;/code&gt; の &lt;code&gt;bind_wrapper&lt;/code&gt; と &lt;code&gt;bind_front_wrapper&lt;/code&gt; 向け特殊化を追加&lt;/li&gt;
&lt;li&gt;error categoryのmessage関数に、アロケータを指定しないオーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメント&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http::message::prepare_payload()&lt;/code&gt; は、必要がなければ呼び出さなくてよいと規定した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_stream::expires_after()&lt;/code&gt; の影響を受ける操作を記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;teardown()&lt;/code&gt; と &lt;code&gt;async_teardown()&lt;/code&gt; はカスタマイズポイントであることを記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::serializer&lt;/code&gt; の最初の使用後にムーブまたはコピーすることは未定義動作であることを記載&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WebSocket::permessage_deflate&lt;/code&gt; は WebSocket ハンドシェイクを行う前に設定すべきであることを記載&lt;/li&gt;
&lt;li&gt;http read 操作の &lt;code&gt;bytes_transferred&lt;/code&gt; は HTTP パーサーが消費したバイト数を報告することを記載&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Emile Cormier, JohannesWilde, yhzx233&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bimap&#34; id=&#34;bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/bimap/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; &lt;code&gt;bimap&lt;/code&gt;内で使用するサブコンテナ (&lt;code&gt;set_of&lt;/code&gt;や&lt;code&gt;unordered_set_of&lt;/code&gt;) の異種混合ルックアップ (heterogeneous lookup) を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了。C++11コンパイラを要求するようになった&lt;ul&gt;
&lt;li&gt;GCCは4.7以降、MSVCは12.0 (VS 2013) 以降&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/conversion/pull/28&#34; target=&#34;_blank&#34;&gt;GitHub #28&lt;/a&gt; ライブラリの一部ではなくなった&lt;code&gt;boost::lexical_cast&lt;/code&gt;関連の古い記述を削除 (&lt;a href=&#34;https://github.com/eoan-ermine&#34; target=&#34;_blank&#34;&gt;Danil Sidoruk&lt;/a&gt;氏のPRに感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#function&#34; id=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03のサポートを終了。C++11コンパイラを要求するようになった&lt;ul&gt;
&lt;li&gt;GCCは4.7以降、MSVCは12.0 (VS 2013) 以降&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1247&#34; target=&#34;_blank&#34;&gt;GitHub #1247&lt;/a&gt; &lt;code&gt;condition&lt;/code&gt; マクロの代わりに &lt;code&gt;if constexpr&lt;/code&gt; マクロを使用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1242&#34; target=&#34;_blank&#34;&gt;GitHub #1242&lt;/a&gt; sideで並べ替えるためのstrategyを渡すようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1234&#34; target=&#34;_blank&#34;&gt;GitHub #1234&lt;/a&gt; clang/mac/darwin/arm64 用の CMake ファイルを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決した課題&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1231&#34; target=&#34;_blank&#34;&gt;GitHub #1231&lt;/a&gt;、&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1244&#34; target=&#34;_blank&#34;&gt;GitHub #1244&lt;/a&gt; 反時計回りのポリゴンに対する不正な集合操作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1259&#34; target=&#34;_blank&#34;&gt;GitHub #1259&lt;/a&gt; CUDA NVCC コンパイラでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1250&#34; target=&#34;_blank&#34;&gt;GitHub #1250&lt;/a&gt; linestringのバッファが不正なinner polygonを返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1230&#34; target=&#34;_blank&#34;&gt;GitHub #1230&lt;/a&gt; union操作がpointに悪影響 (perturbing) し、間違った結果を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1229&#34; target=&#34;_blank&#34;&gt;GitHub #1229&lt;/a&gt; union操作が自己交差を生成する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1248&#34; target=&#34;_blank&#34;&gt;GitHub #1248&lt;/a&gt; 閉じたクラスタ内の交点を非横断可能に設定することでバッファの問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1246&#34; target=&#34;_blank&#34;&gt;GitHub #1246&lt;/a&gt; コンバーターおよび &lt;code&gt;is_base_of&lt;/code&gt; のコンパイルを修正&lt;/li&gt;
&lt;li&gt;さまざまなエラーと警告の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;エンディアンを扱うためにBoost.Endianを使用するようになった&lt;/li&gt;
&lt;li&gt;Boost.SystemとBoost.Containerコンポーネントへのエイリアスは非推奨となり、1.87.0で完全に削除される予定&lt;/li&gt;
&lt;li&gt;記述されたクラスへの変換がプライベートメンバをサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visit&lt;/code&gt;に右辺値参照のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;のような型 (path-like types) への変換サポートを追加&lt;/li&gt;
&lt;li&gt;記述されたクラスへのparseが継承したメンバを正しく考慮するようになった&lt;/li&gt;
&lt;li&gt;自己参照するシーケンスの変換を無効化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visit&lt;/code&gt;の参照ハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#leaf&#34; id=&#34;leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;スレッド間でエラーオブジェクトと例外を転送するための新たなAPI: &lt;code&gt;try_capture_all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;try_capture_all&lt;/code&gt;を介してキャプチャされた例外を&lt;code&gt;result&amp;lt;T&amp;gt;&lt;/code&gt;が転送できるようになった&lt;/li&gt;
&lt;li&gt;動的にキャプチャされたエラーオブジェクトを&lt;code&gt;result&amp;lt;T&amp;gt;&lt;/code&gt;が改善された効率で転送できるようになった&lt;/li&gt;
&lt;li&gt;古い&lt;code&gt;make_shared_context&lt;/code&gt;/&lt;code&gt;capture&lt;/code&gt; APIは非推奨となり、次のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;例外で動的にキャプチャされたエラーオブジェクトを転送するサポートを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#lexical_cast&#34; id=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最適化されたストリームとC++標準ライブラリIOベースのストリームを分離するための内部ロジックの大幅な書き換え:&lt;ul&gt;
&lt;li&gt;C++標準ライブラリベースのストリームは、より良いパフォーマンスを実現するために、より少ないケースで構築されるようになった&lt;/li&gt;
&lt;li&gt;テンプレートのインスタンス化を減らし、コードがシンプルになった&lt;/li&gt;
&lt;li&gt;常に&lt;code&gt;std::char_traits&lt;/code&gt;を使用するようにした (入力/出力型からカスタムトレイトを使用しないようにした。リンク時または実行時エラーの原因になるため)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 前方宣言された&lt;code&gt;boost::array&lt;/code&gt;の誤用を修正 (報告をしてくれた&lt;a href=&#34;https://github.com/13steinj&#34; target=&#34;_blank&#34;&gt;13steinj&lt;/a&gt;氏に感謝！)&lt;/li&gt;
&lt;li&gt;C++標準ライブラリの傾向に従い、&lt;code&gt;volatile&lt;/code&gt;入力型のサポートを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/30&#34; target=&#34;_blank&#34;&gt;GitHub #30&lt;/a&gt; &lt;code&gt;std::basic_string_view&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;からの変換を最適化&lt;/li&gt;
&lt;li&gt;Boost.NumericConversionとBoost.MPLへの依存関係を削除。浮動小数点型から算術型への一部の変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; このライブラリが、&lt;code&gt;-fno-sanitize-recover=integer&lt;/code&gt;オプションをつけてもコンパイルおよび動作するようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20モードで&lt;code&gt;char8_t&lt;/code&gt;の型情報が欠落していたことによるリンカーの問題を修正&lt;/li&gt;
&lt;li&gt;バンドルされたIConvを使用する際のIConvコンパイルフラグを修正&lt;/li&gt;
&lt;li&gt;ドキュメント化されているように、&lt;code&gt;collator&lt;/code&gt;はコンストラクタで例外を投げるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/216&#34; target=&#34;_blank&#34;&gt;GitHub #216&lt;/a&gt; 現在のバックエンドで利用できない場合の型の混同を避けるため、&lt;code&gt;collator&lt;/code&gt;は&lt;code&gt;std::collator&lt;/code&gt;を継承しなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/218&#34; target=&#34;_blank&#34;&gt;GitHub #218&lt;/a&gt; 無限ループを回避するため、不正なIConvライブラリ (一部のMacOSバージョンなど) が検出された場合に例外を投げるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/issues/221&#34; target=&#34;_blank&#34;&gt;GitHub #221&lt;/a&gt; &lt;code&gt;date_time&lt;/code&gt;の分解能がミリ秒単位だと混乱が起きていたため、秒に変更&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい最適化アルゴリズムのコレクションが追加されました:&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1062&#34; target=&#34;_blank&#34;&gt;GitHub #1062&lt;/a&gt; 差分進化 (Differential Evolution)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1065&#34; target=&#34;_blank&#34;&gt;GitHub #1065&lt;/a&gt; JSO&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1071&#34; target=&#34;_blank&#34;&gt;GitHub #1071&lt;/a&gt; ランダム探索&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1074&#34; target=&#34;_blank&#34;&gt;GitHub #1074&lt;/a&gt; CMA-ES&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NCF生存関数 (NCF survival function) における0による割り算の警告を修正&lt;/li&gt;
&lt;li&gt;ccmath::floor/ceilの大きな引数に対する&lt;code&gt;constexpr&lt;/code&gt;深さの制限を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quartic_roots&lt;/code&gt;の精度を改善&lt;/li&gt;
&lt;li&gt;libstdc++14のcstdfloatのnumeric limits検出マクロを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1060&#34; target=&#34;_blank&#34;&gt;GitHub #1060&lt;/a&gt; C++14を使用する際にMSVC UCRTがcomplex.hで&lt;code&gt;_Complex_I&lt;/code&gt;を定義する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/1066&#34; target=&#34;_blank&#34;&gt;GitHub #1066&lt;/a&gt; cstdfloat iostreamを改善&lt;/li&gt;
&lt;li&gt;スタンドアロンモードではない環境でスタンドアロンモードを使用する際のBoost.Configマクロの再定義を修正&lt;/li&gt;
&lt;li&gt;コードカバレッジを大幅に改善し、関連するバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#msm&#34; id=&#34;msm&#34;&gt;MSM&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下は、指定された内容を日本語に翻訳したものです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt; バックエンドを更新 (back11)。C++11が必要となる。ドキュメントではこれがデフォルトとなった&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大きな新機能&lt;/strong&gt; 新しいフロントエンド (PlantUML) を追加。C++20が必要となる&lt;/li&gt;
&lt;li&gt;様々なバグ修正 (コンパイルエラーと警告、遅延イベントの優先度)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multi_index&#34; id=&#34;multi_index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントの間違いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/575&#34; target=&#34;_blank&#34;&gt;GitHub #575&lt;/a&gt; C++23 &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt;から発生する非推奨警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/577&#34; target=&#34;_blank&#34;&gt;GitHub #577&lt;/a&gt; 小さなビット数に対する&lt;code&gt;cpp_bin_float&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/580&#34; target=&#34;_blank&#34;&gt;GitHub #580&lt;/a&gt; &lt;code&gt;-Wpessimizing-move&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;covecovの実行を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/585&#34; target=&#34;_blank&#34;&gt;GitHub #585&lt;/a&gt; &lt;code&gt;cpp_dec_float&lt;/code&gt;乗算での切り捨てを減らすよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/597&#34; target=&#34;_blank&#34;&gt;GitHub #597&lt;/a&gt; 精度要件を満たすよう&lt;code&gt;complex_adaptor&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/603&#34; target=&#34;_blank&#34;&gt;GitHub #603&lt;/a&gt; tommathの破壊的変更に対する修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/608&#34; target=&#34;_blank&#34;&gt;GitHub #608&lt;/a&gt; 数値に変換可能な型が算術演算子オーバーロードに参加できるように修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;: Boost.MySQLでは、新たにコンパイルされたBoost.Charconvライブラリへのリンクが必要になった&lt;ul&gt;
&lt;li&gt;これは、ロケール依存の問題を解決し、効率を向上させ、新しいクライアント側SQLフォーマット機能を提供する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接続プールの実験的サポートを追加。これにより、セッションを再利用でき、組み込みの再接続とエラー処理が提供される&lt;/li&gt;
&lt;li&gt;型消去された接続 (&lt;code&gt;any_connection&lt;/code&gt;クラス) の実験的サポートを追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;any_connection&lt;/code&gt;はテンプレートではなく、より簡単な接続の確立と再接続のセマンティクスを特徴としている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;クライアント側SQLフォーマット関数 (&lt;code&gt;format_sql&lt;/code&gt;と&lt;code&gt;format_sql_to&lt;/code&gt;) の実験的サポートを追加&lt;ul&gt;
&lt;li&gt;これにより、クライアント側で安全にクエリを構成できるため、バッチインサートや動的フィルタ、PATCH-like updateなどのパターンが可能になる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;close_statement&lt;/code&gt;と&lt;code&gt;async_close_statement&lt;/code&gt;での、アプリケーションコードに大幅な遅延を引き起こす可能性のあるパフォーマンスの問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT&lt;/code&gt;を使用したビルドのサポートを追加&lt;/li&gt;
&lt;li&gt;非推奨の実行インターフェース (&lt;code&gt;connection::query&lt;/code&gt;、&lt;code&gt;connection::start_query&lt;/code&gt;、&lt;code&gt;connection::execute_statement&lt;/code&gt;、&lt;code&gt;connection::start_statement_execution&lt;/code&gt;とそれらの非同期対応版) は、Boost 1.86で削除が予定されているため、警告が発生するようになった&lt;/li&gt;
&lt;li&gt;一部のエラーメッセージが切り捨てられるバグを修正&lt;/li&gt;
&lt;li&gt;警告を整理。&lt;code&gt;-Wall&lt;/code&gt;と&lt;code&gt;-Wextra&lt;/code&gt;を使用したビルドで警告は発生しなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field_view&lt;/code&gt;のすべてのコンストラクタを安定化&lt;/li&gt;
&lt;li&gt;ライブラリ内部をsans-ioアプローチで書き換え、複雑さが減った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#odeint&#34; id=&#34;odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;: このライブラリは、Boost.Mathをインクルードすることによる暗黙の要件ではなく、明示的にC++14を要求するようになった&lt;/li&gt;
&lt;li&gt;Thrust 1.10.0との互換性を修正&lt;/li&gt;
&lt;li&gt;以下のC++03 Boostコンポーネントを削除:&lt;ul&gt;
&lt;li&gt;Array&lt;/li&gt;
&lt;li&gt;Bind  &lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Static_assert&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/152&#34; target=&#34;_blank&#34;&gt;GitHub #152&lt;/a&gt; &lt;code&gt;boost::pfr::get_name&lt;/code&gt;は、一部のコンパイラでローカル型で動作するようになった&lt;ul&gt;
&lt;li&gt;PRをしてくれた&lt;a href=&#34;https://github.com/schaumb&#34; target=&#34;_blank&#34;&gt;Bela Schaum&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/154&#34; target=&#34;_blank&#34;&gt;GitHub #154&lt;/a&gt; 未使用の実装の詳細を削除しました。PRをしてくれた&lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;Denis Mikhailov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/155&#34; target=&#34;_blank&#34;&gt;GitHub #155&lt;/a&gt; &lt;code&gt;boost::pfr::structure_to_tuple&lt;/code&gt;から例外を送出できるようになった。バグ報告をしてくれた&lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;Denis Mikhailov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;フィールド・リフレクションのトリックがドキュメントに記述された。&lt;a href=&#34;https://github.com/boostorg/pfr/issues/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt;の議論に参加してくれた全ての人に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#random&#34; id=&#34;random&#34;&gt;Random&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/random/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; splitmix64擬似乱数生成器を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03はサポートされなくなった。C++11コンパイラが必要となる&lt;ul&gt;
&lt;li&gt;これにはGCC 4.8以降、およびMSVC 14.0 (VS 2015) 以降が含まれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非推奨のヘッダー &lt;code&gt;boost/system/cygwin_error.hpp&lt;/code&gt; を削除&lt;/li&gt;
&lt;li&gt;旧式のMinGW (32ビット) はサポートされなくなった。MinGW-w64 (64ビットと32ビット) はサポート対象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;void&amp;gt;&lt;/code&gt;で&lt;code&gt;operator&amp;amp;&lt;/code&gt;が使用可能になった (&lt;code&gt;nullary&lt;/code&gt;関数を介して)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&lt;/code&gt;に&lt;code&gt;operator|=&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下は指定された内容の日本語訳です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;大きな新機能: 任意の例外からのスタックトレース&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一部のPOSIXプラットフォームで、&lt;code&gt;std::stacktrace::from_current_exception()&lt;/code&gt;が現在の例外オブジェクトのスタックトレースを返すようになった。これは、例外が送出された時点でスタックトレースがキャプチャされたかのように動作する。この機能のプロトタイプを&lt;code&gt;libsfe&lt;/code&gt;で作成してくれたAndrei Nekrashevich氏に感謝します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost_stacktrace_windbg&lt;/code&gt;でのWindows上のメモリ消費を修正した。問題を報告してくれた&lt;a href=&#34;https://github.com/ycyclop&#34; target=&#34;_blank&#34;&gt;ycyclop&lt;/a&gt;氏、詳細を提供してくれた&lt;a href=&#34;https://github.com/correa&#34; target=&#34;_blank&#34;&gt;Thiago A. Correa&lt;/a&gt;氏、可能な修正を提供してくれた&lt;a href=&#34;https://github.com/akarpovskii&#34; target=&#34;_blank&#34;&gt;Andrei Karpovskii&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;non hidden visibilityでのライブラリビルドを修正。報告と修正方法の情報を提供してくれた&lt;a href=&#34;https://github.com/JBouwer&#34; target=&#34;_blank&#34;&gt;Jan Bouwer&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; ドキュメントに非同期シグナル安全に関する独立したセクションを追加。問題を指摘してくれた&lt;a href=&#34;https://github.com/tworonix&#34; target=&#34;_blank&#34;&gt;tworonix&lt;/a&gt;氏と、問題に関する情報を提供してくれた&lt;a href=&#34;https://github.com/itrofimow&#34; target=&#34;_blank&#34;&gt;itrofimow&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#stl_interfaces&#34; id=&#34;stl_interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++20以降、&lt;code&gt;iterator_interface&lt;/code&gt;の入力イテレータの動作を変更し、C++20のコンセプトにより密接に従うようにした&lt;/li&gt;
&lt;li&gt;コンセプトが異なる制約で再定義されているというエラーを修正するため、&lt;code&gt;iterator_interface&lt;/code&gt;からHidden Friendsを削除&lt;/li&gt;
&lt;li&gt;CRTPの代わりに deducing this に基づいた新しい &lt;code&gt;iterator_interface&lt;/code&gt; を含む新しい &lt;code&gt;v3&lt;/code&gt; インライン名前空間を追加（C++23以降）&lt;/li&gt;
&lt;li&gt;一時オブジェクトのダングリングを防ぐために、&lt;code&gt;closure::operator()&lt;/code&gt;の右辺値修飾オーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/406&#34; target=&#34;_blank&#34;&gt;GitHub #406&lt;/a&gt; ライブラリ固有の &lt;code&gt;_NO_LIB&lt;/code&gt; マクロを考慮するようにした&lt;/li&gt;
&lt;li&gt;意図的に到達不能なコードの &lt;code&gt;__builtin\_unreachable()&lt;/code&gt; で MSVC C4702 を抑制するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/411&#34; target=&#34;_blank&#34;&gt;GitHub #411&lt;/a&gt; &lt;code&gt;boost::function&lt;/code&gt; のストリーミングエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value_type&lt;/code&gt; または &lt;code&gt;init_type&lt;/code&gt;（該当する場合）の引数に対して &lt;code&gt;emplace()&lt;/code&gt; を最適化し、中間オブジェクトの作成を回避するようにした。引数はすでに中間オブジェクトと同じ型になっている&lt;/li&gt;
&lt;li&gt;マップコンテナの &lt;code&gt;k,v&lt;/code&gt; 引数に対して &lt;code&gt;emplace()&lt;/code&gt; を最適化し、要素を挿入すべきであることが確実になるまでオブジェクトの構築を遅延させるようにした。この最適化は、マップの &lt;code&gt;key_type&lt;/code&gt; がムーブ構築可能であるか、&lt;code&gt;k&lt;/code&gt; 引数が &lt;code&gt;key_type&lt;/code&gt; である場合に行われる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt; &lt;code&gt;explicit&lt;/code&gt;なコピーコンストラクタを持つアロケータのサポートを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; &lt;code&gt;unordered_multimap::find(k, hash, eq)&lt;/code&gt; の &lt;code&gt;const&lt;/code&gt; バージョンのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11より前のマクロとワークアラウンドをさらに削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/200&#34; target=&#34;_blank&#34;&gt;GitHub #200&lt;/a&gt;: 出力されたpragmaが改行で終了していない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/202&#34; target=&#34;_blank&#34;&gt;GitHub #202&lt;/a&gt;: &lt;code&gt;BOOST_WAVE_BSIZE&lt;/code&gt;境界でfillが呼び出されたときにYYMARKERが更新されない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_85_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2の&lt;a href=&#34;https://www.boost.org/doc/libs/release/tools/build/doc/html/index.html#b2.history&#34; target=&#34;_blank&#34;&gt;バージョン5.1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.84.0リリースノート -- 1.84.0 : Asioを追加</title>
      <link href="https://boostjp.github.io/document/version/1_84_0.html"/>
      <id>d2b17aee545c57bfb0fbbfc4de789af7c494b320:document/version/1_84_0.md</id>
      <updated>2023-12-13T12:13:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_84_0.md b/document/version/1_84_0.md
index a141246..a3663d4 100644
--- a/document/version/1_84_0.md
+++ b/document/version/1_84_0.md
@@ -61,6 +61,7 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 ## 更新ライブラリ
 
 - [Any](#any)
+- [Asio](#asio)
 - [Atomic](#atomic)
 - [Beast](#beast)
 - [Chrono](#chrono)
@@ -104,6 +105,23 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 - リファレンスのドキュメント生成を修正。これにより、Boost.PFRのリファレンスによって上書きされないようになった。Peter Dimov氏のデバッグに感謝
 
 
+## &amp;lt;a id=&amp;#34;asio&amp;#34; href=&amp;#34;#asio&amp;#34;&amp;gt;Asio&amp;lt;/a&amp;gt;
+
+- 最低言語標準として C++11 を要求するように変更。C++03のサポートを終了
+- 非推奨の機能を `boost::asio::execution` 名前空間から削除
+- 非推奨の呼び出しフック (invocation hook) とアロケーションフック (allocation hook) を削除
+- `channel`に `try_send_via_dispatch` と `try_send_n_via_dispatch` 関数を追加
+- Asio のプレースホルダと `std::bind` の互換性を追加
+- 複数の完了シグネチャを持つチャネルの C++11 サポートを改善した。
+- `channel`の非同期操作と `any_completion_handler` の互換性を修正
+- `BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT` を使用したコンパイルと `any_completion_handler` の互換性を修正
+- 同じカテゴリに属する混合されたexecutorのプロパティ型を比較するために不足していた等号演算子を追加
+- `std::exception_ptr`で始まる完了シグネチャを持つ非同期操作で `spawn` ベースのスタックフルコルーチンを使用するとプログラムが終了してしまう問題を修正
+- デフォルト構築された `any_completion_handler` オブジェクトのassociatorにアクセスしようとするとクラッシュする問題を修正
+- デフォルトの完了トークンで動作するように `ssl::stream&amp;lt;&amp;gt;` クラスの `async_handshake` 操作を修正
+- C++11 を最小言語標準として使用するようにすべてのサンプルコードを更新
+
+
 ## &amp;lt;a id=&amp;#34;atomic&amp;#34; href=&amp;#34;#atomic&amp;#34;&amp;gt;Atomic&amp;lt;/a&amp;gt;
 
 - C++03のサポートを終了。新たな要求はC++11以上となる
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>