<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2017-03-17T15:10:10.907837</updated>
  <id>5a3cf85d-44ac-49bb-b8ba-41cd5a6cc067</id>

  
    <entry>
      <title>Boost 1.64.0リリースノート -- 1.64.0リリースノート : Coreのリリースノートを更新</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>39cea40e1757364e945ef4cacf4f77c907826b61:document/version/1_64_0.md</id>
      <updated>2017-03-17 15:09:53 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12749&#34; target=&#34;_blank&#34;&gt;Trac #12749&lt;/a&gt; &lt;code&gt;container::pmr::polymorphic_allocator&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11333&#34; target=&#34;_blank&#34;&gt;Trac #11333&lt;/a&gt; &lt;code&gt;boost::container::basic_string&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;を相互運用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;emplace_back&lt;/code&gt;は&lt;code&gt;*end()&lt;/code&gt;ではなく&lt;code&gt;back()&lt;/code&gt;を返すべき&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11の&lt;code&gt;constexpr&lt;/code&gt;とC++11のSFINAE式を実装したコンパイラにおいて&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した (Glen Fernandes氏に感謝)
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した (Bjorn Reese氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12617&#34; target=&#34;_blank&#34;&gt;Trac #12617&lt;/a&gt; OS X 10.11での&lt;code&gt;clock_gettime&lt;/code&gt;がないというコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12744&#34; target=&#34;_blank&#34;&gt;Trac #12744&lt;/a&gt; Windowsにおいて、&lt;code&gt;boost::interprocess::ipcdetail::spin_wait&lt;/code&gt;内で&lt;code&gt;winapi::set_timer_resolution&lt;/code&gt;が使われていたために、おかしな分解能の変換が行われていた。&lt;code&gt;winapi::query_timer_resolution&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub Pull #32&lt;/a&gt; &lt;code&gt;std::pointer_traits&lt;/code&gt;の要件に準拠するよう修正。C++11以降の環境では、&lt;code&gt;offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;::other&lt;/code&gt;ではなく&lt;code&gt;`offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;&lt;/code&gt;で型をとれるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/33&#34; target=&#34;_blank&#34;&gt;GitHub Pull #33&lt;/a&gt; 64/32ビットプロセス間の共有において、基本クラスの&lt;code&gt;offset_ptr&lt;/code&gt;から派生クラスの&lt;code&gt;offset_ptr&lt;/code&gt;に正しく変換できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/34&#34; target=&#34;_blank&#34;&gt;GitHub Pull #34&lt;/a&gt; サンプルコードで&lt;code&gt;BOOST_MULTI_INDEX_MEMBER&lt;/code&gt;の代わりに&lt;code&gt;multi_index::member&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub Pull #35&lt;/a&gt; クロスコンパイルのオプションを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windowsシステムからの新たな実験的オプション&lt;code&gt;BOOST_INTERPROCESS_BOOTSTAMP_IS_SESSION_MANAGER_BASED&lt;/code&gt;を追加。このオプションは、セッションマネージャに関連付けられたレジストリの値から、共有メモリが置かれるフォルダ名として使用される一意なブートスタンプに由来する。このオプションはVista以降で動作し、デフォルトバージョンはこれ以降の安定バージョンとなるだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12745&#34; target=&#34;_blank&#34;&gt;Trac #12745&lt;/a&gt; &lt;code&gt;key_nodeptr_comp&lt;/code&gt;のキー型が&lt;code&gt;void*&lt;/code&gt;のときコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12761&#34; target=&#34;_blank&#34;&gt;Trac #12761&lt;/a&gt; &lt;code&gt;intrusive::set::swap&lt;/code&gt;で(状態を持つ)比較関数が入れ替わらない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.64.0リリースノート -- 1.64.0リリースノート : Interprocessを追加 (close #145)</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>91ec6ca6a1d873f5889af3dff594f4a408cc3b76:document/version/1_64_0.md</id>
      <updated>2017-03-17 14:48:31 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12749&#34; target=&#34;_blank&#34;&gt;Trac #12749&lt;/a&gt; &lt;code&gt;container::pmr::polymorphic_allocator&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11333&#34; target=&#34;_blank&#34;&gt;Trac #11333&lt;/a&gt; &lt;code&gt;boost::container::basic_string&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;を相互運用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;emplace_back&lt;/code&gt;は&lt;code&gt;*end()&lt;/code&gt;ではなく&lt;code&gt;back()&lt;/code&gt;を返すべき&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C++11 constexpr&lt;/code&gt;を実装したコンパイラにおいて&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した。
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12617&#34; target=&#34;_blank&#34;&gt;Trac #12617&lt;/a&gt; OS X 10.11での&lt;code&gt;clock_gettime&lt;/code&gt;がないというコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12744&#34; target=&#34;_blank&#34;&gt;Trac #12744&lt;/a&gt; Windowsにおいて、&lt;code&gt;boost::interprocess::ipcdetail::spin_wait&lt;/code&gt;内で&lt;code&gt;winapi::set_timer_resolution&lt;/code&gt;が使われていたために、おかしな分解能の変換が行われていた。&lt;code&gt;winapi::query_timer_resolution&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub Pull #32&lt;/a&gt; &lt;code&gt;std::pointer_traits&lt;/code&gt;の要件に準拠するよう修正。C++11以降の環境では、&lt;code&gt;offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;::other&lt;/code&gt;ではなく&lt;code&gt;`offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;&lt;/code&gt;で型をとれるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/33&#34; target=&#34;_blank&#34;&gt;GitHub Pull #33&lt;/a&gt; 64/32ビットプロセス間の共有において、基本クラスの&lt;code&gt;offset_ptr&lt;/code&gt;から派生クラスの&lt;code&gt;offset_ptr&lt;/code&gt;に正しく変換できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/34&#34; target=&#34;_blank&#34;&gt;GitHub Pull #34&lt;/a&gt; サンプルコードで&lt;code&gt;BOOST_MULTI_INDEX_MEMBER&lt;/code&gt;の代わりに&lt;code&gt;multi_index::member&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub Pull #35&lt;/a&gt; クロスコンパイルのオプションを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windowsシステムからの新たな実験的オプション&lt;code&gt;BOOST_INTERPROCESS_BOOTSTAMP_IS_SESSION_MANAGER_BASED&lt;/code&gt;を追加。このオプションは、セッションマネージャに関連付けられたレジストリの値から、共有メモリが置かれるフォルダ名として使用される一意なブートスタンプに由来する。このオプションはVista以降で動作し、デフォルトバージョンはこれ以降の安定バージョンとなるだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12745&#34; target=&#34;_blank&#34;&gt;Trac #12745&lt;/a&gt; &lt;code&gt;key_nodeptr_comp&lt;/code&gt;のキー型が&lt;code&gt;void*&lt;/code&gt;のときコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12761&#34; target=&#34;_blank&#34;&gt;Trac #12761&lt;/a&gt; &lt;code&gt;intrusive::set::swap&lt;/code&gt;で(状態を持つ)比較関数が入れ替わらない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.64.0リリースノート -- 1.64.0リリースノート : Intrusiveを追加 (close #146)</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>3eaa83f16ad4a54005acacf83712b3573b24d0ca:document/version/1_64_0.md</id>
      <updated>2017-03-16 16:45:55 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12749&#34; target=&#34;_blank&#34;&gt;Trac #12749&lt;/a&gt; &lt;code&gt;container::pmr::polymorphic_allocator&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11333&#34; target=&#34;_blank&#34;&gt;Trac #11333&lt;/a&gt; &lt;code&gt;boost::container::basic_string&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;を相互運用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;emplace_back&lt;/code&gt;は&lt;code&gt;*end()&lt;/code&gt;ではなく&lt;code&gt;back()&lt;/code&gt;を返すべき&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C++11 constexpr&lt;/code&gt;を実装したコンパイラにおいて&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した。
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12745&#34; target=&#34;_blank&#34;&gt;Trac #12745&lt;/a&gt; &lt;code&gt;key_nodeptr_comp&lt;/code&gt;のキー型が&lt;code&gt;void*&lt;/code&gt;のときコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12761&#34; target=&#34;_blank&#34;&gt;Trac #12761&lt;/a&gt; &lt;code&gt;intrusive::set::swap&lt;/code&gt;で(状態を持つ)比較関数が入れ替わらない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.64.0リリースノート -- 1.64.0リリースノート : Containerを追加 (close #144)</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>d9e414a56b542c4e336d655c9a4c95707caa87b8:document/version/1_64_0.md</id>
      <updated>2017-03-16 15:29:08 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12749&#34; target=&#34;_blank&#34;&gt;Trac #12749&lt;/a&gt; &lt;code&gt;container::pmr::polymorphic_allocator&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11333&#34; target=&#34;_blank&#34;&gt;Trac #11333&lt;/a&gt; &lt;code&gt;boost::container::basic_string&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;を相互運用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;emplace_back&lt;/code&gt;は&lt;code&gt;*end()&lt;/code&gt;ではなく&lt;code&gt;back()&lt;/code&gt;を返すべき&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C++11 constexpr&lt;/code&gt;を実装したコンパイラにおいて&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した。
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.64.0リリースノート -- 1.64.0リリースノート : Regexを追加 (close #139)</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>205449a2b5eb64a0f93949b5b1c7939cf5f6043c:document/version/1_64_0.md</id>
      <updated>2017-03-16 15:24:03 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C++11 constexpr&lt;/code&gt;を実装したコンパイラにおいて&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した。
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>