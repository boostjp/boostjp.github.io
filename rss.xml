<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2024-02-05T14:32:34.034694</updated>
  <id>53471c66-3743-4997-841f-ee87642c0837</id>

  
    <entry>
      <title>Boost 1.84.0リリースノート -- 1.84.0 : Asioを追加</title>
      <link href="https://boostjp.github.io/document/version/1_84_0.html"/>
      <id>d2b17aee545c57bfb0fbbfc4de789af7c494b320:document/version/1_84_0.md</id>
      <updated>2023-12-13T12:13:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_84_0.md b/document/version/1_84_0.md
index a141246..a3663d4 100644
--- a/document/version/1_84_0.md
+++ b/document/version/1_84_0.md
@@ -61,6 +61,7 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 ## 更新ライブラリ
 
 - [Any](#any)
+- [Asio](#asio)
 - [Atomic](#atomic)
 - [Beast](#beast)
 - [Chrono](#chrono)
@@ -104,6 +105,23 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 - リファレンスのドキュメント生成を修正。これにより、Boost.PFRのリファレンスによって上書きされないようになった。Peter Dimov氏のデバッグに感謝
 
 
+## &amp;lt;a id=&amp;#34;asio&amp;#34; href=&amp;#34;#asio&amp;#34;&amp;gt;Asio&amp;lt;/a&amp;gt;
+
+- 最低言語標準として C++11 を要求するように変更。C++03のサポートを終了
+- 非推奨の機能を `boost::asio::execution` 名前空間から削除
+- 非推奨の呼び出しフック (invocation hook) とアロケーションフック (allocation hook) を削除
+- `channel`に `try_send_via_dispatch` と `try_send_n_via_dispatch` 関数を追加
+- Asio のプレースホルダと `std::bind` の互換性を追加
+- 複数の完了シグネチャを持つチャネルの C++11 サポートを改善した。
+- `channel`の非同期操作と `any_completion_handler` の互換性を修正
+- `BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT` を使用したコンパイルと `any_completion_handler` の互換性を修正
+- 同じカテゴリに属する混合されたexecutorのプロパティ型を比較するために不足していた等号演算子を追加
+- `std::exception_ptr`で始まる完了シグネチャを持つ非同期操作で `spawn` ベースのスタックフルコルーチンを使用するとプログラムが終了してしまう問題を修正
+- デフォルト構築された `any_completion_handler` オブジェクトのassociatorにアクセスしようとするとクラッシュする問題を修正
+- デフォルトの完了トークンで動作するように `ssl::stream&amp;lt;&amp;gt;` クラスの `async_handshake` 操作を修正
+- C++11 を最小言語標準として使用するようにすべてのサンプルコードを更新
+
+
 ## &amp;lt;a id=&amp;#34;atomic&amp;#34; href=&amp;#34;#atomic&amp;#34;&amp;gt;Atomic&amp;lt;/a&amp;gt;
 
 - C++03のサポートを終了。新たな要求はC++11以上となる
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.84.0リリースノート -- 1.84.0 : 順番を整理、GeometryとJSONを追加</title>
      <link href="https://boostjp.github.io/document/version/1_84_0.html"/>
      <id>402cf12280805556a8ca0223a6f136dce5ba9032:document/version/1_84_0.md</id>
      <updated>2023-12-06T13:09:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_84_0.md b/document/version/1_84_0.md
index 8295b48..a141246 100644
--- a/document/version/1_84_0.md
+++ b/document/version/1_84_0.md
@@ -71,7 +71,9 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 - [DLL](#dll)
 - [Endian](#endian)
 - [Filesystem](#filesystem)
+- [Geometry](#geometry)
 - [Heap](#heap)
+- [JSON](#json)
 - [LEAF](#leaf)
 - [LexicalCast](#lexical-cast)
 - [Locale](#locale)
@@ -83,8 +85,8 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 - [MySQL](#mysql)
 - [PFR](#pfr)
 - [Predef](#predef)
-- [Ratio](#ratio)
 - [Random](#random)
+- [Ratio](#ratio)
 - [Stacktrace](#stacktrace)
 - [System](#system)
 - [Test](#test)
@@ -169,11 +171,30 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 - **非推奨化:** Windows 10より古いWindowsバージョンのサポートは非推奨であり、Boost 1.87で削除される予定
 
 
+## &amp;lt;a id=&amp;#34;geometry&amp;#34; href=&amp;#34;#geometry&amp;#34;&amp;gt;Geometry&amp;lt;/a&amp;gt;
+
+- 解決したIssue
+    - [GitHub #1138](https://github.com/boostorg/geometry/issues/1138) 2つの`polygon`の`difference`を修正
+    - [GitHub #1183](https://github.com/boostorg/geometry/issues/1183) `union_`の結果となる`polgon`が不完全になる問題を修正
+    - [GitHub #1184](https://github.com/boostorg/geometry/issues/1184) `intersection`を修正
+    - [GitHub #1186](https://github.com/boostorg/geometry/issues/1186) `union_`の不適切なinner ringの代入を修正
+    - さまざまなエラーと警告を修正
+
+
 ## &amp;lt;a id=&amp;#34;heap&amp;#34; href=&amp;#34;#heap&amp;#34;&amp;gt;Heap&amp;lt;/a&amp;gt;
 
 - C++03のサポートを非推奨化した。Boost 1.86.0で削除予定。新たな要求はC++14以上となる
 
 
+## &amp;lt;a id=&amp;#34;json&amp;#34; href=&amp;#34;#json&amp;#34;&amp;gt;JSON&amp;lt;/a&amp;gt;
+
+- ユーザー型に直接パースする機能を実装
+- `optional`と`variant`の変換カテゴリを追加
+- イテレータの組からのコンストラクタのイテレータ要件を緩和
+- 入力バッファを超える読み込みを修正
+- 初期化子リストのコンストラクタの一貫性がない選択を修正
+
+
 ## &amp;lt;a id=&amp;#34;leaf&amp;#34; href=&amp;#34;#leaf&amp;#34;&amp;gt;LEAF&amp;lt;/a&amp;gt;
 
 - `result&amp;lt;T&amp;gt;`クラスをnodiscard指定
@@ -259,16 +280,16 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 - Microsoft STLの検出を追加 (Henrik Gaßmann氏)
 
 
-## &amp;lt;a id=&amp;#34;ratio&amp;#34; href=&amp;#34;#ratio&amp;#34;&amp;gt;Ratio&amp;lt;/a&amp;gt;
+## &amp;lt;a id=&amp;#34;random&amp;#34; href=&amp;#34;#random&amp;#34;&amp;gt;Random&amp;lt;/a&amp;gt;
 
 - C++03のサポートを終了
-- `BOOST_RATIO_EXTENSIONS`のサポートを削除。Ratioは現在、標準`&amp;lt;ratio&amp;gt;`ヘッダで実装される
+- Boost.Multiprecisionを使用したテストでのオーバーフローを修正
 
 
-## &amp;lt;a id=&amp;#34;random&amp;#34; href=&amp;#34;#random&amp;#34;&amp;gt;Random&amp;lt;/a&amp;gt;
+## &amp;lt;a id=&amp;#34;ratio&amp;#34; href=&amp;#34;#ratio&amp;#34;&amp;gt;Ratio&amp;lt;/a&amp;gt;
 
 - C++03のサポートを終了
-- Boost.Multiprecisionを使用したテストでのオーバーフローを修正
+- `BOOST_RATIO_EXTENSIONS`のサポートを削除。Ratioは現在、標準`&amp;lt;ratio&amp;gt;`ヘッダで実装される
 
 
 ## &amp;lt;a id=&amp;#34;stacktrace&amp;#34; href=&amp;#34;#stacktrace&amp;#34;&amp;gt;Stacktrace&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>型特性 -- `&lt;type_traits&gt;`へのリンクを追加</title>
      <link href="https://boostjp.github.io/tips/type_traits.html"/>
      <id>cd17af6081b5b4ba636e6c8c72b491547c1b70c3:tips/type_traits.md</id>
      <updated>2023-12-05T21:59:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/tips/type_traits.md b/tips/type_traits.md
index 278ac9a..449e779 100644
--- a/tips/type_traits.md
+++ b/tips/type_traits.md
@@ -78,6 +78,7 @@
 - [特定アライメントを持った型の合成](#synthesizing-types-with-specific-alignments)
     - [特定のアライメントを持つ型の取得する](#type-with-alignment)
     - [適切にアライメントされた型を作成する](#aligned-storage)
+- [C++の国際標準規格上の類似する機能](#cpp-standard)
 
 
 ### &amp;lt;a id=&amp;#34;type-category&amp;#34; href=&amp;#34;#type-category&amp;#34;&amp;gt;型の分類を判定する&amp;lt;/a&amp;gt;
@@ -1383,3 +1384,5 @@ int main()
 }
 ```
 
+## &amp;lt;a id=&amp;#34;cpp-standard&amp;#34; href=&amp;#34;#cpp-standard&amp;#34;&amp;gt;C++の国際標準規格上の類似する機能&amp;lt;/a&amp;gt;
+- [`&amp;lt;type_traits&amp;gt;`](https://cpprefjp.github.io/reference/type_traits.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ROCKTAKEY</name>
        <email>rocktakey@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スレッド -- `std::thread`へのリンクを追加</title>
      <link href="https://boostjp.github.io/tips/thread.html"/>
      <id>f75e7b572e89faf589841a468a0413be58f61d4f:tips/thread.md</id>
      <updated>2023-12-05T21:57:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/tips/thread.md b/tips/thread.md
index 8baec32..ee0d661 100644
--- a/tips/thread.md
+++ b/tips/thread.md
@@ -15,6 +15,7 @@
 - [自スレッドの実行を他スレッドに譲る](#yield)
 - [スレッドのハンドルを取得する](#thread-handle)
 - [ハードウェアの並列度を取得する](#hardware-concurrency)
+- [C++の国際標準規格上の類似する機能](#cpp-standard)
 
 
 ## &amp;lt;a id=&amp;#34;create-thread&amp;#34; href=&amp;#34;#create-thread&amp;#34;&amp;gt;スレッドを生成(開始)する&amp;lt;/a&amp;gt;
@@ -170,3 +171,5 @@ void f4() {
 `boost::thread::hardware_concurrency()`静的メンバ関数を使用することで、(たとえばCPUの数やコアの数やhyperthreading unitの数などから)現在のシステムで利用可能なhardware threadの数を取得することが出来る。
 
 
+## &amp;lt;a id=&amp;#34;cpp-standard&amp;#34; href=&amp;#34;#cpp-standard&amp;#34;&amp;gt;C++の国際標準規格上の類似する機能&amp;lt;/a&amp;gt;
+- [`std::thread`](https://cpprefjp.github.io/reference/thread/thread.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ROCKTAKEY</name>
        <email>rocktakey@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リソースを自動的に解放する -- C++11で追加されたスマートポインタへのリンクを追加</title>
      <link href="https://boostjp.github.io/tips/smart_ptr.html"/>
      <id>cb4363ba2ae58ea4854132ecc7e4a3f26854b715:tips/smart_ptr.md</id>
      <updated>2023-12-05T21:54:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/tips/smart_ptr.md b/tips/smart_ptr.md
index db18d7e..0402b6b 100644
--- a/tips/smart_ptr.md
+++ b/tips/smart_ptr.md
@@ -11,6 +11,7 @@
     - [解放の方法を自分で決める](#customize-release-behavior-shared-ptr)
     - [弱い参照](#weak-reference)
 - [侵入型参照カウント方式のスマートポインタ](#intrusive-pointer)
+- [C++の国際標準規格上の類似する機能](#cpp-standard)
 
 
 ## &amp;lt;a id=&amp;#34;no-share-smart-pointer&amp;#34; href=&amp;#34;#no-share-smart-pointer&amp;#34;&amp;gt;共有しないオブジェクトのスマートポインタ&amp;lt;/a&amp;gt;
@@ -334,3 +335,10 @@ exist
 destroy
 ```
 
+## &amp;lt;a id=&amp;#34;cpp-standard&amp;#34; href=&amp;#34;#cpp-standard&amp;#34;&amp;gt;C++の国際標準規格上の類似する機能&amp;lt;/a&amp;gt;
+- [`std::unique_ptr`](https://cpprefjp.github.io/reference/memory/unique_ptr.html)
+  - `boost::scoped_ptr`相当
+- [`std::shared_ptr`](https://cpprefjp.github.io/reference/memory/shared_ptr.html)
+  - `boost::shared_ptr`相当
+- [`std::weak_ptr`](https://cpprefjp.github.io/reference/memory/weak_ptr.html)
+  - `boost::weak_ptr`相当
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ROCKTAKEY</name>
        <email>rocktakey@gmail.com</email>
      </author>
    </entry>
  
</feed>