<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2025-08-02T14:43:23.894019</updated>
  <id>aa72c72b-2bfb-48e5-a642-29559280b5a0</id>

  
    <entry>
      <title>Exporting Class Serialization -- Merge pull request #577 from RyuYamamoto/fix/typo</title>
      <link href="https://boostjp.github.io/document/boostserialization/reference/special-considerations/exporting-class-serialization.html"/>
      <id>b044f4eddc71406d0ecff12425a3c407538dc2f5:document/boostserialization/reference/special-considerations/exporting-class-serialization.md</id>
      <updated>2025-06-09T19:26:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/boostserialization/reference/special-considerations/exporting-class-serialization.md b/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
index 24ecdf2..038dc2a 100644
--- a/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
+++ b/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
@@ -4,7 +4,7 @@
 - 他で参照されないコードをインスタンス化します。
 - シリアライズのために、external識別子とクラスを対応づけます。クラスが明示的に参照されないという事実は、この必要条件を示します。
 
-C++では、明示的に参照されないコードは、仮想関数によって実装されます。よって、派生クラスを基底クラスのポインタまたは参照経由で操作するような用法の場合、exoprtが必要であることを意味します。
+C++では、明示的に参照されないコードは、仮想関数によって実装されます。よって、派生クラスを基底クラスのポインタまたは参照経由で操作するような用法の場合、exportが必要であることを意味します。
 
 任意のアーカイブクラスのヘッダをインクスードするのと同じソースモジュールにある`BOOST_CLASS_EXPORT`は、それらアーカイブクラスにポリモーフィックなポインタのシリアライズを要求するコードをインスタンス化します。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Exporting Class Serialization -- fix typo</title>
      <link href="https://boostjp.github.io/document/boostserialization/reference/special-considerations/exporting-class-serialization.html"/>
      <id>d27874c8665ee41f57133addf542d81916602f5f:document/boostserialization/reference/special-considerations/exporting-class-serialization.md</id>
      <updated>2025-06-09T19:16:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/boostserialization/reference/special-considerations/exporting-class-serialization.md b/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
index 24ecdf2..038dc2a 100644
--- a/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
+++ b/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
@@ -4,7 +4,7 @@
 - 他で参照されないコードをインスタンス化します。
 - シリアライズのために、external識別子とクラスを対応づけます。クラスが明示的に参照されないという事実は、この必要条件を示します。
 
-C++では、明示的に参照されないコードは、仮想関数によって実装されます。よって、派生クラスを基底クラスのポインタまたは参照経由で操作するような用法の場合、exoprtが必要であることを意味します。
+C++では、明示的に参照されないコードは、仮想関数によって実装されます。よって、派生クラスを基底クラスのポインタまたは参照経由で操作するような用法の場合、exportが必要であることを意味します。
 
 任意のアーカイブクラスのヘッダをインクスードするのと同じソースモジュールにある`BOOST_CLASS_EXPORT`は、それらアーカイブクラスにポリモーフィックなポインタのシリアライズを要求するコードをインスタンス化します。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>RyuYamamoto</name>
        <email>ryu.yamamoto@tier4.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.73.0リリースノート -- アンカーの修正</title>
      <link href="https://boostjp.github.io/document/version/1_73_0.html"/>
      <id>a88eb41bc203a2d3aa9128b7dfd831f8b9dd4784:document/version/1_73_0.md</id>
      <updated>2025-05-27T01:20:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_73_0.md b/document/version/1_73_0.md
index ccef928..1961827 100644
--- a/document/version/1_73_0.md
+++ b/document/version/1_73_0.md
@@ -473,7 +473,7 @@
     - これにより、レジスタ内の関数に渡したり、そこから返したりするパフォーマンスが改善する
 
 
-## &amp;lt;a id=&amp;#34;winapi&amp;#34; href=&amp;#34;winapi&amp;#34;&amp;gt;WinAPI&amp;lt;/a&amp;gt;
+## &amp;lt;a id=&amp;#34;winapi&amp;#34; href=&amp;#34;#winapi&amp;#34;&amp;gt;WinAPI&amp;lt;/a&amp;gt;
 
 - `boost/detail/winapi`内のヘッダを非推奨にした。将来のリリースで削除される
 - [GitHub #81](https://github.com/boostorg/winapi/issues/81) Boost.WinAPIのヘッダが`winerror.h`をインクルードしないようにした。`boost/winapi/error_codes.hpp`をインクルードすることでWindowsのエラーコードを取得できる
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.82.0リリースノート -- アンカーの修正</title>
      <link href="https://boostjp.github.io/document/version/1_82_0.html"/>
      <id>a88eb41bc203a2d3aa9128b7dfd831f8b9dd4784:document/version/1_82_0.md</id>
      <updated>2025-05-27T01:20:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.82.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_82_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_82_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の問題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Filesystem&lt;ul&gt;
&lt;li&gt;OpenBSD で共有ライブラリのコンパイラフラグ &lt;code&gt;-Wl,--no-undefined&lt;/code&gt; のサポートが壊れているため、コンパイルに失敗することがある。&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/283&#34; target=&#34;_blank&#34;&gt;GitHub #283&lt;/a&gt;、および&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_82_0/0001-filesystem-fix-openbsd-build.patch&#34; target=&#34;_blank&#34;&gt;パッチ&lt;/a&gt;を参照&lt;/li&gt;
&lt;li&gt;Windowsにおいて、SMBv1共有のディレクトリに対するdirectory iteratorの作成が &lt;code&gt;ERROR_INVALID_LEVEL&lt;/code&gt; エラーコードで失敗することがある。&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/284&#34; target=&#34;_blank&#34;&gt;GitHub #284&lt;/a&gt;、および&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_82_0/0002-filesystem-fix-win-smbv1-dir-iterator.patch&#34; target=&#34;_blank&#34;&gt;パッチ&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C++03サポートの終了&lt;/h2&gt;
&lt;p&gt;以下のライブラリは、いまから2リリース後の1.84.0でC++03のサポートを終了する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Align&lt;/li&gt;
&lt;li&gt;Any&lt;/li&gt;
&lt;li&gt;Asio&lt;/li&gt;
&lt;li&gt;Atomic&lt;/li&gt;
&lt;li&gt;Bind&lt;/li&gt;
&lt;li&gt;Chrono&lt;/li&gt;
&lt;li&gt;ContainerHash&lt;/li&gt;
&lt;li&gt;Conversion&lt;/li&gt;
&lt;li&gt;DLL&lt;/li&gt;
&lt;li&gt;Endian&lt;/li&gt;
&lt;li&gt;Filesystem&lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Functional&lt;/li&gt;
&lt;li&gt;Io&lt;/li&gt;
&lt;li&gt;LexicalCast&lt;/li&gt;
&lt;li&gt;Log&lt;/li&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Ratio&lt;/li&gt;
&lt;li&gt;SmartPtr&lt;/li&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;Stacktrace&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;Timer&lt;/li&gt;
&lt;li&gt;TypeIndex&lt;/li&gt;
&lt;li&gt;Typeof&lt;/li&gt;
&lt;li&gt;Unordered&lt;/li&gt;
&lt;li&gt;Variant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリース（1.82）と次のリリース（1.83）は、上記のライブラリとその依存関係の大部分でC++03をサポートする最後のリリースとなる。&lt;/p&gt;
&lt;p&gt;古いバージョンのコンパイラでは、サポート不足やバグのためにC++11が部分的にしか実装されていないことが多いため、どのコンパイラがC++11の要件を満たしているとみなされるかは、ライブラリによって異なる場合がある。&lt;/p&gt;
&lt;p&gt;しかし、一般的なルールとして、コンパイラがC++11のキーワードや構文をまったく認識しない場合（例：&lt;code&gt;noexcept&lt;/code&gt;の使用、&lt;code&gt;constexpr&lt;/code&gt;の使用、&lt;code&gt;=delete&lt;/code&gt;された関数を定義すると即コンパイルエラー）、コンパイラがC++11必須のヘッダーをまったく提供しない場合（例：&lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt; や &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; をインクルードしようとすると失敗する）、あるいはコンパイラがC++11の機能やヘッダを提供するがまったく使用できない場合、このコンパイラはC++11コンパイラとはみなされない。&lt;/p&gt;
&lt;p&gt;このため、例えば14.0 (2015) 以前のMicrosoft Visual C++や、4.8以前のGCCは除外される。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mysql&#34; target=&#34;_blank&#34;&gt;MySql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.AsioベースのMySQLデータベースサーバーのC++11クライアント (作者Reuben Perez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#url&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/any/pull/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 非推奨の &lt;code&gt;utility/enable_if.hpp&lt;/code&gt; の代わりに &lt;code&gt;core/enable_if.hpp&lt;/code&gt; ヘッダを使用するようになった。PRをくれたMichael Ford氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;操作が即座に完了した場合の完了ハンドラの実行をカスタマイズする機能を追加&lt;/li&gt;
&lt;li&gt;バッファタイプにユーザー定義のリテラルを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_SEQPACKET&lt;/code&gt; で &lt;code&gt;AF_UNIX&lt;/code&gt; を表現するために新しいプロトコルタイプ &lt;code&gt;local::seq_packet_protocol&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signal_set::add&lt;/code&gt; のオプション引数で &lt;code&gt;sigaction()&lt;/code&gt; フラグを公開&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocator_binder&lt;/code&gt;, &lt;code&gt;executor_binder&lt;/code&gt;, &lt;code&gt;cancellation_slot_binder&lt;/code&gt; を変更して、特殊でない連想子 (unspecialised associators) の検出をサポートするようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;associated_cancellation_slot&amp;lt;reference_wrapper&amp;gt;::get()&lt;/code&gt; のあいまいさを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::exception_ptr&lt;/code&gt; を含む完了シグネチャの &lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt; 処理を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::channel&amp;lt;&amp;gt;&lt;/code&gt; の &lt;code&gt;try_send&lt;/code&gt; が &lt;code&gt;cancel&lt;/code&gt; の後に失敗するのを修正&lt;/li&gt;
&lt;li&gt;プールに内部スレッドがない場合の &lt;code&gt;thread_pool::join()&lt;/code&gt; のデッドロックを修正&lt;/li&gt;
&lt;li&gt;io_uring を使用した際のパイプの &lt;code&gt;release()&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;バックエンドのデータ初期化およびクリーンアップの問題を修正&lt;/li&gt;
&lt;li&gt;実行コンテキストのオーバーロードである &lt;code&gt;get_associated_executor()&lt;/code&gt; のぶら下がり参照の問題を修正&lt;/li&gt;
&lt;li&gt;バッファリングされたメッセージは &lt;code&gt;experimental::channel&amp;lt;&amp;gt;&lt;/code&gt; が閉じられても受信できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ANY_COMPLETION_HANDLER&lt;/code&gt; の代入演算子を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any_completion_handler&lt;/code&gt;のコンストラクタが誤ってコピーされるのを防ぐために、コンストラクタを制限した&lt;/li&gt;
&lt;li&gt;OpenSSL のオプションに &lt;code&gt;uint64_t&lt;/code&gt; を使用するように変更した（OpenSSL 3 に対応）&lt;/li&gt;
&lt;li&gt;複数の完了シグネチャを持つ &lt;code&gt;deferred&lt;/code&gt; の相互運用性を修正&lt;/li&gt;
&lt;li&gt;C++11 と C++14 の部分的なサポートを追加するためにチャネルを修正した&lt;/li&gt;
&lt;li&gt;パッケージ化された非同期処理を待つ際に、&lt;code&gt;co_composed&lt;/code&gt;と&lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt;コルーチンのソースロケーションを追跡するハンドラの欠落をサポートした&lt;/li&gt;
&lt;li&gt;いくつかの「潜在的なヌル参照」警告とシャドウ変数警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const_buffers_1&lt;/code&gt; と &lt;code&gt;mutable_buffers_1&lt;/code&gt; を使用したときの &lt;code&gt;asio::buffer&lt;/code&gt; オーバーロードの選択を修正&lt;/li&gt;
&lt;li&gt;古い Windows をターゲットにしていない限り、現在の Windows バージョンのランタイムチェックを無効にした&lt;/li&gt;
&lt;li&gt;バッファードストリームラッパーと&lt;code&gt;ssl::stream&amp;lt;&amp;gt;&lt;/code&gt;のようなムーブ構築可能なストリームとの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::async_accept&lt;/code&gt; の戻り値の型が推論されるラムダとの互換性を修正&lt;/li&gt;
&lt;li&gt;レガシーな完了トークンの &lt;code&gt;as_tuple&lt;/code&gt; との互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redirect_error&lt;/code&gt; と新しい完了トークンとの互換性を修正&lt;/li&gt;
&lt;li&gt;デストラクタからのエスケープが許可されるべき例外による Windows 特有のプログラム終了の可能性を修正した&lt;/li&gt;
&lt;li&gt;ブール式の不用意な &lt;code&gt;co_await&lt;/code&gt; を防止した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::use_coro&lt;/code&gt;の結果処理とカスタムアロケータのサポートを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_async_operation&lt;/code&gt; と &lt;code&gt;completion_signature_of&lt;/code&gt; の可変引数テンプレートエミュレーション修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;のmove-from結果の不正な再利用を修正した&lt;/li&gt;
&lt;li&gt;カスタムアロケータを使用した &lt;code&gt;experimental::coro&lt;/code&gt; を修正した&lt;/li&gt;
&lt;li&gt;Windows のストリーム指向ファイルでの &lt;code&gt;seek_cur&lt;/code&gt; の挙動を修正した&lt;/li&gt;
&lt;li&gt;ドキュメントに様々な追加と修正を行った&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AVX をサポートする x86 ターゲット用にコンパイルされた場合、128 ビットのアトミックロードとストアにベクタ命令が使用されるようになった&lt;/li&gt;
&lt;li&gt;32-bit x86 ターゲットでは、&lt;code&gt;memory_order_seq_cst&lt;/code&gt;セマンティクスを持つ 64-bit アトミックロードとストアは、メモリ順序付け命令を発行するようになった&lt;/li&gt;
&lt;li&gt;Boost.Atomic 1.73 で非推奨となった &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage()&lt;/code&gt; アクセッサと &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage_type&lt;/code&gt; 型を削除。代わりに &lt;code&gt;atomic&amp;lt;T&amp;gt;::value()&lt;/code&gt; と &lt;code&gt;atomic&amp;lt;T&amp;gt;::value_type&lt;/code&gt; を使用することを推奨&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;での&lt;code&gt;error_code&lt;/code&gt;の使用を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcp_stream&lt;/code&gt; が、タイマーの正しい実行形式を使用するよう修正&lt;/li&gt;
&lt;li&gt;error_categories が数値の ID を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt; にシークをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_value&lt;/code&gt;の&lt;code&gt;std::nullopt_t&lt;/code&gt;に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_tuple_like&lt;/code&gt;と、&lt;code&gt;hash_value&lt;/code&gt;のtuple-like型に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;のハッシュ化として、品質と速度の両方の改善のために&lt;code&gt;&lt;a href=&#34;https://github.com/pdimov/mulxp_hash&#34; target=&#34;_blank&#34;&gt;mulxp1_hash&lt;/a&gt;&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/core/snprintf.hpp&lt;/code&gt; ヘッダーを追加し、&lt;code&gt;snprintf&lt;/code&gt;、&lt;code&gt;vsnprintf&lt;/code&gt; およびそれらの &lt;code&gt;wchar_t&lt;/code&gt; 対応のポータブル定義を追加&lt;/li&gt;
&lt;li&gt;非推奨のヘッダ &lt;code&gt;boost/core/is_same.hpp&lt;/code&gt; と &lt;code&gt;boost::core::is_same&lt;/code&gt; は将来のリリースで削除される予定&lt;ul&gt;
&lt;li&gt;代わりに Boost.TypeTraits または C++ 標準ライブラリの型付けを使用することを推奨する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::ref&lt;/code&gt; のメンバ関数と関連するメンバ関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::swap&lt;/code&gt; 関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた。これは、型が例外を投げないスワップ操作をサポートしているかどうかによって異なる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::core::launder&lt;/code&gt; のポータブルな実装を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alignof&lt;/code&gt; のポータブルな実装である &lt;code&gt;BOOST_CORE_ALIGNOF&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::max_align_t&lt;/code&gt; の移植版である &lt;code&gt;boost::core::max_align_t&lt;/code&gt; と、 &lt;code&gt;max_align_t&lt;/code&gt; のアライメントである &lt;code&gt;boost::core::max_align&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;C++17 の &lt;code&gt;std::pmr::memory_resource&lt;/code&gt; と同等の移植性を持つ &lt;code&gt;boost::core::memory_resource&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/serialization.hpp&lt;/code&gt; を追加。これは、ライブラリがシリアライゼーションのヘッダを含めずに型の Boost.Serialization サポートを実装できるようにするプリミティブのコレクションであり、それによってライブラリがシリアライゼーションに依存するようにする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::data&lt;/code&gt;の実装である&lt;code&gt;boost::data&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::size&lt;/code&gt;の実装である&lt;code&gt;boost::size&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::span&lt;/code&gt; を更新し、 &lt;code&gt;std::initializer_list&lt;/code&gt; から範囲を作成するために &lt;code&gt;boost::data&lt;/code&gt; を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::identity&lt;/code&gt;の実装である &lt;code&gt;boost::identity&lt;/code&gt; を追加しました。この機能は Boost.Functional から移動した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; &lt;code&gt;size_t&lt;/code&gt;から&lt;code&gt;uint32_t&lt;/code&gt;への暗黙変換を回避。Travers Biddle氏のPull Requestに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; パス変換のコンストラクタ引数が寛容すぎるために発生するコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; [v4] &lt;code&gt;path::remove_filename&lt;/code&gt; が末尾のディレクトリセパレータを保持するようになった&lt;/li&gt;
&lt;li&gt;パスからファイル名とそれに先立つディレクトリセパレータを削除する &lt;code&gt;path::remove_filename_and_trailing_separators&lt;/code&gt; を追加。この動作は Filesystem v3 の &lt;code&gt;path::remove_filename&lt;/code&gt; と似ているが、v4 でも使用可能&lt;/li&gt;
&lt;li&gt;パス中のファイル名を置換する &lt;code&gt;path::replace_filename&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt; ODR 違反を避けるために、ライブラリのバージョン選択の実装を更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/282&#34; target=&#34;_blank&#34;&gt;GitHub #282&lt;/a&gt; Windowsにおいて、SMBv1共有のファイルの属性を照会する際の回避策を追加。以前は、SMBv1共有のディレクトリは、通常のファイルとして報告される可能性があった。これは、SMBv2以降には影響しない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;大きな改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1045&#34; target=&#34;_blank&#34;&gt;GitHub #1045&lt;/a&gt; (multi)linestringsと(multi)polygons向けにgeographic bufferをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1114&#34; target=&#34;_blank&#34;&gt;GitHub #1114&lt;/a&gt; 距離比較 : dynamic geometriesのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1046&#34; target=&#34;_blank&#34;&gt;GitHub #1046&lt;/a&gt; &lt;code&gt;covered_by()&lt;/code&gt;に&lt;code&gt;box&lt;/code&gt;をサポートし、ジオメトリの組み合わせが増えた&lt;ul&gt;
&lt;li&gt;&lt;code&gt;covered_by(box, areal)&lt;/code&gt; (cartesian CSのみ)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;covered_by(geometry, box)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/705&#34; target=&#34;_blank&#34;&gt;GitHub #705&lt;/a&gt; WKT : タブと改行を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; union向けの修正&lt;/li&gt;
&lt;li&gt;サンプルコードに対して様々な修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;空の多角形のWKT出力表現が&lt;code&gt;POLYGON()&lt;/code&gt;になり、他のジオメトリとの整合性が取れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail::span&lt;/code&gt; と &lt;code&gt;detail::make_span&lt;/code&gt; を &lt;code&gt;boost::core&lt;/code&gt; の実装に置き換えた&lt;/li&gt;
&lt;li&gt;ドキュメントを改善&lt;/li&gt;
&lt;li&gt;いくつかのケースで &lt;code&gt;std::min&lt;/code&gt; と &lt;code&gt;std::max&lt;/code&gt; の使い方を保護&lt;ul&gt;
&lt;li&gt;Han Jiang 氏による貢献 (min,max マクロは一般的な Windows ヘッダーによって不正に設定されるので、回避する必要がある)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;今後、ライブラリ内で保護されていないmin,maxトークンの使用を検出するテストを追加&lt;/li&gt;
&lt;li&gt;最新の clang-14 と gcc-11+ の推論ガイドをサポートするように修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set_at_pointer&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;呼び出し元が提供するシリアライザーストレージをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;向けに欠落要素のための&lt;code&gt;value_to&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;エスケープ文字の内部でパーサーが中断する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sentinel()&lt;/code&gt;がユニークなポインタを返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/144&#34; target=&#34;_blank&#34;&gt;GitHub #144&lt;/a&gt; &lt;code&gt;get_system_locale&lt;/code&gt; およびその依存ファイルは、POSIX で定義された &lt;code&gt;$LC_CTYPE&lt;/code&gt; よりも &lt;code&gt;$LC_ALL&lt;/code&gt; を正しく優先するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;utf8_codecvt::out&lt;/code&gt; は末尾の (UTF) サロゲートに対して &lt;code&gt;partial&lt;/code&gt; を返すようになった&lt;/li&gt;
&lt;li&gt;ロケールを解析するために &lt;code&gt;boost::locale::util::locale_data&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::locale::info::encoding()&lt;/code&gt; の結果が大文字であることをドキュメント化。例として&lt;code&gt;&#34;utf-8&#34;&lt;/code&gt;ではなく&lt;code&gt;&#34;UTF-8&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; M49の国コード（&lt;code&gt;en_001&lt;/code&gt;や&lt;code&gt;en_150&lt;/code&gt;など）に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; &lt;code&gt;en_US_POSIX&lt;/code&gt; を &lt;code&gt;C&lt;/code&gt; ロケールのエイリアスとして扱うようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt; セグメンテーションのサポートがない場合（ICUがない場合）のエラーを改善した&lt;/li&gt;
&lt;li&gt;コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多項式評価のためのEstrin&#39;s methodを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/939&#34; target=&#34;_blank&#34;&gt;GitHub #939&lt;/a&gt; 非心分布 (non-central distributions) のさまざまな問題を修正し、より大きな非心分布に対応できるようにした&lt;/li&gt;
&lt;li&gt;CMake install targetを追加&lt;/li&gt;
&lt;li&gt;例外のない環境で使用できないものを無効化するために &lt;code&gt;special_functions.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;C++14で条件番号の計算 (condition number calculation) が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/923&#34; target=&#34;_blank&#34;&gt;GitHub #923&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt; テーブル駆動関数を修正し、コードが実際には &lt;code&gt;constexpr&lt;/code&gt; でない場合に大幅な速度低下を避けるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/894&#34; target=&#34;_blank&#34;&gt;GitHub #894&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の境界処理を改善&lt;/li&gt;
&lt;li&gt;Linux arm64、s390x、Apple M1 のテストを追加し、128ビット&lt;code&gt;long double&lt;/code&gt;を扱うテストケースを修正&lt;/li&gt;
&lt;li&gt;無限大とNaNをより良く扱うために&lt;code&gt;constexpr&lt;/code&gt;数学関数を改善&lt;/li&gt;
&lt;li&gt;積分器 (integrators) をconst-correctにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/898&#34; target=&#34;_blank&#34;&gt;GitHub #898&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の積分器がアンダーフローする問題を修正&lt;/li&gt;
&lt;li&gt;いくつかのプラットフォームがまだサポートしていないため、&lt;code&gt;std::cbrt&lt;/code&gt;を使用しないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/892&#34; target=&#34;_blank&#34;&gt;GitHub #892&lt;/a&gt; 非心t (non-central T) が偽 (spurious) の &lt;code&gt;FE_INVALID&lt;/code&gt; 例外を発生させるのを止めた&lt;/li&gt;
&lt;li&gt;二項分布のエッジケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/884&#34; target=&#34;_blank&#34;&gt;GitHub #884&lt;/a&gt; &lt;code&gt;ibeta&lt;/code&gt;の非常に小さな引数の取り扱いを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta&lt;/code&gt;での無限大とNaNの取り扱いを改善 [@https://github.com/boostorg/math/issues/878 874]を参照してください.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/781&#34; target=&#34;_blank&#34;&gt;GitHub #781&lt;/a&gt; &lt;code&gt;powm1&lt;/code&gt;のエラーハンドリングを改善&lt;/li&gt;
&lt;li&gt;指数が超大きい (super large)、または小さいときに、root finder bracketingをより速くブラケットするよう改善&lt;/li&gt;
&lt;li&gt;root finderのエッジケースを修正&lt;/li&gt;
&lt;li&gt;多くの雑多な警告を修正&lt;/li&gt;
&lt;li&gt;C++17を必要とする機能を使用する際にアサーションを追加し、古い標準バージョンでコンパイラを起動したときのエラーメッセージを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シリアライズで&lt;code&gt;collection_size_type&lt;/code&gt;の代わりに&lt;code&gt;unsigned long&lt;/code&gt;を使用するようにし、この変更にともなって&lt;code&gt;multi_index_container&lt;/code&gt;のシリアライズバージョンを2から3に上げた。&lt;code&gt;collection_size_type&lt;/code&gt;の値を特別扱いするカスタムアーカイブ型では、古いアーカイブの読み込みに失敗することがある。そのような場合は、読み出し操作の後方互換性を確保するためにマクロ &lt;code&gt;BOOST_MULTI_INDEX_ENABLE_SERIALIZATION_COMPATIBILITY_V2&lt;/code&gt; をグローバル定義する&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たに先行宣言のヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/479&#34; target=&#34;_blank&#34;&gt;GitHub #479&lt;/a&gt; Eigenとの相互運用性を更新し、Eigenの詳細に依存しないよう修正&lt;/li&gt;
&lt;li&gt;Cmake install targetを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; スタンドアロンの場合の文字列からの&lt;code&gt;cpp_dec_float&lt;/code&gt;構築を修正し、より良いエラーハンドリングを実現した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; C++17モードでの冗長な定義を削除&lt;/li&gt;
&lt;li&gt;スタンドアローンの &lt;code&gt;itrunc&lt;/code&gt; と &lt;code&gt;ltrunc&lt;/code&gt; のエラーハンドリングを修正&lt;/li&gt;
&lt;li&gt;8進数文字列の解析時に初期化されない可能性があるストレージを修正&lt;/li&gt;
&lt;li&gt;arm64 と s390x の CI テストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; &lt;code&gt;powm&lt;/code&gt; のために不足していた式テンプレートの展開コードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convert_string&lt;/code&gt;に&lt;code&gt;(std::)string&lt;/code&gt;のインスタンスをとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;std::filesystem&lt;/code&gt;もしくは&lt;code&gt;boost::filesystem&lt;/code&gt;) のストリームへの (UTF-8) &lt;code&gt;quoted&lt;/code&gt;出力を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost::pfr::is_implicitly_reflectable&lt;/code&gt; を実装し、集成体をリフレクト可能か否かに特殊化させる機構を実装。Denis Mikhailov氏のPRに感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::pfr::get&lt;/code&gt; を集成体の要素の型に対して実装&lt;/li&gt;
&lt;li&gt;リフレクションのライブラリサポートを検出するために &lt;code&gt;BOOST_PFR_ENABLED&lt;/code&gt; マクロを実装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/114&#34; target=&#34;_blank&#34;&gt;GitHub #114&lt;/a&gt; 終端文字の欠落を修正。PR をくれた Denis Mikhailov 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/118&#34; target=&#34;_blank&#34;&gt;GitHub #118&lt;/a&gt; 古いコンパイラでの &lt;code&gt;boost/pfr/config.hpp&lt;/code&gt; のコンパイルを修正。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/119&#34; target=&#34;_blank&#34;&gt;GitHub #119&lt;/a&gt; 古いコンパイラで壊れた C++17 構造化束縛の回避策を追加。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/117&#34; target=&#34;_blank&#34;&gt;GitHub #117&lt;/a&gt; &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt;の警告を回避。Markus F.X.J. Oberhumer 氏による PR に感謝&lt;/li&gt;
&lt;li&gt;複数のタイプミスを修正。Denis Mikhailov氏の修正に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; 不足していた &lt;code&gt;#pragma once&lt;/code&gt; を追加。PR をくれた &lt;a href=&#34;https://github.com/caozhanhao&#34; target=&#34;_blank&#34;&gt;caozhanhao&lt;/a&gt; 氏に感謝&lt;/li&gt;
&lt;li&gt;ドキュメントの複数の修正と改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;V2 に外部プロセスの管理機能を追加（まだ実験中）&lt;/li&gt;
&lt;li&gt;V1 では &lt;code&gt;wait_for&lt;/code&gt; と &lt;code&gt;wait_until&lt;/code&gt; を非推奨とした。これらは将来的に削除される予定です！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; ドキュメントとコメントの誤字を修正。PRをくれたChocobo1氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_FORCE_STATIC&lt;/code&gt; が定義されている場合の &lt;code&gt;backtrace_create_state&lt;/code&gt; のマルチスレッドフラグの検出を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#static_string&#34; id=&#34;static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Coreの&lt;code&gt;string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の相互運用をできるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sprintf&lt;/code&gt;の非推奨の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_cstring::rfind&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;GitHub ActionsでのCIを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ノードベースで、オープンアドレッシングなコンテナ&lt;code&gt;boost::unordered_node_map&lt;/code&gt;と&lt;code&gt;boost::unordered_node_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2363r5.html&#34; target=&#34;_blank&#34;&gt;P2363&lt;/a&gt;で規定された異種混合ルックアップ (heterogeneous lookup) の拡張メンバ関数を追加&lt;/li&gt;
&lt;li&gt;オープンアドレッシングコンテナのpost-mixing前の処理を、定数による拡張乗算 (extended multiplication by a constant) に基づく新しいアルゴリズムに置き換えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;内部で、スタックローカル型がコンテナのアロケータを使用して適切に構築されず、&lt;code&gt;uses-allocator&lt;/code&gt; 構築を壊していたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#url&#34; id=&#34;url&#34;&gt;URL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自動的に%のエンコーディングを行う&lt;code&gt;url::format&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;URL routerの例を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_params&lt;/code&gt;便利関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_view&lt;/code&gt;への暗黙変換をサポート&lt;/li&gt;
&lt;li&gt;パースコンストラクタをimplicitにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_token::arg&lt;/code&gt;が仮想デストラクタとslice protectionを持つようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_URL_DISABLE_THREADS&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;改善とバグ修正：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt;が再定義された警告を修正&lt;/li&gt;
&lt;li&gt;欠落 (absent) と空 (empty) のコンポーネントの差分比較&lt;/li&gt;
&lt;li&gt;空ポートのようなセグメントを持つ &lt;code&gt;hier_part_rule&lt;/code&gt; を検出&lt;/li&gt;
&lt;li&gt;root上で正規化した場合のセグメント比較&lt;/li&gt;
&lt;li&gt;hier-part path-rootless は無効なセグメントを考慮するよう修正&lt;/li&gt;
&lt;li&gt;オーバーフローした場合に、ポート番号を0にするよう修正&lt;/li&gt;
&lt;li&gt;ipv4 から文字列のオーバーフローを検出するアルゴリズム&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; 非推奨の &lt;code&gt;utility/addressof&lt;/code&gt; の代わりに &lt;code&gt;core/addressof&lt;/code&gt; を使用するようになった。PR をくれた Michael Ford 氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.9.4をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.73.0リリースノート -- リンクの修正</title>
      <link href="https://boostjp.github.io/document/version/1_73_0.html"/>
      <id>3340a1410f19ad3ac307a3d71d87f1dd5076bf09:document/version/1_73_0.md</id>
      <updated>2025-05-27T01:12:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_73_0.md b/document/version/1_73_0.md
index e7d5b8b..ccef928 100644
--- a/document/version/1_73_0.md
+++ b/document/version/1_73_0.md
@@ -361,7 +361,7 @@
 
 ## &amp;lt;a id=&amp;#34;multi-index&amp;#34; href=&amp;#34;#multi-index&amp;#34;&amp;gt;Multi-index&amp;lt;/a&amp;gt;
 
-- `multi_index_container`を[アロケータの状態を伝播する](ttps://en.cppreference.com/w/cpp/named_req/AllocatorAwareContainer)ようにした
+- `multi_index_container`を[アロケータの状態を伝播する](https://en.cppreference.com/w/cpp/named_req/AllocatorAwareContainer)ようにした
 - [GitHub #29](https://github.com/boostorg/multi_index/issues/29) `[[swappable.requirements]]`の標準仕様に従って、`KeyFromValue`、`Compare`、`Hash`、`Pred`の内部オブジェクトをswapする際に、`std::swap`とADLによって見つかる`swap`で適切に選択するようにした
 - 一部のコンパイラで警告が起きていた、C++11で非推奨となったデフォルトで暗黙定義される内部的なコピーコンストラクタと代入演算子のいくつかを、提供するようにした
 - メンテナンス上の修正
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.45.0 リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_45_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_45_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.45.0 リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：
&lt;a href=&#34;http://svn.boost.org/svn/boost/website/public_html/beta/feed/history/boost_1_45_0.qbk&#34; target=&#34;_blank&#34;&gt;http://beta.boost.org/users/news/version_1_45_0&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filesystem&#34;&gt;Filesystem(+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#foreach&#34;&gt;Foreach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#msm&#34;&gt;Meta State Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#polygon&#34;&gt;Polygon(+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#property-tree&#34;&gt;Property Tree(+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#proto&#34;&gt;Proto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#serialization&#34;&gt;Serialization(+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#thread&#34;&gt;Thread(+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type-traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ublas&#34;&gt;uBLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xpressive&#34;&gt;Xpressive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#boostbook&#34;&gt;Boostbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#quickbook&#34;&gt;Quickbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;kqueueベースプラットフォームにおいて、&lt;code&gt;io_service&lt;/code&gt;がバックグラウンドスレッドで走っている場合に&lt;code&gt;deadline_timer&lt;/code&gt;が着火しないかもしれない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4568&#34; target=&#34;_blank&#34;&gt;#4568&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt;メンバ関数である&lt;code&gt;has_service()&lt;/code&gt;中で、非constメンバ関数である&lt;code&gt;init_key()&lt;/code&gt;を呼んでいたためコンパイルエラーになっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4638&#34; target=&#34;_blank&#34;&gt;#4638&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;MinGWのクロスコンパイルを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4491&#34; target=&#34;_blank&#34;&gt;#4491&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Boost.Systemの非推奨関数に依存していた部分を削除(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4672&#34; target=&#34;_blank&#34;&gt;#4672&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;close()&lt;/code&gt;/&lt;code&gt;closesocket()&lt;/code&gt;の失敗を正しく伝播されることを保証(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4573&#34; target=&#34;_blank&#34;&gt;#4573&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;InitializeCriticalSectionAndSpinCount&lt;/code&gt;によって返されたエラー値のチェックを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4574&#34; target=&#34;_blank&#34;&gt;#4574&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;QNXのハードウェア制御フローサポートを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4625&#34; target=&#34;_blank&#34;&gt;#4625&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;HP-UX上で&lt;code&gt;pselect()&lt;/code&gt;が利用可能な場合、常にそれを使用するようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4578&#34; target=&#34;_blank&#34;&gt;#4578&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;ハンドラ引数が左辺値として渡されることを保証(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4744&#34; target=&#34;_blank&#34;&gt;#4744&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;スレッドサポートが無効にされた場合のWindowsビルドを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4680&#34; target=&#34;_blank&#34;&gt;#4680&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;5分以上の未来が指定された場合、&lt;code&gt;deadline_timer&lt;/code&gt;オブジェクトが終了しないことがあるWindows特有の問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4745&#34; target=&#34;_blank&#34;&gt;#4745&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;空のサービス名がポート番号0に解決されるよう、ドキュメントに従ってBSDプラットフォーム上のバックエンドを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4690&#34; target=&#34;_blank&#34;&gt;#4690&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const_buffers_1&lt;/code&gt;型のバッファシーケンスを受け入れないよう、&lt;code&gt;read&lt;/code&gt;操作を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4746&#34; target=&#34;_blank&#34;&gt;#4746&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Objective-C++のキーワードである&lt;code&gt;protocol&lt;/code&gt;と&lt;code&gt;id&lt;/code&gt;を避けるように再定義(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4191&#34; target=&#34;_blank&#34;&gt;#4191&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;実行中の&lt;code&gt;deadline_timer&lt;/code&gt;オブジェクトが数多くある場合に起こる、&lt;code&gt;vector&lt;/code&gt;の再確保問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4780&#34; target=&#34;_blank&#34;&gt;#4780&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;NetBSD上でコンパイルできるよう、kqueueバックエンドを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4662&#34; target=&#34;_blank&#34;&gt;#4662&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;64ビット Mac OS X、およびBSD上での&lt;code&gt;is_control()&lt;/code&gt;の実装を用意した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4782&#34; target=&#34;_blank&#34;&gt;#4782&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;boost/asio/impl/src.hpp&amp;gt;&lt;/code&gt;をサポートし、&lt;code&gt;&amp;lt;boost/asio/impl/src.cpp&amp;gt;&lt;/code&gt;を非推奨にした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4560&#34; target=&#34;_blank&#34;&gt;#4560&lt;/a&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#config&#34; id=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可変引数マクロが実装されているコンパイラかどうかを判定する&lt;code&gt;BOOST_NO_VARIADIC_MACROS&lt;/code&gt;マクロ追加。 &lt;/li&gt;
&lt;li&gt;C++0xから追加された&lt;code&gt;std::numeric_limits&amp;lt;T&amp;gt;::lowest()&lt;/code&gt;が実装されているかどうかを判定する&lt;code&gt;BOOST_NO_NUMERIC_LIMITS_LOWEST&lt;/code&gt;マクロ追加。 &lt;/li&gt;
&lt;li&gt;OpenVMS環境でのコンフィグレーションサポートを追加。&lt;code&gt;boost/config/platform/vms.hpp&lt;/code&gt;(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4474&#34; target=&#34;_blank&#34;&gt;#4474&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cygwin + GCC環境でWIN32マクロが定義されないと仮定していたためリンクエラーを起こしていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4670&#34; target=&#34;_blank&#34;&gt;#4670&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/config/auto_link.hpp&lt;/code&gt;の&lt;code&gt;BOOST_AUTO_TAGGED&lt;/code&gt;で、「&lt;code&gt;#pragma commentcomment&lt;/code&gt;」になっていたのを「&lt;code&gt;#pragma comment&lt;/code&gt;」に修正。VC8ではunknown pragma警告が出ていた。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4563&#34; target=&#34;_blank&#34;&gt;#4653&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/config/platform/bsd.hpp&lt;/code&gt;で&lt;code&gt;__NetBSD_GCC__&lt;/code&gt;がdefineされていると仮定して書かれていたため、OpenBSD環境でコンパイルエラーになっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4508&#34; target=&#34;_blank&#34;&gt;#4508&lt;/a&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem(+)&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path_traits::is_pathable&lt;/code&gt;を追加した。&lt;code&gt;path&lt;/code&gt;メンバテンプレートが非pathableな型でオーバーロード解決されるのを防ぐためにこれを使用する。この問題は、Adam Baduraによって報告された(rev.64986)。&lt;/li&gt;
&lt;li&gt;古いWindows SDKに関するV2 create_hard_linkの問題を解決(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4487&#34; target=&#34;_blank&#34;&gt;#4487&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Boost.Mathで発生していた&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4799&#34; target=&#34;_blank&#34;&gt;#4799&lt;/a&gt;のリンクエラーと同じ問題が、他3箇所でも発生していたので修正。&lt;/li&gt;
&lt;li&gt;Boost 1.44.0でV3を追加した際に、V2の&lt;code&gt;boost::filesystem::slash&lt;/code&gt;が見つからないというコンパイルエラーが出ていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4712&#34; target=&#34;_blank&#34;&gt;#4712&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;不正にsymlinkと識別されるfilesystemオブジェクトの問題を修正し、テストを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4663&#34; target=&#34;_blank&#34;&gt;#4663&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;temp_directory_path&lt;/code&gt;関数を追加(rev.66028)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;チケット&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4606&#34; target=&#34;_blank&#34;&gt;#4606&lt;/a&gt;で記述されたBoost.Interprocessと関係する、Win32プラットフォーム上で &lt;code&gt;&lt;a href=&#34;http://beta.boost.org/libs/flyweight/doc/tutorial/configuration.html#intermodule_holder&#34; target=&#34;_blank&#34;&gt;intermodule_holder&lt;/a&gt;&lt;/code&gt; のぶら下がり問題を修正。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::exit&lt;/code&gt;によって、非互換の内部拡張によるプログラム終了を削除。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#foreach&#34; id=&#34;foreach&#34;&gt;Foreach&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;auto_any&lt;/code&gt;のコンストラクタを&lt;code&gt;explicit&lt;/code&gt;に修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;private&lt;/code&gt;メンバ変数を持つクラスをRandom Access Sequenceとしてアダプトする、&lt;code&gt;BOOST_FUSION_ADAPT_ADT&lt;/code&gt;マクロを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;private&lt;/code&gt;メンバ変数を持つクラステンプレートをRandom Access Sequenceとしてアダプトする、&lt;code&gt;BOOST_FUSION_ADAPT_TPL_ADT&lt;/code&gt;マクロを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;private&lt;/code&gt;メンバ変数を持つクラスをRandom Access SequenceかつAssociative Sequenceとしてアダプトする、&lt;code&gt;BOOST_FUSION_ADAPT_ASSOC_ADT&lt;/code&gt;マクロを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;private&lt;/code&gt;メンバ変数を持つクラステンプレートをRandom Access SequenceかつAssociative Sequenceとしてアダプトする、&lt;code&gt;BOOST_FUSION_ADAPT_ASSOC_TPL_ADT&lt;/code&gt;マクロを追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Daniel TrebbienによるStoer-Wagnerの最小カットを求めるアルゴリズム(無向グラフを二つに分けたときに、重みが最小になるような分け方を求める)を追加。&lt;/li&gt;
&lt;li&gt;W. P. McNeillによる暗黙的グラフ(&lt;code&gt;implicit_graph&lt;/code&gt;)(メモリをあまり使わないグラフ)と&lt;code&gt;A*&lt;/code&gt;(astar_maze)(最短経路を求めるアルゴリズム)のサンプルを追加。&lt;/li&gt;
&lt;li&gt;グラフのプロパティのための、バンドルされたプロパティ（？）の追加。&lt;ul&gt;
&lt;li&gt;→&lt;strong&gt;補足(Akira)&lt;/strong&gt;： 分散グラフの&lt;code&gt;compressed_sparse_row_graph&lt;/code&gt;に&lt;code&gt;graph_bundled&lt;/code&gt;プロパティを追加。分散グラフの方はold-styleのプロパティを持たないので、非分散グラフとインタフェースを合わせるために持たせただけ(rev.65764)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4556&#34; target=&#34;_blank&#34;&gt;#4556&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4622&#34; target=&#34;_blank&#34;&gt;#4622&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4631&#34; target=&#34;_blank&#34;&gt;#4631&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4715&#34; target=&#34;_blank&#34;&gt;#4715&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4753&#34; target=&#34;_blank&#34;&gt;#4753&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4758&#34; target=&#34;_blank&#34;&gt;#4758&lt;/a&gt; 及び &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4793&#34; target=&#34;_blank&#34;&gt;#4793&lt;/a&gt;と、Tracに登録されていないバグを修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4731&#34; target=&#34;_blank&#34;&gt;#4731&lt;/a&gt; と &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4737&#34; target=&#34;_blank&#34;&gt;#4737&lt;/a&gt;の、ドキュメントのバグを修正。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#interprocess&#34; id=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Win32環境において、グローバルなファイルマッピングが行えない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/1080&#34; target=&#34;_blank&#34;&gt;#1080&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interprocess::shared_memory_mapping::get_size&lt;/code&gt;のドキュメントがおかしかったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3284&#34; target=&#34;_blank&#34;&gt;#3284&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;named semaphoreの説明に、named conditionが出てきていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3439&#34; target=&#34;_blank&#34;&gt;#3439&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interprocess_condition&lt;/code&gt;がデッドロックを起こしていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3448&#34; target=&#34;_blank&#34;&gt;#3448&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;同じファイルがほかのところで閉じられると、排他的な&lt;code&gt;file_lock&lt;/code&gt;が失われてしまう問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3582&#34; target=&#34;_blank&#34;&gt;#3582&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;destroy_ptr&lt;/code&gt;時にセグメンテーションフォルトになっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3682&#34; target=&#34;_blank&#34;&gt;#3682&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;windows_shared_memory&lt;/code&gt;のムーブコンストラクタで、初期化されてないハンドルで&lt;code&gt;swap&lt;/code&gt;していた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3829&#34; target=&#34;_blank&#34;&gt;#3829&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getline&lt;/code&gt;内で、変数が二重定義されていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3846&#34; target=&#34;_blank&#34;&gt;#3846&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message_queue&lt;/code&gt;にセキュリティ属性を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3914&#34; target=&#34;_blank&#34;&gt;#3914&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;offset_ptr&lt;/code&gt;の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;が動いていなかった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3947&#34; target=&#34;_blank&#34;&gt;#3947&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mapped_region&lt;/code&gt;のデストラクタが、そうするべきではないところで&lt;code&gt;shm&lt;/code&gt;を&lt;code&gt;delete&lt;/code&gt;していた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3950&#34; target=&#34;_blank&#34;&gt;#3950&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;managed_shared_memory&lt;/code&gt;の&lt;code&gt;find&lt;/code&gt;が、GCCの最適化によって&lt;code&gt;assert&lt;/code&gt;に引っかかっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3951&#34; target=&#34;_blank&#34;&gt;#3951&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;非推奨となっているBoost.Configの&lt;code&gt;BOOST_HAS_*&lt;/code&gt;マクロを使用していたのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3985&#34; target=&#34;_blank&#34;&gt;#3985&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message_queue&lt;/code&gt;のために、bootstamp名のフォルダを使用していたため、長時間動かすようなシステムで突然動かなくなってしまう問題があったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4010&#34; target=&#34;_blank&#34;&gt;#4010&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4352&#34; target=&#34;_blank&#34;&gt;#4352&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_mapping&lt;/code&gt;がVC10でコンパイルエラーになっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4417&#34; target=&#34;_blank&#34;&gt;#4417&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;例外メッセージをいくつか追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4019&#34; target=&#34;_blank&#34;&gt;#4019&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_mutex&lt;/code&gt;が冬眠していた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4039&#34; target=&#34;_blank&#34;&gt;#4039&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Linux版の&lt;code&gt;set_file_pointer&lt;/code&gt;の結果判定が間違っていたため、成功しても失敗で返っていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4218&#34; target=&#34;_blank&#34;&gt;#4218&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swap&lt;/code&gt;時に&lt;code&gt;operator==&lt;/code&gt;がないというコンパイルエラーになっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4230&#34; target=&#34;_blank&#34;&gt;#4230&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;プログラムを実行したユーザーの権限でtmpフォルダが作られていたため、ユーザーを切り替えるとそのフォルダにアクセスできなくなる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4250&#34; target=&#34;_blank&#34;&gt;#4250&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;boost/interprocess/mem_algo/rbtree_best_fit.hpp&amp;gt;&lt;/code&gt;の警告をとった(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4297&#34; target=&#34;_blank&#34;&gt;#4297&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;パーミッションを指定できるようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4350&#34; target=&#34;_blank&#34;&gt;#4350&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;GCC 4.6でコンパイルエラーになっていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4426&#34; target=&#34;_blank&#34;&gt;#4426&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;MinGWでregression testがリンクエラーになる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4516&#34; target=&#34;_blank&#34;&gt;#4516&lt;/a&gt;) ←&lt;span style=&#34;color:red;&#34;&gt;直ってないぞ、と言われている…。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interprocess::interprocess_semaphore&lt;/code&gt;が&lt;code&gt;wait&lt;/code&gt;してる間CPUを消費する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4524&#34; target=&#34;_blank&#34;&gt;#4524&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ENABLE_ASSERT_HANDLER&lt;/code&gt;をdefineしたらコンパイルエラーになっていたので、Interprocess内の&lt;code&gt;assert&lt;/code&gt;を全て&lt;code&gt;BOOST_ASSERT&lt;/code&gt;に置き換えた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4557&#34; target=&#34;_blank&#34;&gt;#4557&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Flyweightと合わせて、&lt;code&gt;test_intermod_holder&lt;/code&gt;のregression testが通らなかったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4606&#34; target=&#34;_blank&#34;&gt;#4606&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::interprocess::winapi::get_last_bootup_time(std::wstring&amp;amp;)&lt;/code&gt;のregression testが通らなかったので修正&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4685&#34; target=&#34;_blank&#34;&gt;(#4685&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Jailed FreeBSD環境でregression testが通らなかった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4694&#34; target=&#34;_blank&#34;&gt;#4694&lt;/a&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ムーブセマンティクスに対応(GCC 4.5とVC10でテストしてある)&lt;/li&gt;
&lt;li&gt;interprocess named resourceのためにパーミッションを可能にした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mapped_region::flush&lt;/code&gt;が汎用的な実装ではなかったので修正。&lt;/li&gt;
&lt;li&gt;FreeBSDとMacOS環境においてnamed semaphoreとmutexを実装するためにposix semaphoreを使用するようにした。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;逆ガンマ分布(inverse gamma distribution)、逆カイ二乗(inverse chi square)、Scaled逆カイ二乗(scaled inverse chi square)を追加。&lt;/li&gt;
&lt;li&gt;標準乱数ライブラリでの分布と関数の名前における曖昧さへの更なる警告を追加。&lt;/li&gt;
&lt;li&gt;ドキュメントのリビジョン修正と、FAQの追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#msm&#34; id=&#34;msm&#34;&gt;Meta State Machine&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シリアライズに対応。&lt;/li&gt;
&lt;li&gt;eUMLのアクションに通常の関数オブジェクトを使用できるようにした。&lt;/li&gt;
&lt;li&gt;引数としてサブ状態、サブ状態マシンをとるコンストラクタを追加。これによって引数をサブ状態マシンに渡すことができる。&lt;/li&gt;
&lt;li&gt;Bugfixes (anonymous transitions) ←なにこれ？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multi-array&#34; id=&#34;multi-array&#34;&gt;Multi Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3581&#34; target=&#34;_blank&#34;&gt;#3581&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3820&#34; target=&#34;_blank&#34;&gt;#3820&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3989&#34; target=&#34;_blank&#34;&gt;#3989&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4032&#34; target=&#34;_blank&#34;&gt;#4032&lt;/a&gt; のバグと、Trac に登録されていないその他のバグを修正（←その他のバグってなんやねん！）。&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3581&#34; target=&#34;_blank&#34;&gt;#3581&lt;/a&gt; ―― &lt;a href=&#34;http://www.boost.org/doc/libs/1_40_0/libs/multi_array/doc/user.html#sec_storage&#34; target=&#34;_blank&#34;&gt;boost::fortran_storage_order example&lt;/a&gt; のサンプルが間違っている（&lt;code&gt;boost::fortran_storage_order&lt;/code&gt; ではなく &lt;code&gt;boost::fortran_storage_order()&lt;/code&gt;）のを修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3820&#34; target=&#34;_blank&#34;&gt;#3820&lt;/a&gt; ―― &lt;a href=&#34;http://www.boost.org/doc/libs/1_41_0/libs/multi_array/doc/reference.html&#34; target=&#34;_blank&#34;&gt;Boost.MultiArray Reference Manual&lt;/a&gt; で &lt;code&gt;std::times&lt;/code&gt; を使っているが、これは標準の関数ではないので &lt;code&gt;std::multiplies&lt;/code&gt; に修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3989&#34; target=&#34;_blank&#34;&gt;#3989&lt;/a&gt; ―― &lt;code&gt;detail/ptree_implementation.hpp&lt;/code&gt; でメンバ呼び出しの際に &lt;code&gt;template&lt;/code&gt; が無いのと、&lt;code&gt;libs/multi_array/example/for_each.hpp&lt;/code&gt; で &lt;code&gt;typename&lt;/code&gt; が無いのを修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4032&#34; target=&#34;_blank&#34;&gt;#4032&lt;/a&gt; ―― &lt;code&gt;boost::detail::ConstMultiArrayConcept&lt;/code&gt; と &lt;code&gt;boost::detail::MutableMultiArrayConcept&lt;/code&gt; はよく使うものなので Boost.ConceptCheck へ移動。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新しいサンプルとテストケースを追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;リリースノートに載ってない変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;negative strideを適切に処理するために、&lt;code&gt;generate_array_view&lt;/code&gt;の&lt;code&gt;assert&lt;/code&gt;を修正(rev.53879)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;generate_array_view&lt;/code&gt;において、合法な範囲(legal range)を考慮するとき、リサイズが空の配列から始まるのを説明する必要がある、ということで小さな修正を行った(rev.62963)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#polygon&#34; id=&#34;polygon&#34;&gt;Polygon(+)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;リリースノートに記載されていない更新：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.44.0リリース以降の様々なバグを修正(rev.66403) ←なんですかそれ…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#property-tree&#34; id=&#34;property-tree&#34;&gt;Property Tree(+)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;リリースノートに記載されていない更新：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XMLパーサーがi18nに対応していなかった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4340&#34; target=&#34;_blank&#34;&gt;#4340&lt;/a&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#proto&#34; id=&#34;proto&#34;&gt;Proto&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4602&#34; target=&#34;_blank&#34;&gt;#4602&lt;/a&gt; のバグを修正。&lt;code&gt;proto::N&lt;/code&gt; の大きな障害を取り除いた。&lt;/li&gt;
&lt;li&gt;RTTI のないコンパイラをサポート。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proto::matches&lt;/code&gt; の配列型とワイルドカードパターンのバグを修正。&lt;/li&gt;
&lt;li&gt;MSVC に &lt;code&gt;/clr&lt;/code&gt; オプションを付けた状態で Proto が動くように修正。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proto::eval&lt;/code&gt; のオーバーロードに const 修飾を追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#serialization&#34; id=&#34;serialization&#34;&gt;Serialization(+)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;リリースノートに記載されていない更新：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serializationの新しいバージョンをMPIで使うために同様の修正を行った(rev.65965)。&lt;/li&gt;
&lt;li&gt;XML構文を、Spirit.Qiで書き直した(rev.66030)。&lt;/li&gt;
&lt;li&gt;アーカイブバージョン1.41-, 1.42, 1.43,1.44+の互換性を修正(rev.66107)。&lt;/li&gt;
&lt;li&gt;MinGWのビルドを修正(rev.66123)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;optional attributeのSpirit.Qiデバッグ機能が壊れていたので修正&lt;/li&gt;
&lt;li&gt;Spirit.Qiの&lt;code&gt;auto&lt;/code&gt;パーサーおよびSpirit.Karmaの&lt;code&gt;auto&lt;/code&gt;ジェネレータが&lt;code&gt;signed char&lt;/code&gt;および&lt;code&gt;unsigned char&lt;/code&gt;で適切に動作するようになった。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multi_pass fixed_size_queue&lt;/code&gt;ポリシーの問題を解決した。 ←問題ってなんだ。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skip&lt;/code&gt;ディレクティブでproper modifier handlingが可能になった。 ←何それどこにも書いてない。&lt;/li&gt;
&lt;li&gt;Spirit.Karmaの浮動小数点数フォーマットにおいて、&lt;code&gt;scientific&lt;/code&gt;モードで出力したときの値に誤差がある問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4742&#34; target=&#34;_blank&#34;&gt;#4742&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repeat&lt;/code&gt;ディレクティブ中でのパース失敗時に&lt;code&gt;first&lt;/code&gt;イテレータがリセットされない問題を修正(&lt;a href=&#34;http://stackoverflow.com/questions/4009752/boost-spirit-bug-when-mixing-alternates-with-optionals&#34; target=&#34;_blank&#34;&gt;Stack Overflowを参照&lt;/a&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#thread&#34; id=&#34;thread&#34;&gt;Thread(+)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;リリースノートに記載されていない更新：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;thread_time.hpp&lt;/code&gt;が、&lt;code&gt;BOOST_DATE_TIME_HAS_HIGH_PRECISION_CLOCK&lt;/code&gt;がdefinedされていることに依存した実装になっていた問題を修正。Androidでのクロスコンパイルに失敗していた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4727/&#34; target=&#34;_blank&#34;&gt;#4727&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;raceを回避するために、&lt;code&gt;promise::lazy_init&lt;/code&gt;を&lt;code&gt;shared_ptr&lt;/code&gt;のatomic accessを使用するよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4531&#34; target=&#34;_blank&#34;&gt;#4531&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;condition_variable::wait&lt;/code&gt;の書き込み割り込みチェックの競合条件を削除(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2330&#34; target=&#34;_blank&#34;&gt;#2330&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type-traits&#34; id=&#34;type-traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;型に右辺値参照(&lt;code&gt;&amp;amp;&amp;amp;)&lt;/code&gt;を付加する&lt;code&gt;add_rvalue_reference&lt;/code&gt;メタ関数を追加。&lt;/li&gt;
&lt;li&gt;型に左辺値参照(&lt;code&gt;&amp;amp;&lt;/code&gt;)を追加する&lt;code&gt;add_lvalue_reference&lt;/code&gt;メタ関数を追加。&lt;/li&gt;
&lt;li&gt;可変個テンプレートパラメータを受け取り、それらが共通して変換可能な型を返す&lt;code&gt;common_type&lt;/code&gt;メタ関数を追加。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Boost.Ratioの実装に必要。このメタ関数の元ネタはD言語。&lt;/p&gt;
&lt;p&gt;参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kmonos.net/alang/d/2.0/phobos/std_traits.html#CommonType&#34; target=&#34;_blank&#34;&gt;template CommonType(T...) - std.traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2661.htm&#34; target=&#34;_blank&#34;&gt;N2661 A Foundation to Sleep On&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;マイナー修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;is_signed&lt;/code&gt;, &lt;code&gt;is_unsigned&lt;/code&gt;メタ関数の内部で&lt;code&gt;static const T&lt;/code&gt;を使用していたのを&lt;code&gt;BOOST_STATIC_CONSTANT&lt;/code&gt;に修正。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_virtual_base_of&lt;/code&gt;メタ関数の内部実装で使用する型名を変更。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#ublas&#34; id=&#34;ublas&#34;&gt;uBLAS&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;疎行列/パックド行列の行列要素割当て時に型変換エラーが起こる可能性がある問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4410&#34; target=&#34;_blank&#34;&gt;#4410&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;行列/ベクトル&amp;lt;-&amp;gt;スカラー間の&lt;code&gt;operator*&lt;/code&gt;を新規に提供(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3397&#34; target=&#34;_blank&#34;&gt;#3397&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/795&#34; target=&#34;_blank&#34;&gt;#795&lt;/a&gt;を修正(何も変わっていない。rejected?)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;matrix&amp;lt;complex&amp;gt;&lt;/code&gt;と&lt;code&gt;matrix&amp;lt;double&amp;gt;&lt;/code&gt;のように異なる型同士の四則演算を追加。また、テストを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3514&#34; target=&#34;_blank&#34;&gt;#3514&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;size&amp;lt;&amp;gt;&lt;/code&gt;演算子。たとえば、&lt;code&gt;size&amp;lt;1&amp;gt;(A+B)&lt;/code&gt;は、行列Aと行列Bの和の行の数を表します。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fix inserting from iterators which return by copy from &lt;code&gt;operator*&lt;/code&gt; in &lt;code&gt;boost::unordered_map&lt;/code&gt; and &lt;code&gt;boost::unordered_set&lt;/code&gt;. ←変更点を見たらTODOになってたので保留。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;V2.1.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++0xでの &lt;code&gt;pp_tokens&lt;/code&gt; の定義に従って形成されたトークン（列）である場合に限りトークン連結が妥当となるようにした。今までは &lt;code&gt;--variadic&lt;/code&gt; モードにおいて、非 &lt;code&gt;pp_tokens&lt;/code&gt; に対して（訳注：トークン（列）の）形成を許していた。&lt;/li&gt;
&lt;li&gt;マクロ定義中、 &lt;code&gt;/##/&lt;/code&gt; を不正なトークン連結として prevented reporting する問題を修正&lt;/li&gt;
&lt;li&gt;&#39;inactive&#39; conditional preprocessing directive tokens に対する &lt;code&gt;skipped_token&lt;/code&gt; フック呼び出し禁止の問題を修正。 conditional preprocessing directives 処理時における、 reporting skipped tokens 中の関数フックの全体的な整合性を向上した。 skipped_token フックの呼び出しを検証する新しいテストケースを追加した(t_2_020.cpp)。&lt;/li&gt;
&lt;li&gt;真で戻ってくる場合の &#39;expanding_object_like_macro&#39;, &#39;expanding_function_like_macrol&#39; pp フックが、正しくマクロ展開を抑制せずに全ての preprocessing を停止してしまうことによる問題を修正。&lt;/li&gt;
&lt;li&gt;inactive conditional branches 内部で preprocessing directives に対して skipped_token pp フックを重複して呼びだしているのを修正。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#xpressive&#34; id=&#34;xpressive&#34;&gt;Xpressive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::xpressive::as&amp;lt;T&amp;gt;&lt;/code&gt;が&lt;code&gt;std::wstring&lt;/code&gt;で動作していなかった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4496&#34; target=&#34;_blank&#34;&gt;#4496&lt;/a&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#boostbook&#34; id=&#34;boostbook&#34;&gt;Boostbook&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;コードブロック終了にあるコメントのシンタックスハイライトを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#quickbook&#34; id=&#34;quickbook&#34;&gt;Quickbook&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;コマンドラインマクロを修正&lt;/li&gt;
&lt;li&gt;ネストしたコードスニペット&lt;/li&gt;
&lt;li&gt;ネストしたドキュメンテーションコメント&lt;/li&gt;
&lt;li&gt;ドキュメント情報をエスケープするXMLを差し戻し。この問題はいくつかのドキュメントファイルを壊した(現在のバージョンは1.6)。&lt;/li&gt;
&lt;li&gt;他の小さな修正に関しては、&lt;a href=&#34;http://beta.boost.org/doc/html/quickbook/change_log.html#quickbook.change_log.releases.version_1_5_3___boost_1_45_0&#34; target=&#34;_blank&#34;&gt;修正履歴&lt;/a&gt;を参照。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;主要テストコンパイラ：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Linux:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.4.5, 4.5.1. &lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.0. &lt;/li&gt;
&lt;li&gt;Intel: 10.1, 11.0, 11.1 &lt;/li&gt;
&lt;li&gt;Pathscale: 3.2. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OS X: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: 4.0.1, 4.2.1, 4.4 &lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.4. &lt;/li&gt;
&lt;li&gt;Intel: 11.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0 and 10.0. &lt;/li&gt;
&lt;li&gt;GCC, mingw: 4.3.3. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FreeBSD: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: 4.2.1, 32 bit. &lt;/li&gt;
&lt;li&gt;GCC: 4.2.1, 64 bit.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;追加のテストコンパイラ：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Linux:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.4.5, 4.5.0, 4.6.0 (dev version). &lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.0. &lt;/li&gt;
&lt;li&gt;Intel: 10.1, 11.0, 11.1. &lt;/li&gt;
&lt;li&gt;pgCC 10.1. &lt;/li&gt;
&lt;li&gt;PathScale: 3.2. &lt;/li&gt;
&lt;li&gt;Clang from subversion.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OS X: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intel C++ Compiler: 10.1, 11.0, 11.1. &lt;/li&gt;
&lt;li&gt;GCC: 4.0.1, 4.2.1, 4.4.4 &lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.4.4 &lt;/li&gt;
&lt;li&gt;Clang from subversion.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Borland: 5.9.3, 6.1.3 (2009), 6.2.1 (2010), 6.3.0 &lt;/li&gt;
&lt;li&gt;GCC, mingw: 4.3.3, 4.4.5, 4.5.1 &lt;/li&gt;
&lt;li&gt;GCC, mingw, C++0x mode: 4.5.1 &lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AIX: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IBM XL C/C++ Enterprise Edition, V11.1.0.0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FreeBSD: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.2.1, 64 bit.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Solaris: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sun C++: 5.10.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;Akira Takahashi, melpon, DigitalGhost, kambk, rigarash&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.46.0 リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_46_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_46_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_46_0.md b/document/version/1_46_0.md
index b090e14..d18938f 100644
--- a/document/version/1_46_0.md
+++ b/document/version/1_46_0.md
@@ -278,7 +278,7 @@ V2.2.0
 - 拡張文字・文字列リテラルのサポートと、それに関するテストケースを追加 (テストアプリケーションへのC++0xサポートの追加が要求される)。
 - `--c++0x` modeに仕様に沿った定義済みマクロの追加。現在`__cplusplus`は`201101L`と定義されているが、言語仕様が決定する際に変更されるかもしれない。
 - オブジェクト形式マクロがカッコと隣接していて、`expanding_object_like_macro()`フック関数によってマクロ展開が抑制されるとき、カッコが消えてしまう問題を修正。
-- `pragma option(preserve)`のバグを修正 (以前の値が`preserve=2`だった場合、`perserve=1`がセットされないバグ)。
+- `pragma option(preserve)`のバグを修正 (以前の値が`preserve=2`だった場合、`preserve=1`がセットされないバグ)。
 - waveコマンドの`--preserve`オプションのinteger argumentの解釈を少し変更:
 	- 0: 空白文字は全て処理する
 	- 1: 行頭の空白文字だけそのままにする
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.48.0 リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_48_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_48_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.48.0 リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://svn.boost.org/svn/boost/website/public_html/beta/feed/history/boost_1_48_0.qbk&#34; target=&#34;_blank&#34;&gt;http://svn.boost.org/svn/boost/website/public_html/beta/feed/history/boost_1_48_0.qbk&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Container&lt;ul&gt;
&lt;li&gt;標準ライブラリコンテナとその拡張。&lt;/li&gt;
&lt;li&gt;作者：Ion Gaztañaga&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Locale&lt;ul&gt;
&lt;li&gt;ローカライズとUnicodeハンドリングのためのツール。&lt;/li&gt;
&lt;li&gt;作者：Artyom Beilis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Move&lt;ul&gt;
&lt;li&gt;C++03/C++11のための汎用的なムーブセマンティクスの実装。&lt;/li&gt;
&lt;li&gt;作者：Ion Gaztañaga&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#accumulators&#34;&gt;Accumulators(+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#msm&#34;&gt;Meta State Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#numeric-conversion&#34;&gt;Numeric Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#proto&#34;&gt;Proto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(+)が付いているものは本家のリリースノートには記載されていない変更。&lt;/p&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;h2&gt;&lt;a href=&#34;#accumulators&#34; id=&#34;accumulators&#34;&gt;Accumulators(+)&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;accumulator_set&lt;/code&gt;の要素型が&lt;code&gt;std::numeric_limits&lt;/code&gt;で特殊化されていない場合、&lt;code&gt;min&lt;/code&gt;の結果が不正な値になっていた。&lt;code&gt;std::numeric_limits&lt;/code&gt;の特殊化をコンパイル時にチェックするよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5491&#34; target=&#34;_blank&#34;&gt;#5491&lt;/a&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;様々なパフォーマンス向上を実装：&lt;ul&gt;
&lt;li&gt;スレッドローカルな操作のキューを使用することにより、シングルスレッドで使う際(つまり&lt;code&gt;concurrency_hint&lt;/code&gt;が&lt;code&gt;1&lt;/code&gt;のとき)のロック／アンロックのペアを排除。&lt;/li&gt;
&lt;li&gt;いくつかの&lt;code&gt;epoll_reactor&lt;/code&gt;で、投機的(speculative)な操作についてロックを保持することなく実行できるようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epoll_reactor&lt;/code&gt;のI/O操作をハンドラを実行する前に行うことにより、参照の局所性を向上。また、CPU間のスケーラビリティが向上。&lt;/li&gt;
&lt;li&gt;非同期の読み書き操作を、配列(&lt;code&gt;boost::array&lt;/code&gt; or &lt;code&gt;std::array&lt;/code&gt;)で特殊化。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_read_until&lt;/code&gt;の&lt;code&gt;regex&lt;/code&gt;オーバーロードのコンパイルエラーを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5688&#34; target=&#34;_blank&#34;&gt;#5688&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;グローバル名前空間の&lt;code&gt;signal()&lt;/code&gt;を明示的に呼び出すことにより、Windows固有のコンパイルエラーを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5722&#34; target=&#34;_blank&#34;&gt;#5722&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;タイマーヒープが空の場合に、クロックを読みにいかないよう&lt;code&gt;deadline_timer&lt;/code&gt;を修正。&lt;/li&gt;
&lt;li&gt;完全なTLSレコードを保持するために、SSLのバッファサイズを十分に持つよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5854&#34; target=&#34;_blank&#34;&gt;#5854&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;ユーザーのノンブロッキング設定に従うよう&lt;code&gt;null_buffer&lt;/code&gt;を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5756&#34; target=&#34;_blank&#34;&gt;#5756&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Windows上で、&lt;code&gt;fd_set&lt;/code&gt;のサイズを実行時に設定するよう修正。&lt;/li&gt;
&lt;li&gt;関数型(function type)の&lt;code&gt;const&lt;/code&gt;修飾で出ていたMSVCの警告を無効化。&lt;/li&gt;
&lt;li&gt;Intel C++ Compilerで発生するクラッシュを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5763&#34; target=&#34;_blank&#34;&gt;#5763&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;全ての利用可能なアルゴリズムをサポートするために、OpenSSLを初期化。&lt;/li&gt;
&lt;li&gt;セッションをシャットダウンする際のSSLエラーマッピングを修正。&lt;/li&gt;
&lt;li&gt;いくつかのレイテンシーテストプログラムを追加。&lt;/li&gt;
&lt;li&gt;バッファがいっぱいになった際に、読み書き操作が終了することを明らかにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5999&#34; target=&#34;_blank&#34;&gt;#5999&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epoll_reactor&lt;/code&gt;の初期化での例外安全性の問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6006&#34; target=&#34;_blank&#34;&gt;#6006&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strand&lt;/code&gt;の実装数を、&lt;code&gt;BOOST_ASIO_STRAND_IMPLEMENTATIONS&lt;/code&gt;マクロで設定可能にした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strand&lt;/code&gt;のアロケーションにround-robinアプローチを使用できるようにするために&lt;code&gt;BOOST_ASIO_ENABLE_SEQUENTIAL_STRAND_ALLOCATION&lt;/code&gt;フラグを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strand.post()&lt;/code&gt;を使用する可能性のある飢餓問題を修正。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#chrono&#34; id=&#34;chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丸め演算ユーティリティを追加。作者：Howard Hinnant。(「&lt;a href=&#34;http://home.roadrunner.com/%7Ehinnant/duration_io/chrono_util.html&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; utilities&lt;/a&gt;」,  &lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5979&#34; target=&#34;_blank&#34;&gt;#5979&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;process_clock&lt;/code&gt;が使用可能かを調べる&lt;code&gt;BOOST_CHRONO_HAS_PROCESS_CLOCKS&lt;/code&gt;を追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5978&#34; target=&#34;_blank&#34;&gt;#5978&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;高水準なエラーハンドリングを無効にすることを可能にした。&lt;code&gt;BOOST_CHRONO_DONT_PROVIDE_HYBRID_ERROR_HANDLING&lt;/code&gt;をdefineすると無効になる(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5998&#34; target=&#34;_blank&#34;&gt;#5998&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;標準C++11に合わせて、&lt;code&gt;duration&lt;/code&gt;と&lt;code&gt;time_point&lt;/code&gt;のいくつかの関数に&lt;code&gt;constexpr&lt;/code&gt;を設定(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5906&#34; target=&#34;_blank&#34;&gt;#5906&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noexcept&lt;/code&gt;に対応(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5907&#34; target=&#34;_blank&#34;&gt;#5907&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intel Compilerで&lt;code&gt;duration.hpp&lt;/code&gt;のコンパイルに失敗する問題を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5669&#34; target=&#34;_blank&#34;&gt;#5669&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;visibilityをサポート(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2114&#34; target=&#34;_blank&#34;&gt;#2114&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;process_cpu_clock::now()&lt;/code&gt;が、MAC上では1/1000秒の&lt;code&gt;time_point&lt;/code&gt;を返すようにした(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5909&#34; target=&#34;_blank&#34;&gt;#5909&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Windows上でreal cpu clockが&lt;code&gt;steady_clock&lt;/code&gt;になるようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5946&#34; target=&#34;_blank&#34;&gt;#5946&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;real cpu clockが、MAC上では&lt;code&gt;clock()&lt;/code&gt;の代わりに&lt;code&gt;times()&lt;/code&gt;を使用するようにした。これは2倍高速で、より良い精度を持っている(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5974&#34; target=&#34;_blank&#34;&gt;#5974&lt;/a&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;クリーンアップ&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;テスト時間を50%速くするために、ヘッダオンリー、共有、静的リンクの組み合わせを削減&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chrono_accuracy_test&lt;/code&gt;は決定性がないため、レギュレッションテストから削除&lt;/li&gt;
&lt;li&gt;以下の古いファイルを削除：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/timer.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/process_times.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/detail/process_clock.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/detail/mac/process_clock.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/detail/posix/process_clock.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/detail/win/process_clock.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/detail/run_timer.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/detail/run_timer_static.hpp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#config&#34; id=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_DECLTYPE_N3276&lt;/code&gt;マクロを追加(see &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3276.pdf&#34; target=&#34;_blank&#34;&gt;N3276&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;single_view&lt;/code&gt;がrandom access sequenceを生成するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::distance&lt;/code&gt;から、嘘のコンパイル時アサートを削除&lt;/li&gt;
&lt;li&gt;segmented Fusionの実装を整理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;堅牢性の問題。いくつかの状況で&lt;code&gt;union&lt;/code&gt;の出力に失敗していた。&lt;/li&gt;
&lt;li&gt;堅牢性の問題。いくつかの状況で計算された交差点(&lt;code&gt;intersection&lt;/code&gt;)がセグメント外だった。&lt;/li&gt;
&lt;li&gt;コンセプトの問題。デカルト交差(cartesian intersect)が提供されたもの以外のセグメントを理解していなかった。&lt;/li&gt;
&lt;li&gt;いくつかの状況で、linestringの自己交差点を逃していた。(&lt;a href=&#34;http://groups.google.com/group/boost-list/browse_thread/thread/a5ad044022bb08de/&#34; target=&#34;_blank&#34;&gt;boost users : [geometry] intersects bug?&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fusionの座標系が登録されていなかった。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;セグメントの&lt;code&gt;intersection&lt;/code&gt;が&lt;code&gt;first&lt;/code&gt; / &lt;code&gt;second&lt;/code&gt;という名前のメンバを想定している(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5726&#34; target=&#34;_blank&#34;&gt;#5726&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fusionアダプトのサンプルで、座標系の登録が間違っている(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5744&#34; target=&#34;_blank&#34;&gt;#5744&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメント用のコードに、&lt;code&gt;#include &amp;lt;boost/foreach.hpp&amp;gt;&lt;/code&gt;が必要(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5748&#34; target=&#34;_blank&#34;&gt;#5748&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;distance_pythagoras&lt;/code&gt;が&lt;code&gt;sqrt()&lt;/code&gt;を行なっていない(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5954&#34; target=&#34;_blank&#34;&gt;#5954&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;アルゴリズムの改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自己交差点の計算を自動では行わないようにした。これはパフォーマンスを爆発的に向上させる。&lt;/li&gt;
&lt;li&gt;その他に、自己交差点の計算を高速化。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intersection&lt;/code&gt;が、重複するポイントの出力を避けるようにした。したがって、これは最小限の集合を出力する。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;追加アルゴリズム&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;covered_by&lt;/code&gt; : &lt;code&gt;within&lt;/code&gt;は「境界線上ではない内側」だが、&lt;code&gt;covered_by&lt;/code&gt;は「境界線上もしくは内側」&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;追加機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;within&lt;/code&gt; : &lt;code&gt;strategy&lt;/code&gt;で&lt;code&gt;within&amp;lt;point, box&amp;gt;&lt;/code&gt;と&lt;code&gt;within&amp;lt;box, box&amp;gt;&lt;/code&gt;が可能になった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;convert&lt;/code&gt; : より広い範囲の変換をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;assign&lt;/code&gt; : 同上。引数の順番は逆だが、&lt;code&gt;convert&lt;/code&gt;の別名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;座標型の追加&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Rationalをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libboost_graph_parallel shared library内で&lt;code&gt;exit()&lt;/code&gt;を使用していたのを削除(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5185&#34; target=&#34;_blank&#34;&gt;#5185&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;write_graphml&lt;/code&gt;が&lt;code&gt;key&lt;/code&gt;を無視していたのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5506&#34; target=&#34;_blank&#34;&gt;#5506&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;MSVCで、&lt;code&gt;max&lt;/code&gt;マクロの問題で&lt;code&gt;csr_graph&lt;/code&gt;がコンパイルエラーになっていたのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5813&#34; target=&#34;_blank&#34;&gt;#5813&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;の&lt;code&gt;removing_vertex&lt;/code&gt;で、&lt;code&gt;vertex&lt;/code&gt;を直接削除していたのを、vertex nameを削除するよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5919&#34; target=&#34;_blank&#34;&gt;#5919&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Tracにないその他いくつかのバグを修正。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;reverse_graph&lt;/code&gt;の&lt;code&gt;edge_descriptor&lt;/code&gt;型を変更し、曖昧さを解消。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;#interprocess&#34; id=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows上で&lt;code&gt;interprocess::file_lock&lt;/code&gt;が正しく動作していなかった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2796&#34; target=&#34;_blank&#34;&gt;#2796&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vectorstream&lt;/code&gt;の構築でメモリリークしていた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4031&#34; target=&#34;_blank&#34;&gt;#4301&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;OSX Leopard 64ビット版でboot stampの取得が常に失敗していた問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4251&#34; target=&#34;_blank&#34;&gt;#4251&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCC 4.5/4.6で&lt;code&gt;NDEBUG&lt;/code&gt; + 最適化オプション(例えば&lt;code&gt;O1&lt;/code&gt;)を付けると&lt;code&gt;managed_mapped_file&lt;/code&gt;が落ちる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4452&#34; target=&#34;_blank&#34;&gt;#4452&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windows上で&lt;code&gt;boost::interprocess::managed_shared_memory&lt;/code&gt;が間違ったtmpパスに作ってしまう問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4895&#34; target=&#34;_blank&#34;&gt;#4895&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;managed_shared_memory&lt;/code&gt;を&lt;code&gt;open_only&lt;/code&gt;モードで作成すると、権限が変更されてしまう問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5077&#34; target=&#34;_blank&#34;&gt;#5077&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;boot stampを取得する処理の互換性問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5120&#34; target=&#34;_blank&#34;&gt;#5120&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Linux上でmemory segmentを開く際、アクセス許可がリセットされる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5123&#34; target=&#34;_blank&#34;&gt;#5123&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;32-64bit間の共用memoryにおける構造体のメモリレイアウトが実装意図と異なる問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5230&#34; target=&#34;_blank&#34;&gt;#5230&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;libc++で&lt;code&gt;std&lt;/code&gt;名前空間にある&lt;code&gt;allocator&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;pair&lt;/code&gt;, &lt;code&gt;char_traits&lt;/code&gt;の前方宣言ができない問題に対応 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5197&#34; target=&#34;_blank&#34;&gt;#5197&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/interprocess/sync/file_lock.hpp&lt;/code&gt;がmsvc10で64bitコンパイルできない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5287&#34; target=&#34;_blank&#34;&gt;#5287&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/interprocess/sync/xsi/simple_xsi_semaphore.hpp&lt;/code&gt;が&lt;code&gt;#ifndef&lt;/code&gt;で終端されていない問題を修正(ただしここのクラスはもう実装に利用していないので信頼すべきでない) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5294&#34; target=&#34;_blank&#34;&gt;#5294&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/interprocess/detail/win32_api.hpp&lt;/code&gt; にある&lt;code&gt;get_wmi_class_attribute&lt;/code&gt;呼び出しでクラッシュする問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5306&#34; target=&#34;_blank&#34;&gt;#5306&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;interprocessの、&lt;code&gt;boost/interprocess/managed_windows_shared_memory.hpp&lt;/code&gt;などのヘッダをインクルードすると、多くの警告が無効になる問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5308&#34; target=&#34;_blank&#34;&gt;#5308&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;メッセージキューのテンポラリディレクトリに関する問題がまだ発生していたので修正。&lt;code&gt;get_wmi_class_attribute&lt;/code&gt;が間違った文字列を返していたため、WMIごと利用しないようにした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5392&#34; target=&#34;_blank&#34;&gt;#5392&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;
&lt;h1&gt;&lt;span class=&#34;token&#34;&gt;訳註：Windows 7 64 bit と Windows XP SP3 32 bit、Boost1.47でまだ発生した、という報告の後にre-open -&amp;gt; fixの流れがないので警戒する必要があるかも&lt;/span&gt;&lt;/h1&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windowsで名前付き&lt;code&gt;mutex&lt;/code&gt;の生成に非常に時間がかかる問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5409&#34; target=&#34;_blank&#34;&gt;#5409&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;offset_ptr&lt;/code&gt;カスタマイズのサポートを追加。また、32-64bitプロセス間で共用可能なカスタム管理セグメントを作成可能にした。 &lt;/li&gt;
&lt;li&gt;Windowsにおける共用memoryは再びファイルシステムと同じ生存期間になった。これはkernel bootstampとWMIを利用して信頼できるタイムスタンプを得ようとすると問題が頻発したため。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#intrusive&#34; id=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;基底クラスのメンバフックが動作しない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4797&#34; target=&#34;_blank&#34;&gt;#4797&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;ドキュメントのエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5165&#34; target=&#34;_blank&#34;&gt;#5165&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;safe_link&lt;/code&gt;モード時に&lt;code&gt;intrusive::tree_algorithms::replace_node&lt;/code&gt;が失敗する問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5183&#34; target=&#34;_blank&#34;&gt;#5183&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;unordered_set&lt;/code&gt;の&lt;code&gt;iterator_to()&lt;/code&gt;に&lt;code&gt;const&lt;/code&gt;付きの引数を渡すとコンパイルできない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5191&#34; target=&#34;_blank&#34;&gt;#5191&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;どのプラットフォームにおいても&lt;code&gt;Inf&lt;/code&gt;と&lt;code&gt;NaN&lt;/code&gt;が正しく処理されるようにコードを追加した (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5689&#34; target=&#34;_blank&#34;&gt;#5689&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;Quickbookドキュメントの更新 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5723&#34; target=&#34;_blank&#34;&gt;#5723&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;多くの&lt;code&gt;Source&lt;/code&gt;と&lt;code&gt;Target&lt;/code&gt;型の組みあわせにおいて、パフォーマンスの最適化ならびに省メモリ化がなされるようにした &lt;/li&gt;
&lt;li&gt;&lt;code&gt;C&lt;/code&gt;ロケールにおけるパフォーマンス最適化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;cyclic Bessel I, J, K, Y 関数に新シリーズの評価メソッドを追加した。またこれら関数のオーバーフロー/アンダーフロー問題が発生しないように修正した。&lt;code&gt;cyl_bessel_j&lt;/code&gt;関数が小さい数を入力した場合にNaNを返す問題を修正した (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5560&#34; target=&#34;_blank&#34;&gt;#5560&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;Thomas Mangにいただいたベイズ統計の逆カイ二乗分散の例を追加した。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;global facet&lt;/code&gt;を使わずに、C99の&lt;code&gt;nonfinite&lt;/code&gt;を扱うことができる改善版&lt;code&gt;lexical_cast&lt;/code&gt;を用いたテストを追加 &lt;/li&gt;
&lt;li&gt;一様分布における累積分布関数の補数値に範囲外の値を設定した場合の誤りを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5733&#34; target=&#34;_blank&#34;&gt;#5733&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;OpenBSD環境下で&lt;code&gt;long double&lt;/code&gt;サポートを有効にした (issue &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6014&#34; target=&#34;_blank&#34;&gt;#6014&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;他の実装と同じように振る舞うように、&lt;code&gt;nextafter&lt;/code&gt;関数と関連する関数を変更した。これにより、&lt;code&gt;nextafter(+INF, 0)&lt;/code&gt; は有限数(finite)となる (issue &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5832&#34; target=&#34;_blank&#34;&gt;#5832&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;Boost.Tr1と同時に利用するときに発生する問題を修正するために、&lt;code&gt;tuple&lt;/code&gt;のインクルード元を変更した (issue &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5934&#34; target=&#34;_blank&#34;&gt;#5934&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;両端とも&lt;code&gt;0&lt;/code&gt;のrangeが設定された場合の&lt;code&gt;eps_tolerance&lt;/code&gt;クラスの振る舞いが正しくなるように修正した (issue &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6001&#34; target=&#34;_blank&#34;&gt;#6001&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;prime.hpp&lt;/code&gt;にインクルードガードがなかったため追加 (issue &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5927&#34; target=&#34;_blank&#34;&gt;#5927&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;constants.hpp&lt;/code&gt;にある使っていない/アンドキュメントな定数を削除 (issue &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5982&#34; target=&#34;_blank&#34;&gt;#5982&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonfinite_num_facets.hpp&lt;/code&gt;中で&lt;code&gt;std::&lt;/code&gt;プレフィクス一部欠けている問題を修正 (issue &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5914&#34; target=&#34;_blank&#34;&gt;#5914&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;Crayコンパイラ互換にするためのパッチを適用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#msm&#34; id=&#34;msm&#34;&gt;Meta State Machine&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;eUMLにおいて、&lt;code&gt;event&lt;/code&gt;再処理を容易にする機能(&lt;code&gt;process(event_)&lt;/code&gt;と&lt;code&gt;reprocess()&lt;/code&gt;)を追加 &lt;/li&gt;
&lt;li&gt;内部遷移テーブルを書きなおした。いくつかのバグ(サブ-サブマシンの内部遷移テーブルの再帰が失敗する)や、不足していた機能(メインステートマシンの内部遷移テーブルが使われていない問題)があったため。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;favor_compile_time&lt;/code&gt;ポリシーをBoost 1.46の状態に戻した &lt;/li&gt;
&lt;li&gt;none eventは他のいかなる&lt;code&gt;event&lt;/code&gt;からでも変換可能にした &lt;/li&gt;
&lt;li&gt;eUMLとexit疑似状態 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;Flag_AND&lt;/code&gt;が機能していない問題を修正 &lt;/li&gt;
&lt;li&gt;ある&lt;code&gt;event&lt;/code&gt;とそのbase eventが遷移テーブルにあるサブマシンで同じ&lt;code&gt;event&lt;/code&gt;が複数回処理されてしまう稀なバグを修正&lt;/li&gt;
&lt;li&gt;gccで未使用変数の警告が出る問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新規内部遷移テーブル機能にはマイナーな破壊的変更がある。サブマシンにおいて、&lt;code&gt;internal_transition_table&lt;/code&gt;で利用される&lt;code&gt;guard&lt;/code&gt;/&lt;code&gt;action&lt;/code&gt;のための&lt;code&gt;Fsm&lt;/code&gt;テンプレートパラメータは、上位のステートマシンではなくサブマシンに変更される。 上位のステートマシンの internal row 記法を使って表現されている内部遷移の振る舞いは変更されない。(&lt;code&gt;Fsm&lt;/code&gt;パラメータは上位のステートマシンである)。 要するに、内部遷移&lt;code&gt;Fsm&lt;/code&gt;パラメータはこの遷移を含む最も近いステートマシンとなる。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#numeric-conversion&#34; id=&#34;numeric-conversion&#34;&gt;Numeric Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_48_0/libs/numeric/conversion/doc/html/boost_numericconversion/improved_numeric_cast__.html#boost_numericconversion.improved_numeric_cast__.numeric_cast_traits&#34; target=&#34;_blank&#34;&gt;numeric_cast_traits&lt;/a&gt;&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#proto&#34; id=&#34;proto&#34;&gt;Proto&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;：コンパイラサポートの右辺値参照を使用してオーバーロード数を減少させた。この変更により、Proto式に対する加算演算子のオーバーロードが曖昧になる。これの解決策は、あいまいと言われるProtoの演算子を、ユーザー定義の演算子によって、無効化にする&lt;code&gt;grammar&lt;/code&gt;を使用することである。&lt;/li&gt;
&lt;li&gt;Protoのタグ型を、ADLブロックされた名前空間へ移動。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proto::switch_&lt;/code&gt;に、ディスパッチ用の第2テンプレートパラメータを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_PROTO_EXTENDS&lt;/code&gt;と&lt;code&gt;BOOST_PROTO_BASIC_EXTENDS&lt;/code&gt;を指定することによって、依存するドメインを許可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#regex&#34; id=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;キャラクタクラスの直後に配置された大文字と小文字を区別しない修飾子が機能していない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/698&#34; target=&#34;_blank&#34;&gt;#698&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cregex.cpp&lt;/code&gt;, &lt;code&gt;fileiter.cpp&lt;/code&gt;, &lt;code&gt;posix_api.cpp&lt;/code&gt; に書式文字列攻撃の対象になる&lt;code&gt;sprintf&lt;/code&gt;が使われている問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5835&#34; target=&#34;_blank&#34;&gt;#5835&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;省略符号(…)でnon-POD型の&lt;code&gt;boost::match_results&lt;/code&gt;を実引数として渡すとコンパイルエラーになる問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5958&#34; target=&#34;_blank&#34;&gt;#5958&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;regex&lt;/code&gt;のソースファイルを併合すると、&lt;code&gt;c_regex_type&lt;/code&gt;の多重定義でコンパイルできない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5736&#34; target=&#34;_blank&#34;&gt;#5736&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Spirit V2.5.1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;V2.5(Boost 1.47.0)からの変更点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;spirit::istream_iterator&lt;/code&gt; (&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_48_0/libs/spirit/doc/html/spirit/support/multi_pass.html&#34; target=&#34;_blank&#34;&gt;multi_pass&lt;/a&gt;&lt;/code&gt;を参照)が、構築時にストリームの&lt;code&gt;eof&lt;/code&gt;をチェックするようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;optional&lt;/code&gt;属性に埋め込まれた&lt;code&gt;optional&lt;/code&gt;属性を適切に折りたたむようにした(例えば &lt;code&gt;-(&#39;(&#39; &amp;gt; -int_ &amp;gt;&amp;gt; &#39;)&#39;)&lt;/code&gt; )。これは、&lt;code&gt;optional&amp;lt;optional&amp;lt;int&amp;gt;&amp;gt;&lt;/code&gt;が&lt;code&gt;optional&amp;lt;int&amp;gt;&lt;/code&gt;に折りたたまれることを意味する。問題を報告してくれたPeter Schuellerに感謝する。&lt;/li&gt;
&lt;li&gt;バイナリパーサーがアクションを正しく伝播するよう修正した。問題を報告してくれたMathias Bornに感謝する。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Lexのバグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lexertl&lt;/code&gt;の&lt;code&gt;token_value_type&lt;/code&gt;が、&lt;code&gt;const&lt;/code&gt;な未使用変数を返していたところを、非&lt;code&gt;const&lt;/code&gt;参照な変数を返すようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5701&#34; target=&#34;_blank&#34;&gt;#5701&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lexer&lt;/code&gt; (&lt;code&gt;position_token&lt;/code&gt;)で、有効なパーサーのデバッグで発生する問題を修正(MSVC2010)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type-traits&#34; id=&#34;type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;演算子サポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;メタ関数&lt;/th&gt;
&lt;th&gt;持っているかを判定する演算子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_bit_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;amp; b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_bit_and_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;amp;= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_bit_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt; | &lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_bit_or_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt; |&lt;code&gt;= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_bit_xor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a ^ b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_bit_xor_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a ^= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_complement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_dereference&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_divide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a / b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_divide_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a /= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_equal_to&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a == b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_greater&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;gt; b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_greater_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;gt;= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_left_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;lt;&amp;lt; b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_left_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;lt;&amp;lt;= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_less&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;lt; b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_less_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;lt;= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_logical_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;amp;&amp;amp; b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_logical_not&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_logical_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt; || &lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a - b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_minus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a -= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_modulus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a % b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_modulus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a %= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_multiples&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a * b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_multiples_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a *= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_negate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_new_operator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;new a&lt;/code&gt;&lt;br /&gt; &lt;code&gt;new (std::nothrow) a&lt;/code&gt;&lt;br /&gt; &lt;code&gt;new a[n]&lt;/code&gt;&lt;br /&gt; &lt;code&gt;new (std::nothrow) a[n]&lt;/code&gt;&lt;br /&gt; &lt;code&gt;new (allocate_area) a[b]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_not_equal_to&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a != b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_nothrow_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a = b&lt;/code&gt;&lt;br /&gt; ※ &lt;code&gt;throw()&lt;/code&gt; or &lt;code&gt;noexcept&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_nothrow_constructor&lt;/code&gt;&lt;br /&gt; &lt;code&gt;has_nothrow_default_constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A a A()&lt;/code&gt; &lt;br /&gt;※ &lt;code&gt;throw()&lt;/code&gt; or &lt;code&gt;noexcept&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_nothrow_copy&lt;/code&gt;&lt;br /&gt; &lt;code&gt;has_nothrow_copy_constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A a(a_type_value)&lt;/code&gt;&lt;br /&gt; &lt;code&gt;A a = a_type_value&lt;/code&gt;&lt;br /&gt; ※ &lt;code&gt;throw()&lt;/code&gt; or &lt;code&gt;noexcept&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a + b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_plus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a += b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_post_decrement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a--&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_post_increment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a++&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_pre_decrement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_pre_increment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;++a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_right_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;gt;&amp;gt; b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_right_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;gt;&amp;gt;= b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_trivial_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a = b&lt;/code&gt;&lt;br /&gt; ※ 暗黙定義される&lt;code&gt;=&lt;/code&gt;演算子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_trivial_constructor&lt;/code&gt;&lt;br /&gt; &lt;code&gt;has_trivial_default_constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A a A()&lt;/code&gt;&lt;br /&gt; ※暗黙定義されるデフォルトコンストラクタ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_trivial_copy&lt;/code&gt;&lt;br /&gt; &lt;code&gt;has_trivial_copy_constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A a(a_type_value) A a = a_type_value&lt;/code&gt;&lt;br /&gt; ※暗黙定義されるコピーコンストラクタ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_trivial_destructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~a()&lt;/code&gt;&lt;br /&gt; &lt;code&gt;delete a&lt;/code&gt;&lt;br /&gt; ※暗黙定義されるデストラクタ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_unary_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_unary_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;+a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_virtual_destructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~a()&lt;/code&gt;&lt;br /&gt; &lt;code&gt;delete a&lt;/code&gt;&lt;br /&gt; ※仮想デストラクタ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;標準 C++ 11 のサポートを改善 - &lt;code&gt;emplace&lt;/code&gt;と&lt;code&gt;equality&lt;/code&gt;に破壊的変更あり。&lt;/li&gt;
&lt;li&gt;ムーブセマンティクスの実装にBoost.Moveを使用。&lt;/li&gt;
&lt;li&gt;全ての詳細はchange logを見よ。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Change Log (Boost 1.48.0 - Major Update)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;メジャーな変更として、Boost.Moveによるムーブのエミュレーションを使用するようになり、また、より標準C++11に対応しました。 詳細はcompliance sectionを御覧ください。&lt;/li&gt;
&lt;li&gt;このライブラリのコンテナはC++11の計算量要件を満たすようになりました。ただ、使用に当たっては、わずかだけ多くメモリを使用することになります。&lt;/li&gt;
&lt;li&gt;これにより&lt;code&gt;quick_erase&lt;/code&gt;と&lt;code&gt;erase_return_void&lt;/code&gt;は必要なくなるため、これらは将来のバージョンで取り除かれるでしょう。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++11サポートはいくつかの破壊的変更をもたらしました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Equality comparisonはC++11の仕様に合わせて変更されました。equivalentなキーを持つコンテナについて、同じ(equal)キーに属する要素はこれまで、considered equalでなければならなかったため、同じ順序で整列している必要がありました。現在は、それら要素たちの順列組み合わせでも良いことになりました。これまでの振る舞いで使用するには、&lt;code&gt;BOOST_UNORDERED_DEPRECATED_EQUALITY&lt;/code&gt;マクロを定義します。（訳註：不安なので間違ってたら訂正お願いします）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swap&lt;/code&gt;される2つのコンテナが同じでない&lt;code&gt;allocator&lt;/code&gt;を持つ場合の挙動が異なります。これまでは、&lt;code&gt;allocator&lt;/code&gt;を借用して新しいノードを&lt;code&gt;allocate&lt;/code&gt;していました。これからは、もし&lt;code&gt;allocator&lt;/code&gt;が、&lt;code&gt;propagate_on_container_swap::value&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;であるような&lt;code&gt;propagate_on_container_swap&lt;/code&gt;構造体をメンバに持っている場合、&lt;code&gt;allocator&lt;/code&gt;を&lt;code&gt;swap&lt;/code&gt;するようになりました。（訳註：不安なので間違ってたらｒｙ）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Allocator&lt;/code&gt;の&lt;code&gt;construct&lt;/code&gt;関数、&lt;code&gt;destruct&lt;/code&gt;関数は、&lt;code&gt;allocator&lt;/code&gt;の&lt;code&gt;pointer type&lt;/code&gt;ではなく、生ポインタと共に呼び出されます。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;は初期のC++0x draftで登場したvariadic pair constructorをemulateしていましたが、それは取り除かれたので、emulateしないようになりました。そして、新たな&lt;code&gt;piecewise_construct_&lt;/code&gt; pair constructをemulateするようになりました（あなたが&lt;code&gt;boost::piecewise_construct&lt;/code&gt;の使用を必要としたときに限って）。これまでのvariadic constructorのemulationを使用する場合は、&lt;code&gt;BOOST_UNORDERED_DEPRECATED_PAIR_CONSTRUCT&lt;/code&gt;を定義します。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;V.2.3.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;support_option_emit_contnewlines&lt;/code&gt; フラグの追加。このオプションは、Wave libraryがバックスラッシュ+改行をemitするかどうか制御する。デフォルト今までと同じ（無視して、そこから後ろは適当に処理する）※SLexモジュールのみがサポートしている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5887&#34; target=&#34;_blank&#34;&gt;#5887&lt;/a&gt; の修正：flex_string.hpp needs to include &lt;code&gt;&amp;lt;ios&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;LLVM Clang 2.8&lt;/li&gt;
&lt;li&gt;GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.5.1, 4.5.2, 4.6&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2&lt;/li&gt;
&lt;li&gt;Intel 11.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Intel 11.1&lt;/li&gt;
&lt;li&gt;GCC: 4.2.1, 4.4.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.4.4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++ 8.0, 9.0, 10.0&lt;/li&gt;
&lt;li&gt;GCC, mingw: 4.4.0, 4.4.7, 4.5.4, 4.6.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC 4.2.1, 32 and 64 bit.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC 4.4.2&lt;/li&gt;
&lt;li&gt;QCC, C++0x mode: 4.4.2, 4.6.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加のテストコンパイラ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang from subversion, with libc++ and GNU libstdc++&lt;/li&gt;
&lt;li&gt;LLVM Clang 2.8 x&lt;/li&gt;
&lt;li&gt;GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.4, 4.5.2, 4.5.4, 4.6.1, 4.6.2&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.3.4, 4.4.3, 4.4.4, 4.5.2&lt;/li&gt;
&lt;li&gt;pgCC: 11.2 x&lt;/li&gt;
&lt;li&gt;Intel: 10.1, 11.1, 12.0&lt;/li&gt;
&lt;li&gt;PathScale: 4.0.8&lt;/li&gt;
&lt;li&gt;Visual Age 10.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang from subversion, with libc++ and GNU libstdc++.&lt;/li&gt;
&lt;li&gt;Intel 11.1.&lt;/li&gt;
&lt;li&gt;GCC: 4.2.1, 4.4.4.&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.4.4.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++ 8.0, 9.0, 10.0&lt;/li&gt;
&lt;li&gt;Visual C++ with STLport: 9.0&lt;/li&gt;
&lt;li&gt;Visual C++, Windows Mobile 5, with STLport: 9.0&lt;/li&gt;
&lt;li&gt;GCC, mingw: 4.4.0, 4.4.7, 4.5.2, 4.5.4, 4.6.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode, mingw: 4.5.2&lt;/li&gt;
&lt;li&gt;GCC, mingw 64-bit: 4.7.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AIX:&lt;ul&gt;
&lt;li&gt;IBM XL C/C++ Enterprise Edition, V11.1.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC 4.2.1, 32 and 64 bit.&lt;/li&gt;
&lt;li&gt;Solaris:&lt;/li&gt;
&lt;li&gt;Sun 5.10&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;Akira Takahashi, digitalghost, hotwatermorning, zak, Takatoshi Kondo&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.50.0 リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_50_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_50_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.50.0 リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://svn.boost.org/svn/boost/website/public_html/live/feed/history/boost_1_50_0.qbk&#34; target=&#34;_blank&#34;&gt;https://svn.boost.org/svn/boost/website/public_html/live/feed/history/boost_1_50_0.qbk&lt;/a&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_50_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_50_0.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_50_0/libs/algorithm/&#34; target=&#34;_blank&#34;&gt;Algorithm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;便利なジェネリックアルゴリズム集&lt;/li&gt;
&lt;li&gt;作者：Marshall Clow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_50_0/libs/functional/overloaded_function/&#34; target=&#34;_blank&#34;&gt;Functional/OverloadedFunction&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;オーバーロードされた複数の関数を単一の関数オブジェクトにまとめるライブラリ&lt;/li&gt;
&lt;li&gt;作者：Lorenzo Caminiti&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_50_0/libs/local_function/&#34; target=&#34;_blank&#34;&gt;LocalFunction&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ローカルな関数を他の関数内や任意のスコープ内で定義するライブラリ&lt;/li&gt;
&lt;li&gt;作者：Lorenzo Caminiti&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_50_0/libs/utility/identity_type/&#34; target=&#34;_blank&#34;&gt;Utility/IdentityType&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;()&lt;/code&gt;でラップすることでマクロのパラメータとして渡せるようにするライブラリ&lt;/li&gt;
&lt;li&gt;作者：Lorenzo Caminiti&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#accumulators&#34;&gt;Accumulators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#concept-check&#34;&gt;Concept Check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filesystem&#34;&gt;Filesystem(+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#foreach&#34;&gt;Foreach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fusion&#34;&gt;Fusion(+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#msm&#34;&gt;Meta State Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#property-map&#34;&gt;PropertyMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#proto&#34;&gt;Proto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ratio&#34;&gt;Ratio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scope-exit&#34;&gt;ScopeExit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#thread&#34;&gt;Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xpressive&#34;&gt;Xpressive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;+が付いているものは本家のリリースノートには記載されていない変更。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;#accumulators&#34; id=&#34;accumulators&#34;&gt;Accumulators&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;インクルードが抜けていたのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6702&#34; target=&#34;_blank&#34;&gt;#6702&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MSVCでコンストラクタの転送がコンパイルエラーになっていたのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6535&#34; target=&#34;_blank&#34;&gt;#6535&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Boostの開発者ガイドラインに従い、ファイル名を短くした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6196&#34; target=&#34;_blank&#34;&gt;#6196&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;※ファイル名は31文字以下でなければならない：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/accumulators/statistics/p_square_cumulative_distribution.hpp&lt;/code&gt; →  &lt;code&gt;boost/accumulators/statistics/p_square_cumul_dist.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/accumulators/statistics/weighted_p_square_cumlative_distribution.hpp&lt;/code&gt; → &lt;code&gt;boost/accumulators/statistics/weighted_p_square_cuml_dist.hpp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Hashのサポートを追加 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6791&#34; target=&#34;_blank&#34;&gt;#6791&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EPOLL_OUT&lt;/code&gt;イベントのために、&lt;code&gt;epoll_reactor&lt;/code&gt;のバックエンドを遅延登録するよう変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epoll_reactor&lt;/code&gt;の帯域外データが、前回のリリースでは不完全な修正によって壊れていたので修正した&lt;/li&gt;
&lt;li&gt;Boost.AsioのSSLラッパーを、&lt;code&gt;OPENSSL_NO_ENGINE&lt;/code&gt;のdefineに配慮するよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6432&#34; target=&#34;_blank&#34;&gt;#6432&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11のムーブセマンティクスをサポートするWindowsコンパイラ(g++など)のために、&lt;code&gt;windows::object_handle&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strand&lt;/code&gt;の再スケジューリングのパフォーマンスを向上&lt;/li&gt;
&lt;li&gt;g++4.7のC++11モードでのコンパイルをサポート(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6620&#34; target=&#34;_blank&#34;&gt;#6620&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;g++4.7で名称が変更になった&lt;code&gt;std::chrono::monotonic_clock&lt;/code&gt; → &lt;code&gt;std::chrono::steady_clock&lt;/code&gt;の差異に対応&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_service&lt;/code&gt;が&lt;code&gt;concurrency_hint&lt;/code&gt;を&lt;code&gt;1&lt;/code&gt;で構築した場合に、&lt;code&gt;signal_set&lt;/code&gt;が配信されない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6657&#34; target=&#34;_blank&#34;&gt;#6657&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#bimap&#34; id=&#34;bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;怪しいBoost.Serializationへの依存を削除 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3868&#34; target=&#34;_blank&#34;&gt;#3868&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;未使用変数の警告を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5749&#34; target=&#34;_blank&#34;&gt;#5749&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map views&lt;/code&gt;に&lt;code&gt;key_type&lt;/code&gt;と&lt;code&gt;mapped_type&lt;/code&gt;の&lt;code&gt;typedef&lt;/code&gt;を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6031&#34; target=&#34;_blank&#34;&gt;#6031&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;ただし後方互換性のために&lt;code&gt;data_type&lt;/code&gt;は残してある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#chrono&#34; id=&#34;chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::chrono::process_real_cpu_clock::now()&lt;/code&gt;が32ビット版Windowsでオーバーフローする問題を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6361&#34; target=&#34;_blank&#34;&gt;#6361&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;process_cpu_clocks.hpp&lt;/code&gt;の警告を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6628&#34; target=&#34;_blank&#34;&gt;#6628&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_clock.hpp&lt;/code&gt;で&lt;code&gt;pthread.h&lt;/code&gt;のインクルードが抜けていたのを修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6666&#34; target=&#34;_blank&#34;&gt;#6666&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#concept-check&#34; id=&#34;concept-check&#34;&gt;Concept Check&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変数シャドウの警告を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6738&#34; target=&#34;_blank&#34;&gt;#6738&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem(+)&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非推奨だったv2を削除。v3への完全移行が必要&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#foreach&#34; id=&#34;foreach&#34;&gt;Foreach&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正の結果、より問題が発生したため  &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6131&#34; target=&#34;_blank&#34;&gt;#6131&lt;/a&gt; の修正を取り消した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#fusion&#34; id=&#34;fusion&#34;&gt;Fusion(+)&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;deque&lt;/code&gt;, &lt;code&gt;front_extended_deque&lt;/code&gt;, &lt;code&gt;back_extended_deque&lt;/code&gt;のドキュメントを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整数の点のための&lt;code&gt;projected point strategy&lt;/code&gt;の戻り値型が間違っていたので修正&lt;/li&gt;
&lt;li&gt;セグメントとポリゴンの交差でのいくつかの信頼性問題を修正&lt;/li&gt;
&lt;li&gt;無効な交差点を出力から除外した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multi_polygon&lt;/code&gt;の&lt;code&gt;disjoint&lt;/code&gt;が、不正に&lt;code&gt;true&lt;/code&gt;を返してしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;multi pointの代替シンタックスパッチを適用(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6585&#34; target=&#34;_blank&#34;&gt;#6585&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#34;MULTIPOINT ((10 40), (40 30), (20 20), (30 10))&#34;&lt;/code&gt;と&lt;code&gt;&#34;MULTIPOINT (10 40, 40 30, 20 20, 30 10)&#34;&lt;/code&gt;のどちらでも書けるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;point&lt;/code&gt;と&lt;code&gt;linestring&lt;/code&gt;の&lt;code&gt;distance&lt;/code&gt;計算が間違っていたので修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6584&#34; target=&#34;_blank&#34;&gt;#6584&lt;/a&gt;, &lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5730&#34; target=&#34;_blank&#34;&gt;#5730&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;デカルトの3次元座標から球状の赤道3次元座標への変換を行うパッチを適用(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6166&#34; target=&#34;_blank&#34;&gt;#6166&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;無効な交差点が出力されてしまう問題。報告より前にtrunkで修正されていた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6696&#34; target=&#34;_blank&#34;&gt;#6696&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*polygon&lt;/code&gt;/&lt;code&gt;*polygon&lt;/code&gt;のための新たなアルゴリズム&lt;code&gt;touches&lt;/code&gt;を追加(OGC SF準拠)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clear_vertex&lt;/code&gt;が自己閉路の&lt;code&gt;vertex&lt;/code&gt;でセグメンテーションフォルトする問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4622&#34; target=&#34;_blank&#34;&gt;#4622&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;biconnected_components()&lt;/code&gt;による&lt;code&gt;lowpoint map&lt;/code&gt;の計算が間違っていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6033&#34; target=&#34;_blank&#34;&gt;#6033&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isomorphism()&lt;/code&gt;関数で、Iso Mappingがリセットされない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6242&#34; target=&#34;_blank&#34;&gt;#6242&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cube_topology&lt;/code&gt;のドキュメントに、3次元なのに2次元と書かれていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6435&#34; target=&#34;_blank&#34;&gt;#6435&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;graph_parallel&lt;/code&gt;のドキュメントにある&lt;code&gt;small_world_1_70_6_0p02.png&lt;/code&gt;が壊れていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6520&#34; target=&#34;_blank&#34;&gt;#6520&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subgraph&lt;/code&gt;のコピーコンストラクタが&lt;code&gt;local_vertex&lt;/code&gt;/&lt;code&gt;local_edge&lt;/code&gt;プロパティをコピーしていなかったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6564&#34; target=&#34;_blank&#34;&gt;#6564&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isormorphism()&lt;/code&gt;関数に巨大なグラフを与えると計算に失敗する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6573&#34; target=&#34;_blank&#34;&gt;#6573&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Dijkstra Visitor Concept&lt;/code&gt;のドキュメントにあったtypoを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6583&#34; target=&#34;_blank&#34;&gt;#6583&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#34;DistanceMap&#34;&lt;/code&gt; → &lt;code&gt;&#34;WeightMap&#34;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strong_components()&lt;/code&gt;がMSVC8でコンパイルエラーになる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6647&#34; target=&#34;_blank&#34;&gt;#6647&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subgraph&lt;/code&gt;の実装で、依存名に&lt;code&gt;typename&lt;/code&gt;が付いていなかったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6656&#34; target=&#34;_blank&#34;&gt;#6656&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing.hpp&lt;/code&gt;で&lt;code&gt;&amp;lt;map&amp;gt;&lt;/code&gt;のインクルードが抜けていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6707&#34; target=&#34;_blank&#34;&gt;#6707&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_straight_line_drawing.hpp&lt;/code&gt;の&lt;code&gt;boost::intersects()&lt;/code&gt;関数でシンボルの重複エラーが出ていたので&lt;code&gt;inline&lt;/code&gt;を付けた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6708&#34; target=&#34;_blank&#34;&gt;#6708&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;constified subgraph&lt;/code&gt;を&lt;code&gt;write_graphviz_dp()&lt;/code&gt;を使用して出力できない(コンパイルエラーになる)問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6739&#34; target=&#34;_blank&#34;&gt;#6739&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;reverse_graphに対するboost::get()がg++でコンパイルエラーになる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6858&#34; target=&#34;_blank&#34;&gt;#6858&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;bron_kerbosch_all_cliques()はVertexIndexGraphConceptを満たす必要がないので要件を削除(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6892&#34; target=&#34;_blank&#34;&gt;#6892&lt;/a&gt;)その他、Tracに含まれていないいくつかの警告とバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#hash&#34; id=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::array&lt;/code&gt;と&lt;code&gt;std::tuple&lt;/code&gt;のサポートを追加 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6806&#34; target=&#34;_blank&#34;&gt;#6806&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCCにおける&lt;code&gt;-Wfloat-equal&lt;/code&gt;警告を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6771&#34; target=&#34;_blank&#34;&gt;#6771&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/functional/detail/container_fwd.hpp&lt;/code&gt;に非推奨である旨の警告を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#iostreams&#34; id=&#34;iostreams&#34;&gt;Iostreams&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;gzipのサポート (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5908&#34; target=&#34;_blank&#34;&gt;#5908&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;最新のBoost.Filesystem及びBoost.Testのテストに更新&lt;/li&gt;
&lt;li&gt;幾つかのドキュメントのエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6530&#34; target=&#34;_blank&#34;&gt;#6530&lt;/a&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6650&#34; target=&#34;_blank&#34;&gt;#6650&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;transform_iterator&lt;/code&gt;のドキュメントでの&lt;code&gt;result_of&lt;/code&gt;の使い方が正しくなかったのを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5127&#34; target=&#34;_blank&#34;&gt;#5127&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade::operator-&amp;gt;&lt;/code&gt;がproxy referencesに対して正しくなかったのを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5697&#34; target=&#34;_blank&#34;&gt;#5697&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multi-array&#34; id=&#34;multi-array&#34;&gt;MultiArray&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Conceptのバグ修正とVisual Studio 2010向けのワークアラウンド(&lt;a href=&#34;https://svn.boost.org/trac/boost/changeset/78496&#34; target=&#34;_blank&#34;&gt;Patch&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;assert.cpp&lt;/code&gt;のテストケース修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/changeset/78498&#34; target=&#34;_blank&#34;&gt;Patch&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::bad_lexical_cast&lt;/code&gt;例外は現在グローバルに見えるので&lt;code&gt;-fvisibility=hidden&lt;/code&gt;でコンパイルされていてもキャッチできる&lt;/li&gt;
&lt;li&gt;例外を無効にしていてもコンパイル、使用が可能になった (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5800&#34; target=&#34;_blank&#34;&gt;#5800&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::iterator_range&amp;lt;character_type*&amp;gt;&lt;/code&gt;の変換に対してメモリ使用量を減らしバグを修正しパフォーマンスを改善した&lt;/li&gt;
&lt;li&gt;バグと警告の修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6645&#34; target=&#34;_blank&#34;&gt;#6645&lt;/a&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6562&#34; target=&#34;_blank&#34;&gt;#6562&lt;/a&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6812&#34; target=&#34;_blank&#34;&gt;#6812&lt;/a&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6852&#34; target=&#34;_blank&#34;&gt;#6852&lt;/a&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6717&#34; target=&#34;_blank&#34;&gt;#6717&lt;/a&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6670&#34; target=&#34;_blank&#34;&gt;#6770&lt;/a&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6504&#34; target=&#34;_blank&#34;&gt;#6504&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;STLPortを使用した場合でのビルドの問題を修正&lt;/li&gt;
&lt;li&gt;Boost.Systemが依存ライブラリとなった&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UTFエンコード関数が&lt;code&gt;OutputIterator&lt;/code&gt;に間違った型の値を渡している (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6635&#34; target=&#34;_blank&#34;&gt;#6635&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ICUの名前空間をつけ忘れている箇所がある (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6833&#34; target=&#34;_blank&#34;&gt;#6833&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;数学定数を第1級クラスに：ビルトインへの便利なアクセス方法も含む&lt;/li&gt;
&lt;li&gt;Benjamin Sobottaにより、OwenのT関数とSkew標準分散を追加&lt;/li&gt;
&lt;li&gt;Hankel関数を追加&lt;/li&gt;
&lt;li&gt;K R Walkerのパッチをベースにして&lt;code&gt;0.0&lt;/code&gt;における&lt;code&gt;nonfinite_num_put&lt;/code&gt;のフォーマットを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6627&#34; target=&#34;_blank&#34;&gt;#6627&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ユーザー定義型でもスレッドセーフになるように定数初期化メカニズムを変更、また&lt;code&gt;long double&lt;/code&gt;型でなくともユーザー定義型の定数が最大精度を得られるように変更例えば&lt;code&gt;long double&lt;/code&gt;が64または80bitであっても、128bit有理数への近似がユーザー定義型で動作する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Y[sub 8.5](4π)&lt;/code&gt;で&lt;code&gt;bessel_jy&lt;/code&gt;関数が&lt;code&gt;NaN&lt;/code&gt;になってしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#msm&#34; id=&#34;msm&#34;&gt;Meta State Machine&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;eUML : eUMLで遷移表としてのみ定義されたフロントエンドのためのよりよい構文。&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;注意：破壊的変更！&lt;/span&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_50_0/libs/msm/doc/HTML/ch03s04.html#eUML-composite-table&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/1_50_0/libs/msm/doc/HTML/ch03s04.html#eUML-composite-table&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正： グラフ構築がシーケンスとして定義されたinitial_stateでのみ動作していた&lt;/li&gt;
&lt;li&gt;バグ修正： &lt;code&gt;Terminate&lt;/code&gt;か&lt;code&gt;Interrupt&lt;/code&gt;状態のために定義されたフラグが、これらの状態のブロッキング関数を壊さないようにした&lt;/li&gt;
&lt;li&gt;バグ修正： いくつかの領域からの多重遅延イベント(multiple deferred event)が、全てのケースで動作するとは限らなかった&lt;/li&gt;
&lt;li&gt;バグ修正： &lt;code&gt;visitor&lt;/code&gt;が、サブマシンに値渡しを行っていた&lt;/li&gt;
&lt;li&gt;バグ修正： &lt;code&gt;no_transition&lt;/code&gt;が、それ自身にイベントを送るサブマシンのためには呼ばれなかった&lt;/li&gt;
&lt;li&gt;GCCの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#program-options&#34; id=&#34;program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;エラーレポートの強化(Leo Goodstadt氏の&lt;a href=&#34;https://svn.boost.org/trac/boost/changeset/77827&#34; target=&#34;_blank&#34;&gt;Patch&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ヘルプメッセージ中のオプション値の名前のカスタマイズをサポート (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4781&#34; target=&#34;_blank&#34;&gt;#4781&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCC4.7でのコンパイルエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6790&#34; target=&#34;_blank&#34;&gt;#6790&lt;/a&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#property-map&#34; id=&#34;property-map&#34;&gt;PropertyMap&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメント中の&lt;code&gt;get()&lt;/code&gt;の戻り値が正しくなかったのを修正 (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6539&#34; target=&#34;_blank&#34;&gt;#6539&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;property_map_traits&lt;/code&gt;のドキュメントが&lt;code&gt;reference&lt;/code&gt;に関して記述されていなかったのを修正 (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6721&#34; target=&#34;_blank&#34;&gt;#6721&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#proto&#34; id=&#34;proto&#34;&gt;Proto&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;N3276を実装しているコンパイラにかぎり、&lt;code&gt;decltype&lt;/code&gt;ベースの&lt;code&gt;result_of&lt;/code&gt;を使うようにした&lt;/li&gt;
&lt;li&gt;C++11向けに, &lt;code&gt;mpl::eval_if_c&lt;/code&gt;と&lt;code&gt;mpl::if_c&lt;/code&gt;の評価型が強制的に&lt;code&gt;bool&lt;/code&gt;になるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__forceinline&lt;/code&gt;による、「指定された関数がインライン展開の対象として選択されましたが、実際にはインライン展開されませんでした。」という警告がmsvcで出ないようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#ratio&#34; id=&#34;ratio&#34;&gt;Ratio&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::ratio&lt;/code&gt;がデフォルト設定でコンパイルされない問題を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6498&#34; target=&#34;_blank&#34;&gt;#6498&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#scope-exit&#34; id=&#34;scope-exit&#34;&gt;ScopeExit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;キャプチャにカンマ区切りリストを使用できるように可変長マクロを使用 (後方互換性のためにシーケンス構文でのキャプチャもサポート)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;this_&lt;/code&gt;の使用によるオブジェクトのキャプチャをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void&lt;/code&gt;の使用による空のキャプチャをサポート&lt;/li&gt;
&lt;li&gt;コンパイラがC++11のlambdaをサポートする場合、&lt;code&gt;BOOST_SCOPE_EXIT_ALL&lt;/code&gt;で暗黙的なlambdaに似たキャプチャをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;廃止予定だったヘッダを除去した。このヘッダは2,3年間そのままだったが、そろそろクリーンアップの時期になったからである。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#thread&#34; id=&#34;thread&#34;&gt;Thread&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lock_guard&lt;/code&gt;/&lt;code&gt;unique_lock&lt;/code&gt;に対応する&lt;code&gt;unlock_guard&lt;/code&gt;のリクエスト(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/1850&#34; target=&#34;_blank&#34;&gt;#1850&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shared_mutex&lt;/code&gt;に&lt;code&gt;timed_lock&lt;/code&gt;と&lt;code&gt;timed_lock_shared&lt;/code&gt;メンバをリクエスト(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/2637&#34; target=&#34;_blank&#34;&gt;#2637&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ポータブル及びポータブルではないスレッド属性の対応の提案(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/2741&#34; target=&#34;_blank&#34;&gt;#2741&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shared_lock_guard&lt;/code&gt;のリクエスト(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/3567&#34; target=&#34;_blank&#34;&gt;#3567&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Boost.Moveベースのムーブセマンティクスへの変更(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6194&#34; target=&#34;_blank&#34;&gt;#6194&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;時間関係のインターフェースをBoost.Chronoで実装(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6195&#34; target=&#34;_blank&#34;&gt;#6195&lt;/a&gt;)(C++11標準への追従)&lt;/li&gt;
&lt;li&gt;Howard Hinnantが提案したインターフェースに&lt;code&gt;shared_mutex&lt;/code&gt;を拡張(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6217&#34; target=&#34;_blank&#34;&gt;#6217&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noexcept&lt;/code&gt;をコンパイラがサポートしている場合&lt;code&gt;noexcept&lt;/code&gt;を指定(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6224&#34; target=&#34;_blank&#34;&gt;#6224&lt;/a&gt;)(C++11標準への追従)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;locks&lt;/code&gt;に明示的な&lt;code&gt;bool&lt;/code&gt;型への変換を追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6226&#34; target=&#34;_blank&#34;&gt;#6226&lt;/a&gt;)(C++11標準への追従)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;promise&lt;/code&gt;にアロケータ指定可能なコンストラクタを追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6228&#34; target=&#34;_blank&#34;&gt;#6228&lt;/a&gt;)(C++11標準への追従)&lt;/li&gt;
&lt;li&gt;C++11標準で定められた例外の通知方法に変更(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6230&#34; target=&#34;_blank&#34;&gt;#6230&lt;/a&gt;)(C++11標準への追従)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt;のデストラクタは&lt;code&gt;joinable&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;を返す場合に&lt;code&gt;terminate&lt;/code&gt;を呼ぶ様に変更(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6266&#34; target=&#34;_blank&#34;&gt;#6266&lt;/a&gt;)(C++11標準への追従)(&lt;strong&gt;破壊的変更&lt;/strong&gt;)→ デフォルトではこれまで通りの&lt;code&gt;detach&lt;/code&gt;動作。&lt;code&gt;BOOST_THREAD_PROVIDES_THREAD_DESTRUCTOR_CALLS_TERMINATE_IF_JOINABLE&lt;/code&gt;を&lt;code&gt;define&lt;/code&gt;することで新しい動作に切り替えることができる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt;はムーブ代入時に&lt;code&gt;joinable&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;を返す場合に&lt;code&gt;terminate&lt;/code&gt;を呼ぶように変更(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6269&#34; target=&#34;_blank&#34;&gt;#6269&lt;/a&gt;)(C++11標準への追従)(&lt;strong&gt;破壊的変更&lt;/strong&gt;)→ デフォルトではこれまで通りの動作。&lt;code&gt;BOOST_THREAD_PROVIDES_THREAD_MOVE_ASSIGN_CALLS_TERMINATE_IF_JOINABLE&lt;/code&gt;を&lt;code&gt;define&lt;/code&gt;することで新しい動作に切り替えることができる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread::id&lt;/code&gt;用の&lt;code&gt;hash&lt;/code&gt;の特殊化を用意(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6272&#34; target=&#34;_blank&#34;&gt;#6272&lt;/a&gt;)(C++11標準への追従)&lt;/li&gt;
&lt;li&gt;条件変数の&lt;code&gt;wait&lt;/code&gt;系関数用の&lt;code&gt;cv_status&lt;/code&gt;列挙型を追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6273&#34; target=&#34;_blank&#34;&gt;#6273&lt;/a&gt;)(C++11標準への追従)&lt;/li&gt;
&lt;li&gt;ドキュメントに&lt;code&gt;BasicLockagle&lt;/code&gt;要件に関する記述を追加(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6231&#34; target=&#34;_blank&#34;&gt;#6231&lt;/a&gt;)(C++11標準への追従)&lt;/li&gt;
&lt;li&gt;C++11標準向けに&lt;code&gt;once_flag&lt;/code&gt;を修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6342&#34; target=&#34;_blank&#34;&gt;#6342&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;upgrade_lock&lt;/code&gt;に&lt;code&gt;mutex&lt;/code&gt;と&lt;code&gt;release&lt;/code&gt;メンバが不足していたのを修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6671&#34; target=&#34;_blank&#34;&gt;#6671&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;upgrade_lock&lt;/code&gt;に時間をメンバに取るコンストラクタが不足していたのを修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6672&#34; target=&#34;_blank&#34;&gt;#6672&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;upgrade_lock&lt;/code&gt;用のフリー関数版&lt;code&gt;swap&lt;/code&gt;が無かったのを修正(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6675&#34; target=&#34;_blank&#34;&gt;#6675&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;packaged_task&lt;/code&gt;に&lt;code&gt;result_type&lt;/code&gt;とアロケータを取るコンストラクタが不足していたのを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;packaged_task::reset()&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Itanium環境でリンク等に失敗する(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/2575&#34; target=&#34;_blank&#34;&gt;#2575&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt;をカスケードした状態で&lt;code&gt;thread::id&lt;/code&gt;を使用しながら&lt;code&gt;join&lt;/code&gt;すると適切に&lt;code&gt;join&lt;/code&gt;されない(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/4345&#34; target=&#34;_blank&#34;&gt;#4345&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_THREAD_USE_DLL&lt;/code&gt;及び&lt;code&gt;BOOST_THREAD_USE_LIB&lt;/code&gt;は重大であるにもかかわらずアンドキュメントである(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/4921&#34; target=&#34;_blank&#34;&gt;#4921&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt;中で&lt;code&gt;pthread_exit&lt;/code&gt;を呼ぶと&lt;code&gt;terminate&lt;/code&gt;が呼ばれるのをドキュメント化(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5013&#34; target=&#34;_blank&#34;&gt;#5013&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;this_thread::get_id&lt;/code&gt;が非常に遅い(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5173&#34; target=&#34;_blank&#34;&gt;#5173&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;future&lt;/code&gt;を&lt;code&gt;interrupt&lt;/code&gt;すると&lt;code&gt;unknown_exception&lt;/code&gt;が投げられる(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5351&#34; target=&#34;_blank&#34;&gt;#5351&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;read lockが行われている状態で前の&lt;code&gt;upgrade_lock&lt;/code&gt;が解放を行っても&lt;code&gt;upgrade_lock&lt;/code&gt;が取得を行わない(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5516&#34; target=&#34;_blank&#34;&gt;#5516&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shared_future&amp;lt;T&amp;gt;::get()&lt;/code&gt;が正しくない戻り値型になっている(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5990&#34; target=&#34;_blank&#34;&gt;#5990&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;packaged_task&lt;/code&gt;がムーブした結果を受け取る事ができない(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6174&#34; target=&#34;_blank&#34;&gt;#6174&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;SunStudioにおいて&lt;code&gt;unique_future&lt;/code&gt;のムーブがコンパイルエラーになる(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6222&#34; target=&#34;_blank&#34;&gt;#6222&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11環境で&lt;code&gt;shared_lock&lt;/code&gt;のムーブ代入が正しく動作しない(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6673&#34; target=&#34;_blank&#34;&gt;#6673&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shared_mutex&lt;/code&gt;の&lt;code&gt;try_lock_upgrade_until&lt;/code&gt;が正しく動作しない(&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6674&#34; target=&#34;_blank&#34;&gt;#6674&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ML上で指摘された&lt;code&gt;task_object&lt;/code&gt;のムーブコンストラクタの存在下で&lt;code&gt;task_object&lt;/code&gt;のコピーコンストラクタが削除される問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_multiset&lt;/code&gt;と&lt;code&gt;unordered_multimap&lt;/code&gt;の等価比較関数を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reserve&lt;/code&gt;を実装 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6857&#34; target=&#34;_blank&#34;&gt;#6857&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCCの&lt;code&gt;-Wfloat-equal&lt;/code&gt;と&lt;code&gt;-Wshadow&lt;/code&gt;による警告を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6190&#34; target=&#34;_blank&#34;&gt;#6190&lt;/a&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6771&#34; target=&#34;_blank&#34;&gt;#6771&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;bcpで正しく展開されない名前空間の問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6905&#34; target=&#34;_blank&#34;&gt;#6905&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;SunStudio12.3でのコンパイルエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6784&#34; target=&#34;_blank&#34;&gt;#6784&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Bucket allocationのために内部の一部を変更&lt;/li&gt;
&lt;li&gt;すべての変更点は /doc/html/unordered/changes.html#unordered.changes.boost_1_50_0 を参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;V2.3.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一部のメンバを &lt;code&gt;base_iteration_context&lt;/code&gt; コンストラクタで初期化していなかった問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6758&#34; target=&#34;_blank&#34;&gt;#6758&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;force_include&lt;/code&gt; で追加したインクルードファイルが &lt;code&gt;#line&lt;/code&gt; ディレクティブを失敗させる問題の修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6838&#34; target=&#34;_blank&#34;&gt;#6838&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;testwave に &lt;code&gt;--forceinclude&lt;/code&gt; オプションのテスト用サポートを入れて，#6838 の修正確認のためのテストケースを追加&lt;/li&gt;
&lt;li&gt;wave ドライバのビルドに失敗するのを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6870&#34; target=&#34;_blank&#34;&gt;#6870&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#xpressive&#34; id=&#34;xpressive&#34;&gt;Xpressive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非常に醜い&lt;code&gt;lexical_cast&lt;/code&gt;ハックをまぁ我慢できるものに置きかえた&lt;/li&gt;
&lt;li&gt;C++11で問題になるMPL &lt;code&gt;assert&lt;/code&gt;を&lt;code&gt;static assert&lt;/code&gt;に置きかえたことで、 &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6846&#34; target=&#34;_blank&#34;&gt;#6846&lt;/a&gt; が修正された。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;ul&gt;
&lt;li&gt;Intel: 11.1&lt;/li&gt;
&lt;li&gt;LLVM Clang: 2.8&lt;/li&gt;
&lt;li&gt;GCC: 4.2.4, 4.3.4, 4.4.3, 4.5.3, 4.6.2&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode:4.3.4, 4.4.3, 4.5.4, 4.6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X&lt;ul&gt;
&lt;li&gt;Intel: 11.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.4.4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows&lt;ul&gt;
&lt;li&gt;Visual C++: 8.0, 9.0, 10.0&lt;/li&gt;
&lt;li&gt;GCC, mingw: 4.4.0, 4.4.7, 4.5.4, 4.6.1, 4.7.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD&lt;ul&gt;
&lt;li&gt;GCC: 4.2.1 (32/64bit)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX&lt;ul&gt;
&lt;li&gt;QCC, C++0x mode: 4.4.0, 4.4.7, 4.5.4, 4.6.3, 4.7.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加のテスト済みコンパイラ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;ul&gt;
&lt;li&gt;LLVM Clang: subversion&lt;/li&gt;
&lt;li&gt;GCC: 4.2.4, 4.3.4, 4.4.4, 4.5.3, 4.6.2&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.3.4, 4.4.4, 4.5.3, 4.6.2&lt;/li&gt;
&lt;li&gt;pgCC: 11.9&lt;/li&gt;
&lt;li&gt;Intel: 10.1, 11.1, 12.0, 12.1&lt;/li&gt;
&lt;li&gt;Visual Age: 10.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X&lt;ul&gt;
&lt;li&gt;LLVM Clang: subversion&lt;/li&gt;
&lt;li&gt;Intel: 11.1, 12.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode: 4.4.4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows&lt;ul&gt;
&lt;li&gt;Visual C++: 8.0, 10.0&lt;/li&gt;
&lt;li&gt;Visual C++ with STLport: 9.0&lt;/li&gt;
&lt;li&gt;Visual C++, Windows Mobile 5 with STLport: 9.0&lt;/li&gt;
&lt;li&gt;GCC, mingw: 4.4.0, 4.4.7, 4.5.2, 4.5.4, 4.6.4, 4.7.0&lt;/li&gt;
&lt;li&gt;GCC, C++0x mode, mingw: 4.5.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AIX&lt;ul&gt;
&lt;li&gt;IBM XL C/C++ Enterprise Edition, V12.1.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD&lt;ul&gt;
&lt;li&gt;GCC: 4.2.1 (32/64bit)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Solaris&lt;ul&gt;
&lt;li&gt;Sun: 5.10&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;Akira Takahashi, zak, Flast, DigitalGhost&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.53.0 リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_53_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_53_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.53.0 リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/svn/boost/website/public_html/live/feed/history/boost_1_53_0.qbk&#34; target=&#34;_blank&#34;&gt;https://svn.boost.org/svn/boost/website/public_html/live/feed/history/boost_1_53_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Atomic&lt;ul&gt;
&lt;li&gt;Helge Bahmannによる、C++11スタイルの&lt;code&gt;atomic&lt;/code&gt;ライブラリ。Tim Blechmannによってメンテナンスされる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Coroutine&lt;ul&gt;
&lt;li&gt;Oliver Kowalkeによるコルーチンライブラリ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lockfree&lt;ul&gt;
&lt;li&gt;Tim Blechmannによるロックフリーデータ構造&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multiprecision&lt;ul&gt;
&lt;li&gt;John MaddockとChristopher Kormanyosによる、拡張精度の算術型演算(浮動小数点数型、整数型、有理数型)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Odeint&lt;ul&gt;
&lt;li&gt;Karsten AhnertとMario Mulanskyによる、常微分方程式ライブラリ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#algorithm&#34;&gt;Algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#minmax&#34;&gt;MinMax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#polygon&#34;&gt;Polygon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#random&#34;&gt;Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#range&#34;&gt;Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ratio&#34;&gt;Ratio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#string-algo&#34;&gt;String Algo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#thread&#34;&gt;Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xpressive&#34;&gt;Xpressive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#array&#34; id=&#34;array&#34;&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::get&lt;/code&gt;と&lt;code&gt;std::get&lt;/code&gt;をサポート(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7652&#34; target=&#34;_blank&#34;&gt;#7652&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#algorithm&#34; id=&#34;algorithm&#34;&gt;Algorithm&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非ASCIIのコメントを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7781&#34; target=&#34;_blank&#34;&gt;#7781&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Knuth-Morris-Prattのドキュメントを更新(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7656&#34; target=&#34;_blank&#34;&gt;#7656&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの64ビットから32ビットへの変換警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7459&#34; target=&#34;_blank&#34;&gt;#7459&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントとコメントの小さな間違いを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7761&#34; target=&#34;_blank&#34;&gt;#7761&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_socket::get_option()&lt;/code&gt;のドキュメントにある例で、古い関数を使用していたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7562&#34; target=&#34;_blank&#34;&gt;#7562&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;OpenSSLに合わせて、&lt;code&gt;SSL_CTX&lt;/code&gt;に使用する型を&lt;code&gt;long&lt;/code&gt;から&lt;code&gt;int&lt;/code&gt;に変更(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7209&#34; target=&#34;_blank&#34;&gt;#7209&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;最近のMinGWバージョンでは、&lt;code&gt;_snwprintf&lt;/code&gt;がコンパイルエラーとなるため、&lt;code&gt;swprintf&lt;/code&gt;を使用するようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7373&#34; target=&#34;_blank&#34;&gt;#7373&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windows上で&lt;code&gt;io_service&lt;/code&gt;のスレッドプールをシャットダウンするときに、デッドロックする問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7552&#34; target=&#34;_blank&#34;&gt;#7552&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noexcept&lt;/code&gt;修飾子を使うようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7797&#34; target=&#34;_blank&#34;&gt;#7797&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;UNIXドメインソケットの例で、&lt;code&gt;accept&lt;/code&gt;が致命的なエラーにならないよう修正した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7488&#34; target=&#34;_blank&#34;&gt;#7488&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;デフォルトメモリアロケーションの振る舞いを改善するために、小さいブロックの再利用をする最適化を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#bimap&#34; id=&#34;bimap&#34;&gt;Bimap&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;エラーメッセージを改善するために、&lt;code&gt;map_view_iterator&lt;/code&gt;をリファクタ&lt;/li&gt;
&lt;li&gt;情報で比較する際の&lt;code&gt;replace_&lt;/code&gt;(&lt;code&gt;left&lt;/code&gt;/&lt;code&gt;right&lt;/code&gt;/&lt;code&gt;key&lt;/code&gt;/&lt;code&gt;data&lt;/code&gt;)のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vector_of&lt;/code&gt;ビューと&lt;code&gt;list_of&lt;/code&gt;ビューの&lt;code&gt;assign(size_type,value_type)&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vector_of&lt;/code&gt;ビューの&lt;code&gt;operator[](size_type)&lt;/code&gt;と&lt;code&gt;at(size_type)&lt;/code&gt;の戻り値を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#chrono&#34; id=&#34;chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;非推奨&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Chrono 1.2.xに含まれていたchrono i/oを、2.0で完全にリファクタリングした&lt;/li&gt;
&lt;li&gt;chrono i/o : &lt;code&gt;duration_short&lt;/code&gt;、&lt;code&gt;duration_long&lt;/code&gt;マニピュレータを非推奨にした。その代わりに、パラメータ付きのフォーマットマニピュレータである&lt;code&gt;duration_fmt&lt;/code&gt;、もしくは名前変更したマニピュレータである&lt;code&gt;duration_symbol&lt;/code&gt;、&lt;code&gt;duration_prefix&lt;/code&gt;を使用すること。&lt;/li&gt;
&lt;li&gt;chrono i/o : &lt;code&gt;duration_punct&amp;lt;&amp;gt;&lt;/code&gt;ファセットを非推奨にした。代わりに、情報取得のために&lt;code&gt;get_duration_style&lt;/code&gt;フリー関数、ローカライズのために&lt;code&gt;duration_units&lt;/code&gt;ファセットを使用すること。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_CHRONO_VERSION==2&lt;/code&gt;とした場合、非推奨機能は使用できない。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;time_point&amp;lt;system_clock&amp;gt;&lt;/code&gt;の出力バージョンがコンパイルに失敗する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7546&#34; target=&#34;_blank&#34;&gt;#7546&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time_point&amp;lt;system_clock&amp;gt;&lt;/code&gt;の入力バージョンがコンパイルに失敗する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7547&#34; target=&#34;_blank&#34;&gt;#7547&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;chrono i/oで時間の解析が不完全だった問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7868&#34; target=&#34;_blank&#34;&gt;#7868&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#container&#34; id=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;list::const_iterator&lt;/code&gt;の&lt;code&gt;operator-&amp;gt;()&lt;/code&gt;がコンパイルエラーになる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7650&#34; target=&#34;_blank&#34;&gt;#7650&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vector&lt;/code&gt;の挿入パフォーマンスを改善&lt;/li&gt;
&lt;li&gt;パフォーマンス向上のために、実験的にマルチアロケーションのインタフェースを再度変更(まだ実験)&lt;/li&gt;
&lt;li&gt;例外無効化の環境に対応&lt;/li&gt;
&lt;li&gt;GCCの&lt;code&gt;-Wshadow&lt;/code&gt;警告を修正&lt;/li&gt;
&lt;li&gt;非推奨マクロ&lt;code&gt;BOOST_NO_XXXX&lt;/code&gt;の代わりに&lt;code&gt;BOOST_NO_CXX11_XXX&lt;/code&gt;を使用するよう置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ARMのiOS、x86(32ビット)のMacOS Xのサポートを追加&lt;/li&gt;
&lt;li&gt;Win32のSEH上書き保護サポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内部リングが最小サイズ以下の場合(たとえば、1か2個の点)に、ポリゴンの生成を回避するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geometry::disjoint&lt;/code&gt;へのセグメント縮退(Karsten Ahnertによるパッチ)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geometry::difference&lt;/code&gt;で、正接のハンドリングが不足していた問題を修正(H2からの報告)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geometry::for_each&lt;/code&gt;でのラムダを使用を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geometry::comparable_distance&lt;/code&gt;の&lt;code&gt;point-linestring&lt;/code&gt;、&lt;code&gt;point-range&lt;/code&gt;、&lt;code&gt;point-polygon&lt;/code&gt;を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;geometry::disjoint&lt;/code&gt;の組み合わせ： &lt;code&gt;point&lt;/code&gt;/&lt;code&gt;ring&lt;/code&gt;, &lt;code&gt;point&lt;/code&gt;/&lt;code&gt;polygon&lt;/code&gt;, &lt;code&gt;point&lt;/code&gt;/&lt;code&gt;multi_polygon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geometry::intersects&lt;/code&gt;の組み合わせ： &lt;code&gt;point&lt;/code&gt;/&lt;code&gt;ring&lt;/code&gt;, &lt;code&gt;point&lt;/code&gt;/&lt;code&gt;polygon&lt;/code&gt;, &lt;code&gt;point&lt;/code&gt;/&lt;code&gt;multi_polygon&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;内部的な変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;様々なアルゴリズムの特殊バージョンと未実装バージョンを更新(以前のバージョンから引き続いての変更。これらは構造を簡略化し、より良いエラー報告をし、ドキュメント化の自動的に行う)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自己代入の警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4919&#34; target=&#34;_blank&#34;&gt;#4919&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kolmogorov_max_flow()&lt;/code&gt;がmax flow値を見つけてこない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3468&#34; target=&#34;_blank&#34;&gt;#3468&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7728&#34; target=&#34;_blank&#34;&gt;#7728&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;アルゴリズムの要件が間違っていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4386&#34; target=&#34;_blank&#34;&gt;#4386&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;depth_first_search()&lt;/code&gt;に、&lt;code&gt;on_finish_edge&lt;/code&gt;イベントを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5269&#34; target=&#34;_blank&#34;&gt;#5269&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;未使用変数警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7428&#34; target=&#34;_blank&#34;&gt;#7428&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kamada_kawai_spring_layout.hpp&lt;/code&gt;のコメント誤字を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7457&#34; target=&#34;_blank&#34;&gt;#7457&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;/&lt;code&gt;reverse_graph.hpp&lt;/code&gt;の不要なセミコロンを削除(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7467&#34; target=&#34;_blank&#34;&gt;#7467&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named_graph&lt;/code&gt;に対する&lt;code&gt;add_vertex()&lt;/code&gt;関数のオーバーロードが曖昧になる問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7600&#34; target=&#34;_blank&#34;&gt;#7600&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/graph/labeled_graph.hpp&lt;/code&gt;内の誤字を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7648&#34; target=&#34;_blank&#34;&gt;#7648&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/graph/tiernan_all_cycles.hpp&lt;/code&gt;内の誤字を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7684&#34; target=&#34;_blank&#34;&gt;#7684&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Graph&lt;/code&gt;コンセプトの、必須ではない関連型を要件から削除(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7741&#34; target=&#34;_blank&#34;&gt;#7741&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;small_world_iterator&lt;/code&gt;のドキュメントに、デフォルト引数が記載されていない(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7771&#34; target=&#34;_blank&#34;&gt;#7771&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inserted_labeled_vertex()&lt;/code&gt;でプロパティが追加されていなかったのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7773&#34; target=&#34;_blank&#34;&gt;#7773&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Push Relabel Max Flowのドキュメント上のサンプルにあった誤字を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7780&#34; target=&#34;_blank&#34;&gt;#7780&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Graph&lt;/code&gt;コンセプトのドキュメントで、&lt;code&gt;examples/undirected.cpp&lt;/code&gt;へのリンクが切れていたのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7787&#34; target=&#34;_blank&#34;&gt;#7787&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;その他、Tracにないいくつかのバグ修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;機能追加&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;複数のグラフを含むGraphMLの読み込みをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A*&lt;/code&gt;検索の新バージョンを追加。具体的にはツリーや、同じ頂点を何度も通ることを許可するために、必要ならカラーマップを削除する。&lt;/li&gt;
&lt;li&gt;VF2 subgraph isomorphismアルゴリズムを追加(Flavio De Lorenziに感謝する！)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#hash&#34; id=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;利用可能な環境で&lt;code&gt;boost::int128_type&lt;/code&gt;と&lt;code&gt;boost::uint128_type&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;プラットフォームが標準の浮動小数点数関数を持っている場合は、自動推論を使用しないようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7221&#34; target=&#34;_blank&#34;&gt;#7221&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7470&#34; target=&#34;_blank&#34;&gt;#7470&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#interprocess&#34; id=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCの&lt;code&gt;-Wshadow&lt;/code&gt;警告を修正&lt;/li&gt;
&lt;li&gt;パフォーマンス向上のために、実験的にマルチアロケーションのインタフェースを再度変更(まだ実験)&lt;/li&gt;
&lt;li&gt;非推奨マクロ&lt;code&gt;BOOST_NO_XXXX&lt;/code&gt;の代わりに&lt;code&gt;BOOST_NO_CXX11_XXX&lt;/code&gt;を使用するよう置き換えた&lt;/li&gt;
&lt;li&gt;[&lt;span style=&#34;color:red;&#34;&gt;ABI破壊&lt;/span&gt;] 効率改善のため、ノードプールアロケータを内部的に変更&lt;/li&gt;
&lt;li&gt;ファイルマッピングのデータ構造を作る際、小さいサイズを指定するとクラッシュする問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7795&#34; target=&#34;_blank&#34;&gt;#7795&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#intrusive&#34; id=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCCの&lt;code&gt;-Wshadow&lt;/code&gt;警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7174&#34; target=&#34;_blank&#34;&gt;#7174&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;等値キーの要素が挿入される位置についてドキュメントに記載(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7529&#34; target=&#34;_blank&#34;&gt;#7529&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/intrusive/detail/has_member_function_callable_with.hpp&lt;/code&gt;でのコンパイルエラーを修正。&lt;code&gt;const&lt;/code&gt;付きの型を継承していた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7815&#34; target=&#34;_blank&#34;&gt;#7815&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;侵入コンテナのコンストラクタに、不足していた&lt;code&gt;explicit&lt;/code&gt;を付けた&lt;/li&gt;
&lt;li&gt;非推奨マクロ&lt;code&gt;BOOST_NO_XXXX&lt;/code&gt;の代わりに&lt;code&gt;BOOST_NO_CXX11_XXX&lt;/code&gt;を使用するよう置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ユーザー定義クラスのための、新たな文字型(&lt;code&gt;char16_t&lt;/code&gt;/&lt;code&gt;char32_t&lt;/code&gt;)検出アルゴリズム(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6786&#34; target=&#34;_blank&#34;&gt;#6786&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメント更新(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7582&#34; target=&#34;_blank&#34;&gt;#7582&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7831&#34; target=&#34;_blank&#34;&gt;#7831&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::array&lt;/code&gt;の変換が、最適化の効かない書き方になっていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7799&#34; target=&#34;_blank&#34;&gt;#7799&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;g++で&lt;code&gt;-ftrapvオプション&lt;/code&gt; (trap overflow errors : オーバーフローを検知して&lt;code&gt;abort()&lt;/code&gt;させる)をつけるとエラーになるケースを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7814&#34; target=&#34;_blank&#34;&gt;#7814&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;セキュリティ関連のバグ修正。いくつかの不正なUTF-8シーケンスを、有効なものとして受け入れていた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7743&#34; target=&#34;_blank&#34;&gt;#7743&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windowsのコードページ名として不正な名前を使用していたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7386&#34; target=&#34;_blank&#34;&gt;#7386&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Doxygenのフォーマットミスによって、ドキュメントが不足していたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7734&#34; target=&#34;_blank&#34;&gt;#7734&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;いくつかの場所で &lt;code&gt;std::&lt;/code&gt; 指定が抜けていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7701&#34; target=&#34;_blank&#34;&gt;#7701&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;いくつかの誤字と、英語の構文を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7368&#34; target=&#34;_blank&#34;&gt;#7368&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7762&#34; target=&#34;_blank&#34;&gt;#7762&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;問題点の修正：&lt;ul&gt;
&lt;li&gt;Lanczos近似の背景ドキュメントの誤字を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7325&#34; target=&#34;_blank&#34;&gt;#7325&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atanh()&lt;/code&gt;の正の値を渡した場合、&lt;code&gt;domain_error&lt;/code&gt;例外が送出されるべきだが、&lt;code&gt;overflow&lt;/code&gt;例外が送出されていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7415&#34; target=&#34;_blank&#34;&gt;#7415&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asinh()&lt;/code&gt;のエラーポリシーとして&lt;code&gt;ignore_error&lt;/code&gt;を設定していても、大きな負数を渡すと&lt;code&gt;overflow&lt;/code&gt;例外が送出されてしまう問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7416&#34; target=&#34;_blank&#34;&gt;#7416&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;FBSD環境での&lt;code&gt;isinf()&lt;/code&gt;のコンパイルエラーを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7183&#34; target=&#34;_blank&#34;&gt;#7183&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/math/constants/calculate_constants.hpp&lt;/code&gt;ヘッダのコメント誤字を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7649&#34; target=&#34;_blank&#34;&gt;#7649&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;math/minimax/main.cpp&lt;/code&gt;に、インクルードするヘッダが足りていなかったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7694&#34; target=&#34;_blank&#34;&gt;#7694&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float_advance()&lt;/code&gt;に非正規化数として0を設定するとスタックオーバーフローする問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4445&#34; target=&#34;_blank&#34;&gt;#4445&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;libc++でコンパイルが通らない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7492&#34; target=&#34;_blank&#34;&gt;#7492&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;two-sample students tの例が間違っていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7402&#34; target=&#34;_blank&#34;&gt;#7402&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;complex&lt;/code&gt;の&lt;code&gt;acos&lt;/code&gt;/&lt;code&gt;asin&lt;/code&gt;/&lt;code&gt;atan&lt;/code&gt;を改善(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7290&#34; target=&#34;_blank&#34;&gt;#7290&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7291&#34; target=&#34;_blank&#34;&gt;#7291&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cyl_bessel_j&lt;/code&gt;と&lt;code&gt;gamma_p&lt;/code&gt;/&lt;code&gt;gamma_q&lt;/code&gt;のいくつかのコーナーケースで精度を改善。Rocco Romeoに感謝する。&lt;/li&gt;
&lt;li&gt;整数でのベッセルJとYの精度を改善。Rocco Romeoに感謝する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#minmax&#34; id=&#34;minmax&#34;&gt;MinMax&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;カンマ演算子の誤用を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7752&#34; target=&#34;_blank&#34;&gt;#7752&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメント上の壊れたリンクを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7751&#34; target=&#34;_blank&#34;&gt;#7751&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#move&#34; id=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/move/move.hpp&lt;/code&gt;に全ての機能を入れていたので、&lt;code&gt;core.hpp&lt;/code&gt;と&lt;code&gt;utility.hpp&lt;/code&gt;に分離した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6524&#34; target=&#34;_blank&#34;&gt;#6524&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントの小さな修正&lt;/li&gt;
&lt;li&gt;非推奨マクロ&lt;code&gt;BOOST_NO_XXXX&lt;/code&gt;の代わりに&lt;code&gt;BOOST_NO_CXX11_XXX&lt;/code&gt;を使用するよう置き換えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uninitialized_move()&lt;/code&gt;の実装に、例外のチェックが抜けていた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7830&#34; target=&#34;_blank&#34;&gt;#7830&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;マクロの不足と間違いを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7832&#34; target=&#34;_blank&#34;&gt;#7832&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#polygon&#34; id=&#34;polygon&#34;&gt;Polygon&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::polygon::contains()&lt;/code&gt;が、含まれていても&lt;code&gt;false&lt;/code&gt;を返す場合があったのを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6366&#34; target=&#34;_blank&#34;&gt;#6366&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polygon::belongs()&lt;/code&gt;の、ODR違反によるリンクエラーを修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7678&#34; target=&#34;_blank&#34;&gt;#7678&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;内部的な変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;point&lt;/code&gt;/&lt;code&gt;segment&lt;/code&gt;/&lt;code&gt;interval&lt;/code&gt;と&lt;code&gt;data&lt;/code&gt;/&lt;code&gt;concept&lt;/code&gt;/&lt;code&gt;traits&lt;/code&gt;をリファクタ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;point&lt;/code&gt;と&lt;code&gt;data&lt;/code&gt;/&lt;code&gt;concept&lt;/code&gt;/&lt;code&gt;traits&lt;/code&gt;区間のユニットテストを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transform.hpp&lt;/code&gt;の2次元操作を簡略化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;point_3d data&lt;/code&gt;/&lt;code&gt;concept&lt;/code&gt;/&lt;code&gt;traits&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#random&#34; id=&#34;random&#34;&gt;Random&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;例外が無効な状態で、コンパイルが通るように修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5399&#34; target=&#34;_blank&#34;&gt;#5399&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#range&#34; id=&#34;range&#34;&gt;Range&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;range/any_range.hpp&lt;/code&gt;にインクルードが不足している問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5603&#34; target=&#34;_blank&#34;&gt;#5603&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;search_n&lt;/code&gt;の実装詳細名前空間が&lt;code&gt;boost::range::range_detail&lt;/code&gt;になっていたので、他に合わせて&lt;code&gt;boost::range_detail&lt;/code&gt;に修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6103&#34; target=&#34;_blank&#34;&gt;#6103&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;いくつかのドキュメント修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#ratio&#34; id=&#34;ratio&#34;&gt;Ratio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;クラステンプレート&lt;code&gt;br_mul&lt;/code&gt;のメンバ変数&lt;code&gt;nan&lt;/code&gt;の初期値のシフト演算において、シフトカウントがマイナスになったり、大きすぎる数になった場合に、未定義動作を引き起こすという警告が発生する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7616&#34; target=&#34;_blank&#34;&gt;#7616&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#regex&#34; id=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make_u32regex()&lt;/code&gt;のUTF-8検証が不十分だったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7744&#34; target=&#34;_blank&#34;&gt;#7744&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;gcc4.7.2でC++11オプションを有効にした際の警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7644&#34; target=&#34;_blank&#34;&gt;#7644&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#smart-pointers&#34; id=&#34;smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Glen Fernandes氏による、配列用の&lt;code&gt;make_shared&lt;/code&gt;と&lt;code&gt;allocate_shared&lt;/code&gt;実装を取り込んだ。これにより、デフォルト初期化と値なし初期化についてのオーバーロードと同じく、コンストラクタ実引数かinitializer listで初期化されうる配列についてのシングルアロケーションが可能になった。詳細はこちら[&lt;a href=&#34;http://www.boost.org/doc/libs/1_53_0/libs/smart_ptr/make_shared_array.html&#34; target=&#34;_blank&#34;&gt;/libs/smart_ptr/make_shared_array.html make_shared and allocate_shared for arrays&lt;/a&gt;]を参照のこと。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shared_ptr&lt;/code&gt;を、配列へのポインタを保持できるようにした。これには、テンプレートパラメータで配列型(&lt;code&gt;T[]&lt;/code&gt;もしくは&lt;code&gt;T[N]&lt;/code&gt;)を指定する。&lt;/li&gt;
&lt;li&gt;C++11コンパイラでは&lt;code&gt;explicit operator bool()&lt;/code&gt;を使用するようにした。これは、以下のようなケースでコードを破壊する：  1. &lt;code&gt;bool&lt;/code&gt;をとる関数にスマートポインタを渡しているコード  2. &lt;code&gt;bool&lt;/code&gt;を返す関数でスマートポインタを返しているコードこのようなケースでは、 &lt;code&gt;p != 0&lt;/code&gt; もしくは &lt;code&gt;!!p&lt;/code&gt; を使用してください&lt;/li&gt;
&lt;li&gt;[追加リリースノート] だいぶ前から非推奨だった&lt;code&gt;shared_ptr&lt;/code&gt;の&lt;code&gt;value_type&lt;/code&gt;を削除した。代わりに&lt;code&gt;element_type&lt;/code&gt;を使用すること。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#string-algo&#34; id=&#34;string-algo&#34;&gt;String Algo&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;パターンがオーバーラップしている時に、オーバーラップしている箇所がヒットしない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7784&#34; target=&#34;_blank&#34;&gt;#7784&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;あいまいな&lt;code&gt;insert&lt;/code&gt;呼び出しを排除 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7346&#34; target=&#34;_blank&#34;&gt;#7346&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#thread&#34; id=&#34;thread&#34;&gt;Thread&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;廃止された機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;boost 1.53で廃止された機能はboost 1.58までは利用可能である&lt;/li&gt;
&lt;li&gt;C++11準拠： &lt;code&gt;packaged_task&amp;lt;R&amp;gt;&lt;/code&gt;を廃止した。以降は&lt;code&gt;packaged_task&amp;lt;R()&amp;gt;&lt;/code&gt;を使うこと&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mutex::scoped_lock&lt;/code&gt;、&lt;code&gt;scoped_try_lock&lt;/code&gt;、&lt;code&gt;boost::condition&lt;/code&gt;を廃止にした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7537&#34; target=&#34;_blank&#34;&gt;#7537&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++11準拠： ムーブ可能な関数オブジェクトと実引数をとれる&lt;code&gt;thread&lt;/code&gt;コンストラクタを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6270&#34; target=&#34;_blank&#34;&gt;#6270&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11準拠： システムまわりの関数に&lt;code&gt;noexcept&lt;/code&gt;をつけた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7279&#34; target=&#34;_blank&#34;&gt;#7279&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11準拠： &lt;code&gt;promise&lt;/code&gt;::&lt;code&gt;…at_thread_exit&lt;/code&gt;関数を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7280&#34; target=&#34;_blank&#34;&gt;#7280&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11準拠： &lt;code&gt;packaged_task&lt;/code&gt;テンプレートに&lt;code&gt;ArgTypes&lt;/code&gt;を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7281&#34; target=&#34;_blank&#34;&gt;#7281&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11準拠： &lt;code&gt;packaged_task::make_ready_at_thread_exit&lt;/code&gt;関数を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7282&#34; target=&#34;_blank&#34;&gt;#7282&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11準拠： ムーブ可能な関数オブジェクトと実引数をとれる&lt;code&gt;async&lt;/code&gt;を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7412&#34; target=&#34;_blank&#34;&gt;#7412&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11準拠： &lt;code&gt;launch&lt;/code&gt;ポリシーが&lt;code&gt;deferred&lt;/code&gt;のとき、&lt;code&gt;async&lt;/code&gt;を追加する(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7413&#34; target=&#34;_blank&#34;&gt;#7413&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11準拠： &lt;code&gt;future::get&lt;/code&gt; の事後条件が &lt;code&gt;valid()==false&lt;/code&gt; になるようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7414&#34; target=&#34;_blank&#34;&gt;#7414&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ゼロオーバーヘッドな&lt;code&gt;condition_variable&lt;/code&gt;を提供(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7422&#34; target=&#34;_blank&#34;&gt;#7422&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Async: &lt;code&gt;make_future&lt;/code&gt;と&lt;code&gt;make_shared_future&lt;/code&gt;を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7444&#34; target=&#34;_blank&#34;&gt;#7444&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Thread: デストラクタで&lt;code&gt;thread&lt;/code&gt;を&lt;code&gt;join&lt;/code&gt;するヘルパークラスを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7540&#34; target=&#34;_blank&#34;&gt;#7540&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Thread: デストラクタで&lt;code&gt;thread&lt;/code&gt;を&lt;code&gt;join&lt;/code&gt;する&lt;code&gt;thread&lt;/code&gt;のラッパークラスを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7541&#34; target=&#34;_blank&#34;&gt;#7541&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11準拠： &lt;code&gt;async&lt;/code&gt;で作成した&lt;code&gt;future&lt;/code&gt;がデストラクタで&lt;code&gt;join&lt;/code&gt;するようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7575&#34; target=&#34;_blank&#34;&gt;#7575&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Synchro: &lt;code&gt;strict_lock&lt;/code&gt;と&lt;code&gt;nested_strict_lock&lt;/code&gt;を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7587&#34; target=&#34;_blank&#34;&gt;#7587&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Synchro: 依存関係を制限するために&lt;code&gt;locks.hpp&lt;/code&gt;を分割した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7588&#34; target=&#34;_blank&#34;&gt;#7588&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Synchro: Boost.ConceptCheckを利用して&#34;ロック可能コンセプト&#34;チェッカーを追加した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7590&#34; target=&#34;_blank&#34;&gt;#7590&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enable_if&lt;/code&gt;で使える&#34;ロック可能トレイト&#34;を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7591&#34; target=&#34;_blank&#34;&gt;#7591&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Synchro: なにもしない、&lt;code&gt;UpgardeLockable&lt;/code&gt;コンセプトに適合する&lt;code&gt;null_mutex&lt;/code&gt;を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7592&#34; target=&#34;_blank&#34;&gt;#7592&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Synchro: &lt;code&gt;externally_locked&lt;/code&gt;クラスを追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7593&#34; target=&#34;_blank&#34;&gt;#7593&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Threads: スレッド中断禁止設定を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7590&#34; target=&#34;_blank&#34;&gt;#7594&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回帰テストツールで、データ競合によって&lt;code&gt;BOOST_TEST(n_alive == 1);&lt;/code&gt;が失敗する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7464&#34; target=&#34;_blank&#34;&gt;#7464&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;condition_variable::generations&lt;/code&gt;メンバ関数が&lt;code&gt;notify_one&lt;/code&gt;か&lt;code&gt;notify_all&lt;/code&gt;を呼び続ける状態になり、メモリー消費とパフォーマンスに甚大な影響を及してしまう(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7657&#34; target=&#34;_blank&#34;&gt;#7657&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;スレッド内で&lt;code&gt;this_thread::sleep_for&lt;/code&gt; はもう&lt;code&gt;steady_clock&lt;/code&gt;を使わない(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7665&#34; target=&#34;_blank&#34;&gt;#7665&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_group::join_all()&lt;/code&gt;は&lt;code&gt;thread&lt;/code&gt;が&lt;code&gt;join&lt;/code&gt;可能かチェックすべき(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7668&#34; target=&#34;_blank&#34;&gt;#7668&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_group::join_all()&lt;/code&gt;は&lt;code&gt;resource_deadlock_would_occur&lt;/code&gt;を&lt;code&gt;catch&lt;/code&gt;すべき(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7669&#34; target=&#34;_blank&#34;&gt;#7669&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lockable_traits.hpp&lt;/code&gt;の&#34;defined&#34;トークンがtypoしている(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7672&#34; target=&#34;_blank&#34;&gt;#7672&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::future&lt;/code&gt;の&lt;code&gt;set_wait_callback&lt;/code&gt;のスレッドセーフ問題(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7798&#34; target=&#34;_blank&#34;&gt;#7798&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;this_thread::sleep_for&lt;/code&gt;と&lt;code&gt;this_thread::sleep_until&lt;/code&gt;の説明が正しくない(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7808&#34; target=&#34;_blank&#34;&gt;#7808&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv_status::no_timeout&lt;/code&gt;が&lt;code&gt;rel_time&lt;/code&gt;で指定した時間を越えたときに返却されている。&lt;code&gt;cv_status::timeout&lt;/code&gt;であるべき(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7812&#34; target=&#34;_blank&#34;&gt;#7812&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread::id&lt;/code&gt;に、シンボル可視の属性が付いていなかったことによる警告を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7874&#34; target=&#34;_blank&#34;&gt;#7874&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_THREAD_THROW_IF_PRECONDITION_NOT_SATISFIED&lt;/code&gt;をデフォルトで有効にするよう修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7875&#34; target=&#34;_blank&#34;&gt;#7875&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;condition_variable::wait(unique_lock&amp;lt;mutex&amp;gt;&amp;amp;)&lt;/code&gt;で発生する例外のメッセージが不適切だったので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7882&#34; target=&#34;_blank&#34;&gt;#7882&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread::do_try_join_until()&lt;/code&gt;に戻り値の型が抜けていたので修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7890&#34; target=&#34;_blank&#34;&gt;#7890&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;標準以前の古いvariadic pairコンストラクタのサポートを外し、同等の実装をしなおした。いずれもBoost 1.48からdeprecated指定である。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erase&lt;/code&gt;のより単純な実装の導入や、deprecated指定されていたコンフィグマクロの除去など、内部実装をさらに変更した。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;文字列への所有権を持たない参照を保持する&lt;code&gt;string_ref&lt;/code&gt;クラスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11環境に対してのみだが、ムーブコンストラクタとムーブ代入演算子を追加した。Variantライブラリは今、コピー不可でムーブ可なオブジェクトが使用できる(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7620&#34; target=&#34;_blank&#34;&gt;#7620&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7576&#34; target=&#34;_blank&#34;&gt;#7576&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;context&amp;lt;&amp;gt;::add_macro_definition&lt;/code&gt;がマクロ置換リストにまれに余計な&lt;code&gt;T_EOF&lt;/code&gt;を追加する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#xpressive&#34; id=&#34;xpressive&#34;&gt;Xpressive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最近のスマートポインタに対応するための修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7809&#34; target=&#34;_blank&#34;&gt;#7809&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Qt5ツールセット&lt;/li&gt;
&lt;li&gt;rccサポートを改善(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7576&#34; target=&#34;_blank&#34;&gt;#7576&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;GCC: 4.1.2, 4.2.4, 4.4.4, 4.5.3, 4.6.3, 4.7.2&lt;/li&gt;
&lt;li&gt;GCC, C++11 mode: 4.4.4, 4.5.3, 4.6.3, 4.7.2&lt;/li&gt;
&lt;li&gt;Intel: 11.1, 12.1&lt;/li&gt;
&lt;li&gt;LLVM Clang: 2.8&lt;/li&gt;
&lt;li&gt;LLVM Clang, with libc++: 3.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;GCC: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11 mode: 4.4.4&lt;/li&gt;
&lt;li&gt;Intel: 11.1, 12.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 9.0, 10.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC: 4.2.1, 32 and 64 bit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加のテストコンパイラ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Cray: 4.6.1&lt;/li&gt;
&lt;li&gt;Clang: from subversion&lt;/li&gt;
&lt;li&gt;LLVM Clang, with libc++: 3.2&lt;/li&gt;
&lt;li&gt;GCC: 4.2.4, 4.4.4, 4.5.3, 4.6.3, 4.7.1&lt;/li&gt;
&lt;li&gt;GCC, C++11 mode: 4.4.4, 4.5.3, 4.6.3, 4.7.1, 4.7.2&lt;/li&gt;
&lt;li&gt;pgCC: 11.9&lt;/li&gt;
&lt;li&gt;Intel: 10.1, 11.1, 12.1&lt;/li&gt;
&lt;li&gt;Intel, C++11 mode: 13.0.1&lt;/li&gt;
&lt;li&gt;Visual Age:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: from subversion&lt;/li&gt;
&lt;li&gt;Clang, C++11 mode: from subversion&lt;/li&gt;
&lt;li&gt;Intel: 11.1, 12.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11 mode: 4.4.4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0&lt;/li&gt;
&lt;li&gt;Visual C++ with STLport: 9.0&lt;/li&gt;
&lt;li&gt;Visual C++, Windows Mobile 5, with STLport: 9.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AIX:&lt;ul&gt;
&lt;li&gt;IBM XL C/C++ Enterprise Edition: V12.1.0.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;Akira Takahashi, Takatoshi Kondo, zak&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.55.0 リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_55_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_55_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_55_0.md b/document/version/1_55_0.md
index 1c8e497..c44408f 100644
--- a/document/version/1_55_0.md
+++ b/document/version/1_55_0.md
@@ -63,7 +63,7 @@
 
 - 本バージョンよりいくつかの古いコンパイラのサポートが終了した
 - 新しくサポートされる最低環境は以下の通り。なお他のコンパイラに変更はない
-	- Digitial Mars 8.41
+	- Digital Mars 8.41
 	- GCC 3.3
 	- Intel 6.0
 	- Visual C++ 7.1
@@ -434,7 +434,7 @@ C++11以前のコンパイラでの制限については[compiler specifics](htt
 
 ## &amp;lt;a id=&amp;#34;phoenix&amp;#34; href=&amp;#34;#phoenix&amp;#34;&amp;gt;Phoenix&amp;lt;/a&amp;gt;
 
-- `phonenix::funcion`のコンストラクタを`constexpr`にした ([#9049](https://svn.boost.org/trac/boost/ticket/9049))
+- `phoenix::function`のコンストラクタを`constexpr`にした ([#9049](https://svn.boost.org/trac/boost/ticket/9049))
 
 
 ## &amp;lt;a id=&amp;#34;polygon&amp;#34; href=&amp;#34;#polygon&amp;#34;&amp;gt;Polygon&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.58.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_58_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_58_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_58_0.md b/document/version/1_58_0.md
index ed00b02..021b44d 100644
--- a/document/version/1_58_0.md
+++ b/document/version/1_58_0.md
@@ -241,7 +241,7 @@
 - [#10958](https://svn.boost.org/trac/boost/ticket/10958) `L`/`L`と`L`/`A`の`dijoint()`が、不正な結果になる
 - [#10959](https://svn.boost.org/trac/boost/ticket/10959) `no_rescale_policy`を使用すると、`get_turns()`がアサーションに失敗する
 - [#10960](https://svn.boost.org/trac/boost/ticket/10960) `L`/`A`の`get_turns()`が不正な結果になる。turnが不足している。
-- [#10961](https://svn.boost.org/trac/boost/ticket/10961) `L`/`A`の`get_turns()`が不正な結果になる。linear spikeのtrunが不正。
+- [#10961](https://svn.boost.org/trac/boost/ticket/10961) `L`/`A`の`get_turns()`が不正な結果になる。linear spikeのturnが不正。
 - [#11112](https://svn.boost.org/trac/boost/ticket/11112) Solarisプラットフォームのマクロ名との衝突により、コンパイルエラーになる
 - [#11121](https://svn.boost.org/trac/boost/ticket/11121) 整数座標系(integral coordinates)の`difference()`が不正な結果になる
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.59.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_59_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_59_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_59_0.md b/document/version/1_59_0.md
index 473f17b..563f9db 100644
--- a/document/version/1_59_0.md
+++ b/document/version/1_59_0.md
@@ -332,7 +332,7 @@
 
 ## &amp;lt;a id=&amp;#34;variant&amp;#34; href=&amp;#34;#variant&amp;#34;&amp;gt;Variant&amp;lt;/a&amp;gt;
 - [#11196](https://svn.boost.org/trac/boost/ticket/11196), [#11283](https://svn.boost.org/trac/boost/ticket/11283) element_index.hppでの、インクルード不足を修正
-- [#11251](https://svn.boost.org/trac/boost/ticket/11251), [#11285](https://svn.boost.org/trac/boost/ticket/11285) C++14での`aplly_visitor`のサンプルコードとconst参照を修正
+- [#11251](https://svn.boost.org/trac/boost/ticket/11251), [#11285](https://svn.boost.org/trac/boost/ticket/11285) C++14での`apply_visitor`のサンプルコードとconst参照を修正
 - `get&amp;lt;reference&amp;gt;(variant_variable)`のコンパイル時チェックを緩和(Nicolas Cornu氏に感謝)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.63.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_63_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_63_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_63_0.md b/document/version/1_63_0.md
index 37de5c7..4e399e2 100644
--- a/document/version/1_63_0.md
+++ b/document/version/1_63_0.md
@@ -62,7 +62,7 @@
 - [#11687](https://svn.boost.org/trac/boost/ticket/11687) Xcode (Apple clang) 6以降で`thread_local`キーワードが使えないため、代わりに`boost::thread_specific_ptr`を使いたいという問題。対応しない
 - [#12114](https://svn.boost.org/trac/boost/ticket/12114) iOSのarm64環境で浮動小数点演算が正しく行われなくなる問題を修正
 - [#12411](https://svn.boost.org/trac/boost/ticket/12411) Visual StudioのO2最適化でFPUレジスタが保持されない問題を修正 (ほかのアーキテクチャも修正)
-- [#12551](https://svn.boost.org/trac/boost/ticket/12551) arm64環境でunkown directiveでビルドエラーになる問題を修正
+- [#12551](https://svn.boost.org/trac/boost/ticket/12551) arm64環境でunknown directiveでビルドエラーになる問題を修正
 - ontop関数のシグニチャをリダクション
 - プライベートなfcontext APIのユニットテストを追加
 - ucontextとfcontextのパフォーマンステストを修正
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.65.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_65_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_65_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_65_0.md b/document/version/1_65_0.md
index d7daeea..b588a3a 100644
--- a/document/version/1_65_0.md
+++ b/document/version/1_65_0.md
@@ -273,7 +273,7 @@
 - [GitHub #16](https://github.com/boostorg/type_index/pull/16) GCC 7以降での`ctti_type_index`を修正 (Benjamin Buch氏に感謝)
 
 
-## &amp;lt;a id=&amp;#34;typeof&amp;#34; href=&amp;#34;#Typeof&amp;#34;&amp;gt;Tyepof&amp;lt;/a&amp;gt;
+## &amp;lt;a id=&amp;#34;typeof&amp;#34; href=&amp;#34;#Typeof&amp;#34;&amp;gt;Typeof&amp;lt;/a&amp;gt;
 
 - [Track #11821](https://svn.boost.org/trac10/ticket/11821) clang-clでのコンパイルエラーを修正
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.65.1リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_65_1.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_65_1.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_65_1.md b/document/version/1_65_1.md
index f14496b..ff6d1dd 100644
--- a/document/version/1_65_1.md
+++ b/document/version/1_65_1.md
@@ -293,7 +293,7 @@
 - [GitHub #16](https://github.com/boostorg/type_index/pull/16) GCC 7以降での`ctti_type_index`を修正 (Benjamin Buch氏に感謝)
 
 
-## &amp;lt;a id=&amp;#34;typeof&amp;#34; href=&amp;#34;#Typeof&amp;#34;&amp;gt;Tyepof&amp;lt;/a&amp;gt;
+## &amp;lt;a id=&amp;#34;typeof&amp;#34; href=&amp;#34;#Typeof&amp;#34;&amp;gt;Typeof&amp;lt;/a&amp;gt;
 
 - [Track #11821](https://svn.boost.org/trac10/ticket/11821) clang-clでのコンパイルエラーを修正
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.68.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_68_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_68_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_68_0.md b/document/version/1_68_0.md
index dcb8b2a..b324cc7 100644
--- a/document/version/1_68_0.md
+++ b/document/version/1_68_0.md
@@ -127,7 +127,7 @@ Windows APIのバージョンリストは、以下のページで確認できる
 ## &amp;lt;a id=&amp;#34;fiber&amp;#34; href=&amp;#34;#fiber&amp;#34;&amp;gt;Fiber&amp;lt;/a&amp;gt;
 - [GitHub #170](https://github.com/boostorg/fiber/issues/170) `buffered_channel`においてチャンネルが満杯になったときの説明をドキュメントに追記
 - [GitHub #172](https://github.com/boostorg/fiber/issues/172) mingw-w64環境での、`HANDLE` (`void*)`から`std::thread::native_handle_type`への変換でのコンパイルエラーを修正
-- [GitHub #175](https://github.com/boostorg/fiber/issues/175) `bufferd_channel`内のスピンロックのunlockミスで&amp;#34;Operation not permitted&amp;#34;例外が送出されていた問題を修正
+- [GitHub #175](https://github.com/boostorg/fiber/issues/175) `buffered_channel`内のスピンロックのunlockミスで&amp;#34;Operation not permitted&amp;#34;例外が送出されていた問題を修正
 - NUMAサポートを追加ライブラリファイルfiber-numaとして分離。有効にするにはnumaプロパティを使用する (numa=on)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.77.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_77_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_77_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.77.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_77_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_77_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_77_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_77_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/describe&#34; target=&#34;_blank&#34;&gt;Describe&lt;/a&gt; C++14のリフレクションライブラリ (作者Peter Dimov)&lt;ul&gt;
&lt;li&gt;このライブラリは、列挙子と、構造体・クラスのメンバを記述するためのマクロ、およびそれらの情報を照会するプリミティブを提供する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/lambda2&#34; target=&#34;_blank&#34;&gt;Lambda2&lt;/a&gt; C++14の、依存ライブラリのない、シングルヘッダのラムダライブラリ (作者Peter Dimov)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_1 + 5&lt;/code&gt;, &lt;code&gt;_1 % 2 == 0&lt;/code&gt;, &lt;code&gt;_1 &amp;gt; _2&lt;/code&gt;, or &lt;code&gt;_1 == &#39; &#39; || _1 == &#39;\t&#39;&lt;/code&gt;のような式を介して単純な関数オブジェクトを構築する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::anys::basic_any&lt;/code&gt;を追加。これはカスタマイズ可能なSmall Object Optimizationを備えたデータ型で、&lt;code&gt;ValueType&lt;/code&gt;要件を満たす任意の型のインスタンスを保持できる (Ruslan Arutyunyan &lt;a href=&#34;https://github.com/rarutyun&#34; target=&#34;_blank&#34;&gt;@rarutyun&lt;/a&gt;氏に多大な感謝)。これが本当に必要かどうかがわからない方は、代わりに&lt;code&gt;boost::any&lt;/code&gt;を使用してほしい&lt;/li&gt;
&lt;li&gt;GitHub Actions CIによる追加のテストを開始&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;個々の非同期操作のキャンセルをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;associator&lt;/code&gt;トレイトを追加。ジェネリックな転送アソシエータとして使用する&lt;/li&gt;
&lt;li&gt;Asioに実装されているすべての非同期操作を変更し、それらの完了ハンドラを右辺値参照として呼び出すようにした。これにより、右辺値参照修飾を関数呼び出し演算子に追加できる (&lt;code&gt;R operator()(Args...) &amp;amp;&amp;amp;;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;非同期操作に複数の完了シグニチャのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt;と&lt;code&gt;operator||&lt;/code&gt;を追加。これによって、コルーチンを並列にtrivially awaitedできるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::as_tuple&lt;/code&gt;完了トークンアダプタを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::append&lt;/code&gt;完了トークンアダプタを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::prepend&lt;/code&gt;完了トークンアダプタを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::deferred&lt;/code&gt;完了トークンを追加。これは非同期操作の遅延実行を許可する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::parallel_group&lt;/code&gt;クラスと&lt;code&gt;experimental::make_parallel_group&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;を追加。これは非同期操作の即時実行 (eager execution) と同期を許可する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::coro&lt;/code&gt;クラステンプレートを追加。これは非同期の待機 (&lt;code&gt;co_await&lt;/code&gt;) と生成 (&lt;code&gt;co_yield&lt;/code&gt;) の両方を組み合わせる機能をもつC++20コルーチンのプリミティブ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl::stream&amp;lt;&amp;gt;&lt;/code&gt;にムーブ代入演算子を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;co_spawn&lt;/code&gt;のコルーチンの最初のステップをexecutorに&lt;code&gt;dispatch&lt;/code&gt;するよう変更&lt;/li&gt;
&lt;li&gt;非同期操作で使用する際の、&lt;code&gt;any_executor&lt;/code&gt;と&lt;code&gt;any_io_executor&lt;/code&gt;の追加の最適化を有効にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;nodiscard&lt;/code&gt;属性を追加&lt;/li&gt;
&lt;li&gt;デフォルトのリサイクルアロケータで、キャッシュされるスロットの数を増やした&lt;/li&gt;
&lt;li&gt;over-alignedな型をサポートするために、アライメント要件を尊重するようデフォルトのアロケータの動作を変更&lt;/li&gt;
&lt;li&gt;結果の文字列が常に逆の名前解決で初期化されるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;use_awaitable_t::executor_with_default&lt;/code&gt;での再帰的なテンプレートインスタンス化の問題を修正&lt;/li&gt;
&lt;li&gt;対象のexecutorの基づいて正しく結果を返すよう&lt;code&gt;any_io_executor&lt;/code&gt;の等値比較演算子を修正&lt;/li&gt;
&lt;li&gt;ムーブ元のexecutorを使用しないよう&lt;code&gt;strand&amp;lt;&amp;gt;&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;コンパイラの機能を検出する際に、GCCのテストがClangで使用されないよう修正&lt;/li&gt;
&lt;li&gt;MSVCに同梱されているClangでコルーチンのサポートを無効化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OPENSSL_NO_SSL_INTERN&lt;/code&gt;が定義されている場合の、最近のLibreSSLとの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;posix::basic_stream_descriptor&lt;/code&gt;のムーブ操作が、非デフォルトのexecutorで動作するよう修正&lt;/li&gt;
&lt;li&gt;より詳細な更新内容は、&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;ライブラリのリリースノート&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アトミック参照オブジェクトを構築するために、&lt;code&gt;make_atomic_ref()&lt;/code&gt;、&lt;code&gt;make_ipc_atomic_ref()&lt;/code&gt;ファクトリ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic_ref&lt;/code&gt;クラスと&lt;code&gt;ipc_atomic_ref&lt;/code&gt;クラスにC++17のテンプレート引数推論ガイドを追加し、コンストラクタ引数から推論できる場合にテンプレート引数を省略できるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このメンテナンスアップデートは、小さなバグ修正と、CI報告の更新を含む&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/2139&#34; target=&#34;_blank&#34;&gt;GitHub #2139&lt;/a&gt; &lt;code&gt;test_stream&lt;/code&gt;に、executorをrebindする機能を追加&lt;/li&gt;
&lt;li&gt;WebSocketのasync shutdownでの未使用変数の警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2124&#34; target=&#34;_blank&#34;&gt;GitHub #2124&lt;/a&gt; Beastで浮動小数点数のサポートを要求しないようにした&lt;/li&gt;
&lt;li&gt;すべての操作においてcommon buffers typeを使用することにより、websocketyのコンパイルされたコードのサイズを削減&lt;/li&gt;
&lt;li&gt;HTTP Parserの間違った使い方の検出を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2140&#34; target=&#34;_blank&#34;&gt;GitHub #2140&lt;/a&gt; ライブラリのメタデータにcxxstdタグを追加&lt;/li&gt;
&lt;li&gt;Drone CIに移行&lt;/li&gt;
&lt;li&gt;ドキュメントの小さな書式を改善&lt;/li&gt;
&lt;li&gt;CMLは、in-treeビルド中に必要なBoost Thread Libraryを見つけられるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/conversion/issues/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; &lt;code&gt;boost::implicit_cast&lt;/code&gt;を&lt;code&gt;constexpr&lt;/code&gt;に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/conversion/issues/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; 壊れたリンクを修正&lt;/li&gt;
&lt;li&gt;GitHub Actions CIによる追加のテストを開始&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/pull/92&#34; target=&#34;_blank&#34;&gt;GitHub #92&lt;/a&gt; &lt;code&gt;boost/core/uncaught_exceptions.hpp&lt;/code&gt;をMac OS 10.4以下と互換性をもつよう変更&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::dll::library_info&lt;/code&gt;での、不正な形式のELFの実行時チェックを強化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.symtab&lt;/code&gt;が空もしくは不足している場合に、&lt;code&gt;boost::dll::library_info&lt;/code&gt;は&lt;code&gt;.dynsym&lt;/code&gt; ELFセクションから情報を使用する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/issues/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt; インポート可能な&lt;code&gt;boost::dll::library_info&lt;/code&gt;内のprotectedなELFシンボルをリスト化&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/49&#34; target=&#34;_blank&#34;&gt;GitHub #49&lt;/a&gt; POSIX環境での&lt;code&gt;wchar_t&lt;/code&gt;から&lt;code&gt;char&lt;/code&gt;への不要な変換をなくした (Vladislav Shchapov氏に感謝)&lt;/li&gt;
&lt;li&gt;GitHub Actions CIによる追加のテストを開始&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Boost.Filesystem v4の導入&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;この新しいバージョンでは、v3で非推奨だった機能を削除し、C++17のstd::filesystemライブラリとの互換性を高めることを目的としたAPI変更も行う。差異は &lt;strong&gt;v3&lt;/strong&gt; タグと &lt;strong&gt;v4&lt;/strong&gt; タグを使用してリリースノートとドキュメントきに記載されており、セクション内でもまとめられている&lt;/li&gt;
&lt;li&gt;ユーザーは、コンパイル時に&lt;code&gt;BOOST_FILESYSTEM_VERSION&lt;/code&gt;マクロの値を3か4にすることでバージョンを選択できる。ライブラリのバージョンごとにBoost.Filesystemをコンパイルする必要はない。ひとつのバイナリでv3とv4の両方がサポートされる&lt;/li&gt;
&lt;li&gt;細かな差異によるバグが発生する可能性があるため、ユーザーは同じアプリケーションでv3とv4の両方を使用しないようにする必要がある&lt;/li&gt;
&lt;li&gt;現在はv3がデフォルト。将来のリリースではv4がデフォルトになり、最終的にはv3は削除される&lt;/li&gt;
&lt;li&gt;v4は機能するがまだ作業中であり、将来的にAPIに大きな変更が行われる可能性がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;v4&lt;/em&gt; : &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/88&#34; target=&#34;_blank&#34;&gt;GitHub #88&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/194&#34; target=&#34;_blank&#34;&gt;GitHub #194&lt;/a&gt; &lt;code&gt;path::filename&lt;/code&gt;、&lt;code&gt;path::stem&lt;/code&gt;、および&lt;code&gt;path::extension&lt;/code&gt;はパスがこれらのコンポーネントのみで構成される場合に、パスのルート名・ルートディレクトリをファイル名と見なさなくなった&lt;ul&gt;
&lt;li&gt;例としてWindowsでは&lt;code&gt;path(&#34;C:&#34;).filename()&lt;/code&gt;は&lt;code&gt;&#34;C:&#34;&lt;/code&gt;を返すために使用され、&lt;code&gt;path(&#34;C:\\&#34;).filename()&lt;/code&gt;は&lt;code&gt;&#34;\&#34;&lt;/code&gt;を返すために使用されたが、これらは空のパスを返すようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;v4&lt;/em&gt; : &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/88&#34; target=&#34;_blank&#34;&gt;GitHub #88&lt;/a&gt; &lt;code&gt;path::stem&lt;/code&gt;と&lt;code&gt;path::extension&lt;/code&gt;はドットではじまり、ほかのドットがないファイル名と拡張子として扱わなくなった。ドットではじまるファイル名は通常、拡張子が空のファイル名として扱われる。先頭のドットは、ほとんどのUNIX系システムで隠しファイルを表すために使用される&lt;/li&gt;
&lt;li&gt;&lt;em&gt;新機能&lt;/em&gt; : Windowsでのパスのさまざまなプレフィックスのサポートを改善&lt;ul&gt;
&lt;li&gt;ローカルデバイスサフィックス (&lt;code&gt;&#34;\\.\&#34;&lt;/code&gt;) のサポートとNTパスプレフィックス (&lt;code&gt;&#34;\??\&#34;&lt;/code&gt;) の実験的サポートを追加&lt;/li&gt;
&lt;li&gt;プレフィックスは、パスのルート名に含まれる&lt;/li&gt;
&lt;li&gt;v3でプレフィックスを使用すると意外な結果になってしまう可能性があるため注意 (例として&lt;code&gt;path(&#34;\\\\.\\&#34;).stem() == &#34;\\\\&#34;&lt;/code&gt;)。プレフィックスはv4でのみ使用することを推奨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;正規化されたパスに複数のドット (&lt;code&gt;&#34;.&#34;&lt;/code&gt;) が残ってしまういくつかのケースを排除するために、&lt;code&gt;path::lexically_normal&lt;/code&gt;の実装をやり直した&lt;/li&gt;
&lt;li&gt;&lt;em&gt;新機能&lt;/em&gt; : &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/172&#34; target=&#34;_blank&#34;&gt;GitHub #172&lt;/a&gt; Linuxでのシステムコール&lt;code&gt;statx&lt;/code&gt;と&lt;code&gt;getrandom&lt;/code&gt;の実行時検出を追加。これはsyscallがコンパイル時に存在するが実行時に&lt;code&gt;ENOSYS&lt;/code&gt;で失敗する場合に役立つ (たとえば、ホストで使用可能であってもsyscallを制限するDockerコンテナ内など)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;新機能&lt;/em&gt; : ライブラリのビルド時にさまざまなシステムAPIの使用を無効化するサポートを追加&lt;ul&gt;
&lt;li&gt;これは特定のAPIがライブラリのコンフィグレーションスクリプトでは存在するものとして検出されたが、なんらかの理由で使用してはならない場合 (たとえば実行時検出がターゲットシステムで機能しない場合など) に役立つ&lt;/li&gt;
&lt;li&gt;詳細はライブラリドキュメントのコンフィグレーションマクロの説明を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;新機能&lt;/em&gt; : &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/186&#34; target=&#34;_blank&#34;&gt;GitHub #186&lt;/a&gt; &lt;code&gt;copy_file&lt;/code&gt;操作にオプションとして&lt;code&gt;copy_options::synchronize_data&lt;/code&gt;と&lt;code&gt;copy_options::synchronize&lt;/code&gt;を追加。&lt;ul&gt;
&lt;li&gt;これらを使用すると、書き込まれたデータと属性と永続ストレージと同期できる。これらはパフォーマンスとしては高価になるが、コピーされたデータの信頼性を確保できる&lt;/li&gt;
&lt;li&gt;Boost 1.74.0以降では、POSIXシステムで暗黙的にデータ同期を実行していたことに注意。このリリースでは、より多くのプラットフォームのサポートが追加され、呼び出し元が明示的に要求できるようにし、デフォルトではデータ同期が無効になった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内部で発行された一部のシステムコールの、POSIXでの&lt;code&gt;EINTR&lt;/code&gt;エラーコードの処理を追加。とくに&lt;code&gt;close&lt;/code&gt;では&lt;code&gt;EINTR&lt;/code&gt;が無視される可能性があり、HP-UXではfile descriptorがリークする可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/184&#34; target=&#34;_blank&#34;&gt;GitHub #184&lt;/a&gt; Linuxのシステムコール&lt;code&gt;sendfile&lt;/code&gt;と&lt;code&gt;copy_file_range&lt;/code&gt;に基づく&lt;code&gt;copy_file&lt;/code&gt;の実装では、特定のファイルシステムがそれらのシステムコールをサポートしておらず、一般的な&lt;code&gt;read&lt;/code&gt;/&lt;code&gt;write&lt;/code&gt;ループにフォールバックすることを示すエラーコードの処理を追加した。これにより、&lt;a href=&#34;https://www.ecryptfs.org/&#34; target=&#34;_blank&#34;&gt;eCryptFS&lt;/a&gt;および場合によってはほかのファイルシステムで失敗する&lt;code&gt;copy_file&lt;/code&gt;が修正されるはずである&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy_file_range&lt;/code&gt;システムコールはこれまでLinux 5.3以降でのみ有効になっていたが、Linuxカーネル4.5以降から使用されるようにした。&lt;code&gt;copy_file_range&lt;/code&gt;がファイルシステム間でファイルのコピーに失敗した場合、&lt;code&gt;copy_file&lt;/code&gt;の実装は&lt;code&gt;sendfile&lt;/code&gt;または&lt;code&gt;read&lt;/code&gt;/&lt;code&gt;write&lt;/code&gt;ループにフォールバックする&lt;/li&gt;
&lt;li&gt;Linuxのシステムコール&lt;code&gt;sendfile&lt;/code&gt;と&lt;code&gt;copy_file_range&lt;/code&gt;に基づく&lt;code&gt;copy_file&lt;/code&gt;の実装は、生成されたコンテンツを含むファイルを含むことがわかっているファイルシステムでは使用されないようにした。これらのシステムコールはそのようなファイルと互換性がなく、コピーするとファイルサイズがゼロになる。代わりに、一般的な&lt;code&gt;read&lt;/code&gt;/&lt;code&gt;write&lt;/code&gt;ループが使用される。現在、ブラックリストに登録されているファイルシステムは以下：procfs, sysfs, tracefs, debugfs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read&lt;/code&gt;/&lt;code&gt;write&lt;/code&gt;ループに基づく&lt;code&gt;copy_file&lt;/code&gt;の実装では、一時ストレージに使用されるバッファの最大サイズを増やし、より最適なパフォーマンスを得られるようターゲットとなるファイルシステムのブロックサイズを考慮に入れるようにした&lt;/li&gt;
&lt;li&gt;Windows CEでは、プロセスの現在のパスを取得するために&lt;code&gt;current_path&lt;/code&gt;を使用した場合に、ルートパスを正常に返す代わりに、エラーで失敗させるようにした。このプラットフォームはcurrent pathをサポートしていない。current pathの変更は、以前のこのライブラリのバージョンでも同様に失敗していた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;canonical&lt;/code&gt;で、ルートより上のディレクトリをシンボリックリンクで参照してしまう問題を修正。これはシンボリックリンクが元のパスと異なるルートをもつ絶対パスに解決してしまった場合に起きていた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;canonical&lt;/code&gt;に、コール中に解決できるシンボリックリンクの最台数制限をもたせた。その制限は現在のところ、少なくとも40となっている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/87&#34; target=&#34;_blank&#34;&gt;GitHub #87&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/187&#34; target=&#34;_blank&#34;&gt;GitHub #187&lt;/a&gt; Windowsでは、&lt;code&gt;canonical&lt;/code&gt;と&lt;code&gt;weakly_canonical&lt;/code&gt;は、結果となるパスのルートディレクトリの区切り文字に&lt;code&gt;path::preferred_separator&lt;/code&gt;を使用するようにした。これにより、Windows APIがUNCパスおよびWin32ファイルシステムプレフィックス (&lt;code&gt;&#34;\\?\&#34;&lt;/code&gt;) ではじまるパスで汎用区切り文字 (&lt;code&gt;&#34;/&#34;&lt;/code&gt;) を処理しないために発生する「ファイルが見つかりません」エラーが修正される&lt;/li&gt;
&lt;li&gt;&lt;em&gt;新機能&lt;/em&gt; : &lt;code&gt;weakly_canonical&lt;/code&gt;に&lt;code&gt;base&lt;/code&gt;パスを引数にとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/201&#34; target=&#34;_blank&#34;&gt;GitHub #201&lt;/a&gt; Windowsでは、ファイルシステムに存在しない要素が入力パスに含まれているが、後続のドットドット (&lt;code&gt;&#34;..&#34;&lt;/code&gt;) 要素によってキャンセルされた場合に、&lt;code&gt;weakly_canonical&lt;/code&gt;がエラーで失敗することがなくなった。例として&lt;code&gt;weakly_canonical(&#34;C:\\a\\..&#34;)&lt;/code&gt;は失敗していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/187&#34; target=&#34;_blank&#34;&gt;GitHub #187&lt;/a&gt; Windowsの&lt;code&gt;read_symlink&lt;/code&gt;で再解析ポイントのハンドリングを正しくした。この操作は、いくつかのマウントポイント (例として&lt;a href=&#34;https://www.box.com/&#34; target=&#34;_blank&#34;&gt;Box&lt;/a&gt;のクラウドストレージドライバによって生成されたもの) および空の印刷名 (print name) をもつディレクトリのジャンクションポイントで、空のパスを返す。新しい実装では再解析ポイントの代替名を解析し、そこからWin32パスを再構築するよう試みる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; Windowsでは、&lt;code&gt;boost/filesystem/fstream.hpp&lt;/code&gt;で提供されるファイルのストリームは、標準ライブラリがワイド文字でパスを開くことをサポートしている場合に、libc++のバージョン7.0以降でワイド文字パスを使用する&lt;/li&gt;
&lt;li&gt;Windowsでは、Windowsが&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/get-started/enable-your-device-for-development&#34; target=&#34;_blank&#34;&gt;開発者モード&lt;/a&gt;で構成されている場合、シンボリックリンクの生成に昇格された特権は必要なくなった&lt;/li&gt;
&lt;li&gt;いくつかのコンパイラでは、Boost.Filesystemの内部で使用されるグローバルオブジェクトは、ユーザーのグローバルデストラクタが呼び出されたあとに破棄されるようになった。これにより、プログラムの終了段階でBoost.Filesystemの機能を呼び出せるようになった。これはとくに文字コード変換で起き、&lt;code&gt;path::imbue&lt;/code&gt;によるパスのロケール変更に影響する。サポートされるコンパイラは、MSVC、GCC、Clangのほか、&lt;code&gt;#pragma section&lt;/code&gt; (MSVC互換コンパイラ) もしくは &lt;code&gt;__attribute__ ((init_priority))&lt;/code&gt; (GCC互換コンパイラ) によるプログラム初期化順序のカスタマイズをサポートするコンパイラが含まれる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value_to&lt;/code&gt;に&lt;code&gt;TupleLike&lt;/code&gt;型のサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value_to&lt;/code&gt;と&lt;code&gt;value_from&lt;/code&gt;に&lt;code&gt;std::array&lt;/code&gt;とそれに似た型のサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;から&lt;code&gt;string_view&lt;/code&gt;への暗黙の型変換演算子&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::hash&lt;/code&gt;をjson型で特殊化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;object&lt;/code&gt;と&lt;code&gt;key_value_pair&lt;/code&gt;のアロケーションエラーを修正&lt;/li&gt;
&lt;li&gt;空の範囲をもつイテレータのペアから&lt;code&gt;array&lt;/code&gt;を構築する際にクラッシュする問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int&lt;/code&gt;の表現可能な範囲外な値をもつ浮動小数点数の&lt;code&gt;int&lt;/code&gt;への代入を修正&lt;/li&gt;
&lt;li&gt;GitHub Actions CIによる追加のテストを開始&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/150&#34; target=&#34;_blank&#34;&gt;GitHub #150&lt;/a&gt; riscv32ターゲットのコンパイルを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mp11&#34; id=&#34;mp11&#34;&gt;Mp11&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mp_intersperse&lt;/code&gt;, &lt;code&gt;mp_split&lt;/code&gt;, &lt;code&gt;mp_join&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;衝突数を減らし&lt;code&gt;boost::pfr::hash_value()&lt;/code&gt;の品質を向上させるため、MurMur Hashベース実装の&lt;code&gt;hash_combine()&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;Visual Studio 2017のC++14モードをサポート (Denis Mikhailov &lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;@denzor200&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;inspect toolによって発見した問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; &lt;code&gt;include/boost/pfr/detail/fields_count.hpp&lt;/code&gt;内の不要なセミコロンの削除など、いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;継承型のコンパイル時アサートを追加 (Denis Mikhailov &lt;a href=&#34;https://github.com/denzor200&#34; target=&#34;_blank&#34;&gt;@denzor200&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;コピー省略が保証されている場合の、ムーブ不能なフィールドをもつ集成体のリフレクションが可能になった&lt;/li&gt;
&lt;li&gt;スペルミスを修正&lt;/li&gt;
&lt;li&gt;GitHub Actions CIによる追加のテストを開始&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#property-tree&#34; id=&#34;property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今回はメンテナンスリリース&lt;/li&gt;
&lt;li&gt;CIでのコンパイラのカバレッジを拡張&lt;/li&gt;
&lt;li&gt;CMakeLists.txtでのBoostの互換性を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;から&lt;code&gt;std::error_category&lt;/code&gt;への変換演算子を改善し、&lt;code&gt;&amp;lt;map&amp;gt;&lt;/code&gt;と&lt;code&gt;&amp;lt;mutex&amp;gt;&lt;/code&gt;が必要なくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_category&lt;/code&gt;の比較演算子をメンバ関数の代わりにインラインのfriendにした (↑の変更の副作用)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_condition&lt;/code&gt;は実際にオブジェクトのインスタンス化が必要になるまで&lt;code&gt;generic_category()&lt;/code&gt;の呼び出しを遅らせるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_condition::failed&lt;/code&gt;と&lt;code&gt;error_condition::message&lt;/code&gt;を非推奨ではなくした。また、&lt;code&gt;operator bool()&lt;/code&gt;も&lt;code&gt;failed()&lt;/code&gt;を返すようにした&lt;/li&gt;
&lt;li&gt;system categoryにおいてオブジェクトのインスタンス化を回避するために&lt;code&gt;generic_category()&lt;/code&gt;を呼び出すのをやめた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default_error_condition&lt;/code&gt;で返される値は、いくつかのケースでsystem categoryではなくgeneric categoryに変わる場合がある。これは、入力となるsystem categoryの&lt;code&gt;error_code&lt;/code&gt;に合致する&lt;code&gt;errc_t&lt;/code&gt;がない場合にPOSIX環境で起こる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_code&lt;/code&gt;と&lt;code&gt;std::error_code&lt;/code&gt;の相互運用性を大幅に改善した。&lt;code&gt;std::error_code&lt;/code&gt;から&lt;code&gt;boost::system::error_code&lt;/code&gt;を構築できるようになり、&lt;code&gt;std::error_code&amp;amp;&lt;/code&gt;をとる関数に&lt;code&gt;boost::system::error_code&lt;/code&gt;を渡せるようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_condition&lt;/code&gt;にストリーム入力演算子&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/116&#34; target=&#34;_blank&#34;&gt;GitHub #116&lt;/a&gt; メモリ確保なくUUID文字列を書き込むための&lt;code&gt;to_chars()&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2のバージョン4.6.1をリリース&lt;/li&gt;
&lt;li&gt;cygwin64でのb2エンジンのビルドを修正 (René Ferdinand Rivera Morell氏に感謝)&lt;/li&gt;
&lt;li&gt;compiler execからのclang toolsetのバージョン検出を修正 (Nikita Kniazev氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.82.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_82_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_82_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.82.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_82_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_82_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_82_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の問題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Filesystem&lt;ul&gt;
&lt;li&gt;OpenBSD で共有ライブラリのコンパイラフラグ &lt;code&gt;-Wl,--no-undefined&lt;/code&gt; のサポートが壊れているため、コンパイルに失敗することがある。&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/283&#34; target=&#34;_blank&#34;&gt;GitHub #283&lt;/a&gt;、および&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_82_0/0001-filesystem-fix-openbsd-build.patch&#34; target=&#34;_blank&#34;&gt;パッチ&lt;/a&gt;を参照&lt;/li&gt;
&lt;li&gt;Windowsにおいて、SMBv1共有のディレクトリに対するdirectory iteratorの作成が &lt;code&gt;ERROR_INVALID_LEVEL&lt;/code&gt; エラーコードで失敗することがある。&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/284&#34; target=&#34;_blank&#34;&gt;GitHub #284&lt;/a&gt;、および&lt;a href=&#34;https://github.com/boostorg/website/blob/master/patches/1_82_0/0002-filesystem-fix-win-smbv1-dir-iterator.patch&#34; target=&#34;_blank&#34;&gt;パッチ&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C++03サポートの終了&lt;/h2&gt;
&lt;p&gt;以下のライブラリは、いまから2リリース後の1.84.0でC++03のサポートを終了する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Align&lt;/li&gt;
&lt;li&gt;Any&lt;/li&gt;
&lt;li&gt;Asio&lt;/li&gt;
&lt;li&gt;Atomic&lt;/li&gt;
&lt;li&gt;Bind&lt;/li&gt;
&lt;li&gt;Chrono&lt;/li&gt;
&lt;li&gt;ContainerHash&lt;/li&gt;
&lt;li&gt;Conversion&lt;/li&gt;
&lt;li&gt;DLL&lt;/li&gt;
&lt;li&gt;Endian&lt;/li&gt;
&lt;li&gt;Filesystem&lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;Functional&lt;/li&gt;
&lt;li&gt;Io&lt;/li&gt;
&lt;li&gt;LexicalCast&lt;/li&gt;
&lt;li&gt;Log&lt;/li&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Ratio&lt;/li&gt;
&lt;li&gt;SmartPtr&lt;/li&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;Stacktrace&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;Timer&lt;/li&gt;
&lt;li&gt;TypeIndex&lt;/li&gt;
&lt;li&gt;Typeof&lt;/li&gt;
&lt;li&gt;Unordered&lt;/li&gt;
&lt;li&gt;Variant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリース（1.82）と次のリリース（1.83）は、上記のライブラリとその依存関係の大部分でC++03をサポートする最後のリリースとなる。&lt;/p&gt;
&lt;p&gt;古いバージョンのコンパイラでは、サポート不足やバグのためにC++11が部分的にしか実装されていないことが多いため、どのコンパイラがC++11の要件を満たしているとみなされるかは、ライブラリによって異なる場合がある。&lt;/p&gt;
&lt;p&gt;しかし、一般的なルールとして、コンパイラがC++11のキーワードや構文をまったく認識しない場合（例：&lt;code&gt;noexcept&lt;/code&gt;の使用、&lt;code&gt;constexpr&lt;/code&gt;の使用、&lt;code&gt;=delete&lt;/code&gt;された関数を定義すると即コンパイルエラー）、コンパイラがC++11必須のヘッダーをまったく提供しない場合（例：&lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt; や &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; をインクルードしようとすると失敗する）、あるいはコンパイラがC++11の機能やヘッダを提供するがまったく使用できない場合、このコンパイラはC++11コンパイラとはみなされない。&lt;/p&gt;
&lt;p&gt;このため、例えば14.0 (2015) 以前のMicrosoft Visual C++や、4.8以前のGCCは除外される。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/mysql&#34; target=&#34;_blank&#34;&gt;MySql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Boost.AsioベースのMySQLデータベースサーバーのC++11クライアント (作者Reuben Perez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#url&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/any/pull/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 非推奨の &lt;code&gt;utility/enable_if.hpp&lt;/code&gt; の代わりに &lt;code&gt;core/enable_if.hpp&lt;/code&gt; ヘッダを使用するようになった。PRをくれたMichael Ford氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;操作が即座に完了した場合の完了ハンドラの実行をカスタマイズする機能を追加&lt;/li&gt;
&lt;li&gt;バッファタイプにユーザー定義のリテラルを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_SEQPACKET&lt;/code&gt; で &lt;code&gt;AF_UNIX&lt;/code&gt; を表現するために新しいプロトコルタイプ &lt;code&gt;local::seq_packet_protocol&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signal_set::add&lt;/code&gt; のオプション引数で &lt;code&gt;sigaction()&lt;/code&gt; フラグを公開&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocator_binder&lt;/code&gt;, &lt;code&gt;executor_binder&lt;/code&gt;, &lt;code&gt;cancellation_slot_binder&lt;/code&gt; を変更して、特殊でない連想子 (unspecialised associators) の検出をサポートするようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;associated_cancellation_slot&amp;lt;reference_wrapper&amp;gt;::get()&lt;/code&gt; のあいまいさを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::exception_ptr&lt;/code&gt; を含む完了シグネチャの &lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt; 処理を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::channel&amp;lt;&amp;gt;&lt;/code&gt; の &lt;code&gt;try_send&lt;/code&gt; が &lt;code&gt;cancel&lt;/code&gt; の後に失敗するのを修正&lt;/li&gt;
&lt;li&gt;プールに内部スレッドがない場合の &lt;code&gt;thread_pool::join()&lt;/code&gt; のデッドロックを修正&lt;/li&gt;
&lt;li&gt;io_uring を使用した際のパイプの &lt;code&gt;release()&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;バックエンドのデータ初期化およびクリーンアップの問題を修正&lt;/li&gt;
&lt;li&gt;実行コンテキストのオーバーロードである &lt;code&gt;get_associated_executor()&lt;/code&gt; のぶら下がり参照の問題を修正&lt;/li&gt;
&lt;li&gt;バッファリングされたメッセージは &lt;code&gt;experimental::channel&amp;lt;&amp;gt;&lt;/code&gt; が閉じられても受信できるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ANY_COMPLETION_HANDLER&lt;/code&gt; の代入演算子を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any_completion_handler&lt;/code&gt;のコンストラクタが誤ってコピーされるのを防ぐために、コンストラクタを制限した&lt;/li&gt;
&lt;li&gt;OpenSSL のオプションに &lt;code&gt;uint64_t&lt;/code&gt; を使用するように変更した（OpenSSL 3 に対応）&lt;/li&gt;
&lt;li&gt;複数の完了シグネチャを持つ &lt;code&gt;deferred&lt;/code&gt; の相互運用性を修正&lt;/li&gt;
&lt;li&gt;C++11 と C++14 の部分的なサポートを追加するためにチャネルを修正した&lt;/li&gt;
&lt;li&gt;パッケージ化された非同期処理を待つ際に、&lt;code&gt;co_composed&lt;/code&gt;と&lt;code&gt;awaitable&amp;lt;&amp;gt;&lt;/code&gt;コルーチンのソースロケーションを追跡するハンドラの欠落をサポートした&lt;/li&gt;
&lt;li&gt;いくつかの「潜在的なヌル参照」警告とシャドウ変数警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const_buffers_1&lt;/code&gt; と &lt;code&gt;mutable_buffers_1&lt;/code&gt; を使用したときの &lt;code&gt;asio::buffer&lt;/code&gt; オーバーロードの選択を修正&lt;/li&gt;
&lt;li&gt;古い Windows をターゲットにしていない限り、現在の Windows バージョンのランタイムチェックを無効にした&lt;/li&gt;
&lt;li&gt;バッファードストリームラッパーと&lt;code&gt;ssl::stream&amp;lt;&amp;gt;&lt;/code&gt;のようなムーブ構築可能なストリームとの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::async_accept&lt;/code&gt; の戻り値の型が推論されるラムダとの互換性を修正&lt;/li&gt;
&lt;li&gt;レガシーな完了トークンの &lt;code&gt;as_tuple&lt;/code&gt; との互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redirect_error&lt;/code&gt; と新しい完了トークンとの互換性を修正&lt;/li&gt;
&lt;li&gt;デストラクタからのエスケープが許可されるべき例外による Windows 特有のプログラム終了の可能性を修正した&lt;/li&gt;
&lt;li&gt;ブール式の不用意な &lt;code&gt;co_await&lt;/code&gt; を防止した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::use_coro&lt;/code&gt;の結果処理とカスタムアロケータのサポートを修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_async_operation&lt;/code&gt; と &lt;code&gt;completion_signature_of&lt;/code&gt; の可変引数テンプレートエミュレーション修正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;のmove-from結果の不正な再利用を修正した&lt;/li&gt;
&lt;li&gt;カスタムアロケータを使用した &lt;code&gt;experimental::coro&lt;/code&gt; を修正した&lt;/li&gt;
&lt;li&gt;Windows のストリーム指向ファイルでの &lt;code&gt;seek_cur&lt;/code&gt; の挙動を修正した&lt;/li&gt;
&lt;li&gt;ドキュメントに様々な追加と修正を行った&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AVX をサポートする x86 ターゲット用にコンパイルされた場合、128 ビットのアトミックロードとストアにベクタ命令が使用されるようになった&lt;/li&gt;
&lt;li&gt;32-bit x86 ターゲットでは、&lt;code&gt;memory_order_seq_cst&lt;/code&gt;セマンティクスを持つ 64-bit アトミックロードとストアは、メモリ順序付け命令を発行するようになった&lt;/li&gt;
&lt;li&gt;Boost.Atomic 1.73 で非推奨となった &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage()&lt;/code&gt; アクセッサと &lt;code&gt;atomic&amp;lt;T&amp;gt;::storage_type&lt;/code&gt; 型を削除。代わりに &lt;code&gt;atomic&amp;lt;T&amp;gt;::value()&lt;/code&gt; と &lt;code&gt;atomic&amp;lt;T&amp;gt;::value_type&lt;/code&gt; を使用することを推奨&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;での&lt;code&gt;error_code&lt;/code&gt;の使用を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcp_stream&lt;/code&gt; が、タイマーの正しい実行形式を使用するよう修正&lt;/li&gt;
&lt;li&gt;error_categories が数値の ID を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt; にシークをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_value&lt;/code&gt;の&lt;code&gt;std::nullopt_t&lt;/code&gt;に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_tuple_like&lt;/code&gt;と、&lt;code&gt;hash_value&lt;/code&gt;のtuple-like型に対するオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;のハッシュ化として、品質と速度の両方の改善のために&lt;code&gt;&lt;a href=&#34;https://github.com/pdimov/mulxp_hash&#34; target=&#34;_blank&#34;&gt;mulxp1_hash&lt;/a&gt;&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/core/snprintf.hpp&lt;/code&gt; ヘッダーを追加し、&lt;code&gt;snprintf&lt;/code&gt;、&lt;code&gt;vsnprintf&lt;/code&gt; およびそれらの &lt;code&gt;wchar_t&lt;/code&gt; 対応のポータブル定義を追加&lt;/li&gt;
&lt;li&gt;非推奨のヘッダ &lt;code&gt;boost/core/is_same.hpp&lt;/code&gt; と &lt;code&gt;boost::core::is_same&lt;/code&gt; は将来のリリースで削除される予定&lt;ul&gt;
&lt;li&gt;代わりに Boost.TypeTraits または C++ 標準ライブラリの型付けを使用することを推奨する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::ref&lt;/code&gt; のメンバ関数と関連するメンバ関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::swap&lt;/code&gt; 関数に &lt;code&gt;noexcept&lt;/code&gt; をつけた。これは、型が例外を投げないスワップ操作をサポートしているかどうかによって異なる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::core::launder&lt;/code&gt; のポータブルな実装を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alignof&lt;/code&gt; のポータブルな実装である &lt;code&gt;BOOST_CORE_ALIGNOF&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::max_align_t&lt;/code&gt; の移植版である &lt;code&gt;boost::core::max_align_t&lt;/code&gt; と、 &lt;code&gt;max_align_t&lt;/code&gt; のアライメントである &lt;code&gt;boost::core::max_align&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;C++17 の &lt;code&gt;std::pmr::memory_resource&lt;/code&gt; と同等の移植性を持つ &lt;code&gt;boost::core::memory_resource&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/serialization.hpp&lt;/code&gt; を追加。これは、ライブラリがシリアライゼーションのヘッダを含めずに型の Boost.Serialization サポートを実装できるようにするプリミティブのコレクションであり、それによってライブラリがシリアライゼーションに依存するようにする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::data&lt;/code&gt;の実装である&lt;code&gt;boost::data&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::size&lt;/code&gt;の実装である&lt;code&gt;boost::size&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::span&lt;/code&gt; を更新し、 &lt;code&gt;std::initializer_list&lt;/code&gt; から範囲を作成するために &lt;code&gt;boost::data&lt;/code&gt; を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::identity&lt;/code&gt;の実装である &lt;code&gt;boost::identity&lt;/code&gt; を追加しました。この機能は Boost.Functional から移動した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll/pull/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; &lt;code&gt;size_t&lt;/code&gt;から&lt;code&gt;uint32_t&lt;/code&gt;への暗黙変換を回避。Travers Biddle氏のPull Requestに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/273&#34; target=&#34;_blank&#34;&gt;GitHub #273&lt;/a&gt; パス変換のコンストラクタ引数が寛容すぎるために発生するコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/271&#34; target=&#34;_blank&#34;&gt;GitHub #271&lt;/a&gt; [v4] &lt;code&gt;path::remove_filename&lt;/code&gt; が末尾のディレクトリセパレータを保持するようになった&lt;/li&gt;
&lt;li&gt;パスからファイル名とそれに先立つディレクトリセパレータを削除する &lt;code&gt;path::remove_filename_and_trailing_separators&lt;/code&gt; を追加。この動作は Filesystem v3 の &lt;code&gt;path::remove_filename&lt;/code&gt; と似ているが、v4 でも使用可能&lt;/li&gt;
&lt;li&gt;パス中のファイル名を置換する &lt;code&gt;path::replace_filename&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/279&#34; target=&#34;_blank&#34;&gt;GitHub #279&lt;/a&gt; ODR 違反を避けるために、ライブラリのバージョン選択の実装を更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/282&#34; target=&#34;_blank&#34;&gt;GitHub #282&lt;/a&gt; Windowsにおいて、SMBv1共有のファイルの属性を照会する際の回避策を追加。以前は、SMBv1共有のディレクトリは、通常のファイルとして報告される可能性があった。これは、SMBv2以降には影響しない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;大きな改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1045&#34; target=&#34;_blank&#34;&gt;GitHub #1045&lt;/a&gt; (multi)linestringsと(multi)polygons向けにgeographic bufferをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1114&#34; target=&#34;_blank&#34;&gt;GitHub #1114&lt;/a&gt; 距離比較 : dynamic geometriesのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1046&#34; target=&#34;_blank&#34;&gt;GitHub #1046&lt;/a&gt; &lt;code&gt;covered_by()&lt;/code&gt;に&lt;code&gt;box&lt;/code&gt;をサポートし、ジオメトリの組み合わせが増えた&lt;ul&gt;
&lt;li&gt;&lt;code&gt;covered_by(box, areal)&lt;/code&gt; (cartesian CSのみ)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;covered_by(geometry, box)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/705&#34; target=&#34;_blank&#34;&gt;GitHub #705&lt;/a&gt; WKT : タブと改行を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/geometry/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; union向けの修正&lt;/li&gt;
&lt;li&gt;サンプルコードに対して様々な修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;空の多角形のWKT出力表現が&lt;code&gt;POLYGON()&lt;/code&gt;になり、他のジオメトリとの整合性が取れるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail::span&lt;/code&gt; と &lt;code&gt;detail::make_span&lt;/code&gt; を &lt;code&gt;boost::core&lt;/code&gt; の実装に置き換えた&lt;/li&gt;
&lt;li&gt;ドキュメントを改善&lt;/li&gt;
&lt;li&gt;いくつかのケースで &lt;code&gt;std::min&lt;/code&gt; と &lt;code&gt;std::max&lt;/code&gt; の使い方を保護&lt;ul&gt;
&lt;li&gt;Han Jiang 氏による貢献 (min,max マクロは一般的な Windows ヘッダーによって不正に設定されるので、回避する必要がある)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;今後、ライブラリ内で保護されていないmin,maxトークンの使用を検出するテストを追加&lt;/li&gt;
&lt;li&gt;最新の clang-14 と gcc-11+ の推論ガイドをサポートするように修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set_at_pointer&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;呼び出し元が提供するシリアライザーストレージをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;向けに欠落要素のための&lt;code&gt;value_to&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;エスケープ文字の内部でパーサーが中断する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sentinel()&lt;/code&gt;がユニークなポインタを返すようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/144&#34; target=&#34;_blank&#34;&gt;GitHub #144&lt;/a&gt; &lt;code&gt;get_system_locale&lt;/code&gt; およびその依存ファイルは、POSIX で定義された &lt;code&gt;$LC_CTYPE&lt;/code&gt; よりも &lt;code&gt;$LC_ALL&lt;/code&gt; を正しく優先するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;utf8_codecvt::out&lt;/code&gt; は末尾の (UTF) サロゲートに対して &lt;code&gt;partial&lt;/code&gt; を返すようになった&lt;/li&gt;
&lt;li&gt;ロケールを解析するために &lt;code&gt;boost::locale::util::locale_data&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::locale::info::encoding()&lt;/code&gt; の結果が大文字であることをドキュメント化。例として&lt;code&gt;&#34;utf-8&#34;&lt;/code&gt;ではなく&lt;code&gt;&#34;UTF-8&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; M49の国コード（&lt;code&gt;en_001&lt;/code&gt;や&lt;code&gt;en_150&lt;/code&gt;など）に対応&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/148&#34; target=&#34;_blank&#34;&gt;GitHub #148&lt;/a&gt; &lt;code&gt;en_US_POSIX&lt;/code&gt; を &lt;code&gt;C&lt;/code&gt; ロケールのエイリアスとして扱うようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/locale/pull/149&#34; target=&#34;_blank&#34;&gt;GitHub #149&lt;/a&gt; セグメンテーションのサポートがない場合（ICUがない場合）のエラーを改善した&lt;/li&gt;
&lt;li&gt;コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多項式評価のためのEstrin&#39;s methodを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/939&#34; target=&#34;_blank&#34;&gt;GitHub #939&lt;/a&gt; 非心分布 (non-central distributions) のさまざまな問題を修正し、より大きな非心分布に対応できるようにした&lt;/li&gt;
&lt;li&gt;CMake install targetを追加&lt;/li&gt;
&lt;li&gt;例外のない環境で使用できないものを無効化するために &lt;code&gt;special_functions.hpp&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;C++14で条件番号の計算 (condition number calculation) が動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/923&#34; target=&#34;_blank&#34;&gt;GitHub #923&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt; テーブル駆動関数を修正し、コードが実際には &lt;code&gt;constexpr&lt;/code&gt; でない場合に大幅な速度低下を避けるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/894&#34; target=&#34;_blank&#34;&gt;GitHub #894&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の境界処理を改善&lt;/li&gt;
&lt;li&gt;Linux arm64、s390x、Apple M1 のテストを追加し、128ビット&lt;code&gt;long double&lt;/code&gt;を扱うテストケースを修正&lt;/li&gt;
&lt;li&gt;無限大とNaNをより良く扱うために&lt;code&gt;constexpr&lt;/code&gt;数学関数を改善&lt;/li&gt;
&lt;li&gt;積分器 (integrators) をconst-correctにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/898&#34; target=&#34;_blank&#34;&gt;GitHub #898&lt;/a&gt; &lt;code&gt;tanh_sinh&lt;/code&gt; の積分器がアンダーフローする問題を修正&lt;/li&gt;
&lt;li&gt;いくつかのプラットフォームがまだサポートしていないため、&lt;code&gt;std::cbrt&lt;/code&gt;を使用しないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/892&#34; target=&#34;_blank&#34;&gt;GitHub #892&lt;/a&gt; 非心t (non-central T) が偽 (spurious) の &lt;code&gt;FE_INVALID&lt;/code&gt; 例外を発生させるのを止めた&lt;/li&gt;
&lt;li&gt;二項分布のエッジケースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/884&#34; target=&#34;_blank&#34;&gt;GitHub #884&lt;/a&gt; &lt;code&gt;ibeta&lt;/code&gt;の非常に小さな引数の取り扱いを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibeta&lt;/code&gt;での無限大とNaNの取り扱いを改善 [@https://github.com/boostorg/math/issues/878 874]を参照してください.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/issues/781&#34; target=&#34;_blank&#34;&gt;GitHub #781&lt;/a&gt; &lt;code&gt;powm1&lt;/code&gt;のエラーハンドリングを改善&lt;/li&gt;
&lt;li&gt;指数が超大きい (super large)、または小さいときに、root finder bracketingをより速くブラケットするよう改善&lt;/li&gt;
&lt;li&gt;root finderのエッジケースを修正&lt;/li&gt;
&lt;li&gt;多くの雑多な警告を修正&lt;/li&gt;
&lt;li&gt;C++17を必要とする機能を使用する際にアサーションを追加し、古い標準バージョンでコンパイラを起動したときのエラーメッセージを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シリアライズで&lt;code&gt;collection_size_type&lt;/code&gt;の代わりに&lt;code&gt;unsigned long&lt;/code&gt;を使用するようにし、この変更にともなって&lt;code&gt;multi_index_container&lt;/code&gt;のシリアライズバージョンを2から3に上げた。&lt;code&gt;collection_size_type&lt;/code&gt;の値を特別扱いするカスタムアーカイブ型では、古いアーカイブの読み込みに失敗することがある。そのような場合は、読み出し操作の後方互換性を確保するためにマクロ &lt;code&gt;BOOST_MULTI_INDEX_ENABLE_SERIALIZATION_COMPATIBILITY_V2&lt;/code&gt; をグローバル定義する&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt;] 最小の標準バージョンとしてC++14を要求する&lt;ul&gt;
&lt;li&gt;最小テストコンパイラはClang-5、GCC-5、MSVC-14.1 (2017) となる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たに先行宣言のヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/479&#34; target=&#34;_blank&#34;&gt;GitHub #479&lt;/a&gt; Eigenとの相互運用性を更新し、Eigenの詳細に依存しないよう修正&lt;/li&gt;
&lt;li&gt;Cmake install targetを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; スタンドアロンの場合の文字列からの&lt;code&gt;cpp_dec_float&lt;/code&gt;構築を修正し、より良いエラーハンドリングを実現した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; C++17モードでの冗長な定義を削除&lt;/li&gt;
&lt;li&gt;スタンドアローンの &lt;code&gt;itrunc&lt;/code&gt; と &lt;code&gt;ltrunc&lt;/code&gt; のエラーハンドリングを修正&lt;/li&gt;
&lt;li&gt;8進数文字列の解析時に初期化されない可能性があるストレージを修正&lt;/li&gt;
&lt;li&gt;arm64 と s390x の CI テストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; &lt;code&gt;powm&lt;/code&gt; のために不足していた式テンプレートの展開コードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convert_string&lt;/code&gt;に&lt;code&gt;(std::)string&lt;/code&gt;のインスタンスをとるオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/nowide/pull/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;std::filesystem&lt;/code&gt;もしくは&lt;code&gt;boost::filesystem&lt;/code&gt;) のストリームへの (UTF-8) &lt;code&gt;quoted&lt;/code&gt;出力を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/111&#34; target=&#34;_blank&#34;&gt;GitHub #111&lt;/a&gt; &lt;code&gt;boost::pfr::is_implicitly_reflectable&lt;/code&gt; を実装し、集成体をリフレクト可能か否かに特殊化させる機構を実装。Denis Mikhailov氏のPRに感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::pfr::get&lt;/code&gt; を集成体の要素の型に対して実装&lt;/li&gt;
&lt;li&gt;リフレクションのライブラリサポートを検出するために &lt;code&gt;BOOST_PFR_ENABLED&lt;/code&gt; マクロを実装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/114&#34; target=&#34;_blank&#34;&gt;GitHub #114&lt;/a&gt; 終端文字の欠落を修正。PR をくれた Denis Mikhailov 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/118&#34; target=&#34;_blank&#34;&gt;GitHub #118&lt;/a&gt; 古いコンパイラでの &lt;code&gt;boost/pfr/config.hpp&lt;/code&gt; のコンパイルを修正。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/119&#34; target=&#34;_blank&#34;&gt;GitHub #119&lt;/a&gt; 古いコンパイラで壊れた C++17 構造化束縛の回避策を追加。Denis Mikhailov 氏の PR に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/117&#34; target=&#34;_blank&#34;&gt;GitHub #117&lt;/a&gt; &lt;code&gt;-Wzero-as-null-pointer-constant&lt;/code&gt;の警告を回避。Markus F.X.J. Oberhumer 氏による PR に感謝&lt;/li&gt;
&lt;li&gt;複数のタイプミスを修正。Denis Mikhailov氏の修正に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; 不足していた &lt;code&gt;#pragma once&lt;/code&gt; を追加。PR をくれた &lt;a href=&#34;https://github.com/caozhanhao&#34; target=&#34;_blank&#34;&gt;caozhanhao&lt;/a&gt; 氏に感謝&lt;/li&gt;
&lt;li&gt;ドキュメントの複数の修正と改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;V2 に外部プロセスの管理機能を追加（まだ実験中）&lt;/li&gt;
&lt;li&gt;V1 では &lt;code&gt;wait_for&lt;/code&gt; と &lt;code&gt;wait_until&lt;/code&gt; を非推奨とした。これらは将来的に削除される予定です！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; ドキュメントとコメントの誤字を修正。PRをくれたChocobo1氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_FORCE_STATIC&lt;/code&gt; が定義されている場合の &lt;code&gt;backtrace_create_state&lt;/code&gt; のマルチスレッドフラグの検出を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#static_string&#34; id=&#34;static_string&#34;&gt;StaticString&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Coreの&lt;code&gt;string_view&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の相互運用をできるよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかの未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sprintf&lt;/code&gt;の非推奨の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_cstring::rfind&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;GitHub ActionsでのCIを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ノードベースで、オープンアドレッシングなコンテナ&lt;code&gt;boost::unordered_node_map&lt;/code&gt;と&lt;code&gt;boost::unordered_node_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2363r5.html&#34; target=&#34;_blank&#34;&gt;P2363&lt;/a&gt;で規定された異種混合ルックアップ (heterogeneous lookup) の拡張メンバ関数を追加&lt;/li&gt;
&lt;li&gt;オープンアドレッシングコンテナのpost-mixing前の処理を、定数による拡張乗算 (extended multiplication by a constant) に基づく新しいアルゴリズムに置き換えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;内部で、スタックローカル型がコンテナのアロケータを使用して適切に構築されず、&lt;code&gt;uses-allocator&lt;/code&gt; 構築を壊していたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#url&#34; id=&#34;url&#34;&gt;URL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自動的に%のエンコーディングを行う&lt;code&gt;url::format&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;URL routerの例を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_params&lt;/code&gt;便利関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_view&lt;/code&gt;への暗黙変換をサポート&lt;/li&gt;
&lt;li&gt;パースコンストラクタをimplicitにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string_token::arg&lt;/code&gt;が仮想デストラクタとslice protectionを持つようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_URL_DISABLE_THREADS&lt;/code&gt;をサポート&lt;/li&gt;
&lt;li&gt;改善とバグ修正：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt;が再定義された警告を修正&lt;/li&gt;
&lt;li&gt;欠落 (absent) と空 (empty) のコンポーネントの差分比較&lt;/li&gt;
&lt;li&gt;空ポートのようなセグメントを持つ &lt;code&gt;hier_part_rule&lt;/code&gt; を検出&lt;/li&gt;
&lt;li&gt;root上で正規化した場合のセグメント比較&lt;/li&gt;
&lt;li&gt;hier-part path-rootless は無効なセグメントを考慮するよう修正&lt;/li&gt;
&lt;li&gt;オーバーフローした場合に、ポート番号を0にするよう修正&lt;/li&gt;
&lt;li&gt;ipv4 から文字列のオーバーフローを検出するアルゴリズム&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; 非推奨の &lt;code&gt;utility/addressof&lt;/code&gt; の代わりに &lt;code&gt;core/addressof&lt;/code&gt; を使用するようになった。PR をくれた Michael Ford 氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.9.4をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.84.0リリースノート -- Typo修正</title>
      <link href="https://boostjp.github.io/document/version/1_84_0.html"/>
      <id>428d1f1ce994d5ee5e1abadb7c1a898388c6a81b:document/version/1_84_0.md</id>
      <updated>2025-05-27T01:06:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/version/1_84_0.md b/document/version/1_84_0.md
index a3663d4..8202d92 100644
--- a/document/version/1_84_0.md
+++ b/document/version/1_84_0.md
@@ -193,7 +193,7 @@ Windows APIバージョン番号のリストは[Update `WINVER` and `_WIN32_WINN
 
 - 解決したIssue
     - [GitHub #1138](https://github.com/boostorg/geometry/issues/1138) 2つの`polygon`の`difference`を修正
-    - [GitHub #1183](https://github.com/boostorg/geometry/issues/1183) `union_`の結果となる`polgon`が不完全になる問題を修正
+    - [GitHub #1183](https://github.com/boostorg/geometry/issues/1183) `union_`の結果となる`polygon`が不完全になる問題を修正
     - [GitHub #1184](https://github.com/boostorg/geometry/issues/1184) `intersection`を修正
     - [GitHub #1186](https://github.com/boostorg/geometry/issues/1186) `union_`の不適切なinner ringの代入を修正
     - さまざまなエラーと警告を修正
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
</feed>