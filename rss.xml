<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2022-08-10T14:38:48.137697</updated>
  <id>eaddd669-614c-44dc-b535-aafac6524d71</id>

  
    <entry>
      <title>Boost 1.80.0リリースノート -- 1.80.0 : 既知の問題を追加</title>
      <link href="https://boostjp.github.io/document/version/1_80_0.html"/>
      <id>624a18eb3069dfa1301fd21122067b99c166f24c:document/version/1_80_0.md</id>
      <updated>2022-08-10T14:12:38+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.80.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_80_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_80_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_80_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_80_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の問題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Filesystemのdirectory iteratorが、Windows 10より前のバージョンでネットワーク共有の構築に失敗する場合がある&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt;, および&lt;a href=&#34;https://github.com/boostorg/website/tree/master/patches/1_80_0/0001-filesystem-win-fix-dir-it-net-share.patch&#34; target=&#34;_blank&#34;&gt;patch&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; ARM, AArch32, AArch64ターゲット向けのエンディアンチェックの移植性を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; MSVC 14.0 (Visual Studio 2015) のC++17 modeでのコンパイルを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt; Windowsにおいて、&lt;code&gt;ERROR_ACCESS_DENIED&lt;/code&gt;エラーでファイルを開くことができない場合にファイル属性をクエリするためのフォールバック実装を追加。これにより、再解析ポイントまたはシンボリックリンクではないシステムファイルおよびディレクトリに対して、&lt;code&gt;status&lt;/code&gt;および&lt;code&gt;symlink_status&lt;/code&gt;が成功する可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt;、&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/237&#34; target=&#34;_blank&#34;&gt;GitHub #237&lt;/a&gt; Windowsにおいて、ファイル属性のクエリ時に&lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;を生成するFAT/exFATファイルシステムの回避策を追加。これは、ファイルが存在しないことを報告する&lt;code&gt;status&lt;/code&gt;と&lt;code&gt;symlink_status&lt;/code&gt;、構築に失敗したdirectory iterator、およびその他の依存操作に影響する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/240&#34; target=&#34;_blank&#34;&gt;GitHub #240&lt;/a&gt; &lt;a href=&#34;https://www.rtems.org/&#34; target=&#34;_blank&#34;&gt;RTEMS&lt;/a&gt;でのコンパイルの問題を回避&lt;/li&gt;
&lt;li&gt;Linuxにおいて、実行時に&lt;code&gt;copy_file_range&lt;/code&gt;が&lt;code&gt;ENOSYS&lt;/code&gt;で失敗した場合の&lt;code&gt;sendfile&lt;/code&gt;、&lt;code&gt;copy_file&lt;/code&gt;実装への切り替えを修正。 &lt;code&gt;sendfile&lt;/code&gt;フォールバックの実装は、ファイルシステムタイプのチェックをスキップするために使用され、一部のファイルシステムでは失敗する可能性があった&lt;/li&gt;
&lt;li&gt;POSIX.1-2008およびWindows Vista以降で定義された&lt;code&gt;openat&lt;/code&gt;および関連APIをサポートするPOSIXシステムにおいて、以前のリリースで実装された&lt;a href=&#34;https://www.cve.org/CVERecord?id=CVE-2022-21658&#34; target=&#34;_blank&#34;&gt;CVE-2022-21658&lt;/a&gt;に対する&lt;code&gt;remove_all&lt;/code&gt;の保護が改善さた。以前の修正では、&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/224#issuecomment-1183738097&#34; target=&#34;_blank&#34;&gt;特定の条件&lt;/a&gt;で意図しないファイルが削除される可能性があった。他のシステムは脆弱なままである&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/discussions/676&#34; target=&#34;_blank&#34;&gt;GitHub #676&lt;/a&gt; Boost 1.80.0の次かその次のリリースで、サポートする最小C++の言語バージョンをC++17に破壊的変更する計画をしている&lt;/li&gt;
&lt;li&gt;追加&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/500&#34; target=&#34;_blank&#34;&gt;GitHub #500&lt;/a&gt; GSoC 2020: Perona-Malik anisotropic diffusionアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; GSoC 2020: histogramクラスと関連する機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/514&#34; target=&#34;_blank&#34;&gt;GitHub #514&lt;/a&gt; GSoC 2020: histogramのequalization機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/515&#34; target=&#34;_blank&#34;&gt;GitHub #515&lt;/a&gt; GSoC 2020: histogramのマッチングアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; GSoC 2020: 画像を水平方向（&lt;code&gt;hstack&lt;/code&gt;）または垂直方向（&lt;code&gt;vstack&lt;/code&gt;）にstackする機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/516&#34; target=&#34;_blank&#34;&gt;GitHub #516&lt;/a&gt; GSoC 2020: Adaptive Histogram Equalization (AHE) アルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/512&#34; target=&#34;_blank&#34;&gt;GitHub #512&lt;/a&gt; GSoC 2020: Standard Hough Transformおよびcircle rasterizationを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/512&#34; target=&#34;_blank&#34;&gt;GitHub #512&lt;/a&gt; GSoC 2020: line rasterization向けのBresenhamのアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/565&#34; target=&#34;_blank&#34;&gt;GitHub #565&lt;/a&gt; GSoC 2021: 任意の角度での画像回転を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/585&#34; target=&#34;_blank&#34;&gt;GitHub #585&lt;/a&gt; GSoC 2021: Jerry Van Aken氏の「効率的な楕円描画アルゴリズム」に基づく楕円のラスタライズサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/520&#34; target=&#34;_blank&#34;&gt;GitHub #520&lt;/a&gt; &lt;code&gt;image&lt;/code&gt;に変換可能なviewからの変換コンストラクタを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/527&#34; target=&#34;_blank&#34;&gt;GitHub #527&lt;/a&gt; &lt;code&gt;inverse(boost::gil::matrix3x2&amp;lt;T&amp;gt; m)&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/541&#34; target=&#34;_blank&#34;&gt;GitHub #541&lt;/a&gt; standard morphological transformationsを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/648&#34; target=&#34;_blank&#34;&gt;GitHub #648&lt;/a&gt; &lt;code&gt;for_each_pixel&lt;/code&gt;に&lt;code&gt;any_image&lt;/code&gt;向けのオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/529&#34; target=&#34;_blank&#34;&gt;GitHub #529&lt;/a&gt; C++17 polymorphic memory resourceの&lt;code&gt;image&lt;/code&gt;クラス向けtypedefを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;変更&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 最小C++言語バージョンの要求をC++11からC++14に変更した。現在、GILの大部分はまだC++11コンパイラでコンパイルされているが、その状態が維持される保証はなく、少なくともCC++14をサポートしていないコンパイラは現時点ではサポートされていないと見なされる&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;any_color_converted_view()&lt;/code&gt;を非推奨とし、将来のリリースから削除する予定。同じ機能として代わりに&lt;code&gt;color_converted_view()&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/pull/656&#34; target=&#34;_blank&#34;&gt;GitHub #656&lt;/a&gt; &lt;code&gt;any_image&lt;/code&gt;向けの&lt;code&gt;apply_operation&lt;/code&gt;を非推奨とし、将来のリリースから削除する予定。同じ機能として変わりに&lt;code&gt;variant2::visit&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/573&#34; target=&#34;_blank&#34;&gt;GitHub #573&lt;/a&gt; numeric extensionをcoreに移動&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/636&#34; target=&#34;_blank&#34;&gt;GitHub #636&lt;/a&gt; C++17 filesystemのサポートを追加。&lt;code&gt;BOOST_GIL_IO_USE_BOOST_FILESYSTEM&lt;/code&gt;マクロを定義して強制的にBoost.Filesystemを使用しない限り、自動的にstd::filesystemを検出して使用する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/655&#34; target=&#34;_blank&#34;&gt;GitHub #655&lt;/a&gt; &lt;code&gt;pixel_multiply_t&lt;/code&gt;を&lt;code&gt;pixel_multiplies_t&lt;/code&gt;、&lt;code&gt;pixel_divide_t&lt;/code&gt;を&lt;code&gt;pixel_divides_t&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/653&#34; target=&#34;_blank&#34;&gt;GitHub #653&lt;/a&gt; &lt;code&gt;io/dynamic_io_new.hpp&lt;/code&gt;を&lt;code&gt;io/detail/dynamic.hpp&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/653&#34; target=&#34;_blank&#34;&gt;GitHub #653&lt;/a&gt; &lt;code&gt;construct_matched&lt;/code&gt;関数を&lt;code&gt;boost::gil::detail&lt;/code&gt;名前空間に移動した。これは、他の実装の詳細としてのみ使用されていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/679&#34; target=&#34;_blank&#34;&gt;GitHub #679&lt;/a&gt; &lt;code&gt;packed_pixel&lt;/code&gt;をtrivially copyableかつassignableにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/685&#34; target=&#34;_blank&#34;&gt;GitHub #685&lt;/a&gt; 非推奨のlibtiff v4.3のtypedefを、C99の固定サイズ整数で置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;削除&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/pull/572&#34; target=&#34;_blank&#34;&gt;GitHub #572&lt;/a&gt; GCC 5のサポートを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/627&#34; target=&#34;_blank&#34;&gt;GitHub #627&lt;/a&gt; deprecated.hppを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/505&#34; target=&#34;_blank&#34;&gt;GitHub #505&lt;/a&gt; RGBからHSLへの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/522&#34; target=&#34;_blank&#34;&gt;GitHub #522&lt;/a&gt; RGBからsigned CMYKへの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; hsv.hppでの不要な数値キャストを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/542&#34; target=&#34;_blank&#34;&gt;GitHub #542&lt;/a&gt; &lt;code&gt;homogeneous_color_base&lt;/code&gt;のピクセル要素を参照するデフォルトコンストラクタを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/556&#34; target=&#34;_blank&#34;&gt;GitHub #556&lt;/a&gt; &lt;code&gt;subchroma_image_view&lt;/code&gt;でのローカルオブジェクトへの参照を返していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/568&#34; target=&#34;_blank&#34;&gt;GitHub #568&lt;/a&gt; diffusion.hppに不足していたインクルードガードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/526&#34; target=&#34;_blank&#34;&gt;GitHub #526&lt;/a&gt; &lt;code&gt;any_image_view&amp;lt;&amp;gt;::const_t&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/617&#34; target=&#34;_blank&#34;&gt;GitHub #617&lt;/a&gt; I/O extensionsのC++20との非互換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/628&#34; target=&#34;_blank&#34;&gt;GitHub #628&lt;/a&gt; すべてのサンプルコードがエラーなくビルドできることを確認&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/577&#34; target=&#34;_blank&#34;&gt;GitHub #577&lt;/a&gt; &lt;code&gt;float32_t&lt;/code&gt;チャンネルモデルをもつimage向けの&lt;code&gt;convolve_2d&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/621&#34; target=&#34;_blank&#34;&gt;GitHub #621&lt;/a&gt; 1次元以外のiterable viewに対する&lt;code&gt;for_each_pixel&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/650&#34; target=&#34;_blank&#34;&gt;GitHub #650&lt;/a&gt; PNG I/Oでの&lt;code&gt;is_equal_to_sixteen&lt;/code&gt;の不足していたテストを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/654&#34; target=&#34;_blank&#34;&gt;GitHub #654&lt;/a&gt; 2つのコンポーネントの&lt;code&gt;devicen_t&lt;/code&gt;を再許可。この機能はBoost 1.72.0で削除されていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/649&#34; target=&#34;_blank&#34;&gt;GitHub #649&lt;/a&gt; 空の次元での&lt;code&gt;image&lt;/code&gt;クラスのメモリリークを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Cypre55, Samuel Debionne, Mike-Devel, Edward Diener, Peter Dimov, Omar Emara, Dhruva Gole, Nicolas Herry, Eugene K, Avinal Kumar, Gaurav Kumar, Marco Langer, Pranam Lashkari, Mateusz Łoskot, Giovanni Mascellani, Debabrata Mandal, Gopi Krishna Menon, René Ferdinand Rivera Morell, Felix Morgner, Harshit Pant, Paul92, André Schröder, Scramjet911, Siddharth, Dirk Stolle, Prathamesh Tagore, theroyn, Olzhas Zhumabek&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(物理的または論理的に) 特定の条件下でサイズがゼロの軸を使用してヒストグラムを反復しようとしたときの&lt;code&gt;indexed&lt;/code&gt;のセグメンテーション違反を修正&lt;/li&gt;
&lt;li&gt;非推奨となっていたAPIを削除&lt;ul&gt;
&lt;li&gt;&lt;code&gt;accumulators::thread_safe&lt;/code&gt;クラス: &lt;code&gt;accumulators::count&amp;lt;T, true&amp;gt;&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;code&gt;accumulators::sum::large&lt;/code&gt;メンバ関数と&lt;code&gt;accumulators::sum::small&lt;/code&gt;メンバ関数: &lt;code&gt;accumulators::sum::large_part&lt;/code&gt;メンバ関数と&lt;code&gt;accumulators::sum::small_part&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;algorithm::reduce_option&lt;/code&gt;: &lt;code&gt;algorithm::reduce_command&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;関数テンプレート&lt;code&gt;axis::traits::static_options&lt;/code&gt;: &lt;code&gt;axis::traits::get_options&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;関数テンプレート&lt;code&gt;axis::traits::static_is_inclusive&lt;/code&gt;: &lt;code&gt;axis::traits::is_inclusive&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;indexed::range_iterator&lt;/code&gt;: &lt;code&gt;indexed::iterator&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;indexed::accessor::reference&lt;/code&gt;: &lt;code&gt;indexed::accessor::const_reference&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/pull/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; C++11以降向けに、&lt;code&gt;function_output_iterator&lt;/code&gt;に値書き込みの完全転送サポートを追加&lt;/li&gt;
&lt;li&gt;別の&lt;code&gt;function_output_iterator&lt;/code&gt;を逆参照した結果を&lt;code&gt;function_output_iterator&lt;/code&gt;へ書き込んだ場合に対する保護を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value::at&lt;/code&gt;に非&lt;code&gt;const&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;プラットフォームのエンディアンを手動で選択する機能を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string::subview()&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array::erase(it)&lt;/code&gt;のセグメンテーション違反を修正&lt;/li&gt;
&lt;li&gt;libc++での&lt;code&gt;serialize&lt;/code&gt;のパフォーマンス劣化を修正&lt;/li&gt;
&lt;li&gt;GCC 8で&lt;code&gt;std::string_view&lt;/code&gt;への変換があいまいになる問題を修正&lt;/li&gt;
&lt;li&gt;ビッグエンディアンのプラットフォームでの構文解析を修正&lt;/li&gt;
&lt;li&gt;コメント後のカンマのハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#leaf&#34; id=&#34;leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;throw leaf::exception(....)&lt;/code&gt;を&lt;code&gt;leaf::throw_exception(....)&lt;/code&gt;に修正&lt;/li&gt;
&lt;li&gt;サポートする稀なビルド設定でのバグを修正 (例外処理は有効だが診断は無効)&lt;/li&gt;
&lt;li&gt;0の代わりに&lt;code&gt;nullptr&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;ささいな警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03以下のサポートを非推奨とした。次のリリースからはC++11を要求する&lt;/li&gt;
&lt;li&gt;Boost.Regexと互換性のない&lt;code&gt;-sICU_LINK&lt;/code&gt;の一時的な置換として&lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt;を提供する。 &lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt;と&lt;code&gt;-sICU_LINK&lt;/code&gt;は非推奨になり、Boost.Regexと互換性があるように &lt;code&gt;ICU_*_NAME&lt;/code&gt;オプションに置き換えられる&lt;/li&gt;
&lt;li&gt;空の文字列を変換する際のICU &lt;code&gt;collator&lt;/code&gt;実装内での未定義動作とアサーション失敗を修正&lt;/li&gt;
&lt;li&gt;共有ライブラリ内のクラスの可視性に関連するいくつかの問題を修正（Unixのみ）&lt;/li&gt;
&lt;li&gt;C++20モードの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_USE_WINDOWS_H&lt;/code&gt;との互換性を修正&lt;/li&gt;
&lt;li&gt;インクルード不足によるビルド失敗を修正&lt;/li&gt;
&lt;li&gt;多くの警告を処理または抑制し、ビルドログをきれいにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; IPv6アドレスがsyslogサーバーに使用されている場合に、UDPソケットベースの&lt;code&gt;syslog_backend&lt;/code&gt;で誤ったローカルアドレスをバインドする問題を修正&lt;/li&gt;
&lt;li&gt;GCC 11.2からのlibstdc++の&lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=105857&#34; target=&#34;_blank&#34;&gt;バグ&lt;/a&gt;に対する回避策を追加。&lt;code&gt;max_size_decor&lt;/code&gt;がformat streamで使用された場合、&lt;code&gt;std::codecvt::do_length&lt;/code&gt;が誤って入力バッファにアクセスし、バッファオーバーフローを引き起こしていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/log/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt; : 2023年からはC++14を最小C++の言語バージョンとする。これはGCC 5やMSVC 14.1を最小要求とすることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/734&#34; target=&#34;_blank&#34;&gt;GitHub #734&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;のfmaサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/770&#34; target=&#34;_blank&#34;&gt;GitHub #770&lt;/a&gt; Chatterjee Correlation Coefficientのサポートを追加&lt;/li&gt;
&lt;li&gt;すべての分布のPDFの対数サポートを追加&lt;/li&gt;
&lt;li&gt;例外無効、RTTI無効のビルドサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/778&#34; target=&#34;_blank&#34;&gt;GitHub #778&lt;/a&gt; &lt;sub&gt;1&lt;/sub&gt;F&lt;sub&gt;1&lt;/sub&gt;コーナーケースの小さなバグをいくつか修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt; : 2023年からはC++14を最小C++の言語バージョンとする。これはGCC 5やMSVC 14.1を最小要求とすることを意味する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/cstdfloat.hpp&lt;/code&gt;とこのライブラリの衝突を修正&lt;/li&gt;
&lt;li&gt;GCCとClangでの警告を修正&lt;/li&gt;
&lt;li&gt;ストリームに末尾の区切り文字があり、空白がない複合型（complex、interval rational）の入力ストリーミングを修正&lt;/li&gt;
&lt;li&gt;入力が1、2、または3つである&lt;code&gt;constexpr&lt;/code&gt;整数平方根を修正&lt;/li&gt;
&lt;li&gt;float128.hppに不足していた&lt;code&gt;#include &amp;lt;memory&amp;gt;&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;あいまいさを防ぐために、&lt;code&gt;number&lt;/code&gt;クラスの2引数コンストラクタを修正&lt;/li&gt;
&lt;li&gt;gmp.hppのゼロ除算の動作を修正し、より一貫性のあるものにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ファイルを使用したbulk I/Oのパフォーマンスが大幅に向上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_filebuf&lt;/code&gt;：&lt;code&gt;fflush&lt;/code&gt;が失敗したときの&lt;code&gt;sync&lt;/code&gt;の誤った戻り値を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_filebuf&lt;/code&gt;：実際には何も書き込まれなかったが、バッファがwriteモードの場合に発生する可能性があった未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_filebuf&lt;/code&gt;：文字のputbackを制限（例として&lt;code&gt;pbackfail&lt;/code&gt;）。バッファリングされた文字（1文字のみ）のputbackのみを許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::hash&amp;lt;boost::optional&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;の特殊化を追加。これは、そのような特殊化自体を定義するプログラムにとって重大な変更である&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#stl-interfaces&#34; id=&#34;stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stl_interfaces/issues/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; 依存型&lt;code&gt;C::const_iterator&lt;/code&gt;に不足していた&lt;code&gt;typename&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stl_interfaces/issues/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; 連続的な&lt;code&gt;iterator_interface&lt;/code&gt;のviewのインスタンス化での&lt;code&gt;.data()&lt;/code&gt;のコンセプトチェックが失敗する問題を修正&lt;/li&gt;
&lt;li&gt;標準ライブラリにあるものと同様に機能する、相互運用可能なviewとview adaptorをかんたんに定義できるようにする機能を追加：&lt;ul&gt;
&lt;li&gt;C++23の&lt;code&gt;std::bind_back()&lt;/code&gt;と&lt;code&gt;std::range_adaptor_closure&lt;/code&gt;をC++23より前のバージョンで使用できるものとして追加&lt;/li&gt;
&lt;li&gt;view adaptorをかんたんに定義できるようにするために、テンプレート&lt;code&gt;closure&lt;/code&gt;と&lt;code&gt;adaptor&lt;/code&gt;を追加 (&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2387r3.html&#34; target=&#34;_blank&#34;&gt;P2387&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;error_code&lt;/code&gt;が&lt;code&gt;std::error_code&lt;/code&gt;に変換されてから&lt;code&gt;error_code&lt;/code&gt;に戻されるときに、可能であれば元のデータが復元されるようになった&lt;/li&gt;
&lt;li&gt;リークチェッカーに表示される1回限りの割り当てを回避するために、&lt;code&gt;error_category&lt;/code&gt;から&lt;code&gt;std::error_category&lt;/code&gt;への変換を作り直した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_code&lt;/code&gt;のソースの場所と対応する&lt;code&gt;assign&lt;/code&gt;を置き換えることを可能にするコンストラクタを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&lt;/code&gt;に変換コンストラクタを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メジャーアップデート&lt;ul&gt;
&lt;li&gt;内部実装をリファクタリングし、劇的に高速化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Hasher&lt;/code&gt;と&lt;code&gt;KeyEqual&lt;/code&gt;を&lt;code&gt;final&lt;/code&gt;にすることを許可&lt;/li&gt;
&lt;li&gt;ドキュメントを更新し、新たな内部データ構造のベンチマークグラフと説明を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/91&#34; target=&#34;_blank&#34;&gt;GitHub #91&lt;/a&gt; &lt;code&gt;string_view&lt;/code&gt;/&lt;code&gt;string_ref&lt;/code&gt;の&lt;code&gt;max_size&lt;/code&gt;が誤った戻り値を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/94&#34; target=&#34;_blank&#34;&gt;GitHub #94&lt;/a&gt; &lt;code&gt;string_view::compare&lt;/code&gt;がいくつかの入力で例外を送出する可能性があるため、&lt;code&gt;noexcept&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/96&#34; target=&#34;_blank&#34;&gt;GitHub #96&lt;/a&gt; &lt;code&gt;string_view&lt;/code&gt;/&lt;code&gt;string_ref&lt;/code&gt;に、引数なしの&lt;code&gt;substr&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/93&#34; target=&#34;_blank&#34;&gt;GitHub #93&lt;/a&gt; C++23から導入される&lt;code&gt;string_view::contains&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/92&#34; target=&#34;_blank&#34;&gt;GitHub #92&lt;/a&gt; &lt;code&gt;string_view&lt;/code&gt;において、&lt;code&gt;remove_prefix&lt;/code&gt;/&lt;code&gt;remove_suffix&lt;/code&gt;メンバ関数にアサーションを追加してprefix/suffixの長さが文字列ビューの長さを超えないという事前条件を適用。prefix/suffixの長さを静かにclampする以前の (アンドキュメントな) 動作は非推奨であり、将来のリリースから削除される予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/24&#34; target=&#34;_blank&#34;&gt;Wave #24&lt;/a&gt; 条件節のあとの行番号がおかしくなる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/160&#34; target=&#34;_blank&#34;&gt;Wave #160&lt;/a&gt; MSVCの&lt;code&gt;/permissive-&lt;/code&gt;モードで、テストがC2660とC2440のコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/161&#34; target=&#34;_blank&#34;&gt;Wave #161&lt;/a&gt; &lt;code&gt;BOOST_WAVE_THROW_NAME_CTX&lt;/code&gt;がcontext callbackで戻り値を返さず、常に例外を送出してしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/162&#34; target=&#34;_blank&#34;&gt;Wave #162&lt;/a&gt; プロプロセスされた翻訳単位にBoostのヘッダがインクルードされている場合に、Waveがboost/integer.hpp(99)で失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2 version 4.9.2をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.80.0リリースノート -- 1.80.0 : 残りを追加</title>
      <link href="https://boostjp.github.io/document/version/1_80_0.html"/>
      <id>7a46f86f9ee2fb2e2320ed34898467eb141f1acf:document/version/1_80_0.md</id>
      <updated>2022-08-01T18:04:56+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.80.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_80_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_80_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_80_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_80_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; ARM, AArch32, AArch64ターゲット向けのエンディアンチェックの移植性を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; MSVC 14.0 (Visual Studio 2015) のC++17 modeでのコンパイルを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt; Windowsにおいて、&lt;code&gt;ERROR_ACCESS_DENIED&lt;/code&gt;エラーでファイルを開くことができない場合にファイル属性をクエリするためのフォールバック実装を追加。これにより、再解析ポイントまたはシンボリックリンクではないシステムファイルおよびディレクトリに対して、&lt;code&gt;status&lt;/code&gt;および&lt;code&gt;symlink_status&lt;/code&gt;が成功する可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt;、&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/237&#34; target=&#34;_blank&#34;&gt;GitHub #237&lt;/a&gt; Windowsにおいて、ファイル属性のクエリ時に&lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;を生成するFAT/exFATファイルシステムの回避策を追加。これは、ファイルが存在しないことを報告する&lt;code&gt;status&lt;/code&gt;と&lt;code&gt;symlink_status&lt;/code&gt;、構築に失敗したdirectory iterator、およびその他の依存操作に影響する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/240&#34; target=&#34;_blank&#34;&gt;GitHub #240&lt;/a&gt; &lt;a href=&#34;https://www.rtems.org/&#34; target=&#34;_blank&#34;&gt;RTEMS&lt;/a&gt;でのコンパイルの問題を回避&lt;/li&gt;
&lt;li&gt;Linuxにおいて、実行時に&lt;code&gt;copy_file_range&lt;/code&gt;が&lt;code&gt;ENOSYS&lt;/code&gt;で失敗した場合の&lt;code&gt;sendfile&lt;/code&gt;、&lt;code&gt;copy_file&lt;/code&gt;実装への切り替えを修正。 &lt;code&gt;sendfile&lt;/code&gt;フォールバックの実装は、ファイルシステムタイプのチェックをスキップするために使用され、一部のファイルシステムでは失敗する可能性があった&lt;/li&gt;
&lt;li&gt;POSIX.1-2008およびWindows Vista以降で定義された&lt;code&gt;openat&lt;/code&gt;および関連APIをサポートするPOSIXシステムにおいて、以前のリリースで実装された&lt;a href=&#34;https://www.cve.org/CVERecord?id=CVE-2022-21658&#34; target=&#34;_blank&#34;&gt;CVE-2022-21658&lt;/a&gt;に対する&lt;code&gt;remove_all&lt;/code&gt;の保護が改善さた。以前の修正では、&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/224#issuecomment-1183738097&#34; target=&#34;_blank&#34;&gt;特定の条件&lt;/a&gt;で意図しないファイルが削除される可能性があった。他のシステムは脆弱なままである&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/discussions/676&#34; target=&#34;_blank&#34;&gt;GitHub #676&lt;/a&gt; Boost 1.80.0の次かその次のリリースで、サポートする最小C++の言語バージョンをC++17に破壊的変更する計画をしている&lt;/li&gt;
&lt;li&gt;追加&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/500&#34; target=&#34;_blank&#34;&gt;GitHub #500&lt;/a&gt; GSoC 2020: Perona-Malik anisotropic diffusionアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; GSoC 2020: histogramクラスと関連する機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/514&#34; target=&#34;_blank&#34;&gt;GitHub #514&lt;/a&gt; GSoC 2020: histogramのequalization機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/515&#34; target=&#34;_blank&#34;&gt;GitHub #515&lt;/a&gt; GSoC 2020: histogramのマッチングアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; GSoC 2020: 画像を水平方向（&lt;code&gt;hstack&lt;/code&gt;）または垂直方向（&lt;code&gt;vstack&lt;/code&gt;）にstackする機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/516&#34; target=&#34;_blank&#34;&gt;GitHub #516&lt;/a&gt; GSoC 2020: Adaptive Histogram Equalization (AHE) アルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/512&#34; target=&#34;_blank&#34;&gt;GitHub #512&lt;/a&gt; GSoC 2020: Standard Hough Transformおよびcircle rasterizationを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/512&#34; target=&#34;_blank&#34;&gt;GitHub #512&lt;/a&gt; GSoC 2020: line rasterization向けのBresenhamのアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/565&#34; target=&#34;_blank&#34;&gt;GitHub #565&lt;/a&gt; GSoC 2021: 任意の角度での画像回転を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/585&#34; target=&#34;_blank&#34;&gt;GitHub #585&lt;/a&gt; GSoC 2021: Jerry Van Aken氏の「効率的な楕円描画アルゴリズム」に基づく楕円のラスタライズサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/520&#34; target=&#34;_blank&#34;&gt;GitHub #520&lt;/a&gt; &lt;code&gt;image&lt;/code&gt;に変換可能なviewからの変換コンストラクタを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/527&#34; target=&#34;_blank&#34;&gt;GitHub #527&lt;/a&gt; &lt;code&gt;inverse(boost::gil::matrix3x2&amp;lt;T&amp;gt; m)&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/541&#34; target=&#34;_blank&#34;&gt;GitHub #541&lt;/a&gt; standard morphological transformationsを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/648&#34; target=&#34;_blank&#34;&gt;GitHub #648&lt;/a&gt; &lt;code&gt;for_each_pixel&lt;/code&gt;に&lt;code&gt;any_image&lt;/code&gt;向けのオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/529&#34; target=&#34;_blank&#34;&gt;GitHub #529&lt;/a&gt; C++17 polymorphic memory resourceの&lt;code&gt;image&lt;/code&gt;クラス向けtypedefを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;変更&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 最小C++言語バージョンの要求をC++11からC++14に変更した。現在、GILの大部分はまだC++11コンパイラでコンパイルされているが、その状態が維持される保証はなく、少なくともCC++14をサポートしていないコンパイラは現時点ではサポートされていないと見なされる&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;any_color_converted_view()&lt;/code&gt;を非推奨とし、将来のリリースから削除する予定。同じ機能として代わりに&lt;code&gt;color_converted_view()&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/pull/656&#34; target=&#34;_blank&#34;&gt;GitHub #656&lt;/a&gt; &lt;code&gt;any_image&lt;/code&gt;向けの&lt;code&gt;apply_operation&lt;/code&gt;を非推奨とし、将来のリリースから削除する予定。同じ機能として変わりに&lt;code&gt;variant2::visit&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/573&#34; target=&#34;_blank&#34;&gt;GitHub #573&lt;/a&gt; numeric extensionをcoreに移動&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/636&#34; target=&#34;_blank&#34;&gt;GitHub #636&lt;/a&gt; C++17 filesystemのサポートを追加。&lt;code&gt;BOOST_GIL_IO_USE_BOOST_FILESYSTEM&lt;/code&gt;マクロを定義して強制的にBoost.Filesystemを使用しない限り、自動的にstd::filesystemを検出して使用する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/655&#34; target=&#34;_blank&#34;&gt;GitHub #655&lt;/a&gt; &lt;code&gt;pixel_multiply_t&lt;/code&gt;を&lt;code&gt;pixel_multiplies_t&lt;/code&gt;、&lt;code&gt;pixel_divide_t&lt;/code&gt;を&lt;code&gt;pixel_divides_t&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/653&#34; target=&#34;_blank&#34;&gt;GitHub #653&lt;/a&gt; &lt;code&gt;io/dynamic_io_new.hpp&lt;/code&gt;を&lt;code&gt;io/detail/dynamic.hpp&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/653&#34; target=&#34;_blank&#34;&gt;GitHub #653&lt;/a&gt; &lt;code&gt;construct_matched&lt;/code&gt;関数を&lt;code&gt;boost::gil::detail&lt;/code&gt;名前空間に移動した。これは、他の実装の詳細としてのみ使用されていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/679&#34; target=&#34;_blank&#34;&gt;GitHub #679&lt;/a&gt; &lt;code&gt;packed_pixel&lt;/code&gt;をtrivially copyableかつassignableにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/685&#34; target=&#34;_blank&#34;&gt;GitHub #685&lt;/a&gt; 非推奨のlibtiff v4.3のtypedefを、C99の固定サイズ整数で置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;削除&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/pull/572&#34; target=&#34;_blank&#34;&gt;GitHub #572&lt;/a&gt; GCC 5のサポートを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/627&#34; target=&#34;_blank&#34;&gt;GitHub #627&lt;/a&gt; deprecated.hppを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/505&#34; target=&#34;_blank&#34;&gt;GitHub #505&lt;/a&gt; RGBからHSLへの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/522&#34; target=&#34;_blank&#34;&gt;GitHub #522&lt;/a&gt; RGBからsigned CMYKへの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; hsv.hppでの不要な数値キャストを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/542&#34; target=&#34;_blank&#34;&gt;GitHub #542&lt;/a&gt; &lt;code&gt;homogeneous_color_base&lt;/code&gt;のピクセル要素を参照するデフォルトコンストラクタを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/556&#34; target=&#34;_blank&#34;&gt;GitHub #556&lt;/a&gt; &lt;code&gt;subchroma_image_view&lt;/code&gt;でのローカルオブジェクトへの参照を返していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/568&#34; target=&#34;_blank&#34;&gt;GitHub #568&lt;/a&gt; diffusion.hppに不足していたインクルードガードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/526&#34; target=&#34;_blank&#34;&gt;GitHub #526&lt;/a&gt; &lt;code&gt;any_image_view&amp;lt;&amp;gt;::const_t&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/617&#34; target=&#34;_blank&#34;&gt;GitHub #617&lt;/a&gt; I/O extensionsのC++20との非互換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/628&#34; target=&#34;_blank&#34;&gt;GitHub #628&lt;/a&gt; すべてのサンプルコードがエラーなくビルドできることを確認&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/577&#34; target=&#34;_blank&#34;&gt;GitHub #577&lt;/a&gt; &lt;code&gt;float32_t&lt;/code&gt;チャンネルモデルをもつimage向けの&lt;code&gt;convolve_2d&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/621&#34; target=&#34;_blank&#34;&gt;GitHub #621&lt;/a&gt; 1次元以外のiterable viewに対する&lt;code&gt;for_each_pixel&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/650&#34; target=&#34;_blank&#34;&gt;GitHub #650&lt;/a&gt; PNG I/Oでの&lt;code&gt;is_equal_to_sixteen&lt;/code&gt;の不足していたテストを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/654&#34; target=&#34;_blank&#34;&gt;GitHub #654&lt;/a&gt; 2つのコンポーネントの&lt;code&gt;devicen_t&lt;/code&gt;を再許可。この機能はBoost 1.72.0で削除されていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/649&#34; target=&#34;_blank&#34;&gt;GitHub #649&lt;/a&gt; 空の次元での&lt;code&gt;image&lt;/code&gt;クラスのメモリリークを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Cypre55, Samuel Debionne, Mike-Devel, Edward Diener, Peter Dimov, Omar Emara, Dhruva Gole, Nicolas Herry, Eugene K, Avinal Kumar, Gaurav Kumar, Marco Langer, Pranam Lashkari, Mateusz Łoskot, Giovanni Mascellani, Debabrata Mandal, Gopi Krishna Menon, René Ferdinand Rivera Morell, Felix Morgner, Harshit Pant, Paul92, André Schröder, Scramjet911, Siddharth, Dirk Stolle, Prathamesh Tagore, theroyn, Olzhas Zhumabek&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(物理的または論理的に) 特定の条件下でサイズがゼロの軸を使用してヒストグラムを反復しようとしたときの&lt;code&gt;indexed&lt;/code&gt;のセグメンテーション違反を修正&lt;/li&gt;
&lt;li&gt;非推奨となっていたAPIを削除&lt;ul&gt;
&lt;li&gt;&lt;code&gt;accumulators::thread_safe&lt;/code&gt;クラス: &lt;code&gt;accumulators::count&amp;lt;T, true&amp;gt;&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;code&gt;accumulators::sum::large&lt;/code&gt;メンバ関数と&lt;code&gt;accumulators::sum::small&lt;/code&gt;メンバ関数: &lt;code&gt;accumulators::sum::large_part&lt;/code&gt;メンバ関数と&lt;code&gt;accumulators::sum::small_part&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;algorithm::reduce_option&lt;/code&gt;: &lt;code&gt;algorithm::reduce_command&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;関数テンプレート&lt;code&gt;axis::traits::static_options&lt;/code&gt;: &lt;code&gt;axis::traits::get_options&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;関数テンプレート&lt;code&gt;axis::traits::static_is_inclusive&lt;/code&gt;: &lt;code&gt;axis::traits::is_inclusive&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;indexed::range_iterator&lt;/code&gt;: &lt;code&gt;indexed::iterator&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;indexed::accessor::reference&lt;/code&gt;: &lt;code&gt;indexed::accessor::const_reference&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/pull/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; C++11以降向けに、&lt;code&gt;function_output_iterator&lt;/code&gt;に値書き込みの完全転送サポートを追加&lt;/li&gt;
&lt;li&gt;別の&lt;code&gt;function_output_iterator&lt;/code&gt;を逆参照した結果を&lt;code&gt;function_output_iterator&lt;/code&gt;へ書き込んだ場合に対する保護を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value::at&lt;/code&gt;に非&lt;code&gt;const&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;プラットフォームのエンディアンを手動で選択する機能を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string::subview()&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array::erase(it)&lt;/code&gt;のセグメンテーション違反を修正&lt;/li&gt;
&lt;li&gt;libc++での&lt;code&gt;serialize&lt;/code&gt;のパフォーマンス劣化を修正&lt;/li&gt;
&lt;li&gt;GCC 8で&lt;code&gt;std::string_view&lt;/code&gt;への変換があいまいになる問題を修正&lt;/li&gt;
&lt;li&gt;ビッグエンディアンのプラットフォームでの構文解析を修正&lt;/li&gt;
&lt;li&gt;コメント後のカンマのハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#leaf&#34; id=&#34;leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;throw leaf::exception(....)&lt;/code&gt;を&lt;code&gt;leaf::throw_exception(....)&lt;/code&gt;に修正&lt;/li&gt;
&lt;li&gt;サポートする稀なビルド設定でのバグを修正 (例外処理は有効だが診断は無効)&lt;/li&gt;
&lt;li&gt;0の代わりに&lt;code&gt;nullptr&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;ささいな警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03以下のサポートを非推奨とした。次のリリースからはC++11を要求する&lt;/li&gt;
&lt;li&gt;Boost.Regexと互換性のない&lt;code&gt;-sICU_LINK&lt;/code&gt;の一時的な置換として&lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt;を提供する。 &lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt;と&lt;code&gt;-sICU_LINK&lt;/code&gt;は非推奨になり、Boost.Regexと互換性があるように &lt;code&gt;ICU_*_NAME&lt;/code&gt;オプションに置き換えられる&lt;/li&gt;
&lt;li&gt;空の文字列を変換する際のICU &lt;code&gt;collator&lt;/code&gt;実装内での未定義動作とアサーション失敗を修正&lt;/li&gt;
&lt;li&gt;共有ライブラリ内のクラスの可視性に関連するいくつかの問題を修正（Unixのみ）&lt;/li&gt;
&lt;li&gt;C++20モードの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_USE_WINDOWS_H&lt;/code&gt;との互換性を修正&lt;/li&gt;
&lt;li&gt;インクルード不足によるビルド失敗を修正&lt;/li&gt;
&lt;li&gt;多くの警告を処理または抑制し、ビルドログをきれいにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; IPv6アドレスがsyslogサーバーに使用されている場合に、UDPソケットベースの&lt;code&gt;syslog_backend&lt;/code&gt;で誤ったローカルアドレスをバインドする問題を修正&lt;/li&gt;
&lt;li&gt;GCC 11.2からのlibstdc++の&lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=105857&#34; target=&#34;_blank&#34;&gt;バグ&lt;/a&gt;に対する回避策を追加。&lt;code&gt;max_size_decor&lt;/code&gt;がformat streamで使用された場合、&lt;code&gt;std::codecvt::do_length&lt;/code&gt;が誤って入力バッファにアクセスし、バッファオーバーフローを引き起こしていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/log/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt; : 2023年からはC++14を最小C++の言語バージョンとする。これはGCC 5やMSVC 14.1を最小要求とすることを意味する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/734&#34; target=&#34;_blank&#34;&gt;GitHub #734&lt;/a&gt; &lt;code&gt;constexpr&lt;/code&gt;のfmaサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/770&#34; target=&#34;_blank&#34;&gt;GitHub #770&lt;/a&gt; Chatterjee Correlation Coefficientのサポートを追加&lt;/li&gt;
&lt;li&gt;すべての分布のPDFの対数サポートを追加&lt;/li&gt;
&lt;li&gt;例外無効、RTTI無効のビルドサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/778&#34; target=&#34;_blank&#34;&gt;GitHub #778&lt;/a&gt; &lt;sub&gt;1&lt;/sub&gt;F&lt;sub&gt;1&lt;/sub&gt;コーナーケースの小さなバグをいくつか修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++11サポートを非推奨化&lt;/strong&gt; : 2023年からはC++14を最小C++の言語バージョンとする。これはGCC 5やMSVC 14.1を最小要求とすることを意味する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/cstdfloat.hpp&lt;/code&gt;とこのライブラリの衝突を修正&lt;/li&gt;
&lt;li&gt;GCCとClangでの警告を修正&lt;/li&gt;
&lt;li&gt;ストリームに末尾の区切り文字があり、空白がない複合型（complex、interval rational）の入力ストリーミングを修正&lt;/li&gt;
&lt;li&gt;入力が1、2、または3つである&lt;code&gt;constexpr&lt;/code&gt;整数平方根を修正&lt;/li&gt;
&lt;li&gt;float128.hppに不足していた&lt;code&gt;#include &amp;lt;memory&amp;gt;&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;あいまいさを防ぐために、&lt;code&gt;number&lt;/code&gt;クラスの2引数コンストラクタを修正&lt;/li&gt;
&lt;li&gt;gmp.hppのゼロ除算の動作を修正し、より一貫性のあるものにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ファイルを使用したbulk I/Oのパフォーマンスが大幅に向上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_filebuf&lt;/code&gt;：&lt;code&gt;fflush&lt;/code&gt;が失敗したときの&lt;code&gt;sync&lt;/code&gt;の誤った戻り値を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_filebuf&lt;/code&gt;：実際には何も書き込まれなかったが、バッファがwriteモードの場合に発生する可能性があった未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_filebuf&lt;/code&gt;：文字のputbackを制限（例として&lt;code&gt;pbackfail&lt;/code&gt;）。バッファリングされた文字（1文字のみ）のputbackのみを許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::hash&amp;lt;boost::optional&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;の特殊化を追加。これは、そのような特殊化自体を定義するプログラムにとって重大な変更である&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#stl-interfaces&#34; id=&#34;stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stl_interfaces/issues/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; 依存型&lt;code&gt;C::const_iterator&lt;/code&gt;に不足していた&lt;code&gt;typename&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stl_interfaces/issues/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; 連続的な&lt;code&gt;iterator_interface&lt;/code&gt;のviewのインスタンス化での&lt;code&gt;.data()&lt;/code&gt;のコンセプトチェックが失敗する問題を修正&lt;/li&gt;
&lt;li&gt;標準ライブラリにあるものと同様に機能する、相互運用可能なviewとview adaptorをかんたんに定義できるようにする機能を追加：&lt;ul&gt;
&lt;li&gt;C++23の&lt;code&gt;std::bind_back()&lt;/code&gt;と&lt;code&gt;std::range_adaptor_closure&lt;/code&gt;をC++23より前のバージョンで使用できるものとして追加&lt;/li&gt;
&lt;li&gt;view adaptorをかんたんに定義できるようにするために、テンプレート&lt;code&gt;closure&lt;/code&gt;と&lt;code&gt;adaptor&lt;/code&gt;を追加 (&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2387r3.html&#34; target=&#34;_blank&#34;&gt;P2387&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;error_code&lt;/code&gt;が&lt;code&gt;std::error_code&lt;/code&gt;に変換されてから&lt;code&gt;error_code&lt;/code&gt;に戻されるときに、可能であれば元のデータが復元されるようになった&lt;/li&gt;
&lt;li&gt;リークチェッカーに表示される1回限りの割り当てを回避するために、&lt;code&gt;error_category&lt;/code&gt;から&lt;code&gt;std::error_category&lt;/code&gt;への変換を作り直した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_code&lt;/code&gt;のソースの場所と対応する&lt;code&gt;assign&lt;/code&gt;を置き換えることを可能にするコンストラクタを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&lt;/code&gt;に変換コンストラクタを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メジャーアップデート&lt;ul&gt;
&lt;li&gt;内部実装をリファクタリングし、劇的に高速化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Hasher&lt;/code&gt;と&lt;code&gt;KeyEqual&lt;/code&gt;を&lt;code&gt;final&lt;/code&gt;にすることを許可&lt;/li&gt;
&lt;li&gt;ドキュメントを更新し、新たな内部データ構造のベンチマークグラフと説明を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#utility&#34; id=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/91&#34; target=&#34;_blank&#34;&gt;GitHub #91&lt;/a&gt; &lt;code&gt;string_view&lt;/code&gt;/&lt;code&gt;string_ref&lt;/code&gt;の&lt;code&gt;max_size&lt;/code&gt;が誤った戻り値を返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/94&#34; target=&#34;_blank&#34;&gt;GitHub #94&lt;/a&gt; &lt;code&gt;string_view::compare&lt;/code&gt;がいくつかの入力で例外を送出する可能性があるため、&lt;code&gt;noexcept&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/96&#34; target=&#34;_blank&#34;&gt;GitHub #96&lt;/a&gt; &lt;code&gt;string_view&lt;/code&gt;/&lt;code&gt;string_ref&lt;/code&gt;に、引数なしの&lt;code&gt;substr&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/93&#34; target=&#34;_blank&#34;&gt;GitHub #93&lt;/a&gt; C++23から導入される&lt;code&gt;string_view::contains&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/utility/issues/92&#34; target=&#34;_blank&#34;&gt;GitHub #92&lt;/a&gt; &lt;code&gt;string_view&lt;/code&gt;において、&lt;code&gt;remove_prefix&lt;/code&gt;/&lt;code&gt;remove_suffix&lt;/code&gt;メンバ関数にアサーションを追加してprefix/suffixの長さが文字列ビューの長さを超えないという事前条件を適用。prefix/suffixの長さを静かにclampする以前の (アンドキュメントな) 動作は非推奨であり、将来のリリースから削除される予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/24&#34; target=&#34;_blank&#34;&gt;Wave #24&lt;/a&gt; 条件節のあとの行番号がおかしくなる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/160&#34; target=&#34;_blank&#34;&gt;Wave #160&lt;/a&gt; MSVCの&lt;code&gt;/permissive-&lt;/code&gt;モードで、テストがC2660とC2440のコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/161&#34; target=&#34;_blank&#34;&gt;Wave #161&lt;/a&gt; &lt;code&gt;BOOST_WAVE_THROW_NAME_CTX&lt;/code&gt;がcontext callbackで戻り値を返さず、常に例外を送出してしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/162&#34; target=&#34;_blank&#34;&gt;Wave #162&lt;/a&gt; プロプロセスされた翻訳単位にBoostのヘッダがインクルードされている場合に、Waveがboost/integer.hpp(99)で失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2 version 4.9.2をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リリースノート -- 1.80.0のリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version.html"/>
      <id>6214e8f3808d2d00c111be9b1f41ba68fc54905d:document/version.md</id>
      <updated>2022-07-30T19:19:19+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;以下は、Boostの各バージョンのリリースノートを翻訳、情報補完したドキュメントです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html&#34;&gt;雛形ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html&#34;&gt;1.80.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html&#34;&gt;1.79.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_78_0.html&#34;&gt;1.78.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_77_0.html&#34;&gt;1.77.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html&#34;&gt;1.76.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_75_0.html&#34;&gt;1.75.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_74_0.html&#34;&gt;1.74.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html&#34;&gt;1.73.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html&#34;&gt;1.72.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_71_0.html&#34;&gt;1.71.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_70_0.html&#34;&gt;1.70.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_69_0.html&#34;&gt;1.69.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html&#34;&gt;1.68.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html&#34;&gt;1.67.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_66_0.html&#34;&gt;1.66.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_1.html&#34;&gt;1.65.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html&#34;&gt;1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html&#34;&gt;1.64.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_63_0.html&#34;&gt;1.63.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_62_0.html&#34;&gt;1.62.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_61_0.html&#34;&gt;1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html&#34;&gt;1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html&#34;&gt;1.59.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html&#34;&gt;1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_57_0.html&#34;&gt;1.57.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_56_0.html&#34;&gt;1.56.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html&#34;&gt;1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_54_0.html&#34;&gt;1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_53_0.html&#34;&gt;1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_52_0.html&#34;&gt;1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_51_0.html&#34;&gt;1.51.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_50_0.html&#34;&gt;1.50.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_49_0.html&#34;&gt;1.49.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_48_0.html&#34;&gt;1.48.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_47_0.html&#34;&gt;1.47.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_1.html&#34;&gt;1.46.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_46_0.html&#34;&gt;1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_45_0.html&#34;&gt;1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.80.0リリースノート -- 1.80.0のリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version/1_80_0.html"/>
      <id>6214e8f3808d2d00c111be9b1f41ba68fc54905d:document/version/1_80_0.md</id>
      <updated>2022-07-30T19:19:19+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.80.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_80_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_80_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_80_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_80_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; ARM, AArch32, AArch64ターゲット向けのエンディアンチェックの移植性を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; MSVC 14.0 (Visual Studio 2015) のC++17 modeでのコンパイルを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt; Windowsにおいて、&lt;code&gt;ERROR_ACCESS_DENIED&lt;/code&gt;エラーでファイルを開くことができない場合にファイル属性をクエリするためのフォールバック実装を追加。これにより、再解析ポイントまたはシンボリックリンクではないシステムファイルおよびディレクトリに対して、&lt;code&gt;status&lt;/code&gt;および&lt;code&gt;symlink_status&lt;/code&gt;が成功する可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt;、&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/237&#34; target=&#34;_blank&#34;&gt;GitHub #237&lt;/a&gt; Windowsにおいて、ファイル属性のクエリ時に&lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;を生成するFAT/exFATファイルシステムの回避策を追加。これは、ファイルが存在しないことを報告する&lt;code&gt;status&lt;/code&gt;と&lt;code&gt;symlink_status&lt;/code&gt;、構築に失敗したdirectory iterator、およびその他の依存操作に影響する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/240&#34; target=&#34;_blank&#34;&gt;GitHub #240&lt;/a&gt; &lt;a href=&#34;https://www.rtems.org/&#34; target=&#34;_blank&#34;&gt;RTEMS&lt;/a&gt;でのコンパイルの問題を回避&lt;/li&gt;
&lt;li&gt;Linuxにおいて、実行時に&lt;code&gt;copy_file_range&lt;/code&gt;が&lt;code&gt;ENOSYS&lt;/code&gt;で失敗した場合の&lt;code&gt;sendfile&lt;/code&gt;、&lt;code&gt;copy_file&lt;/code&gt;実装への切り替えを修正。 &lt;code&gt;sendfile&lt;/code&gt;フォールバックの実装は、ファイルシステムタイプのチェックをスキップするために使用され、一部のファイルシステムでは失敗する可能性があった&lt;/li&gt;
&lt;li&gt;POSIX.1-2008およびWindows Vista以降で定義された&lt;code&gt;openat&lt;/code&gt;および関連APIをサポートするPOSIXシステムにおいて、以前のリリースで実装された&lt;a href=&#34;https://www.cve.org/CVERecord?id=CVE-2022-21658&#34; target=&#34;_blank&#34;&gt;CVE-2022-21658&lt;/a&gt;に対する&lt;code&gt;remove_all&lt;/code&gt;の保護が改善さた。以前の修正では、&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/224#issuecomment-1183738097&#34; target=&#34;_blank&#34;&gt;特定の条件&lt;/a&gt;で意図しないファイルが削除される可能性があった。他のシステムは脆弱なままである&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/discussions/676&#34; target=&#34;_blank&#34;&gt;GitHub #676&lt;/a&gt; Boost 1.80.0の次かその次のリリースで、サポートする最小C++の言語バージョンをC++17に破壊的変更する計画をしている&lt;/li&gt;
&lt;li&gt;追加&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/500&#34; target=&#34;_blank&#34;&gt;GitHub #500&lt;/a&gt; GSoC 2020: Perona-Malik anisotropic diffusionアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/499&#34; target=&#34;_blank&#34;&gt;GitHub #499&lt;/a&gt; GSoC 2020: histogramクラスと関連する機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/514&#34; target=&#34;_blank&#34;&gt;GitHub #514&lt;/a&gt; GSoC 2020: histogramのequalization機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/515&#34; target=&#34;_blank&#34;&gt;GitHub #515&lt;/a&gt; GSoC 2020: histogramのマッチングアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/506&#34; target=&#34;_blank&#34;&gt;GitHub #506&lt;/a&gt; GSoC 2020: 画像を水平方向（&lt;code&gt;hstack&lt;/code&gt;）または垂直方向（&lt;code&gt;vstack&lt;/code&gt;）にstackする機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/516&#34; target=&#34;_blank&#34;&gt;GitHub #516&lt;/a&gt; GSoC 2020: Adaptive Histogram Equalization (AHE) アルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/512&#34; target=&#34;_blank&#34;&gt;GitHub #512&lt;/a&gt; GSoC 2020: Standard Hough Transformおよびcircle rasterizationを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/512&#34; target=&#34;_blank&#34;&gt;GitHub #512&lt;/a&gt; GSoC 2020: line rasterization向けのBresenhamのアルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/565&#34; target=&#34;_blank&#34;&gt;GitHub #565&lt;/a&gt; GSoC 2021: 任意の角度での画像回転を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/585&#34; target=&#34;_blank&#34;&gt;GitHub #585&lt;/a&gt; GSoC 2021: Jerry Van Aken氏の「効率的な楕円描画アルゴリズム」に基づく楕円のラスタライズサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/520&#34; target=&#34;_blank&#34;&gt;GitHub #520&lt;/a&gt; &lt;code&gt;image&lt;/code&gt;に変換可能なviewからの変換コンストラクタを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/527&#34; target=&#34;_blank&#34;&gt;GitHub #527&lt;/a&gt; &lt;code&gt;inverse(boost::gil::matrix3x2&amp;lt;T&amp;gt; m)&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/541&#34; target=&#34;_blank&#34;&gt;GitHub #541&lt;/a&gt; standard morphological transformationsを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/648&#34; target=&#34;_blank&#34;&gt;GitHub #648&lt;/a&gt; &lt;code&gt;for_each_pixel&lt;/code&gt;に&lt;code&gt;any_image&lt;/code&gt;向けのオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/529&#34; target=&#34;_blank&#34;&gt;GitHub #529&lt;/a&gt; C++17 polymorphic memory resourceの&lt;code&gt;image&lt;/code&gt;クラス向けtypedefを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;変更&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 最小C++言語バージョンの要求をC++11からC++14に変更した。現在、GILの大部分はまだC++11コンパイラでコンパイルされているが、その状態が維持される保証はなく、少なくともCC++14をサポートしていないコンパイラは現時点ではサポートされていないと見なされる&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;any_color_converted_view()&lt;/code&gt;を非推奨とし、将来のリリースから削除する予定。同じ機能として代わりに&lt;code&gt;color_converted_view()&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/pull/656&#34; target=&#34;_blank&#34;&gt;GitHub #656&lt;/a&gt; &lt;code&gt;any_image&lt;/code&gt;向けの&lt;code&gt;apply_operation&lt;/code&gt;を非推奨とし、将来のリリースから削除する予定。同じ機能として変わりに&lt;code&gt;variant2::visit&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/573&#34; target=&#34;_blank&#34;&gt;GitHub #573&lt;/a&gt; numeric extensionをcoreに移動&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/636&#34; target=&#34;_blank&#34;&gt;GitHub #636&lt;/a&gt; C++17 filesystemのサポートを追加。&lt;code&gt;BOOST_GIL_IO_USE_BOOST_FILESYSTEM&lt;/code&gt;マクロを定義して強制的にBoost.Filesystemを使用しない限り、自動的にstd::filesystemを検出して使用する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/655&#34; target=&#34;_blank&#34;&gt;GitHub #655&lt;/a&gt; &lt;code&gt;pixel_multiply_t&lt;/code&gt;を&lt;code&gt;pixel_multiplies_t&lt;/code&gt;、&lt;code&gt;pixel_divide_t&lt;/code&gt;を&lt;code&gt;pixel_divides_t&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/653&#34; target=&#34;_blank&#34;&gt;GitHub #653&lt;/a&gt; &lt;code&gt;io/dynamic_io_new.hpp&lt;/code&gt;を&lt;code&gt;io/detail/dynamic.hpp&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/653&#34; target=&#34;_blank&#34;&gt;GitHub #653&lt;/a&gt; &lt;code&gt;construct_matched&lt;/code&gt;関数を&lt;code&gt;boost::gil::detail&lt;/code&gt;名前空間に移動した。これは、他の実装の詳細としてのみ使用されていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/679&#34; target=&#34;_blank&#34;&gt;GitHub #679&lt;/a&gt; &lt;code&gt;packed_pixel&lt;/code&gt;をtrivially copyableかつassignableにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/685&#34; target=&#34;_blank&#34;&gt;GitHub #685&lt;/a&gt; 非推奨のlibtiff v4.3のtypedefを、C99の固定サイズ整数で置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;削除&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/boostorg/gil/pull/572&#34; target=&#34;_blank&#34;&gt;GitHub #572&lt;/a&gt; GCC 5のサポートを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/627&#34; target=&#34;_blank&#34;&gt;GitHub #627&lt;/a&gt; deprecated.hppを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/505&#34; target=&#34;_blank&#34;&gt;GitHub #505&lt;/a&gt; RGBからHSLへの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/522&#34; target=&#34;_blank&#34;&gt;GitHub #522&lt;/a&gt; RGBからsigned CMYKへの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/530&#34; target=&#34;_blank&#34;&gt;GitHub #530&lt;/a&gt; hsv.hppでの不要な数値キャストを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/542&#34; target=&#34;_blank&#34;&gt;GitHub #542&lt;/a&gt; &lt;code&gt;homogeneous_color_base&lt;/code&gt;のピクセル要素を参照するデフォルトコンストラクタを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/556&#34; target=&#34;_blank&#34;&gt;GitHub #556&lt;/a&gt; &lt;code&gt;subchroma_image_view&lt;/code&gt;でのローカルオブジェクトへの参照を返していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/568&#34; target=&#34;_blank&#34;&gt;GitHub #568&lt;/a&gt; diffusion.hppに不足していたインクルードガードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/526&#34; target=&#34;_blank&#34;&gt;GitHub #526&lt;/a&gt; &lt;code&gt;any_image_view&amp;lt;&amp;gt;::const_t&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/617&#34; target=&#34;_blank&#34;&gt;GitHub #617&lt;/a&gt; I/O extensionsのC++20との非互換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/628&#34; target=&#34;_blank&#34;&gt;GitHub #628&lt;/a&gt; すべてのサンプルコードがエラーなくビルドできることを確認&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/577&#34; target=&#34;_blank&#34;&gt;GitHub #577&lt;/a&gt; &lt;code&gt;float32_t&lt;/code&gt;チャンネルモデルをもつimage向けの&lt;code&gt;convolve_2d&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/621&#34; target=&#34;_blank&#34;&gt;GitHub #621&lt;/a&gt; 1次元以外のiterable viewに対する&lt;code&gt;for_each_pixel&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/650&#34; target=&#34;_blank&#34;&gt;GitHub #650&lt;/a&gt; PNG I/Oでの&lt;code&gt;is_equal_to_sixteen&lt;/code&gt;の不足していたテストを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/654&#34; target=&#34;_blank&#34;&gt;GitHub #654&lt;/a&gt; 2つのコンポーネントの&lt;code&gt;devicen_t&lt;/code&gt;を再許可。この機能はBoost 1.72.0で削除されていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/gil/pull/649&#34; target=&#34;_blank&#34;&gt;GitHub #649&lt;/a&gt; 空の次元での&lt;code&gt;image&lt;/code&gt;クラスのメモリリークを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;Cypre55, Samuel Debionne, Mike-Devel, Edward Diener, Peter Dimov, Omar Emara, Dhruva Gole, Nicolas Herry, Eugene K, Avinal Kumar, Gaurav Kumar, Marco Langer, Pranam Lashkari, Mateusz Łoskot, Giovanni Mascellani, Debabrata Mandal, Gopi Krishna Menon, René Ferdinand Rivera Morell, Felix Morgner, Harshit Pant, Paul92, André Schröder, Scramjet911, Siddharth, Dirk Stolle, Prathamesh Tagore, theroyn, Olzhas Zhumabek&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(物理的または論理的に) 特定の条件下でサイズがゼロの軸を使用してヒストグラムを反復しようとしたときの&lt;code&gt;indexed&lt;/code&gt;のセグメンテーション違反を修正&lt;/li&gt;
&lt;li&gt;非推奨となっていたAPIを削除&lt;ul&gt;
&lt;li&gt;&lt;code&gt;accumulators::thread_safe&lt;/code&gt;クラス: &lt;code&gt;accumulators::count&amp;lt;T, true&amp;gt;&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;code&gt;accumulators::sum::large&lt;/code&gt;メンバ関数と&lt;code&gt;accumulators::sum::small&lt;/code&gt;メンバ関数: &lt;code&gt;accumulators::sum::large_part&lt;/code&gt;メンバ関数と&lt;code&gt;accumulators::sum::small_part&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;algorithm::reduce_option&lt;/code&gt;: &lt;code&gt;algorithm::reduce_command&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;関数テンプレート&lt;code&gt;axis::traits::static_options&lt;/code&gt;: &lt;code&gt;axis::traits::get_options&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;関数テンプレート&lt;code&gt;axis::traits::static_is_inclusive&lt;/code&gt;: &lt;code&gt;axis::traits::is_inclusive&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;indexed::range_iterator&lt;/code&gt;: &lt;code&gt;indexed::iterator&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;型の別名&lt;code&gt;indexed::accessor::reference&lt;/code&gt;: &lt;code&gt;indexed::accessor::const_reference&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/pull/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; C++11以降向けに、&lt;code&gt;function_output_iterator&lt;/code&gt;に値書き込みの完全転送サポートを追加&lt;/li&gt;
&lt;li&gt;別の&lt;code&gt;function_output_iterator&lt;/code&gt;を逆参照した結果を&lt;code&gt;function_output_iterator&lt;/code&gt;へ書き込んだ場合に対する保護を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value::at&lt;/code&gt;に非&lt;code&gt;const&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;プラットフォームのエンディアンを手動で選択する機能を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string::subview()&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array::erase(it)&lt;/code&gt;のセグメンテーション違反を修正&lt;/li&gt;
&lt;li&gt;libc++での&lt;code&gt;serialize&lt;/code&gt;のパフォーマンス劣化を修正&lt;/li&gt;
&lt;li&gt;GCC 8で&lt;code&gt;std::string_view&lt;/code&gt;への変換があいまいになる問題を修正&lt;/li&gt;
&lt;li&gt;ビッグエンディアンのプラットフォームでの構文解析を修正&lt;/li&gt;
&lt;li&gt;コメント後のカンマのハンドリングを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#leaf&#34; id=&#34;leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;throw leaf::exception(....)&lt;/code&gt;を&lt;code&gt;leaf::throw_exception(....)&lt;/code&gt;に修正&lt;/li&gt;
&lt;li&gt;サポートする稀なビルド設定でのバグを修正 (例外処理は有効だが診断は無効)&lt;/li&gt;
&lt;li&gt;0の代わりに&lt;code&gt;nullptr&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;ささいな警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03以下のサポートを非推奨とした。次のリリースからはC++11を要求する&lt;/li&gt;
&lt;li&gt;Boost.Regexと互換性のない&lt;code&gt;-sICU_LINK&lt;/code&gt;の一時的な置換として&lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt;を提供する。 &lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt;と&lt;code&gt;-sICU_LINK&lt;/code&gt;は非推奨になり、Boost.Regexと互換性があるように &lt;code&gt;ICU_*_NAME&lt;/code&gt;オプションに置き換えられる&lt;/li&gt;
&lt;li&gt;空の文字列を変換する際のICU &lt;code&gt;collator&lt;/code&gt;実装内での未定義動作とアサーション失敗を修正&lt;/li&gt;
&lt;li&gt;共有ライブラリ内のクラスの可視性に関連するいくつかの問題を修正（Unixのみ）&lt;/li&gt;
&lt;li&gt;C++20モードの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_USE_WINDOWS_H&lt;/code&gt;との互換性を修正&lt;/li&gt;
&lt;li&gt;インクルード不足によるビルド失敗を修正&lt;/li&gt;
&lt;li&gt;多くの警告を処理または抑制し、ビルドログをきれいにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_80_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/181&#34; target=&#34;_blank&#34;&gt;GitHub #181&lt;/a&gt; IPv6アドレスがsyslogサーバーに使用されている場合に、UDPソケットベースの&lt;code&gt;syslog_backend&lt;/code&gt;で誤ったローカルアドレスをバインドする問題を修正&lt;/li&gt;
&lt;li&gt;GCC 11.2からのlibstdc++の&lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=105857&#34; target=&#34;_blank&#34;&gt;バグ&lt;/a&gt;に対する回避策を追加。&lt;code&gt;max_size_decor&lt;/code&gt;がformat streamで使用された場合、&lt;code&gt;std::codecvt::do_length&lt;/code&gt;が誤って入力バッファにアクセスし、バッファオーバーフローを引き起こしていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/log/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.xx.0リリースノート -- 1.80.0のリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version/template.html"/>
      <id>6214e8f3808d2d00c111be9b1f41ba68fc54905d:document/version/template.md</id>
      <updated>2022-07-30T19:19:19+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.xx.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_xx_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_xx_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_xx_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_xx_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html#one&#34;&gt;One&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html#two&#34;&gt;Two&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html#three&#34;&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html#one&#34; id=&#34;One&#34;&gt;One&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;blahblahblah&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html#two&#34; id=&#34;Two&#34;&gt;Two&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;something&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt; ticket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/XXX/pull/XX&#34; target=&#34;_blank&#34;&gt;pull request XX&lt;/a&gt; GitHub PR&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/template.html#three&#34; id=&#34;Three&#34;&gt;Three&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Feature: &lt;code&gt;boost::xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trailing &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/xxxx&#34; target=&#34;_blank&#34;&gt;#xxxx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.79.0リリースノート -- 1.79.0 : Geometryの追加リリースノートに対応</title>
      <link href="https://boostjp.github.io/document/version/1_79_0.html"/>
      <id>cf17e0dc5b9e326423d0df43744a55e8073f53c9:document/version/1_79_0.md</id>
      <updated>2022-04-28T12:21:26+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.79.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_79_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_79_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_79_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_79_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;p&gt;なし&lt;/p&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#describe&#34;&gt;Describe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#integer&#34;&gt;Integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#io&#34;&gt;IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#qvm&#34;&gt;QVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#throw-exception&#34;&gt;ThrowException&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location().file_name()&lt;/code&gt;と&lt;code&gt;source_location().function_name()&lt;/code&gt;が、&lt;code&gt;&#34;(unknown)&#34;&lt;/code&gt;の代わりに&lt;code&gt;&#34;&#34;&lt;/code&gt;を返すようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;に、&lt;code&gt;std::source_location&lt;/code&gt;からの変換コンストラクタを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_CURRENT_LOCATION&lt;/code&gt;を変更し、トップレベルで使用したり、関数のデフォルト引数として使用したりした場合に、&lt;code&gt;std::source_location::current()&lt;/code&gt;とより厳密に動作を一致させた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bind_allocator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_base::sync_all_on_write&lt;/code&gt;フラグを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_file::release()&lt;/code&gt;の不足していた実装を追加&lt;/li&gt;
&lt;li&gt;signal setの各操作にキャンセルのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;recycling_allocator&lt;/code&gt;をpublicインタフェースの一部として公開&lt;/li&gt;
&lt;li&gt;いくつかの関数に&lt;code&gt;nodiscard&lt;/code&gt;属性を追加&lt;/li&gt;
&lt;li&gt;OpenSSL 3.0との互換性を追加&lt;/li&gt;
&lt;li&gt;既存の&lt;code&gt;SSL*&lt;/code&gt;を&lt;code&gt;ssl::stream&amp;lt;&amp;gt;&lt;/code&gt;にアダプトするサポートを追加&lt;/li&gt;
&lt;li&gt;すべてのビルド構成で&lt;code&gt;executor_work_guard&amp;lt;&amp;gt;&lt;/code&gt;を有効化&lt;/li&gt;
&lt;li&gt;Clangでmovable socket iostreamを有効化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bind_cancellation_slot&lt;/code&gt;と&lt;code&gt;bind_executor&lt;/code&gt;の、古い完了トークンとの互換性を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::append&lt;/code&gt;と&lt;code&gt;experimental::prepend&lt;/code&gt;に対する&lt;code&gt;associator&lt;/code&gt;の特殊化を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;associated_allocator&lt;/code&gt;のプライマリテンプレートを修正&lt;/li&gt;
&lt;li&gt;socketの&lt;code&gt;async_receive_from&lt;/code&gt;とファイルの&lt;code&gt;write_some_at&lt;/code&gt;のio_uring実装を修正&lt;/li&gt;
&lt;li&gt;io_uring機能の検出を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::coro&lt;/code&gt;の各操作のキャンセルを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;の型消去された完了ハンドラのメモリ管理を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl::stream&lt;/code&gt;のムーブ代入演算子の実装を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT&lt;/code&gt;と&lt;code&gt;BOOST_ASIO_SEPARATE_COMPILATION&lt;/code&gt;の両方が定義された際の&lt;code&gt;any_io_executor&lt;/code&gt;の実装を正しく動作するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sockatmark()&lt;/code&gt;システムコールを使用する際の&lt;code&gt;basic_socket::at_mark()&lt;/code&gt;の実装を修正&lt;/li&gt;
&lt;li&gt;recycling allocatorのメモリ確保のデフォルトアライメントを、最小アライメントを使用するよう変更&lt;/li&gt;
&lt;li&gt;Apple clangでのコルーチンコード生成で判明したバグのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;Windowsにおいて、&lt;code&gt;fopen()&lt;/code&gt;で同じ共有モードを使用してファイルを開くようファイルサポートを変更&lt;/li&gt;
&lt;li&gt;Linuxにおいて、UNIX domain socketの実装を修正し、&lt;code&gt;EAGAIN&lt;/code&gt;が正しく処理されるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::basic_channel::reset()&lt;/code&gt;と&lt;code&gt;experimental::basic_concurrent_channel::reset()&lt;/code&gt;の実装を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt;内の潜在的な未定義動作を修正&lt;/li&gt;
&lt;li&gt;いくつかの状況において、executorを介してキャンセルのシグナルをdispatchするよう&lt;code&gt;co_spawn&lt;/code&gt;の実装を修正&lt;/li&gt;
&lt;li&gt;さまざまなヘッダのインクルード問題を修正&lt;/li&gt;
&lt;li&gt;さまざまな警告を修正&lt;/li&gt;
&lt;li&gt;いくつかのドキュメント強化：&lt;ul&gt;
&lt;li&gt;Asio非同期モデルの概要 (overview of Asio&#39;s asynchronous model) を追加&lt;/li&gt;
&lt;li&gt;非同期モデルに関するリファレンスと要件のドキュメントを作り直した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dispatch()&lt;/code&gt;, &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;defer()&lt;/code&gt;のドキュメントを更新&lt;/li&gt;
&lt;li&gt;シリアルポートの各操作のキャンセルをドキュメント化&lt;/li&gt;
&lt;li&gt;アロケータの「非同期実行性の保証 (non-concurrency guarantees)」を明記&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io_context&lt;/code&gt;のリファレンスドキュメントを、&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make_strand()&lt;/code&gt;, &lt;code&gt;make_work_guard()&lt;/code&gt;, &lt;code&gt;ip::address_v4&lt;/code&gt;, &lt;code&gt;ip::address_v6&lt;/code&gt;, &lt;code&gt;experimental::basic_channel&lt;/code&gt;, &lt;code&gt;experimental::basic_concurrent_channel&lt;/code&gt;のドキュメントをより詳細にした&lt;/li&gt;
&lt;li&gt;最近追加された機能をカバーするために、概要ドキュメントを再配置・拡張した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;local socketを通過するfile descriptorのC++11サンプルコードを追加&lt;/li&gt;
&lt;li&gt;非同期操作のコールバックベースAPIをラップするC++14サンプルコードを追加&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; Universal Windows Platform (UWP) でのコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/atomic/issues/55&#34; target=&#34;_blank&#34;&gt;GitHub #55&lt;/a&gt; 設定マクロ&lt;code&gt;BOOST_ATOMIC_NO_DARWIN_ULOCK&lt;/code&gt;を追加。このマクロはDarwinシステムでのコンパイルに影響を与え、wait/notify操作の&lt;code&gt;ulock&lt;/code&gt;ベースの実装を無効にする。これはApple App Storeの要件に準拠するために役立つ場合がある&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt;のテストに不足していたインクルードを追加&lt;/li&gt;
&lt;li&gt;失敗していたWebSocketハンドシェイクのレスポンスを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_posix&lt;/code&gt;と&lt;code&gt;file_win32&lt;/code&gt;の追記オープンモードを修正&lt;/li&gt;
&lt;li&gt;Windowsでの&lt;code&gt;append&lt;/code&gt;/&lt;code&gt;append_existing&lt;/code&gt;フラグ付きでファイルを開く操作を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_win32&lt;/code&gt;と&lt;code&gt;file_stdio&lt;/code&gt;のclang-cl UTF-8ハンドリングを修正&lt;/li&gt;
&lt;li&gt;drone CIでのARM64ビルドを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_base&lt;/code&gt;ドキュメントのリンクを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;append&lt;/code&gt;/&lt;code&gt;append_existing&lt;/code&gt;モードでファイルを開くテストを追加&lt;/li&gt;
&lt;li&gt;gcc 11, clang 12, msvc 14.3を含めるようCIを更新&lt;/li&gt;
&lt;li&gt;CMakeワークフローでの個別テストを追加&lt;/li&gt;
&lt;li&gt;完全な変更は&lt;a href=&#34;https://www.boost.org/doc/libs/release/libs/beast/doc/html/beast/release_notes.html&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LWG3545に対応し、&lt;code&gt;boost::pointer_traits&lt;/code&gt;をSFINAEフレンドリーにした (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;li&gt;個別のアロケータ特性にアクセスする&lt;code&gt;boost::allocator_traits&lt;/code&gt;を追加。この実装はC++03以降をサポートする (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;li&gt;C++03でほとんどのC++11アロケータモデルをサポートするよう、アロケータのアクセス特性を更新 (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/iterator.hpp&lt;/code&gt;は非推奨となり、将来のリリースで削除される予定。このヘッダは&lt;code&gt;boost::iterator&lt;/code&gt;を定義し、それは&lt;code&gt;&amp;lt;iterator&amp;gt;&lt;/code&gt;の&lt;code&gt;std::iterator&lt;/code&gt;と等価である。しかしこの機能はC++17で非推奨となっているため、ユーザーにはこれらの使用をやめることを勧める&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::core::verbose_terminate_handler&lt;/code&gt;を追加。これは、捕捉されなかった例外を&lt;code&gt;stderr&lt;/code&gt;に出力する、&lt;code&gt;std::set_terminate&lt;/code&gt;関数に渡すことを目的としたユーティリティ関数である&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#describe&#34; id=&#34;describe&#34;&gt;Describe&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_DESCRIBE_STRUCT&lt;/code&gt;での&lt;code&gt;union&lt;/code&gt;を有効にし、&lt;code&gt;std::is_union&amp;lt;T&amp;gt;&lt;/code&gt;をチェックするようサンプルコードを更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fmtlib&lt;/code&gt;のクラスフォーマッタを定義するサンプルコードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fmtlib&lt;/code&gt;のenumフォーマッタを定義するサンプルコードを追加&lt;/li&gt;
&lt;li&gt;メンバへのポインタを出力するサンプルコードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;v3の&lt;code&gt;path::replace_extension&lt;/code&gt;は、v4ではなくv3の&lt;code&gt;path::extension&lt;/code&gt;の定義に関して機能するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/223&#34; target=&#34;_blank&#34;&gt;GitHub #223&lt;/a&gt; &lt;code&gt;path&lt;/code&gt;または変換可能な文字列型を引数にするパスの追加と連結の演算子のコンパイルを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/224&#34; target=&#34;_blank&#34;&gt;GitHub #224&lt;/a&gt; &lt;code&gt;fdopendir&lt;/code&gt;と&lt;code&gt;O_NOFOLLOW&lt;/code&gt;をサポートするPOSIXシステムとWindowsでは、&lt;code&gt;remove_all&lt;/code&gt;が&lt;a href=&#34;https://www.cve.org/CVERecord?id=CVE-2022-21658&#34; target=&#34;_blank&#34;&gt;CVE-2022-21658&lt;/a&gt;から保護されるようになった。この脆弱性は、サードパーティのプロセスが&lt;code&gt;remove_all&lt;/code&gt;によって同時に処理されるディレクトリをディレクトリシンボリックリンクに置き換え、&lt;code&gt;remove_all&lt;/code&gt;がシンボリックリンクをたどり、シンボリックリンクを削除する代わりにリンクされたディレクトリ内のファイルを削除することを可能にする競合状態である&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/216&#34; target=&#34;_blank&#34;&gt;GitHub #216&lt;/a&gt; Windowsの&lt;code&gt;remove&lt;/code&gt;と&lt;code&gt;remove_all&lt;/code&gt;の実装で、OSでサポートされている場合に (Windows 10 1709以降)、ファイルの削除にPOSIXセマンティクスを使用する。POSIXセマンティクスがサポートされている場合、ファイルがまだ開かれていて使用中であっても、ファイルに削除マークがつけられてすぐに、ファイル名はファイルシステム名前空間から削除される。従来のWindowsセマンティクスでは、ファイルへの最後のファイルハンドルが閉じられるまで、ファイル名はファイルシステム名前空間に存在し続ける。これにより、削除のマークが付けられたファイルを開くことができ、同じ名前の新しいファイルが作成されなくなる&lt;/li&gt;
&lt;li&gt;Windowsにおいて、&lt;code&gt;remove&lt;/code&gt;と&lt;code&gt;remove_all&lt;/code&gt;で読み取り専用ディレクトリの削除をサポートした。読み取り専用の非ディレクトリファイルの削除サポートは、以前から追加されていた&lt;/li&gt;
&lt;li&gt;Windowsにおいて、&lt;code&gt;directory_iterator&lt;/code&gt;の内部実装を作り直し、最新のWindows APIを有効に活用できるようになった。これにより、シンボリックリンク処理中のパフォーマンスが向上する可能性がある&lt;/li&gt;
&lt;li&gt;Windowsにおいて、可能であれば内部のWinAPIの関数ポインタを早期に初期化し、Boost.Filesystemの操作をグローバルコンストラクタで呼び出せるようにした。これは、MSVC、GCC、Clang、およびそれらと互換性のあるコンパイラでのみサポートされる&lt;/li&gt;
&lt;li&gt;Windowsにおいて、開かれているファイルに対して&lt;code&gt;resize_file&lt;/code&gt;した際に、エラーにならないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/229&#34; target=&#34;_blank&#34;&gt;GitHub #229&lt;/a&gt; Androidの11.0 (APIバージョン30) より前での、&lt;code&gt;statx&lt;/code&gt;システムコールの使用を無効にした。そのシステムコールはseccompによってブラックリストに登録されており、実行時にプロセスが終了してしまう&lt;/li&gt;
&lt;li&gt;非推奨化 : &lt;code&gt;boost/filesystem/string_file.hpp&lt;/code&gt;は非推奨となり、将来のリリースから削除される。このヘッダはデフォルトでは&lt;code&gt;boost/filesystem.hpp&lt;/code&gt;に含まれなくなった。ユーザーは、この機能を自身で実装するか、他の実装に移行することを勧める&lt;/li&gt;
&lt;li&gt;非推奨化 : Windows CEのサポートは非推奨となり、将来のリリースから削除される。Windows CEは長年テストされておらず、機能していない可能性がある&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;大きな変更&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/977&#34; target=&#34;_blank&#34;&gt;GitHub #977&lt;/a&gt; 再スケーリングをデフォルトでオフにした。これにより、集合操作とバッファに関連する多くのバグが回避される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/923&#34; target=&#34;_blank&#34;&gt;GitHub #923&lt;/a&gt; cartesian point/geometry向けに&lt;code&gt;closest_points&lt;/code&gt;アルゴリズムを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/939&#34; target=&#34;_blank&#34;&gt;GitHub #939&lt;/a&gt; &lt;code&gt;closest_points&lt;/code&gt;アルゴリズムに他の座標系や剛体の組み合わせ (boxなど) を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/961&#34; target=&#34;_blank&#34;&gt;GitHub #961&lt;/a&gt; Webメルトカル図法 (Web Mercator projection) を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/966&#34; target=&#34;_blank&#34;&gt;GitHub #966&lt;/a&gt; &lt;code&gt;simplify&lt;/code&gt;で使用されるcartesian distanceをより効率的にした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/956&#34; target=&#34;_blank&#34;&gt;GitHub #956&lt;/a&gt; 誤ったclosureをともなう&lt;code&gt;simplify&lt;/code&gt;アルゴリズムの結果を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/962&#34; target=&#34;_blank&#34;&gt;GitHub #962&lt;/a&gt; load factorによるR-treeのデシリアライズ時の実行時エラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/971&#34; target=&#34;_blank&#34;&gt;GitHub #971&lt;/a&gt; ARMプラットフォームで&lt;code&gt;long double&lt;/code&gt;を使用した際に影響を受けるR-treeの挿入時間を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/936&#34; target=&#34;_blank&#34;&gt;GitHub #936&lt;/a&gt; 極 (pole) を含むpolygonのenvelopeを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/948&#34; target=&#34;_blank&#34;&gt;GitHub #948&lt;/a&gt; meridian segments付近のspherical/geometric envelopeを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/974&#34; target=&#34;_blank&#34;&gt;GitHub #974&lt;/a&gt; NaN座標の回転楕円体正規化ユーティリティ (spheroidal normalization utilities) を修正&lt;/li&gt;
&lt;li&gt;集合操作とバッファのさまざまなバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#integer&#34; id=&#34;integer&#34;&gt;Integer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/integer/issues/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt; 内部でビット演算を使用するよう&lt;code&gt;integer_log2&lt;/code&gt;の実装を最適化した。これにより、最新のCPUで利用可能なビット命令を使用できる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#io&#34; id=&#34;io&#34;&gt;IO&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ヌルストリームバッファである&lt;code&gt;boost::io::basic_nullbuf&lt;/code&gt;と、ヌル出力ストリームである&lt;code&gt;boost::basic_onullstream&lt;/code&gt;を追加 (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;counting_iterator&lt;/code&gt;に、GCCとClangおよびそれらと互換性のある一部のターゲットプラットフォームでサポートされる組み込みの128ビット整数型のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counting_iterator&lt;/code&gt;での、非推奨の暗黙のコピー代入演算子に関するGCCの警告を黙らせた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このライブラリのスタンドアロンモードを削除。スタンドアロンのJSONライブラリを使用したい場合は、&lt;a href=&#34;https://github.com/CPPAlliance/standalone-json.git&#34; target=&#34;_blank&#34;&gt;the C++ Alliance fork&lt;/a&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::error_code&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_codes&lt;/code&gt;に&lt;code&gt;boost::source_location&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;JSON Pointerのサポートを追加&lt;/li&gt;
&lt;li&gt;シリアライズ中に文字列を自然に伸長させるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#leaf&#34; id=&#34;leaf&#34;&gt;LEAF&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FreeRTOSとその他の組み込みプラットフォームをサポート&lt;/li&gt;
&lt;li&gt;診断情報を改善&lt;/li&gt;
&lt;li&gt;設定マクロを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__GNUC__&lt;/code&gt;環境下では、&lt;code&gt;BOOST_LEAF_CHECK&lt;/code&gt;はstatement expressionを使用するようにした&lt;/li&gt;
&lt;li&gt;シンボルのデマングルバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全体的な変更&lt;ul&gt;
&lt;li&gt;&lt;code&gt;text_file_backend&lt;/code&gt;において、ファイルローテーションが使用され、ログファイル名がファイルカウンタを使用する場合に、以前に書き込まれたログファイルに追記するためのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;file_collector&lt;/code&gt;のインタフェースを以下のように変更：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scan_for_files&lt;/code&gt;メンバ関数は、スキャン中に収集された情報を含む&lt;code&gt;scan_result&lt;/code&gt;構造体を返す&lt;/li&gt;
&lt;li&gt;パスがターゲットストレージディレクトリ内のファイルを参照しているかどうかをテストするために、&lt;code&gt;is_in_storage&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ユーザーの関数をストリーム出力式に挿入するために使用できる新たな&lt;code&gt;invoke_manip&lt;/code&gt;ストリームマニピュレータを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/179&#34; target=&#34;_blank&#34;&gt;GitHub #179&lt;/a&gt; ユーザーが&lt;code&gt;text_file_backend::scan_for_files&lt;/code&gt;を複数回呼び出し、2回目以降の呼び出しで新しいファイルが見つからない場合に、ファイルカウンタがゼロに設定される問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/log/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ranked indicesの&lt;code&gt;count&lt;/code&gt;操作の効率を、&lt;code&gt;O(log(n) + count)&lt;/code&gt;から&lt;code&gt;O(log(n))&lt;/code&gt;に改善 (Damian Sawicki氏による貢献)&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いくつかのプラットフォームでのコンパイル問題を修正 (例として、MinGW-w64やCygwinのGCC 11)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_USE_WINDOWS_H&lt;/code&gt;と&lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt;を使用した際の不足していたインクルードを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::nowide::stat_t&lt;/code&gt;をともなう&lt;code&gt;boost::nowide::stat&lt;/code&gt;を使用した際のサニティチェックを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt; &lt;code&gt;std::optional&amp;lt;bool&amp;gt;&lt;/code&gt;との相互運用がうまくいっていなかったところを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/92&#34; target=&#34;_blank&#34;&gt;GitHub #92&lt;/a&gt; &lt;code&gt;BOOST_NO_IOSTREAM&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;未定義動作を避けるためにaligned storageに&lt;code&gt;char&lt;/code&gt;の代わりに&lt;code&gt;unsigned char&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;未定義動作を避けるために、placement newでCV修飾された&lt;code&gt;value_type&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.14.0&lt;/li&gt;
&lt;li&gt;LoongArchの検出を追加 (Zhang Na氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#qvm&#34; id=&#34;qvm&#34;&gt;QVM&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17の&lt;code&gt;constexpr&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;シングルヘッダの配布を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#smart-pointers&#34; id=&#34;smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::allocate_unique&lt;/code&gt;の結果からアロケータへのポインタを取得するために、&lt;code&gt;boost::get_allocator_pointer&lt;/code&gt;を追加 (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;throw_exception_from_error&lt;/code&gt;に&lt;code&gt;boost::source_location&lt;/code&gt;パラメータを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;throw_exception_from_error&lt;/code&gt;に、&lt;code&gt;errc::errc_t&lt;/code&gt;, &lt;code&gt;std::error_code&lt;/code&gt;, &lt;code&gt;std::errc&lt;/code&gt;, &lt;code&gt;std::exception_ptr&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result &amp;lt;T&amp;gt; :: value&lt;/code&gt;は、デフォルトの引数を介して&lt;code&gt;BOOST_CURRENT_LOCATION&lt;/code&gt;を&lt;code&gt;throw_exception_from_error&lt;/code&gt;に自動的に供給するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;errc::make_error_code&lt;/code&gt;に、source locationを引数にとるオーバーロードを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#throw-exception&#34; id=&#34;throw-exception&#34;&gt;ThrowException&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Exceptionを使用しないプログラムのために、&lt;code&gt;BOOST_THROW_EXCEPTION&lt;/code&gt;の軽量な代替手段である&lt;code&gt;boost::throw_with_location&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;すべてのコンテナが、異種混合 (heterogeneous) の&lt;code&gt;count&lt;/code&gt;、&lt;code&gt;equal_range&lt;/code&gt;、&lt;code&gt;find&lt;/code&gt;を持つよう更新した&lt;/li&gt;
&lt;li&gt;すべてのコンテナに&lt;code&gt;contains&lt;/code&gt;メンバ関数を実装&lt;/li&gt;
&lt;li&gt;すべてのコンテナで使用できる&lt;code&gt;erase_if&lt;/code&gt;を実装&lt;/li&gt;
&lt;li&gt;すべてのコンテナが、異種混合の&lt;code&gt;erase&lt;/code&gt;と&lt;code&gt;extract&lt;/code&gt;を持つよう更新した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reserve&lt;/code&gt;が早期にアロケートするよう振る舞いを修正&lt;/li&gt;
&lt;li&gt;テストスイートのさまざまな警告を修正&lt;/li&gt;
&lt;li&gt;内部で&lt;code&gt;boost::allocator_traits&lt;/code&gt;を使用するよう更新&lt;/li&gt;
&lt;li&gt;Fibonacci hashingに切り替え&lt;/li&gt;
&lt;li&gt;ドキュメントをQuickBookからAsciiDocに置き換え&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;monostate&lt;/code&gt;用の&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#wave&#34; id=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WaveのビルドにC++11を要求するようになった&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/135&#34; target=&#34;_blank&#34;&gt;GitHub #135&lt;/a&gt; C++20で非推奨になった配列の添字演算子中のカンマ演算子の使用を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/137&#34; target=&#34;_blank&#34;&gt;GitHub #137&lt;/a&gt; C++11以降のモードでEOF前の改行を要求しないよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/138&#34; target=&#34;_blank&#34;&gt;GitHub #138&lt;/a&gt; 空のifdefブロックが空白を入れない限り行ディレクティブを発行しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/143&#34; target=&#34;_blank&#34;&gt;GitHub #143&lt;/a&gt; &lt;code&gt;__has_include()&lt;/code&gt;のあとにトークン (空白含む) があるとパースに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/145&#34; target=&#34;_blank&#34;&gt;GitHub #145&lt;/a&gt; &lt;code&gt;reset_version()&lt;/code&gt;内でのsanitizerのエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/wave/issues/147&#34; target=&#34;_blank&#34;&gt;GitHub #147&lt;/a&gt; 異なる列挙型同士のビット演算がC++20で非推奨になったことによる警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_79_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2 version 4.8.2をリリース&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>