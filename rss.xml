<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2021-03-23T06:12:17.475963</updated>
  <id>3f812526-c351-44ec-a70c-6aecfbf3c8a5</id>

  
    <entry>
      <title>Boost 1.76.0リリースノート -- 1.76.0 : Nowideを追加 (close #548)</title>
      <link href="https://boostjp.github.io/document/version/1_76_0.html"/>
      <id>bd86a56a12eb8d222688207f17704c69521ff3e9:document/version/1_76_0.md</id>
      <updated>2021-03-23T15:10:16+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.76.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_76_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_76_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34;&gt;Json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/2139&#34; target=&#34;_blank&#34;&gt;GitHub #2139&lt;/a&gt; &lt;code&gt;test::stream&lt;/code&gt;にexecutorのrebindを追加&lt;/li&gt;
&lt;li&gt;WebSocket async shutdown内での未使用変数の警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2124&#34; target=&#34;_blank&#34;&gt;GitHub #2124&lt;/a&gt; Beastを使用するために浮動小数点サポートを要求しないようにした&lt;/li&gt;
&lt;li&gt;すべての操作にcommon buffers typeを使用するようにしたことにより、websocketyのコンパイルされたコードのサイズを削減した&lt;/li&gt;
&lt;li&gt;HTTPパーサーの誤った使い方の検出を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2140&#34; target=&#34;_blank&#34;&gt;GitHub #2140&lt;/a&gt; ライブラリのメタデータにcxxstdタグを追加&lt;/li&gt;
&lt;li&gt;Drone CIに移行&lt;/li&gt;
&lt;li&gt;小さなドキュメントフォーマットの改善&lt;/li&gt;
&lt;li&gt;in-treeビルドでの要求されるBoost.ThreadライブラリをCMLが見つけられるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::bind&lt;/code&gt;でC++11標準のプレースホルダーを使用できるようサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::apply&lt;/code&gt;で可変引数テンプレートと完全転送を使用できるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変換可能なreference wrapper間の暗黙変換を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/cmath.hpp&lt;/code&gt;を追加。&lt;code&gt;&amp;lt;cmath&amp;gt;&lt;/code&gt;からの移植可能な浮動小数点数の分類関数の実装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/bit.hpp&lt;/code&gt;を追加。C++20標準ヘッダ&lt;code&gt;&amp;lt;bit&amp;gt;&lt;/code&gt;の移植可能な実装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_EQ&lt;/code&gt;と&lt;code&gt;BOOST_TEST_NE&lt;/code&gt;でのC++20の文字型を修正&lt;/li&gt;
&lt;li&gt;アロケータアクセスのユーティリティを見直した (VS2013をサポートし、&lt;code&gt;allocator_traits&lt;/code&gt;を使用したワークアラウンドがない)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++20の&lt;code&gt;import&lt;/code&gt;キーワードとの衝突を避けるために、&lt;code&gt;boost::dll::import&lt;/code&gt;を&lt;code&gt;boost::dll::import_symbol&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;FAQを含むドキュメントを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 次のリリースでGCC 5のサポートを落とす。また、要求するC++の最低バージョンをC++11からC++14に変更する予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34; id=&#34;json&#34;&gt;Json&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/481&#34; target=&#34;_blank&#34;&gt;GitHub #481&lt;/a&gt; &lt;code&gt;value_from&lt;/code&gt;の実装をリファクタ。現在は、ユーザーカスタマイゼーションは、ライブラリが提供するオーバーロードよりも優先される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/484&#34; target=&#34;_blank&#34;&gt;GitHub #484&lt;/a&gt; いくつかの浮動小数点数の不正確なパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/485&#34; target=&#34;_blank&#34;&gt;GitHub #485&lt;/a&gt; Boostといっしょに使用した場合の、スタンドアロンモードでのリンクエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/pull/497&#34; target=&#34;_blank&#34;&gt;GitHub #497&lt;/a&gt; GCC 4.8向けのBoost.Buildビルドを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/37&#34; target=&#34;_blank&#34;&gt;GitHub #37&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; Boost.Mathへの依存をなくした (Peter Dimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; CIとカバレッジと修正 (&#34;The C++ Alliance&#34;のSam Darwin氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++03のサポートを削除した。このライブラリを使用するにはC++11以降が必要となる&lt;/li&gt;
&lt;li&gt;Z-testを追加&lt;/li&gt;
&lt;li&gt;統計関数であるunivariate (単変量) とbivariate (二変量) に実行ポリシーのサポートを追加 (C++17と&lt;code&gt;&amp;lt;execution&amp;gt;&lt;/code&gt;が必要となる)&lt;/li&gt;
&lt;li&gt;CIテストに対する大きな更新・改善&lt;/li&gt;
&lt;li&gt;bivariate (二変量) 統計に整数サポートを追加&lt;/li&gt;
&lt;li&gt;T-Testに整数サポートを追加&lt;/li&gt;
&lt;li&gt;Linear regression (線形回帰) に整数サポートを追加&lt;/li&gt;
&lt;li&gt;終了点 (endpoints) でのbeta distribution (ベータ分布) のPDFを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/github.com/boostorg/math/issues/396&#34;&gt;GitHub #396&lt;/a&gt; 特定の多倍長ケースでStirling&#39;s approximation (スターリング近似) の使用を正しくした&lt;/li&gt;
&lt;li&gt;Clangで&lt;code&gt;-Wimplicit-int-float-conversion&lt;/code&gt;オプションを除外&lt;/li&gt;
&lt;li&gt;quaternion/octonionでのいくつかのconstexpr問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh_sinh&lt;/code&gt;微分での小さなパフォーマンス問題を修正&lt;/li&gt;
&lt;li&gt;hypergeometric functions (超幾何関数) 内部のスケーリングを更新し、多倍長型の64ビット (long long) 指数部の使用を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 大規模なリファクタリングとコードのシンプル化により、C++11が絶対の要件となった&lt;/li&gt;
&lt;li&gt;例外フリーな環境で使用できるようにするために、&lt;code&gt;BOOST_TRY&lt;/code&gt;/&lt;code&gt;CATCH&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/277&#34; target=&#34;_blank&#34;&gt;GitHub #277&lt;/a&gt; powのコーナーケースを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/257&#34; target=&#34;_blank&#34;&gt;GitHub #257&lt;/a&gt; lsbとmsbのドキュメントと一致するよう、送出される例外の型を正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/278&#34; target=&#34;_blank&#34;&gt;GitHub #278&lt;/a&gt; 関係しているが異なる型 (例としてアロケータ型) の間で、ムーブと演算を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;seek&lt;/code&gt;関数もしくは&lt;code&gt;sync&lt;/code&gt;関数が使用され (Windowsなどで) 改行が変換された場合に、text file streamの文字が無視される問題を修正&lt;/li&gt;
&lt;li&gt;閉じられたfile streamを (&lt;code&gt;open&lt;/code&gt;によって) 再利用する際の、潜在的な「解放後の使用 (use-after-free)」バグを修正&lt;/li&gt;
&lt;li&gt;sourceがput-back character (&lt;code&gt;istream::unget()&lt;/code&gt;でストリームに戻す文字) をもっている、もしくはunbuffered modeが設定されているオブジェクトへムーブもしくはswapされたfile streamオブジェクトを使用した場合に、不正メモリアクセスが起きる可能性があった問題を修正&lt;/li&gt;
&lt;li&gt;基地の問題 : テキストファイルの読み取り速度が低下する。バイナリファイルと書き込みには影響しない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アナウンス&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 繰り返してきたこのアナウンスをはじめてから1年 (3回のBoostメジャーリリース) が経ち、今回がv2.2ブランチの最初のリリースとなる。このブランチには、Boost 1.75以前に含まれたOutcome v2.1に対する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;VS2019.8でOucomeがコンパイルできなかったため、コルーチンを有効にする方法を変更した&lt;/li&gt;
&lt;li&gt;C++20の場合、コンパイラ固有のマークアップの代わりに&lt;code&gt;[[likely]]&lt;/code&gt;属性を使用するようにして、TRYが成功・失敗する可能性が高いことを示すようにした&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 以前まで&lt;code&gt;spare_storage(const basic_result|basic_outcome *) noexcep&lt;/code&gt;の値は&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;に伝播されなかった。これによって、エラー結果を構築するためにキャプチャされたスタックバックトレースがすべて&lt;code&gt;TRY&lt;/code&gt;ごとに落とされていた。今回の修正では、&lt;code&gt;success_type&amp;lt;T&amp;gt;&lt;/code&gt;と&lt;code&gt;failure_type&amp;lt;T&amp;gt;&lt;/code&gt;、および&lt;code&gt;auto success(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;と&lt;code&gt;auto failure(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;にオプション&lt;code&gt;spare_storage&lt;/code&gt;を追加したことにより、この問題を修正する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;Boost.Outcomeが、&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;が定義された状態でもコンパイルできるようになったはず。Boost.ExceptionのメンテなであるEmilの協力によって、Outcomeにこの修正が行われた。Boost.Outcomeは、C++例外がグローバルに無効にされた状態でもコンパイルできるべきである。ただし、その状態では&lt;code&gt;boost::exception_ptr&lt;/code&gt;は使用できない&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/ned14/outcome/issues/244&#34; target=&#34;_blank&#34;&gt;GitHub #244&lt;/a&gt; このライブラリの初期リリースから、特定のコーナーケースコードで&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;が壊れていたため、TRYの動作を大幅に変える必要があってショックを受けた。詳細は&lt;a href=&#34;https://boostorg.github.io/outcome/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;テンプレートコンストラクタのSFINAE式で、型のリフレクションに&lt;code&gt;const&lt;/code&gt;が欠落している問題を修正。標準ライブラリの実装がLWG3050の修正に対応していない環境であっても、&lt;code&gt;std::optional&amp;lt;std::chrono::duration&amp;lt;???&amp;gt;&amp;gt;&lt;/code&gt;フィールドをもつ集成体のリフレクションが正しく動作するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; 比較関数を&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; ドキュメントの多くの誤字を修正 (Phil Miller氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PollyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/poly_collection/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; &lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=95888&#34; target=&#34;_blank&#34;&gt;GCCのバグ&lt;/a&gt;に対するワークアラウンドを導入。GCCのバージョン9.3から10.2に影響する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バージョン1.13&lt;/li&gt;
&lt;li&gt;事前定義マクロ&lt;code&gt;ARCH_PPC_64&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ARCH_WORD_BITS*&lt;/code&gt;の再定義による警告・エラーを修正&lt;/li&gt;
&lt;li&gt;Elbrus 2000アーキテクチャを検出する事前定義マクロ&lt;code&gt;ARCH_E2K&lt;/code&gt;を追加 (Konstantin Ivlev氏に感謝)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10.xを超える最近のC++バージョンを扱えない問題を修正&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バージョン1.12&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;OpenBSD環境でendian.hヘッダを使用するよう変更 (Brad Smith氏に感謝)&lt;/li&gt;
&lt;li&gt;9を超える最近のstdcxxバージョンを扱えない問題を修正&lt;/li&gt;
&lt;li&gt;sub-BSD OSのヘッダを直接インクルードすることによる再定義警告を修正&lt;/li&gt;
&lt;li&gt;全ヘッダをインクルードするCIテストを追加&lt;/li&gt;
&lt;li&gt;FreeBSDでのClang or GCCのCIテストを追加&lt;/li&gt;
&lt;li&gt;アーキテクチャのワードサイズを検出するための&lt;code&gt;WORD_BITS&lt;/code&gt;事前定義マクロ集合を追加。これはMikhail Komarov氏によって提出された初期実装に触発されたもの&lt;/li&gt;
&lt;li&gt;Cygwin 32 or 64のCIテストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#property-tree&#34; id=&#34;property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Property Treeは新たなメンテナを得た&lt;/li&gt;
&lt;li&gt;非推奨となっているBoost.Bind機能の使用を修正&lt;/li&gt;
&lt;li&gt;Wikipediaへのリンクを修正&lt;/li&gt;
&lt;li&gt;GCCの警告を修正するために&lt;code&gt;BOOST_OVERRIDE&lt;/code&gt;を使用&lt;/li&gt;
&lt;li&gt;CIテストを拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34; id=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Regexライブラリは、C++03モードを除いてヘッダオンリーとなった&lt;/li&gt;
&lt;li&gt;C++03サポートを非推奨化&lt;/li&gt;
&lt;li&gt;このライブラリは、Boostのほかのライブラリが存在しなくてもスタンドアロンで使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/102&#34; target=&#34;_blank&#34;&gt;GitHub #102&lt;/a&gt; ClangでのC++11未満でのビルドサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; 「シグナルハンドラ内でstacktraceを使用してはならない」という警告をより大きくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34; id=&#34;type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studioのマネージドプロジェクト向けの修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ダブルバッファを使用するケースの生成されるコードを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.4.1&lt;ul&gt;
&lt;li&gt;macOSのデフォルトエンジンコンパイラ向けに、小さな間違いを修正するパッチを適用&lt;ul&gt;
&lt;li&gt;macOS/XCode向けのエンジンビルドのデフォルトをClangからGCCに修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0, 11.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.76.0リリースノート -- 1.76.0 : 新ライブラリを削除</title>
      <link href="https://boostjp.github.io/document/version/1_76_0.html"/>
      <id>298fe18479c626a66269e192e08dc1acb97f3823:document/version/1_76_0.md</id>
      <updated>2021-03-22T16:12:13+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.76.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_76_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_76_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34;&gt;Json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/2139&#34; target=&#34;_blank&#34;&gt;GitHub #2139&lt;/a&gt; &lt;code&gt;test::stream&lt;/code&gt;にexecutorのrebindを追加&lt;/li&gt;
&lt;li&gt;WebSocket async shutdown内での未使用変数の警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2124&#34; target=&#34;_blank&#34;&gt;GitHub #2124&lt;/a&gt; Beastを使用するために浮動小数点サポートを要求しないようにした&lt;/li&gt;
&lt;li&gt;すべての操作にcommon buffers typeを使用するようにしたことにより、websocketyのコンパイルされたコードのサイズを削減した&lt;/li&gt;
&lt;li&gt;HTTPパーサーの誤った使い方の検出を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2140&#34; target=&#34;_blank&#34;&gt;GitHub #2140&lt;/a&gt; ライブラリのメタデータにcxxstdタグを追加&lt;/li&gt;
&lt;li&gt;Drone CIに移行&lt;/li&gt;
&lt;li&gt;小さなドキュメントフォーマットの改善&lt;/li&gt;
&lt;li&gt;in-treeビルドでの要求されるBoost.ThreadライブラリをCMLが見つけられるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::bind&lt;/code&gt;でC++11標準のプレースホルダーを使用できるようサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::apply&lt;/code&gt;で可変引数テンプレートと完全転送を使用できるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変換可能なreference wrapper間の暗黙変換を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/cmath.hpp&lt;/code&gt;を追加。&lt;code&gt;&amp;lt;cmath&amp;gt;&lt;/code&gt;からの移植可能な浮動小数点数の分類関数の実装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/bit.hpp&lt;/code&gt;を追加。C++20標準ヘッダ&lt;code&gt;&amp;lt;bit&amp;gt;&lt;/code&gt;の移植可能な実装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_EQ&lt;/code&gt;と&lt;code&gt;BOOST_TEST_NE&lt;/code&gt;でのC++20の文字型を修正&lt;/li&gt;
&lt;li&gt;アロケータアクセスのユーティリティを見直した (VS2013をサポートし、&lt;code&gt;allocator_traits&lt;/code&gt;を使用したワークアラウンドがない)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++20の&lt;code&gt;import&lt;/code&gt;キーワードとの衝突を避けるために、&lt;code&gt;boost::dll::import&lt;/code&gt;を&lt;code&gt;boost::dll::import_symbol&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;FAQを含むドキュメントを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 次のリリースでGCC 5のサポートを落とす。また、要求するC++の最低バージョンをC++11からC++14に変更する予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34; id=&#34;json&#34;&gt;Json&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/481&#34; target=&#34;_blank&#34;&gt;GitHub #481&lt;/a&gt; &lt;code&gt;value_from&lt;/code&gt;の実装をリファクタ。現在は、ユーザーカスタマイゼーションは、ライブラリが提供するオーバーロードよりも優先される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/484&#34; target=&#34;_blank&#34;&gt;GitHub #484&lt;/a&gt; いくつかの浮動小数点数の不正確なパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/485&#34; target=&#34;_blank&#34;&gt;GitHub #485&lt;/a&gt; Boostといっしょに使用した場合の、スタンドアロンモードでのリンクエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/pull/497&#34; target=&#34;_blank&#34;&gt;GitHub #497&lt;/a&gt; GCC 4.8向けのBoost.Buildビルドを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/37&#34; target=&#34;_blank&#34;&gt;GitHub #37&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; Boost.Mathへの依存をなくした (Peter Dimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; CIとカバレッジと修正 (&#34;The C++ Alliance&#34;のSam Darwin氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++03のサポートを削除した。このライブラリを使用するにはC++11以降が必要となる&lt;/li&gt;
&lt;li&gt;Z-testを追加&lt;/li&gt;
&lt;li&gt;統計関数であるunivariate (単変量) とbivariate (二変量) に実行ポリシーのサポートを追加 (C++17と&lt;code&gt;&amp;lt;execution&amp;gt;&lt;/code&gt;が必要となる)&lt;/li&gt;
&lt;li&gt;CIテストに対する大きな更新・改善&lt;/li&gt;
&lt;li&gt;bivariate (二変量) 統計に整数サポートを追加&lt;/li&gt;
&lt;li&gt;T-Testに整数サポートを追加&lt;/li&gt;
&lt;li&gt;Linear regression (線形回帰) に整数サポートを追加&lt;/li&gt;
&lt;li&gt;終了点 (endpoints) でのbeta distribution (ベータ分布) のPDFを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/github.com/boostorg/math/issues/396&#34;&gt;GitHub #396&lt;/a&gt; 特定の多倍長ケースでStirling&#39;s approximation (スターリング近似) の使用を正しくした&lt;/li&gt;
&lt;li&gt;Clangで&lt;code&gt;-Wimplicit-int-float-conversion&lt;/code&gt;オプションを除外&lt;/li&gt;
&lt;li&gt;quaternion/octonionでのいくつかのconstexpr問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh_sinh&lt;/code&gt;微分での小さなパフォーマンス問題を修正&lt;/li&gt;
&lt;li&gt;hypergeometric functions (超幾何関数) 内部のスケーリングを更新し、多倍長型の64ビット (long long) 指数部の使用を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 大規模なリファクタリングとコードのシンプル化により、C++11が絶対の要件となった&lt;/li&gt;
&lt;li&gt;例外フリーな環境で使用できるようにするために、&lt;code&gt;BOOST_TRY&lt;/code&gt;/&lt;code&gt;CATCH&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/277&#34; target=&#34;_blank&#34;&gt;GitHub #277&lt;/a&gt; powのコーナーケースを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/257&#34; target=&#34;_blank&#34;&gt;GitHub #257&lt;/a&gt; lsbとmsbのドキュメントと一致するよう、送出される例外の型を正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/278&#34; target=&#34;_blank&#34;&gt;GitHub #278&lt;/a&gt; 関係しているが異なる型 (例としてアロケータ型) の間で、ムーブと演算を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アナウンス&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 繰り返してきたこのアナウンスをはじめてから1年 (3回のBoostメジャーリリース) が経ち、今回がv2.2ブランチの最初のリリースとなる。このブランチには、Boost 1.75以前に含まれたOutcome v2.1に対する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;VS2019.8でOucomeがコンパイルできなかったため、コルーチンを有効にする方法を変更した&lt;/li&gt;
&lt;li&gt;C++20の場合、コンパイラ固有のマークアップの代わりに&lt;code&gt;[[likely]]&lt;/code&gt;属性を使用するようにして、TRYが成功・失敗する可能性が高いことを示すようにした&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 以前まで&lt;code&gt;spare_storage(const basic_result|basic_outcome *) noexcep&lt;/code&gt;の値は&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;に伝播されなかった。これによって、エラー結果を構築するためにキャプチャされたスタックバックトレースがすべて&lt;code&gt;TRY&lt;/code&gt;ごとに落とされていた。今回の修正では、&lt;code&gt;success_type&amp;lt;T&amp;gt;&lt;/code&gt;と&lt;code&gt;failure_type&amp;lt;T&amp;gt;&lt;/code&gt;、および&lt;code&gt;auto success(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;と&lt;code&gt;auto failure(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;にオプション&lt;code&gt;spare_storage&lt;/code&gt;を追加したことにより、この問題を修正する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;Boost.Outcomeが、&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;が定義された状態でもコンパイルできるようになったはず。Boost.ExceptionのメンテなであるEmilの協力によって、Outcomeにこの修正が行われた。Boost.Outcomeは、C++例外がグローバルに無効にされた状態でもコンパイルできるべきである。ただし、その状態では&lt;code&gt;boost::exception_ptr&lt;/code&gt;は使用できない&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/ned14/outcome/issues/244&#34; target=&#34;_blank&#34;&gt;GitHub #244&lt;/a&gt; このライブラリの初期リリースから、特定のコーナーケースコードで&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;が壊れていたため、TRYの動作を大幅に変える必要があってショックを受けた。詳細は&lt;a href=&#34;https://boostorg.github.io/outcome/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;テンプレートコンストラクタのSFINAE式で、型のリフレクションに&lt;code&gt;const&lt;/code&gt;が欠落している問題を修正。標準ライブラリの実装がLWG3050の修正に対応していない環境であっても、&lt;code&gt;std::optional&amp;lt;std::chrono::duration&amp;lt;???&amp;gt;&amp;gt;&lt;/code&gt;フィールドをもつ集成体のリフレクションが正しく動作するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; 比較関数を&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; ドキュメントの多くの誤字を修正 (Phil Miller氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PollyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/poly_collection/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; &lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=95888&#34; target=&#34;_blank&#34;&gt;GCCのバグ&lt;/a&gt;に対するワークアラウンドを導入。GCCのバージョン9.3から10.2に影響する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バージョン1.13&lt;/li&gt;
&lt;li&gt;事前定義マクロ&lt;code&gt;ARCH_PPC_64&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ARCH_WORD_BITS*&lt;/code&gt;の再定義による警告・エラーを修正&lt;/li&gt;
&lt;li&gt;Elbrus 2000アーキテクチャを検出する事前定義マクロ&lt;code&gt;ARCH_E2K&lt;/code&gt;を追加 (Konstantin Ivlev氏に感謝)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10.xを超える最近のC++バージョンを扱えない問題を修正&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バージョン1.12&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;OpenBSD環境でendian.hヘッダを使用するよう変更 (Brad Smith氏に感謝)&lt;/li&gt;
&lt;li&gt;9を超える最近のstdcxxバージョンを扱えない問題を修正&lt;/li&gt;
&lt;li&gt;sub-BSD OSのヘッダを直接インクルードすることによる再定義警告を修正&lt;/li&gt;
&lt;li&gt;全ヘッダをインクルードするCIテストを追加&lt;/li&gt;
&lt;li&gt;FreeBSDでのClang or GCCのCIテストを追加&lt;/li&gt;
&lt;li&gt;アーキテクチャのワードサイズを検出するための&lt;code&gt;WORD_BITS&lt;/code&gt;事前定義マクロ集合を追加。これはMikhail Komarov氏によって提出された初期実装に触発されたもの&lt;/li&gt;
&lt;li&gt;Cygwin 32 or 64のCIテストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#property-tree&#34; id=&#34;property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Property Treeは新たなメンテナを得た&lt;/li&gt;
&lt;li&gt;非推奨となっているBoost.Bind機能の使用を修正&lt;/li&gt;
&lt;li&gt;Wikipediaへのリンクを修正&lt;/li&gt;
&lt;li&gt;GCCの警告を修正するために&lt;code&gt;BOOST_OVERRIDE&lt;/code&gt;を使用&lt;/li&gt;
&lt;li&gt;CIテストを拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34; id=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Regexライブラリは、C++03モードを除いてヘッダオンリーとなった&lt;/li&gt;
&lt;li&gt;C++03サポートを非推奨化&lt;/li&gt;
&lt;li&gt;このライブラリは、Boostのほかのライブラリが存在しなくてもスタンドアロンで使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/102&#34; target=&#34;_blank&#34;&gt;GitHub #102&lt;/a&gt; ClangでのC++11未満でのビルドサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; 「シグナルハンドラ内でstacktraceを使用してはならない」という警告をより大きくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34; id=&#34;type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studioのマネージドプロジェクト向けの修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ダブルバッファを使用するケースの生成されるコードを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.4.1&lt;ul&gt;
&lt;li&gt;macOSのデフォルトエンジンコンパイラ向けに、小さな間違いを修正するパッチを適用&lt;ul&gt;
&lt;li&gt;macOS/XCode向けのエンジンビルドのデフォルトをClangからGCCに修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0, 11.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.76.0リリースノート -- 1.76.0 : Coreを追加 (close #547)</title>
      <link href="https://boostjp.github.io/document/version/1_76_0.html"/>
      <id>81ad09cc7b98c19106afb40c750e00c7bd390e53:document/version/1_76_0.md</id>
      <updated>2021-03-22T16:11:55+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.76.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_76_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_76_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34;&gt;Json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/2139&#34; target=&#34;_blank&#34;&gt;GitHub #2139&lt;/a&gt; &lt;code&gt;test::stream&lt;/code&gt;にexecutorのrebindを追加&lt;/li&gt;
&lt;li&gt;WebSocket async shutdown内での未使用変数の警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2124&#34; target=&#34;_blank&#34;&gt;GitHub #2124&lt;/a&gt; Beastを使用するために浮動小数点サポートを要求しないようにした&lt;/li&gt;
&lt;li&gt;すべての操作にcommon buffers typeを使用するようにしたことにより、websocketyのコンパイルされたコードのサイズを削減した&lt;/li&gt;
&lt;li&gt;HTTPパーサーの誤った使い方の検出を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2140&#34; target=&#34;_blank&#34;&gt;GitHub #2140&lt;/a&gt; ライブラリのメタデータにcxxstdタグを追加&lt;/li&gt;
&lt;li&gt;Drone CIに移行&lt;/li&gt;
&lt;li&gt;小さなドキュメントフォーマットの改善&lt;/li&gt;
&lt;li&gt;in-treeビルドでの要求されるBoost.ThreadライブラリをCMLが見つけられるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::bind&lt;/code&gt;でC++11標準のプレースホルダーを使用できるようサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::apply&lt;/code&gt;で可変引数テンプレートと完全転送を使用できるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;変換可能なreference wrapper間の暗黙変換を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/cmath.hpp&lt;/code&gt;を追加。&lt;code&gt;&amp;lt;cmath&amp;gt;&lt;/code&gt;からの移植可能な浮動小数点数の分類関数の実装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/core/bit.hpp&lt;/code&gt;を追加。C++20標準ヘッダ&lt;code&gt;&amp;lt;bit&amp;gt;&lt;/code&gt;の移植可能な実装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST_EQ&lt;/code&gt;と&lt;code&gt;BOOST_TEST_NE&lt;/code&gt;でのC++20の文字型を修正&lt;/li&gt;
&lt;li&gt;アロケータアクセスのユーティリティを見直した (VS2013をサポートし、&lt;code&gt;allocator_traits&lt;/code&gt;を使用したワークアラウンドがない)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++20の&lt;code&gt;import&lt;/code&gt;キーワードとの衝突を避けるために、&lt;code&gt;boost::dll::import&lt;/code&gt;を&lt;code&gt;boost::dll::import_symbol&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;FAQを含むドキュメントを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 次のリリースでGCC 5のサポートを落とす。また、要求するC++の最低バージョンをC++11からC++14に変更する予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34; id=&#34;json&#34;&gt;Json&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/481&#34; target=&#34;_blank&#34;&gt;GitHub #481&lt;/a&gt; &lt;code&gt;value_from&lt;/code&gt;の実装をリファクタ。現在は、ユーザーカスタマイゼーションは、ライブラリが提供するオーバーロードよりも優先される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/484&#34; target=&#34;_blank&#34;&gt;GitHub #484&lt;/a&gt; いくつかの浮動小数点数の不正確なパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/485&#34; target=&#34;_blank&#34;&gt;GitHub #485&lt;/a&gt; Boostといっしょに使用した場合の、スタンドアロンモードでのリンクエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/pull/497&#34; target=&#34;_blank&#34;&gt;GitHub #497&lt;/a&gt; GCC 4.8向けのBoost.Buildビルドを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/37&#34; target=&#34;_blank&#34;&gt;GitHub #37&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; Boost.Mathへの依存をなくした (Peter Dimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; CIとカバレッジと修正 (&#34;The C++ Alliance&#34;のSam Darwin氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++03のサポートを削除した。このライブラリを使用するにはC++11以降が必要となる&lt;/li&gt;
&lt;li&gt;Z-testを追加&lt;/li&gt;
&lt;li&gt;統計関数であるunivariate (単変量) とbivariate (二変量) に実行ポリシーのサポートを追加 (C++17と&lt;code&gt;&amp;lt;execution&amp;gt;&lt;/code&gt;が必要となる)&lt;/li&gt;
&lt;li&gt;CIテストに対する大きな更新・改善&lt;/li&gt;
&lt;li&gt;bivariate (二変量) 統計に整数サポートを追加&lt;/li&gt;
&lt;li&gt;T-Testに整数サポートを追加&lt;/li&gt;
&lt;li&gt;Linear regression (線形回帰) に整数サポートを追加&lt;/li&gt;
&lt;li&gt;終了点 (endpoints) でのbeta distribution (ベータ分布) のPDFを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/github.com/boostorg/math/issues/396&#34;&gt;GitHub #396&lt;/a&gt; 特定の多倍長ケースでStirling&#39;s approximation (スターリング近似) の使用を正しくした&lt;/li&gt;
&lt;li&gt;Clangで&lt;code&gt;-Wimplicit-int-float-conversion&lt;/code&gt;オプションを除外&lt;/li&gt;
&lt;li&gt;quaternion/octonionでのいくつかのconstexpr問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh_sinh&lt;/code&gt;微分での小さなパフォーマンス問題を修正&lt;/li&gt;
&lt;li&gt;hypergeometric functions (超幾何関数) 内部のスケーリングを更新し、多倍長型の64ビット (long long) 指数部の使用を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 大規模なリファクタリングとコードのシンプル化により、C++11が絶対の要件となった&lt;/li&gt;
&lt;li&gt;例外フリーな環境で使用できるようにするために、&lt;code&gt;BOOST_TRY&lt;/code&gt;/&lt;code&gt;CATCH&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/277&#34; target=&#34;_blank&#34;&gt;GitHub #277&lt;/a&gt; powのコーナーケースを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/257&#34; target=&#34;_blank&#34;&gt;GitHub #257&lt;/a&gt; lsbとmsbのドキュメントと一致するよう、送出される例外の型を正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/278&#34; target=&#34;_blank&#34;&gt;GitHub #278&lt;/a&gt; 関係しているが異なる型 (例としてアロケータ型) の間で、ムーブと演算を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アナウンス&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 繰り返してきたこのアナウンスをはじめてから1年 (3回のBoostメジャーリリース) が経ち、今回がv2.2ブランチの最初のリリースとなる。このブランチには、Boost 1.75以前に含まれたOutcome v2.1に対する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;VS2019.8でOucomeがコンパイルできなかったため、コルーチンを有効にする方法を変更した&lt;/li&gt;
&lt;li&gt;C++20の場合、コンパイラ固有のマークアップの代わりに&lt;code&gt;[[likely]]&lt;/code&gt;属性を使用するようにして、TRYが成功・失敗する可能性が高いことを示すようにした&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 以前まで&lt;code&gt;spare_storage(const basic_result|basic_outcome *) noexcep&lt;/code&gt;の値は&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;に伝播されなかった。これによって、エラー結果を構築するためにキャプチャされたスタックバックトレースがすべて&lt;code&gt;TRY&lt;/code&gt;ごとに落とされていた。今回の修正では、&lt;code&gt;success_type&amp;lt;T&amp;gt;&lt;/code&gt;と&lt;code&gt;failure_type&amp;lt;T&amp;gt;&lt;/code&gt;、および&lt;code&gt;auto success(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;と&lt;code&gt;auto failure(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;にオプション&lt;code&gt;spare_storage&lt;/code&gt;を追加したことにより、この問題を修正する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;Boost.Outcomeが、&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;が定義された状態でもコンパイルできるようになったはず。Boost.ExceptionのメンテなであるEmilの協力によって、Outcomeにこの修正が行われた。Boost.Outcomeは、C++例外がグローバルに無効にされた状態でもコンパイルできるべきである。ただし、その状態では&lt;code&gt;boost::exception_ptr&lt;/code&gt;は使用できない&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/ned14/outcome/issues/244&#34; target=&#34;_blank&#34;&gt;GitHub #244&lt;/a&gt; このライブラリの初期リリースから、特定のコーナーケースコードで&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;が壊れていたため、TRYの動作を大幅に変える必要があってショックを受けた。詳細は&lt;a href=&#34;https://boostorg.github.io/outcome/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;テンプレートコンストラクタのSFINAE式で、型のリフレクションに&lt;code&gt;const&lt;/code&gt;が欠落している問題を修正。標準ライブラリの実装がLWG3050の修正に対応していない環境であっても、&lt;code&gt;std::optional&amp;lt;std::chrono::duration&amp;lt;???&amp;gt;&amp;gt;&lt;/code&gt;フィールドをもつ集成体のリフレクションが正しく動作するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; 比較関数を&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; ドキュメントの多くの誤字を修正 (Phil Miller氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PollyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/poly_collection/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; &lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=95888&#34; target=&#34;_blank&#34;&gt;GCCのバグ&lt;/a&gt;に対するワークアラウンドを導入。GCCのバージョン9.3から10.2に影響する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バージョン1.13&lt;/li&gt;
&lt;li&gt;事前定義マクロ&lt;code&gt;ARCH_PPC_64&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ARCH_WORD_BITS*&lt;/code&gt;の再定義による警告・エラーを修正&lt;/li&gt;
&lt;li&gt;Elbrus 2000アーキテクチャを検出する事前定義マクロ&lt;code&gt;ARCH_E2K&lt;/code&gt;を追加 (Konstantin Ivlev氏に感謝)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10.xを超える最近のC++バージョンを扱えない問題を修正&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バージョン1.12&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;OpenBSD環境でendian.hヘッダを使用するよう変更 (Brad Smith氏に感謝)&lt;/li&gt;
&lt;li&gt;9を超える最近のstdcxxバージョンを扱えない問題を修正&lt;/li&gt;
&lt;li&gt;sub-BSD OSのヘッダを直接インクルードすることによる再定義警告を修正&lt;/li&gt;
&lt;li&gt;全ヘッダをインクルードするCIテストを追加&lt;/li&gt;
&lt;li&gt;FreeBSDでのClang or GCCのCIテストを追加&lt;/li&gt;
&lt;li&gt;アーキテクチャのワードサイズを検出するための&lt;code&gt;WORD_BITS&lt;/code&gt;事前定義マクロ集合を追加。これはMikhail Komarov氏によって提出された初期実装に触発されたもの&lt;/li&gt;
&lt;li&gt;Cygwin 32 or 64のCIテストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#property-tree&#34; id=&#34;property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Property Treeは新たなメンテナを得た&lt;/li&gt;
&lt;li&gt;非推奨となっているBoost.Bind機能の使用を修正&lt;/li&gt;
&lt;li&gt;Wikipediaへのリンクを修正&lt;/li&gt;
&lt;li&gt;GCCの警告を修正するために&lt;code&gt;BOOST_OVERRIDE&lt;/code&gt;を使用&lt;/li&gt;
&lt;li&gt;CIテストを拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34; id=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Regexライブラリは、C++03モードを除いてヘッダオンリーとなった&lt;/li&gt;
&lt;li&gt;C++03サポートを非推奨化&lt;/li&gt;
&lt;li&gt;このライブラリは、Boostのほかのライブラリが存在しなくてもスタンドアロンで使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/102&#34; target=&#34;_blank&#34;&gt;GitHub #102&lt;/a&gt; ClangでのC++11未満でのビルドサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; 「シグナルハンドラ内でstacktraceを使用してはならない」という警告をより大きくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34; id=&#34;type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studioのマネージドプロジェクト向けの修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ダブルバッファを使用するケースの生成されるコードを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.4.1&lt;ul&gt;
&lt;li&gt;macOSのデフォルトエンジンコンパイラ向けに、小さな間違いを修正するパッチを適用&lt;ul&gt;
&lt;li&gt;macOS/XCode向けのエンジンビルドのデフォルトをClangからGCCに修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0, 11.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.76.0リリースノート -- 1.76.0 : PropertyTreeを追加 (close #546)</title>
      <link href="https://boostjp.github.io/document/version/1_76_0.html"/>
      <id>d830a0c2bee1b77ca13064d9a2f342fa1cf11dad:document/version/1_76_0.md</id>
      <updated>2021-03-18T18:08:55+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.76.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_76_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_76_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34;&gt;Json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/2139&#34; target=&#34;_blank&#34;&gt;GitHub #2139&lt;/a&gt; &lt;code&gt;test::stream&lt;/code&gt;にexecutorのrebindを追加&lt;/li&gt;
&lt;li&gt;WebSocket async shutdown内での未使用変数の警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2124&#34; target=&#34;_blank&#34;&gt;GitHub #2124&lt;/a&gt; Beastを使用するために浮動小数点サポートを要求しないようにした&lt;/li&gt;
&lt;li&gt;すべての操作にcommon buffers typeを使用するようにしたことにより、websocketyのコンパイルされたコードのサイズを削減した&lt;/li&gt;
&lt;li&gt;HTTPパーサーの誤った使い方の検出を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2140&#34; target=&#34;_blank&#34;&gt;GitHub #2140&lt;/a&gt; ライブラリのメタデータにcxxstdタグを追加&lt;/li&gt;
&lt;li&gt;Drone CIに移行&lt;/li&gt;
&lt;li&gt;小さなドキュメントフォーマットの改善&lt;/li&gt;
&lt;li&gt;in-treeビルドでの要求されるBoost.ThreadライブラリをCMLが見つけられるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::bind&lt;/code&gt;でC++11標準のプレースホルダーを使用できるようサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::apply&lt;/code&gt;で可変引数テンプレートと完全転送を使用できるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++20の&lt;code&gt;import&lt;/code&gt;キーワードとの衝突を避けるために、&lt;code&gt;boost::dll::import&lt;/code&gt;を&lt;code&gt;boost::dll::import_symbol&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;FAQを含むドキュメントを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 次のリリースでGCC 5のサポートを落とす。また、要求するC++の最低バージョンをC++11からC++14に変更する予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34; id=&#34;json&#34;&gt;Json&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/481&#34; target=&#34;_blank&#34;&gt;GitHub #481&lt;/a&gt; &lt;code&gt;value_from&lt;/code&gt;の実装をリファクタ。現在は、ユーザーカスタマイゼーションは、ライブラリが提供するオーバーロードよりも優先される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/484&#34; target=&#34;_blank&#34;&gt;GitHub #484&lt;/a&gt; いくつかの浮動小数点数の不正確なパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/485&#34; target=&#34;_blank&#34;&gt;GitHub #485&lt;/a&gt; Boostといっしょに使用した場合の、スタンドアロンモードでのリンクエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/pull/497&#34; target=&#34;_blank&#34;&gt;GitHub #497&lt;/a&gt; GCC 4.8向けのBoost.Buildビルドを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/37&#34; target=&#34;_blank&#34;&gt;GitHub #37&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; Boost.Mathへの依存をなくした (Peter Dimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; CIとカバレッジと修正 (&#34;The C++ Alliance&#34;のSam Darwin氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++03のサポートを削除した。このライブラリを使用するにはC++11以降が必要となる&lt;/li&gt;
&lt;li&gt;Z-testを追加&lt;/li&gt;
&lt;li&gt;統計関数であるunivariate (単変量) とbivariate (二変量) に実行ポリシーのサポートを追加 (C++17と&lt;code&gt;&amp;lt;execution&amp;gt;&lt;/code&gt;が必要となる)&lt;/li&gt;
&lt;li&gt;CIテストに対する大きな更新・改善&lt;/li&gt;
&lt;li&gt;bivariate (二変量) 統計に整数サポートを追加&lt;/li&gt;
&lt;li&gt;T-Testに整数サポートを追加&lt;/li&gt;
&lt;li&gt;Linear regression (線形回帰) に整数サポートを追加&lt;/li&gt;
&lt;li&gt;終了点 (endpoints) でのbeta distribution (ベータ分布) のPDFを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/github.com/boostorg/math/issues/396&#34;&gt;GitHub #396&lt;/a&gt; 特定の多倍長ケースでStirling&#39;s approximation (スターリング近似) の使用を正しくした&lt;/li&gt;
&lt;li&gt;Clangで&lt;code&gt;-Wimplicit-int-float-conversion&lt;/code&gt;オプションを除外&lt;/li&gt;
&lt;li&gt;quaternion/octonionでのいくつかのconstexpr問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh_sinh&lt;/code&gt;微分での小さなパフォーマンス問題を修正&lt;/li&gt;
&lt;li&gt;hypergeometric functions (超幾何関数) 内部のスケーリングを更新し、多倍長型の64ビット (long long) 指数部の使用を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 大規模なリファクタリングとコードのシンプル化により、C++11が絶対の要件となった&lt;/li&gt;
&lt;li&gt;例外フリーな環境で使用できるようにするために、&lt;code&gt;BOOST_TRY&lt;/code&gt;/&lt;code&gt;CATCH&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/277&#34; target=&#34;_blank&#34;&gt;GitHub #277&lt;/a&gt; powのコーナーケースを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/257&#34; target=&#34;_blank&#34;&gt;GitHub #257&lt;/a&gt; lsbとmsbのドキュメントと一致するよう、送出される例外の型を正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/278&#34; target=&#34;_blank&#34;&gt;GitHub #278&lt;/a&gt; 関係しているが異なる型 (例としてアロケータ型) の間で、ムーブと演算を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アナウンス&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 繰り返してきたこのアナウンスをはじめてから1年 (3回のBoostメジャーリリース) が経ち、今回がv2.2ブランチの最初のリリースとなる。このブランチには、Boost 1.75以前に含まれたOutcome v2.1に対する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;VS2019.8でOucomeがコンパイルできなかったため、コルーチンを有効にする方法を変更した&lt;/li&gt;
&lt;li&gt;C++20の場合、コンパイラ固有のマークアップの代わりに&lt;code&gt;[[likely]]&lt;/code&gt;属性を使用するようにして、TRYが成功・失敗する可能性が高いことを示すようにした&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 以前まで&lt;code&gt;spare_storage(const basic_result|basic_outcome *) noexcep&lt;/code&gt;の値は&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;に伝播されなかった。これによって、エラー結果を構築するためにキャプチャされたスタックバックトレースがすべて&lt;code&gt;TRY&lt;/code&gt;ごとに落とされていた。今回の修正では、&lt;code&gt;success_type&amp;lt;T&amp;gt;&lt;/code&gt;と&lt;code&gt;failure_type&amp;lt;T&amp;gt;&lt;/code&gt;、および&lt;code&gt;auto success(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;と&lt;code&gt;auto failure(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;にオプション&lt;code&gt;spare_storage&lt;/code&gt;を追加したことにより、この問題を修正する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;Boost.Outcomeが、&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;が定義された状態でもコンパイルできるようになったはず。Boost.ExceptionのメンテなであるEmilの協力によって、Outcomeにこの修正が行われた。Boost.Outcomeは、C++例外がグローバルに無効にされた状態でもコンパイルできるべきである。ただし、その状態では&lt;code&gt;boost::exception_ptr&lt;/code&gt;は使用できない&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/ned14/outcome/issues/244&#34; target=&#34;_blank&#34;&gt;GitHub #244&lt;/a&gt; このライブラリの初期リリースから、特定のコーナーケースコードで&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;が壊れていたため、TRYの動作を大幅に変える必要があってショックを受けた。詳細は&lt;a href=&#34;https://boostorg.github.io/outcome/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;テンプレートコンストラクタのSFINAE式で、型のリフレクションに&lt;code&gt;const&lt;/code&gt;が欠落している問題を修正。標準ライブラリの実装がLWG3050の修正に対応していない環境であっても、&lt;code&gt;std::optional&amp;lt;std::chrono::duration&amp;lt;???&amp;gt;&amp;gt;&lt;/code&gt;フィールドをもつ集成体のリフレクションが正しく動作するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; 比較関数を&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; ドキュメントの多くの誤字を修正 (Phil Miller氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PollyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/poly_collection/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; &lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=95888&#34; target=&#34;_blank&#34;&gt;GCCのバグ&lt;/a&gt;に対するワークアラウンドを導入。GCCのバージョン9.3から10.2に影響する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バージョン1.13&lt;/li&gt;
&lt;li&gt;事前定義マクロ&lt;code&gt;ARCH_PPC_64&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ARCH_WORD_BITS*&lt;/code&gt;の再定義による警告・エラーを修正&lt;/li&gt;
&lt;li&gt;Elbrus 2000アーキテクチャを検出する事前定義マクロ&lt;code&gt;ARCH_E2K&lt;/code&gt;を追加 (Konstantin Ivlev氏に感謝)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10.xを超える最近のC++バージョンを扱えない問題を修正&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バージョン1.12&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;OpenBSD環境でendian.hヘッダを使用するよう変更 (Brad Smith氏に感謝)&lt;/li&gt;
&lt;li&gt;9を超える最近のstdcxxバージョンを扱えない問題を修正&lt;/li&gt;
&lt;li&gt;sub-BSD OSのヘッダを直接インクルードすることによる再定義警告を修正&lt;/li&gt;
&lt;li&gt;全ヘッダをインクルードするCIテストを追加&lt;/li&gt;
&lt;li&gt;FreeBSDでのClang or GCCのCIテストを追加&lt;/li&gt;
&lt;li&gt;アーキテクチャのワードサイズを検出するための&lt;code&gt;WORD_BITS&lt;/code&gt;事前定義マクロ集合を追加。これはMikhail Komarov氏によって提出された初期実装に触発されたもの&lt;/li&gt;
&lt;li&gt;Cygwin 32 or 64のCIテストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#property-tree&#34; id=&#34;property-tree&#34;&gt;PropertyTree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Property Treeは新たなメンテナを得た&lt;/li&gt;
&lt;li&gt;非推奨となっているBoost.Bind機能の使用を修正&lt;/li&gt;
&lt;li&gt;Wikipediaへのリンクを修正&lt;/li&gt;
&lt;li&gt;GCCの警告を修正するために&lt;code&gt;BOOST_OVERRIDE&lt;/code&gt;を使用&lt;/li&gt;
&lt;li&gt;CIテストを拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34; id=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Regexライブラリは、C++03モードを除いてヘッダオンリーとなった&lt;/li&gt;
&lt;li&gt;C++03サポートを非推奨化&lt;/li&gt;
&lt;li&gt;このライブラリは、Boostのほかのライブラリが存在しなくてもスタンドアロンで使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/102&#34; target=&#34;_blank&#34;&gt;GitHub #102&lt;/a&gt; ClangでのC++11未満でのビルドサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; 「シグナルハンドラ内でstacktraceを使用してはならない」という警告をより大きくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34; id=&#34;type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studioのマネージドプロジェクト向けの修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ダブルバッファを使用するケースの生成されるコードを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.4.1&lt;ul&gt;
&lt;li&gt;macOSのデフォルトエンジンコンパイラ向けに、小さな間違いを修正するパッチを適用&lt;ul&gt;
&lt;li&gt;macOS/XCode向けのエンジンビルドのデフォルトをClangからGCCに修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0, 11.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.76.0リリースノート -- 1.76.0 : テスト済みコンパイラを追加</title>
      <link href="https://boostjp.github.io/document/version/1_76_0.html"/>
      <id>6acb471026f2af9c1b2c57158bf7619d24fa5760:document/version/1_76_0.md</id>
      <updated>2021-03-17T17:18:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.76.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_76_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_76_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_76_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34;&gt;Bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34;&gt;Json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/2139&#34; target=&#34;_blank&#34;&gt;GitHub #2139&lt;/a&gt; &lt;code&gt;test::stream&lt;/code&gt;にexecutorのrebindを追加&lt;/li&gt;
&lt;li&gt;WebSocket async shutdown内での未使用変数の警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2124&#34; target=&#34;_blank&#34;&gt;GitHub #2124&lt;/a&gt; Beastを使用するために浮動小数点サポートを要求しないようにした&lt;/li&gt;
&lt;li&gt;すべての操作にcommon buffers typeを使用するようにしたことにより、websocketyのコンパイルされたコードのサイズを削減した&lt;/li&gt;
&lt;li&gt;HTTPパーサーの誤った使い方の検出を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/2140&#34; target=&#34;_blank&#34;&gt;GitHub #2140&lt;/a&gt; ライブラリのメタデータにcxxstdタグを追加&lt;/li&gt;
&lt;li&gt;Drone CIに移行&lt;/li&gt;
&lt;li&gt;小さなドキュメントフォーマットの改善&lt;/li&gt;
&lt;li&gt;in-treeビルドでの要求されるBoost.ThreadライブラリをCMLが見つけられるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#bind&#34; id=&#34;bind&#34;&gt;Bind&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::bind&lt;/code&gt;でC++11標準のプレースホルダーを使用できるようサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::apply&lt;/code&gt;で可変引数テンプレートと完全転送を使用できるよう更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++20の&lt;code&gt;import&lt;/code&gt;キーワードとの衝突を避けるために、&lt;code&gt;boost::dll::import&lt;/code&gt;を&lt;code&gt;boost::dll::import_symbol&lt;/code&gt;に名称変更&lt;/li&gt;
&lt;li&gt;FAQを含むドキュメントを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 次のリリースでGCC 5のサポートを落とす。また、要求するC++の最低バージョンをC++11からC++14に変更する予定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#json&#34; id=&#34;json&#34;&gt;Json&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/481&#34; target=&#34;_blank&#34;&gt;GitHub #481&lt;/a&gt; &lt;code&gt;value_from&lt;/code&gt;の実装をリファクタ。現在は、ユーザーカスタマイゼーションは、ライブラリが提供するオーバーロードよりも優先される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/484&#34; target=&#34;_blank&#34;&gt;GitHub #484&lt;/a&gt; いくつかの浮動小数点数の不正確なパースを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/issues/485&#34; target=&#34;_blank&#34;&gt;GitHub #485&lt;/a&gt; Boostといっしょに使用した場合の、スタンドアロンモードでのリンクエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/json/pull/497&#34; target=&#34;_blank&#34;&gt;GitHub #497&lt;/a&gt; GCC 4.8向けのBoost.Buildビルドを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/37&#34; target=&#34;_blank&#34;&gt;GitHub #37&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; Boost.Mathへの依存をなくした (Peter Dimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/38&#34; target=&#34;_blank&#34;&gt;GitHub #38&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/42&#34; target=&#34;_blank&#34;&gt;GitHub #42&lt;/a&gt; CIとカバレッジと修正 (&#34;The C++ Alliance&#34;のSam Darwin氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; C++03のサポートを削除した。このライブラリを使用するにはC++11以降が必要となる&lt;/li&gt;
&lt;li&gt;Z-testを追加&lt;/li&gt;
&lt;li&gt;統計関数であるunivariate (単変量) とbivariate (二変量) に実行ポリシーのサポートを追加 (C++17と&lt;code&gt;&amp;lt;execution&amp;gt;&lt;/code&gt;が必要となる)&lt;/li&gt;
&lt;li&gt;CIテストに対する大きな更新・改善&lt;/li&gt;
&lt;li&gt;bivariate (二変量) 統計に整数サポートを追加&lt;/li&gt;
&lt;li&gt;T-Testに整数サポートを追加&lt;/li&gt;
&lt;li&gt;Linear regression (線形回帰) に整数サポートを追加&lt;/li&gt;
&lt;li&gt;終了点 (endpoints) でのbeta distribution (ベータ分布) のPDFを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/github.com/boostorg/math/issues/396&#34;&gt;GitHub #396&lt;/a&gt; 特定の多倍長ケースでStirling&#39;s approximation (スターリング近似) の使用を正しくした&lt;/li&gt;
&lt;li&gt;Clangで&lt;code&gt;-Wimplicit-int-float-conversion&lt;/code&gt;オプションを除外&lt;/li&gt;
&lt;li&gt;quaternion/octonionでのいくつかのconstexpr問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh_sinh&lt;/code&gt;微分での小さなパフォーマンス問題を修正&lt;/li&gt;
&lt;li&gt;hypergeometric functions (超幾何関数) 内部のスケーリングを更新し、多倍長型の64ビット (long long) 指数部の使用を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 大規模なリファクタリングとコードのシンプル化により、C++11が絶対の要件となった&lt;/li&gt;
&lt;li&gt;例外フリーな環境で使用できるようにするために、&lt;code&gt;BOOST_TRY&lt;/code&gt;/&lt;code&gt;CATCH&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/277&#34; target=&#34;_blank&#34;&gt;GitHub #277&lt;/a&gt; powのコーナーケースを正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/257&#34; target=&#34;_blank&#34;&gt;GitHub #257&lt;/a&gt; lsbとmsbのドキュメントと一致するよう、送出される例外の型を正しくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multiprecision/issues/278&#34; target=&#34;_blank&#34;&gt;GitHub #278&lt;/a&gt; 関係しているが異なる型 (例としてアロケータ型) の間で、ムーブと演算を許可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アナウンス&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 繰り返してきたこのアナウンスをはじめてから1年 (3回のBoostメジャーリリース) が経ち、今回がv2.2ブランチの最初のリリースとなる。このブランチには、Boost 1.75以前に含まれたOutcome v2.1に対する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;VS2019.8でOucomeがコンパイルできなかったため、コルーチンを有効にする方法を変更した&lt;/li&gt;
&lt;li&gt;C++20の場合、コンパイラ固有のマークアップの代わりに&lt;code&gt;[[likely]]&lt;/code&gt;属性を使用するようにして、TRYが成功・失敗する可能性が高いことを示すようにした&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 以前まで&lt;code&gt;spare_storage(const basic_result|basic_outcome *) noexcep&lt;/code&gt;の値は&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;に伝播されなかった。これによって、エラー結果を構築するためにキャプチャされたスタックバックトレースがすべて&lt;code&gt;TRY&lt;/code&gt;ごとに落とされていた。今回の修正では、&lt;code&gt;success_type&amp;lt;T&amp;gt;&lt;/code&gt;と&lt;code&gt;failure_type&amp;lt;T&amp;gt;&lt;/code&gt;、および&lt;code&gt;auto success(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;と&lt;code&gt;auto failure(T &amp;amp;&amp;amp;, ...)&lt;/code&gt;にオプション&lt;code&gt;spare_storage&lt;/code&gt;を追加したことにより、この問題を修正する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;Boost.Outcomeが、&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;が定義された状態でもコンパイルできるようになったはず。Boost.ExceptionのメンテなであるEmilの協力によって、Outcomeにこの修正が行われた。Boost.Outcomeは、C++例外がグローバルに無効にされた状態でもコンパイルできるべきである。ただし、その状態では&lt;code&gt;boost::exception_ptr&lt;/code&gt;は使用できない&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;a href=&#34;https://github.com/ned14/outcome/issues/244&#34; target=&#34;_blank&#34;&gt;GitHub #244&lt;/a&gt; このライブラリの初期リリースから、特定のコーナーケースコードで&lt;code&gt;BOOST_OUTCOME_TRY&lt;/code&gt;が壊れていたため、TRYの動作を大幅に変える必要があってショックを受けた。詳細は&lt;a href=&#34;https://boostorg.github.io/outcome/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;テンプレートコンストラクタのSFINAE式で、型のリフレクションに&lt;code&gt;const&lt;/code&gt;が欠落している問題を修正。標準ライブラリの実装がLWG3050の修正に対応していない環境であっても、&lt;code&gt;std::optional&amp;lt;std::chrono::duration&amp;lt;???&amp;gt;&amp;gt;&lt;/code&gt;フィールドをもつ集成体のリフレクションが正しく動作するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; 比較関数を&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/issues/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; ドキュメントの多くの誤字を修正 (Phil Miller氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PollyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/poly_collection/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; &lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=95888&#34; target=&#34;_blank&#34;&gt;GCCのバグ&lt;/a&gt;に対するワークアラウンドを導入。GCCのバージョン9.3から10.2に影響する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バージョン1.13&lt;/li&gt;
&lt;li&gt;事前定義マクロ&lt;code&gt;ARCH_PPC_64&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ARCH_WORD_BITS*&lt;/code&gt;の再定義による警告・エラーを修正&lt;/li&gt;
&lt;li&gt;Elbrus 2000アーキテクチャを検出する事前定義マクロ&lt;code&gt;ARCH_E2K&lt;/code&gt;を追加 (Konstantin Ivlev氏に感謝)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10.xを超える最近のC++バージョンを扱えない問題を修正&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バージョン1.12&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;OpenBSD環境でendian.hヘッダを使用するよう変更 (Brad Smith氏に感謝)&lt;/li&gt;
&lt;li&gt;9を超える最近のstdcxxバージョンを扱えない問題を修正&lt;/li&gt;
&lt;li&gt;sub-BSD OSのヘッダを直接インクルードすることによる再定義警告を修正&lt;/li&gt;
&lt;li&gt;全ヘッダをインクルードするCIテストを追加&lt;/li&gt;
&lt;li&gt;FreeBSDでのClang or GCCのCIテストを追加&lt;/li&gt;
&lt;li&gt;アーキテクチャのワードサイズを検出するための&lt;code&gt;WORD_BITS&lt;/code&gt;事前定義マクロ集合を追加。これはMikhail Komarov氏によって提出された初期実装に触発されたもの&lt;/li&gt;
&lt;li&gt;Cygwin 32 or 64のCIテストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#regex&#34; id=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Regexライブラリは、C++03モードを除いてヘッダオンリーとなった&lt;/li&gt;
&lt;li&gt;C++03サポートを非推奨化&lt;/li&gt;
&lt;li&gt;このライブラリは、Boostのほかのライブラリが存在しなくてもスタンドアロンで使用できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/102&#34; target=&#34;_blank&#34;&gt;GitHub #102&lt;/a&gt; ClangでのC++11未満でのビルドサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; 「シグナルハンドラ内でstacktraceを使用してはならない」という警告をより大きくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#type-traits&#34; id=&#34;type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studioのマネージドプロジェクト向けの修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ダブルバッファを使用するケースの生成されるコードを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_76_0.html#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2バージョン4.4.1&lt;ul&gt;
&lt;li&gt;macOSのデフォルトエンジンコンパイラ向けに、小さな間違いを修正するパッチを適用&lt;ul&gt;
&lt;li&gt;macOS/XCode向けのエンジンビルドのデフォルトをClangからGCCに修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0, 11.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0, 11.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1, 7.0.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 9.0.0, 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 9.1.0, 10.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++2a: 10.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>