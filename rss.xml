<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2020-04-02T14:33:39.444903</updated>
  <id>4f16211f-541c-4026-b9da-71817e668ca3</id>

  
    <entry>
      <title>Boost 1.73.0リリースノート -- 1.73.0リリースノート : Nowideを追加 (close #432)</title>
      <link href="https://boostjp.github.io/document/version/1_73_0.html"/>
      <id>0e1a6a5e0ce38d292760f7fb8543db5eae58d542:document/version/1_73_0.md</id>
      <updated>2020-04-02T16:45:15+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.73.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_73_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_73_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/libs/nowide/&#34; target=&#34;_blank&#34;&gt;Nowide&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Windowsで標準ライブラリと組み合わせて使用するUTF-8 API (作者Artyom Beilis)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34;&gt;B2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;クラスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今回はメンテナンスアップデートとなる&lt;/li&gt;
&lt;li&gt;Beast dynamic buffers内の入れ小型&lt;code&gt;mutable_data_type&lt;/code&gt;を非推奨化した。代わりに&lt;code&gt;mutable_buffers_type&lt;/code&gt;を使用するか&lt;code&gt;BOOST_BEAST_ALLOW_DEPRECATED&lt;/code&gt;をdefineすること。影響を受ける型は以下：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_adaptor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flat_buffer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flat_static_buffer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multi_buffer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static_buffer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;このライブラリを使用しているユーザーもしくはユーザー企業がどのようにこのライブラリを使用しているか教えてほしい。以下にリストがある：&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/wiki/Companies-and-Individuals-Using-Beast&#34; target=&#34;_blank&#34;&gt;Companies and Individuals Using Beast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;雑多な修正&lt;ul&gt;
&lt;li&gt;ルート証明の例を更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;Content-Lengthの解析を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffer_bytes&lt;/code&gt;のドキュメントを正した&lt;/li&gt;
&lt;li&gt;strandにディスパッチする例を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_stream::close&lt;/code&gt;が例外を投げないことを保証&lt;/li&gt;
&lt;li&gt;sha1.hpp内のインクルード漏れを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ostream&lt;/code&gt;の警告を修正&lt;/li&gt;
&lt;li&gt;field digestはエンディアン非依存&lt;/li&gt;
&lt;li&gt;README内のリンク切れを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ostream&lt;/code&gt;のフラッシュを修正&lt;/li&gt;
&lt;li&gt;いくつかのWin32エラーをネットワークエラーコードに修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flat_buffer::shrink_to_fit&lt;/code&gt;を&lt;code&gt;noexcept&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;eraseフィールドを修正&lt;/li&gt;
&lt;li&gt;コンパイル設定のドキュメントを修正&lt;/li&gt;
&lt;li&gt;strandを使用する例を正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;File:read&lt;/code&gt;でのend-of-fileの動作をドキュメントで明確にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt;がeofの読み込み時に&lt;code&gt;short_read&lt;/code&gt;を返すようにした&lt;/li&gt;
&lt;li&gt;Win32での&lt;code&gt;file_body&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ostream_buffer&lt;/code&gt;が&lt;code&gt;DynamicBuffer_v1::commit&lt;/code&gt;の事前条件を満たすようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_file_body&lt;/code&gt;のFileメンバにアクセッサ関数を追加&lt;/li&gt;
&lt;li&gt;リリースビルドのドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_win32&lt;/code&gt;がUTF-8パスをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_stdio&lt;/code&gt;がUnicodeパスをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo-op&lt;/code&gt;のテストを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_win32&lt;/code&gt;のボディが&lt;code&gt;http::serializer::split&lt;/code&gt;を尊重するようにした&lt;/li&gt;
&lt;li&gt;非MSVCのcmakeを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/133&#34; target=&#34;_blank&#34;&gt;GitHub #133&lt;/a&gt; IBM Zのfcontextルーチンを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; mips64/n64のalignを2から3に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; OSプラットフォームとしてMIPS32とMIPS64で異なるABIを使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; RISC-Vアセンブリのnon-PICを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;multi_index_container&lt;/code&gt;を&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/en.cppreference.com/w/cpp/named_req/AllocatorAwareContainer&#34;&gt;アロケータの状態を伝播する&lt;/a&gt;ようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multi_index/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;[[swappable.requirements]]&lt;/code&gt;の標準仕様に従って、&lt;code&gt;KeyFromValue&lt;/code&gt;、&lt;code&gt;Compare&lt;/code&gt;、&lt;code&gt;Hash&lt;/code&gt;、&lt;code&gt;Pred&lt;/code&gt;の内部オブジェクトをswapする際に、&lt;code&gt;std::swap&lt;/code&gt;とADLによって見つかる&lt;code&gt;swap&lt;/code&gt;で適切に選択するようにした&lt;/li&gt;
&lt;li&gt;一部のコンパイラで警告が起きていた、C++11で非推奨となったデフォルトで暗黙定義される内部的なコピーコンストラクタと代入演算子のいくつかを、提供するようにした&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;ClangでコンパイルされたOutcomeベースのコードのパフォーマンスを大幅に改善した。以前の実装では状態ビットフィールドでClangのオプティマイザが混乱し、低品質のコード生成が行われてしまっていた。多くのコード生成の問題とは異なり、&lt;a href=&#34;https://wg21.link/P1886&#34; target=&#34;_blank&#34;&gt;P1886 Error speed benchmarking&lt;/a&gt;で示された、現実的なコードでの経験的なベンチマークで判明した&lt;/li&gt;
&lt;li&gt;Outcome v2.2.0の将来的な機能として予定していた&lt;a href=&#34;https://github.com/ned14/outcome/tree/better_optimisation&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;better_optimisation&lt;/code&gt;ブランチ (より良い最適化)&lt;/a&gt;のうち安全な部分を、Outcome v2.1.3にマージした。これには新たな状態ビットフィールドの実装も含まれる。これはClangのオプティマイザを混乱させないためのものであり、Clang 9はさまざまなユースケースでGCC 9を上回るコードを生成するようになった&lt;/li&gt;
&lt;li&gt;インストールできることをコミットの度にCIでテストするようにした。スタンドアロン版のOutcomeのインストール (たとえば&lt;code&gt;make install&lt;/code&gt;) は理想よりも頻繁に壊れるので、コミットごとにCIでテストするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/214&#34; target=&#34;_blank&#34;&gt;GitHub #214&lt;/a&gt; 新たなコンセプトを実装するコンパイラは&lt;code&gt;T&lt;/code&gt;と&lt;code&gt;E&lt;/code&gt;の破棄性を早期にチェックしてしまうことが不満だったため、テンプレート制約を削除し、型のインスタンス化シーケンスの後半で実行されるstatic assertにフォールバックするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/220&#34; target=&#34;_blank&#34;&gt;GitHub #220&lt;/a&gt; Undefined Behaviour Sanitiserがいくつかの実験的なOutcome機能のユースケースで誤検知してしまうため、ワークアラウンドを入れた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::poly_collection::for_each&lt;/code&gt;内での潜在的なムーブの警告を修正&lt;/li&gt;
&lt;li&gt;状態を伝播しない非等値なアロケータにおける、アロケータ拡張のムーブ構築とムーブ代入で、要素がムーブではなくコピーされてしまう問題を修正&lt;/li&gt;
&lt;li&gt;GCC 4.8の同梱される古いバージョンのlibstdc++-v3において、アロケータ拡張のムーブ構築が、アロケータ拡張のコピー構築にdecayされないようにした (Clangでも使用できる)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34; id=&#34;b2&#34;&gt;B2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2のリリース&lt;a href=&#34;https://github.com/boostorg/build/releases/tag/4.2.0&#34; target=&#34;_blank&#34;&gt;4.2.0&lt;/a&gt;を含める&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;警告&lt;/strong&gt;&lt;/span&gt; : B2の4.0.0以降は、bootstrapを実行するためにC++11コンパイラが必要となる。これはB2自身をビルドするために必要なことであり、Boostをビルドするために使用するわけではない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.73.0リリースノート -- 1.73.0リリースノート : Beastを追加 (close #431)</title>
      <link href="https://boostjp.github.io/document/version/1_73_0.html"/>
      <id>981b7a02d58a99f3a34163e535e3f6f643d95eba:document/version/1_73_0.md</id>
      <updated>2020-04-02T16:40:48+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.73.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_73_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_73_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34;&gt;B2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;クラスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今回はメンテナンスアップデートとなる&lt;/li&gt;
&lt;li&gt;Beast dynamic buffers内の入れ小型&lt;code&gt;mutable_data_type&lt;/code&gt;を非推奨化した。代わりに&lt;code&gt;mutable_buffers_type&lt;/code&gt;を使用するか&lt;code&gt;BOOST_BEAST_ALLOW_DEPRECATED&lt;/code&gt;をdefineすること。影響を受ける型は以下：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_adaptor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flat_buffer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flat_static_buffer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multi_buffer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static_buffer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;このライブラリを使用しているユーザーもしくはユーザー企業がどのようにこのライブラリを使用しているか教えてほしい。以下にリストがある：&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/wiki/Companies-and-Individuals-Using-Beast&#34; target=&#34;_blank&#34;&gt;Companies and Individuals Using Beast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;雑多な修正&lt;ul&gt;
&lt;li&gt;ルート証明の例を更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;Content-Lengthの解析を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffer_bytes&lt;/code&gt;のドキュメントを正した&lt;/li&gt;
&lt;li&gt;strandにディスパッチする例を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_stream::close&lt;/code&gt;が例外を投げないことを保証&lt;/li&gt;
&lt;li&gt;sha1.hpp内のインクルード漏れを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ostream&lt;/code&gt;の警告を修正&lt;/li&gt;
&lt;li&gt;field digestはエンディアン非依存&lt;/li&gt;
&lt;li&gt;README内のリンク切れを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ostream&lt;/code&gt;のフラッシュを修正&lt;/li&gt;
&lt;li&gt;いくつかのWin32エラーをネットワークエラーコードに修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flat_buffer::shrink_to_fit&lt;/code&gt;を&lt;code&gt;noexcept&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;eraseフィールドを修正&lt;/li&gt;
&lt;li&gt;コンパイル設定のドキュメントを修正&lt;/li&gt;
&lt;li&gt;strandを使用する例を正した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;File:read&lt;/code&gt;でのend-of-fileの動作をドキュメントで明確にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_body&lt;/code&gt;がeofの読み込み時に&lt;code&gt;short_read&lt;/code&gt;を返すようにした&lt;/li&gt;
&lt;li&gt;Win32での&lt;code&gt;file_body&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ostream_buffer&lt;/code&gt;が&lt;code&gt;DynamicBuffer_v1::commit&lt;/code&gt;の事前条件を満たすようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_file_body&lt;/code&gt;のFileメンバにアクセッサ関数を追加&lt;/li&gt;
&lt;li&gt;リリースビルドのドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_win32&lt;/code&gt;がUTF-8パスをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_stdio&lt;/code&gt;がUnicodeパスをサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo-op&lt;/code&gt;のテストを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_win32&lt;/code&gt;のボディが&lt;code&gt;http::serializer::split&lt;/code&gt;を尊重するようにした&lt;/li&gt;
&lt;li&gt;非MSVCのcmakeを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/133&#34; target=&#34;_blank&#34;&gt;GitHub #133&lt;/a&gt; IBM Zのfcontextルーチンを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; mips64/n64のalignを2から3に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; OSプラットフォームとしてMIPS32とMIPS64で異なるABIを使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; RISC-Vアセンブリのnon-PICを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;multi_index_container&lt;/code&gt;を&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/en.cppreference.com/w/cpp/named_req/AllocatorAwareContainer&#34;&gt;アロケータの状態を伝播する&lt;/a&gt;ようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multi_index/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;[[swappable.requirements]]&lt;/code&gt;の標準仕様に従って、&lt;code&gt;KeyFromValue&lt;/code&gt;、&lt;code&gt;Compare&lt;/code&gt;、&lt;code&gt;Hash&lt;/code&gt;、&lt;code&gt;Pred&lt;/code&gt;の内部オブジェクトをswapする際に、&lt;code&gt;std::swap&lt;/code&gt;とADLによって見つかる&lt;code&gt;swap&lt;/code&gt;で適切に選択するようにした&lt;/li&gt;
&lt;li&gt;一部のコンパイラで警告が起きていた、C++11で非推奨となったデフォルトで暗黙定義される内部的なコピーコンストラクタと代入演算子のいくつかを、提供するようにした&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;ClangでコンパイルされたOutcomeベースのコードのパフォーマンスを大幅に改善した。以前の実装では状態ビットフィールドでClangのオプティマイザが混乱し、低品質のコード生成が行われてしまっていた。多くのコード生成の問題とは異なり、&lt;a href=&#34;https://wg21.link/P1886&#34; target=&#34;_blank&#34;&gt;P1886 Error speed benchmarking&lt;/a&gt;で示された、現実的なコードでの経験的なベンチマークで判明した&lt;/li&gt;
&lt;li&gt;Outcome v2.2.0の将来的な機能として予定していた&lt;a href=&#34;https://github.com/ned14/outcome/tree/better_optimisation&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;better_optimisation&lt;/code&gt;ブランチ (より良い最適化)&lt;/a&gt;のうち安全な部分を、Outcome v2.1.3にマージした。これには新たな状態ビットフィールドの実装も含まれる。これはClangのオプティマイザを混乱させないためのものであり、Clang 9はさまざまなユースケースでGCC 9を上回るコードを生成するようになった&lt;/li&gt;
&lt;li&gt;インストールできることをコミットの度にCIでテストするようにした。スタンドアロン版のOutcomeのインストール (たとえば&lt;code&gt;make install&lt;/code&gt;) は理想よりも頻繁に壊れるので、コミットごとにCIでテストするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/214&#34; target=&#34;_blank&#34;&gt;GitHub #214&lt;/a&gt; 新たなコンセプトを実装するコンパイラは&lt;code&gt;T&lt;/code&gt;と&lt;code&gt;E&lt;/code&gt;の破棄性を早期にチェックしてしまうことが不満だったため、テンプレート制約を削除し、型のインスタンス化シーケンスの後半で実行されるstatic assertにフォールバックするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/220&#34; target=&#34;_blank&#34;&gt;GitHub #220&lt;/a&gt; Undefined Behaviour Sanitiserがいくつかの実験的なOutcome機能のユースケースで誤検知してしまうため、ワークアラウンドを入れた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::poly_collection::for_each&lt;/code&gt;内での潜在的なムーブの警告を修正&lt;/li&gt;
&lt;li&gt;状態を伝播しない非等値なアロケータにおける、アロケータ拡張のムーブ構築とムーブ代入で、要素がムーブではなくコピーされてしまう問題を修正&lt;/li&gt;
&lt;li&gt;GCC 4.8の同梱される古いバージョンのlibstdc++-v3において、アロケータ拡張のムーブ構築が、アロケータ拡張のコピー構築にdecayされないようにした (Clangでも使用できる)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34; id=&#34;b2&#34;&gt;B2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2のリリース&lt;a href=&#34;https://github.com/boostorg/build/releases/tag/4.2.0&#34; target=&#34;_blank&#34;&gt;4.2.0&lt;/a&gt;を含める&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;警告&lt;/strong&gt;&lt;/span&gt; : B2の4.0.0以降は、bootstrapを実行するためにC++11コンパイラが必要となる。これはB2自身をビルドするために必要なことであり、Boostをビルドするために使用するわけではない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.73.0リリースノート -- 1.73.0リリースノート : Assertを追加 (close #433)</title>
      <link href="https://boostjp.github.io/document/version/1_73_0.html"/>
      <id>51cc718ae53e3fcd0dd06500ef120eae1ddc5fec:document/version/1_73_0.md</id>
      <updated>2020-04-02T14:46:26+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.73.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_73_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_73_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#assert&#34;&gt;Assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34;&gt;B2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#assert&#34; id=&#34;assert&#34;&gt;Assert&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source_location&lt;/code&gt;クラスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/133&#34; target=&#34;_blank&#34;&gt;GitHub #133&lt;/a&gt; IBM Zのfcontextルーチンを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; mips64/n64のalignを2から3に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; OSプラットフォームとしてMIPS32とMIPS64で異なるABIを使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; RISC-Vアセンブリのnon-PICを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;multi_index_container&lt;/code&gt;を&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/en.cppreference.com/w/cpp/named_req/AllocatorAwareContainer&#34;&gt;アロケータの状態を伝播する&lt;/a&gt;ようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multi_index/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;[[swappable.requirements]]&lt;/code&gt;の標準仕様に従って、&lt;code&gt;KeyFromValue&lt;/code&gt;、&lt;code&gt;Compare&lt;/code&gt;、&lt;code&gt;Hash&lt;/code&gt;、&lt;code&gt;Pred&lt;/code&gt;の内部オブジェクトをswapする際に、&lt;code&gt;std::swap&lt;/code&gt;とADLによって見つかる&lt;code&gt;swap&lt;/code&gt;で適切に選択するようにした&lt;/li&gt;
&lt;li&gt;一部のコンパイラで警告が起きていた、C++11で非推奨となったデフォルトで暗黙定義される内部的なコピーコンストラクタと代入演算子のいくつかを、提供するようにした&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;ClangでコンパイルされたOutcomeベースのコードのパフォーマンスを大幅に改善した。以前の実装では状態ビットフィールドでClangのオプティマイザが混乱し、低品質のコード生成が行われてしまっていた。多くのコード生成の問題とは異なり、&lt;a href=&#34;https://wg21.link/P1886&#34; target=&#34;_blank&#34;&gt;P1886 Error speed benchmarking&lt;/a&gt;で示された、現実的なコードでの経験的なベンチマークで判明した&lt;/li&gt;
&lt;li&gt;Outcome v2.2.0の将来的な機能として予定していた&lt;a href=&#34;https://github.com/ned14/outcome/tree/better_optimisation&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;better_optimisation&lt;/code&gt;ブランチ (より良い最適化)&lt;/a&gt;のうち安全な部分を、Outcome v2.1.3にマージした。これには新たな状態ビットフィールドの実装も含まれる。これはClangのオプティマイザを混乱させないためのものであり、Clang 9はさまざまなユースケースでGCC 9を上回るコードを生成するようになった&lt;/li&gt;
&lt;li&gt;インストールできることをコミットの度にCIでテストするようにした。スタンドアロン版のOutcomeのインストール (たとえば&lt;code&gt;make install&lt;/code&gt;) は理想よりも頻繁に壊れるので、コミットごとにCIでテストするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/214&#34; target=&#34;_blank&#34;&gt;GitHub #214&lt;/a&gt; 新たなコンセプトを実装するコンパイラは&lt;code&gt;T&lt;/code&gt;と&lt;code&gt;E&lt;/code&gt;の破棄性を早期にチェックしてしまうことが不満だったため、テンプレート制約を削除し、型のインスタンス化シーケンスの後半で実行されるstatic assertにフォールバックするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/220&#34; target=&#34;_blank&#34;&gt;GitHub #220&lt;/a&gt; Undefined Behaviour Sanitiserがいくつかの実験的なOutcome機能のユースケースで誤検知してしまうため、ワークアラウンドを入れた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::poly_collection::for_each&lt;/code&gt;内での潜在的なムーブの警告を修正&lt;/li&gt;
&lt;li&gt;状態を伝播しない非等値なアロケータにおける、アロケータ拡張のムーブ構築とムーブ代入で、要素がムーブではなくコピーされてしまう問題を修正&lt;/li&gt;
&lt;li&gt;GCC 4.8の同梱される古いバージョンのlibstdc++-v3において、アロケータ拡張のムーブ構築が、アロケータ拡張のコピー構築にdecayされないようにした (Clangでも使用できる)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34; id=&#34;b2&#34;&gt;B2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2のリリース&lt;a href=&#34;https://github.com/boostorg/build/releases/tag/4.2.0&#34; target=&#34;_blank&#34;&gt;4.2.0&lt;/a&gt;を含める&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;警告&lt;/strong&gt;&lt;/span&gt; : B2の4.0.0以降は、bootstrapを実行するためにC++11コンパイラが必要となる。これはB2自身をビルドするために必要なことであり、Boostをビルドするために使用するわけではない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.73.0リリースノート -- 1.73.0リリースノート : Outcomeを追加 (close #430)</title>
      <link href="https://boostjp.github.io/document/version/1_73_0.html"/>
      <id>ed277f25eead052b1cc9db6b268f1aaa583ea2da:document/version/1_73_0.md</id>
      <updated>2020-04-02T14:43:29+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.73.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_73_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_73_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34;&gt;B2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/133&#34; target=&#34;_blank&#34;&gt;GitHub #133&lt;/a&gt; IBM Zのfcontextルーチンを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; mips64/n64のalignを2から3に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; OSプラットフォームとしてMIPS32とMIPS64で異なるABIを使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; RISC-Vアセンブリのnon-PICを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;multi_index_container&lt;/code&gt;を&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/en.cppreference.com/w/cpp/named_req/AllocatorAwareContainer&#34;&gt;アロケータの状態を伝播する&lt;/a&gt;ようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multi_index/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;[[swappable.requirements]]&lt;/code&gt;の標準仕様に従って、&lt;code&gt;KeyFromValue&lt;/code&gt;、&lt;code&gt;Compare&lt;/code&gt;、&lt;code&gt;Hash&lt;/code&gt;、&lt;code&gt;Pred&lt;/code&gt;の内部オブジェクトをswapする際に、&lt;code&gt;std::swap&lt;/code&gt;とADLによって見つかる&lt;code&gt;swap&lt;/code&gt;で適切に選択するようにした&lt;/li&gt;
&lt;li&gt;一部のコンパイラで警告が起きていた、C++11で非推奨となったデフォルトで暗黙定義される内部的なコピーコンストラクタと代入演算子のいくつかを、提供するようにした&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;ClangでコンパイルされたOutcomeベースのコードのパフォーマンスを大幅に改善した。以前の実装では状態ビットフィールドでClangのオプティマイザが混乱し、低品質のコード生成が行われてしまっていた。多くのコード生成の問題とは異なり、&lt;a href=&#34;https://wg21.link/P1886&#34; target=&#34;_blank&#34;&gt;P1886 Error speed benchmarking&lt;/a&gt;で示された、現実的なコードでの経験的なベンチマークで判明した&lt;/li&gt;
&lt;li&gt;Outcome v2.2.0の将来的な機能として予定していた&lt;a href=&#34;https://github.com/ned14/outcome/tree/better_optimisation&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;better_optimisation&lt;/code&gt;ブランチ (より良い最適化)&lt;/a&gt;のうち安全な部分を、Outcome v2.1.3にマージした。これには新たな状態ビットフィールドの実装も含まれる。これはClangのオプティマイザを混乱させないためのものであり、Clang 9はさまざまなユースケースでGCC 9を上回るコードを生成するようになった&lt;/li&gt;
&lt;li&gt;インストールできることをコミットの度にCIでテストするようにした。スタンドアロン版のOutcomeのインストール (たとえば&lt;code&gt;make install&lt;/code&gt;) は理想よりも頻繁に壊れるので、コミットごとにCIでテストするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/214&#34; target=&#34;_blank&#34;&gt;GitHub #214&lt;/a&gt; 新たなコンセプトを実装するコンパイラは&lt;code&gt;T&lt;/code&gt;と&lt;code&gt;E&lt;/code&gt;の破棄性を早期にチェックしてしまうことが不満だったため、テンプレート制約を削除し、型のインスタンス化シーケンスの後半で実行されるstatic assertにフォールバックするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/220&#34; target=&#34;_blank&#34;&gt;GitHub #220&lt;/a&gt; Undefined Behaviour Sanitiserがいくつかの実験的なOutcome機能のユースケースで誤検知してしまうため、ワークアラウンドを入れた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::poly_collection::for_each&lt;/code&gt;内での潜在的なムーブの警告を修正&lt;/li&gt;
&lt;li&gt;状態を伝播しない非等値なアロケータにおける、アロケータ拡張のムーブ構築とムーブ代入で、要素がムーブではなくコピーされてしまう問題を修正&lt;/li&gt;
&lt;li&gt;GCC 4.8の同梱される古いバージョンのlibstdc++-v3において、アロケータ拡張のムーブ構築が、アロケータ拡張のコピー構築にdecayされないようにした (Clangでも使用できる)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34; id=&#34;b2&#34;&gt;B2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2のリリース&lt;a href=&#34;https://github.com/boostorg/build/releases/tag/4.2.0&#34; target=&#34;_blank&#34;&gt;4.2.0&lt;/a&gt;を含める&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;警告&lt;/strong&gt;&lt;/span&gt; : B2の4.0.0以降は、bootstrapを実行するためにC++11コンパイラが必要となる。これはB2自身をビルドするために必要なことであり、Boostをビルドするために使用するわけではない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.73.0リリースノート -- 1.73.0リリースノート : B2を追加 (close #429)</title>
      <link href="https://boostjp.github.io/document/version/1_73_0.html"/>
      <id>bea6e7afb587222e829cdb9370588bcac88fe331:document/version/1_73_0.md</id>
      <updated>2020-04-01T17:43:04+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.73.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_73_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_73_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_73_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34;&gt;B2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/133&#34; target=&#34;_blank&#34;&gt;GitHub #133&lt;/a&gt; IBM Zのfcontextルーチンを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/132&#34; target=&#34;_blank&#34;&gt;GitHub #132&lt;/a&gt; mips64/n64のalignを2から3に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/131&#34; target=&#34;_blank&#34;&gt;GitHub #131&lt;/a&gt; OSプラットフォームとしてMIPS32とMIPS64で異なるABIを使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/pull/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; RISC-Vアセンブリのnon-PICを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;multi_index_container&lt;/code&gt;を&lt;a href=&#34;https://boostjp.github.io/document/version/ttps:/en.cppreference.com/w/cpp/named_req/AllocatorAwareContainer&#34;&gt;アロケータの状態を伝播する&lt;/a&gt;ようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/multi_index/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;[[swappable.requirements]]&lt;/code&gt;の標準仕様に従って、&lt;code&gt;KeyFromValue&lt;/code&gt;、&lt;code&gt;Compare&lt;/code&gt;、&lt;code&gt;Hash&lt;/code&gt;、&lt;code&gt;Pred&lt;/code&gt;の内部オブジェクトをswapする際に、&lt;code&gt;std::swap&lt;/code&gt;とADLによって見つかる&lt;code&gt;swap&lt;/code&gt;で適切に選択するようにした&lt;/li&gt;
&lt;li&gt;一部のコンパイラで警告が起きていた、C++11で非推奨となったデフォルトで暗黙定義される内部的なコピーコンストラクタと代入演算子のいくつかを、提供するようにした&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::poly_collection::for_each&lt;/code&gt;内での潜在的なムーブの警告を修正&lt;/li&gt;
&lt;li&gt;状態を伝播しない非等値なアロケータにおける、アロケータ拡張のムーブ構築とムーブ代入で、要素がムーブではなくコピーされてしまう問題を修正&lt;/li&gt;
&lt;li&gt;GCC 4.8の同梱される古いバージョンのlibstdc++-v3において、アロケータ拡張のムーブ構築が、アロケータ拡張のコピー構築にdecayされないようにした (Clangでも使用できる)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_73_0.html#b2&#34; id=&#34;b2&#34;&gt;B2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B2のリリース&lt;a href=&#34;https://github.com/boostorg/build/releases/tag/4.2.0&#34; target=&#34;_blank&#34;&gt;4.2.0&lt;/a&gt;を含める&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;警告&lt;/strong&gt;&lt;/span&gt; : B2の4.0.0以降は、bootstrapを実行するためにC++11コンパイラが必要となる。これはB2自身をビルドするために必要なことであり、Boostをビルドするために使用するわけではない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加で含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>