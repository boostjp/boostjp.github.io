<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="http://boostjp.github.io" />
  <updated>2014-11-21T13:01:52.629143</updated>
  <id>8d31db78-2982-40d2-96b7-fd60ae401c25</id>

  
    <entry>
      <title>Boost Date-Time Library Documentation -- Boost.DateTime : 参考文献を追加</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time.html"/>
      <id>7ed54e0293c39eceb10857bf2f46296be6c4ba09:archive/boost_docs/libs/date_time.md</id>
      <updated>2014-11-21 13:01:02 +0900</updated>
      
        <content type="html">&lt;h1&gt;Boost Date-Time Library Documentation&lt;/h1&gt;
&lt;p&gt;Version 1.00&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;翻訳元ドキュメント： &lt;a href=&#34;http://www.boost.org/doc/libs/1_31_0/libs/date_time/doc/index.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/1_31_0/libs/date_time/doc/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;概要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#usage-examples&#34;&gt;Usage Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#domain-concepts&#34;&gt;Domain Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#tests&#34;&gt;Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#design-and-extensions&#34;&gt;Design and Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#more-info&#34;&gt;More Info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/build_info.html&#34;&gt;Build-Compiler Information&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;日付プログラミング&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorian Date System&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html&#34;&gt;Class date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_duration.html&#34;&gt;Class date_duration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html&#34;&gt;Class date_period&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_iterators.html&#34;&gt;Date Iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_algorithms.html&#34;&gt;Date Generators / Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_gregorian_calendar.html&#34;&gt;Class gregorian_calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/class_date.html#construct-from-clock&#34;&gt;Class day_clock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;時間プログラミング&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Time System&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_ptime.html&#34;&gt;Class ptime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html&#34;&gt;Class time_duration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_period.html&#34;&gt;Class time_period&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/time_iterators.html&#34;&gt;Time Iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/local_time_adjust.html&#34;&gt;UTC / Local Time Adjustments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ジェネリックプログラミングの概念に基づいた日付・時間ライブラリ&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/motivation&#34; name=&#34;motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このライブラリの開発動機は、多くのプロジェクトの多くの日付時間ライブラリで動作すること、また、それらの構築を手助けすることである。 日付時間ライブラリは多くの開発プロジェクトに対して、基礎的な構造を提供する。 しかしそれらの多くは、計算、書式化、変換、その他のいくつかの機能に限界がある。 例えば多くのライブラリは、うるう秒を正しく扱うこと、無限のような概念を提供すること、高分解能の時間資源やネットワーク上の時間資源を利用することが出来ない。 そのうえ、これらのライブラリは、どれも日付や時間の表現形式が厳密である傾向にあるため、プロジェクトやサブプロジェクトのためにカスタマイズすることが出来ない。&lt;/p&gt;
&lt;p&gt;日付や時間に関するプログラミングは、文字列や整数に関するプログラミングと同じくらいシンプルで自然であるべきである。 多くの時間論理を備えたアプリケーションは、演算子と計算能力の頑健な集合により、根本的に単純化することができる。 クラスは日付時間の比較、時間の長さ(length)や期間(duration)の加算、時計からの日付時間の取得、日付時間間隔(interval)に関する自然な動作を提供すべきである。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/usage-examples&#34; name=&#34;usage-examples&#34;&gt;Usage Examples&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;次に，グレゴリオ暦システムの使用例を示す。 詳細は「&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;日付プログラミング&lt;/a&gt;」で解説する。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; boost&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;gregorian; 
date &lt;span style=&#34;color: #0000FF&#34;&gt;weekstart&lt;/span&gt;(&lt;span style=&#34;color: #666666&#34;&gt;2002&lt;/span&gt;,Feb,&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);
date &lt;span style=&#34;color: #0000FF&#34;&gt;weekend&lt;/span&gt;  (&lt;span style=&#34;color: #666666&#34;&gt;2002&lt;/span&gt;,Feb,&lt;span style=&#34;color: #666666&#34;&gt;7&lt;/span&gt;);
date_duration &lt;span style=&#34;color: #0000FF&#34;&gt;fiveDays&lt;/span&gt;(&lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;); 
date d3 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; d1 &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; fiveDays;
date today &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; day_clock&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;local_day();
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (d3 &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;=&lt;/span&gt; today) {} &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//date comparison operators&lt;/span&gt;

date_period thisWeek(d1,d2);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (thisWeek.contains(today)) {}&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//do something&lt;/span&gt;

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//iterate and print the week&lt;/span&gt;
day_iterator itr(weekstart);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (; itr &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;=&lt;/span&gt; weekend; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;itr) {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; to_iso_extended_string(&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;itr) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;

そして &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;posix_time&lt;/span&gt;&lt;/code&gt; システムの使用例である。 詳細は「&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;時間プログラミング&lt;/a&gt;」で解説する。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; boost&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;posix_time; 
date &lt;span style=&#34;color: #0000FF&#34;&gt;d&lt;/span&gt;(&lt;span style=&#34;color: #666666&#34;&gt;2002&lt;/span&gt;,Feb,&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//an arbitrary date&lt;/span&gt;
ptime &lt;span style=&#34;color: #0000FF&#34;&gt;t1&lt;/span&gt;(d, hours(&lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;nanosec(&lt;span style=&#34;color: #666666&#34;&gt;100&lt;/span&gt;));&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//date + time of day offset&lt;/span&gt;
ptime t2 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; t1 &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt; minutes(&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;seconds(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;);
ptime now &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; second_clock&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;local_time(); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//use the clock&lt;/span&gt;
&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//Get the date part out of the time&lt;/span&gt;
date today &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; now.date();
date tommorrow &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; today &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; date_duration(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);
ptime &lt;span style=&#34;color: #0000FF&#34;&gt;tommorrow_start&lt;/span&gt;(tommorrow); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//midnight &lt;/span&gt;

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//starting at current time iterator adds by one hour&lt;/span&gt;
time_iterator &lt;span style=&#34;color: #0000FF&#34;&gt;titr&lt;/span&gt;(now,hours(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;)); 
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (; titr &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; tommorrow_start; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;titr) {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; to_simple_string(&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;titr) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/domain-concepts&#34; name=&#34;domain-concepts&#34;&gt;Domain Concepts&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;日付・時間の分野には専門用語と問題が多い。以下はライブラリ中に見られる概念の簡単な紹介である。&lt;/p&gt;
&lt;p&gt;このライブラリは3つの基本的な時間型をサポートする。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Time Point&lt;ul&gt;
&lt;li&gt;時間位置。時刻。連続する時間内での位置を示す&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Time Duration&lt;ul&gt;
&lt;li&gt;時間長。時間連続体においてどの位置にも結びついていない時間の長さ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Time Interval&lt;ul&gt;
&lt;li&gt;時間間隔。時間連続体の特定の位置に結びついた時間長。期間とも&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの時間型にはそれぞれ表現可能な最小の時間間隔(duration)で定義される &lt;strong&gt;分解能&lt;/strong&gt; がある。 &lt;strong&gt;時法系(Time system)&lt;/strong&gt; は、時刻にラベルを付けて計算するための規則はもちろんのこと、これらすべての時間型も提供する。 &lt;strong&gt;暦法系(Calendar system)&lt;/strong&gt; は最大の分解能(1日)を持っている簡素な時法系である。 &lt;strong&gt;グレゴリオ暦&lt;/strong&gt; は今日最も広く使われている暦法系である(ISOシステムは基本的にこれの派生物である)。 しかし、他にも多くの暦法系がある。 &lt;strong&gt;UTC(Coordinated Universal Time;協定標準時)&lt;/strong&gt; は広く使われている民間の時法系である。UTC がうるう秒（これは、必要に応じて適用されるもので、予測可能ではない）の使用によって経度0において地球自転に対して調整される。 たいていの &lt;strong&gt;地域時間システム&lt;/strong&gt; が UTC に基づいているが、地球自転に対して同じように調整されるために、昼時間はどこでも同じである。 さらに、夏の昼時間を長くするためのサマータイム(DST)調整を含む地域時間もある。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;クロックデバイス&lt;/strong&gt; は時法系に関して現在の日付あるいは時刻を供給する(あるハードウェアに結び付けられた)ソフトウェアコンポーネントである。&lt;/p&gt;
&lt;p&gt;ライブラリは日付と時間の計算をサポートする。しかしながら、時間の計算は整数の計算と全く同じというわけにはいかない。 もし、時間計算の正確度(accuracy)が重要ならば、&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/tradeoffs.html&#34;&gt;Stability, Predictability, and Approximations(安定性、予測性と近似)&lt;/a&gt;を読む必要がある。&lt;/p&gt;
&lt;p&gt;追加資料を以下に示す&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/basic_terms.html&#34;&gt;Basic Terminology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/caluculations.html&#34;&gt;Calculations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/tradeoffs.html&#34;&gt;安定性、予測性と近似&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html&#34;&gt;参考文献&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/tests&#34; name=&#34;tests&#34;&gt;Tests&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ライブラリは、以下のディレクトリで多数のテストを提供している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libs/date_time/test &lt;/li&gt;
&lt;li&gt;libs/date_time/test/gregorian&lt;/li&gt;
&lt;li&gt;libs/date_time/test/posix_time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらのテストをビルドして実行することで、ライブラリが正しくインストールされ、確実に機能していることを確認できる。 加えて、これらのテストは新しいコンパイラへの移植を容易にする。 最後に、テストは使用例で明示的に記述されない多くの機能の例を提供する。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/design-and-extensions&#34; name=&#34;design-and-extensions&#34;&gt;Design and Extensions&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このライブラリの起源の大部分は（今まで）ほとんどの日付時間ライブラリがカスタマイズと拡張を許す方法で構築されないという観察であった。 典型的な例では、カレンダーロジックは直接日付クラスに構築される。 あるいは時計検索機能は直接時間クラスに作り上げられる。 これらのデザイン決定は通常、拡張したりライブラリの振る舞いを変更することを不可能にする。 もっと基本的なレベルにおいては、時間表現あるいはグレゴリオ暦の分解能について通常仮定がある。&lt;/p&gt;
&lt;p&gt;高分解能の時間表現やそれ以外の仮定からの要求を、時間ライブラリの実装が満たすことが出来ないために、結果的に不完全なライブラリを使わざるをえない、というのは、よくあることである。 この種のライブラリの開発は、まったく些細なことではないので、こういう結果は非常に残念なことである。&lt;/p&gt;
&lt;p&gt;（このライブラリの）設計は完璧というには程遠いが、それでも現在の設計は、著者の知るどんな時間ライブラリよりもはるかに柔軟である。 将来のバージョンでは、拡張性のさまざまな面について、さらに文書化されることが期待される。 ライブラリの設計目標についての情報は&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/DesignGoals.html&#34;&gt;ここ&lt;/a&gt;に要約されている。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/acknowledgements&#34; name=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many people have contributed to the development of this library. In particular Hugo Duncan and Joel de Guzman for help with porting to various compilers. For initial development of concepts and design Corwin Joy and Michael Kenniston deserve special thanks. Also extra thanks to Michael for writing up the theory and tradeoffs part of the documentation. Dave Zumbro for initial inspiration and sage thoughts. Many thanks to boost reviewers and users including: William Seymour, Kjell Elster, Beman Dawes, Gary Powell, Andrew Maclean, William Kempf, Peter Dimov, Chris Little, David Moore, Darin Adler, Gennadiy Rozental, Joachim Achtzehnter, Paul Bristow, Jan Langer, Mark Rodgers, Glen Knowles, Matthew Denman, and George Heintzelman.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/more-info&#34; name=&#34;more-info&#34;&gt;More Info&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;現在、ライブラリの設計はWikiと電子メールによる議論によって発展している。 詳しい情報はこちらへ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.crystalclearsoftware.com/cgi-bin/boost_wiki/wiki.pl?GDTL&#34; target=&#34;_blank&#34;&gt;Boost Wiki GDTL Start Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.crystalclearsoftware.com/libraries/date_time/index.html&#34; target=&#34;_blank&#34;&gt;Full Doxygen Reference Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Thu Sep 5 07:22:00 MST 2002 by Jeff Garland © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>参考文献 -- Boost.DateTime : 参考文献を追加</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html"/>
      <id>7ed54e0293c39eceb10857bf2f46296be6c4ba09:archive/boost_docs/libs/date_time/references.md</id>
      <updated>2014-11-21 13:01:02 +0900</updated>
      
        <content type="html">&lt;h1&gt;参考文献&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下に挙げるのは、日付・時間ドメインに関するリファレンスと情報元である。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html#date-references&#34;&gt;Date Calendar References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html#time-reference&#34;&gt;Time References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html#other-cpp-libs&#34;&gt;Other C/C++ Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html#java-libs&#34;&gt;JAVA Date-Time Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html#script-lang-libs&#34;&gt;Scriping Language Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html#related-commerical-fanciful-pages&#34;&gt;関連する商業的かつ想像力に富んだページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html#resolution-precision-accuracy&#34;&gt;分解能, 精度, 正確度&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date-references&#34; name=&#34;date-references&#34;&gt;Date Calendar References&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ISO 8601 日付・時間の標準 -- &lt;a href=&#34;http://www.cl.cam.ac.uk/~mgk25/iso-time.html&#34; target=&#34;_blank&#34;&gt;Markus Kuhnによるまとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍『&lt;a href=&#34;http://emr.cs.iit.edu/home/reingold/calendar-book/second-edition/&#34; target=&#34;_blank&#34;&gt;Calendrical Calculations&lt;/a&gt;』 著者 Reingold &amp;amp; Dershowitz&lt;/li&gt;
&lt;li&gt;Calendar FAQ by Claus T?dering [&lt;a href=&#34;http://www.pauahtun.org/CalendarFAQ/cal/calendar24.html&#34; target=&#34;_blank&#34;&gt;html&lt;/a&gt;][&lt;a href=&#34;http://www.pauahtun.org/CalendarFAQ/cal/calendar24.pdf&#34; target=&#34;_blank&#34;&gt;pdf&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Calendar zone &lt;a href=&#34;http://www.calendarzone.com/&#34; target=&#34;_blank&#34;&gt;http://www.calendarzone.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3.org/TR/xmlschema-2/#dateTime&#34; target=&#34;_blank&#34;&gt;date timeのXMLスキーマ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Will Lindenの&lt;a href=&#34;http://www.ecben.net/calendar.shtml&#34; target=&#34;_blank&#34;&gt;Calendar Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www21.brinkster.com/lonwolve/melt/index.htm&#34; target=&#34;_blank&#34;&gt;XMAS calendar melt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/time-reference&#34; name=&#34;time-reference&#34;&gt;Time References&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Martin Folwerの時間パターン&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aw.com/cseng/titles/0-201-89542-0/apsupp/events2-1.html&#34; target=&#34;_blank&#34;&gt;Recurring Events for Calendars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Patterns for things that &lt;a href=&#34;http://martinfowler.com/ap2/timeNarrative.html&#34; target=&#34;_blank&#34;&gt;Change with time&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;アメリカ国立研究所の標準とテクノロジー &lt;a href=&#34;http://nist.time.gov/exhibits.html&#34; target=&#34;_blank&#34;&gt;Time Exhibits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ntp.org/&#34; target=&#34;_blank&#34;&gt;NTP.org&lt;/a&gt;のネットワーク時間プロトコル&lt;/li&gt;
&lt;li&gt;US Navy &lt;a href=&#34;http://tycho.usno.navy.mil/systime.html&#34; target=&#34;_blank&#34;&gt;Systems of Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bipm.fr/enus/5_Scientific/c_time/time_1.html&#34; target=&#34;_blank&#34;&gt;国際原子時(International Atomic Time)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://beta.zyprexia.com/docs/pgsql/user/datatype1130.htm&#34; target=&#34;_blank&#34;&gt;Date-Time type PostgreSQL&lt;/a&gt; ユーザーガイド&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/other-cpp-libs&#34; name=&#34;other-cpp-libs&#34;&gt;Other C/C++ Libraries&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cplusplus.com/ref/ctime/index.html&#34; target=&#34;_blank&#34;&gt;ctime C&lt;/a&gt; Standard library reference at cplusplus.com&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cl.cam.ac.uk/~mgk25/c-time/&#34; target=&#34;_blank&#34;&gt;XTime C extension&lt;/a&gt; proposal&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://david.tribble.com/text/c0xcalendar.html#author-info&#34; target=&#34;_blank&#34;&gt;Another C library extension&lt;/a&gt; proposal by David Tribble&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cr.yp.to/libtai.html&#34; target=&#34;_blank&#34;&gt;libTAI&lt;/a&gt; is a C based time library&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.twinsun.com/tz/tz-link.htm&#34; target=&#34;_blank&#34;&gt;Time Zone&lt;/a&gt; Database C library for managing timezones/places&lt;/li&gt;
&lt;li&gt;International Components for Unicode by IBM (open source)&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://oss.software.ibm.com/icu/userguide/dateCalendar.html&#34; target=&#34;_blank&#34;&gt;Calendar Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://oss.software.ibm.com/icu/userguide/dateTime.html&#34; target=&#34;_blank&#34;&gt;Date Time Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://oss.software.ibm.com/icu/userguide/dateTimezone.html&#34; target=&#34;_blank&#34;&gt;Time Zone Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://oss.software.ibm.com/icu/userguide/formatDateTime.html&#34; target=&#34;_blank&#34;&gt;Date-Time Formatting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ringside.arc.nasa.gov/www/toolkits/julian_13/aareadme.html&#34; target=&#34;_blank&#34;&gt;Julian Library in C by Mark Showalter -- NASA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/java-libs&#34; name=&#34;java-libs&#34;&gt;JAVA Date &amp;amp; Time Library Quick Reference&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://java.sun.com/products/jdk/1.1/docs/api/java.util.Calendar.html#_top_&#34; target=&#34;_blank&#34;&gt;Calendar class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://java.sun.com/products/jdk/1.1/docs/api/java.util.GregorianCalendar.html#_top_&#34; target=&#34;_blank&#34;&gt;Gregorian calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://java.sun.com/products/jdk/1.1/docs/api/java.util.Date.html&#34; target=&#34;_blank&#34;&gt;Date class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://java.sun.com/products/jdk/1.1/docs/api/java.sql.Time.html#_top_&#34; target=&#34;_blank&#34;&gt;sql.time class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://java.sun.com/products/jdk/1.1/docs/api/java.text.DateFormatSymbols.html#_top_&#34; target=&#34;_blank&#34;&gt;Date format symbols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://java.sun.com/products/jdk/1.1/docs/api/java.text.DateFormat.html#_top_&#34; target=&#34;_blank&#34;&gt;Date format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://java.sun.com/products/jdk/1.1/docs/api/java.text.SimpleDateFormat.html#_top_&#34; target=&#34;_blank&#34;&gt;Simple Date Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://java.sun.com/products/jdk/1.1/docs/api/java.util.SimpleTimeZone.html#_top_&#34; target=&#34;_blank&#34;&gt;Simple Time Zone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/script-lang-libs&#34; name=&#34;script-lang-libs&#34;&gt;Scripting Language Libraries&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A python date library &lt;a href=&#34;http://www.lemburg.com/files/python/mxDateTime.html&#34; target=&#34;_blank&#34;&gt;MX Date Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Perl date-time&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://search.cpan.org/Catalog/Data_and_Data_Type/Date/&#34; target=&#34;_blank&#34;&gt;Date-Time packages at CPAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://search.cpan.org/doc/TWEGNER/Date-Calc-4.3-bin56Mac/Calc.pm&#34; target=&#34;_blank&#34;&gt;Date::Calc&lt;/a&gt; at CPAN&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://search.cpan.org/doc/MORTY/DateConvert-0.16/Convert.pm&#34; target=&#34;_blank&#34;&gt;Date::Convert&lt;/a&gt; calendar conversions at CPAN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A PHP library &lt;a href=&#34;http://vlib.activefish.com/docs/vlibDate.html&#34; target=&#34;_blank&#34;&gt;Vlib Date Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/related-commerical-fanciful-pages&#34; name=&#34;related-commerical-fanciful-pages&#34;&gt;関連する商業的かつ想像力に富んだページ&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.leapsecond.com/java/gpsclock.htm&#34; target=&#34;_blank&#34;&gt;Leapsecond.com time&lt;/a&gt; page&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.worldtimeserver.com/&#34; target=&#34;_blank&#34;&gt;World Time Server / TZ database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.longnow.org/10kclock/clock.htm&#34; target=&#34;_blank&#34;&gt;10000 year clock&lt;/a&gt; at Long Now Foundation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.timezonesforpcs.com/&#34; target=&#34;_blank&#34;&gt;Timezones for PCs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/resolution-precision-accuracy&#34; name=&#34;resolution-precision-accuracy&#34;&gt;Resolution, Precision, and Accuracy&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Definitions with pictures from &lt;a href=&#34;http://metrologyforum.tm.agilent.com/specs.shtml&#34; target=&#34;_blank&#34;&gt;Agilent Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Another set of pictures from &lt;a href=&#34;http://www.teamlabs.com/catalog/performance.asp&#34; target=&#34;_blank&#34;&gt;Team Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Definitions from &lt;a href=&#34;http://www.solent.ac.uk/hydrography/notes/errorthe/accuracy.htm&#34; target=&#34;_blank&#34;&gt;Southampton Institute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Definitions from &lt;a href=&#34;http://www.newport.com/Support/Tutorials/OptoMech/om4a.asp&#34; target=&#34;_blank&#34;&gt;Newport Corporation&lt;/a&gt; in the context of instrumentation&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2014 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/faithandbrave@gmail.com&#34;&gt;Akira Takahashi&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>トレードオフ：安定性、予測性と近似 -- Boost.DateTime : トレードオフの翻訳ドキュメントを追加</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/tradeoffs.html"/>
      <id>7556f0fe3acda0ef3acef318aa01c1919e192e34:archive/boost_docs/libs/date_time/tradeoffs.md</id>
      <updated>2014-11-20 20:37:57 +0900</updated>
      
        <content type="html">&lt;h1&gt;トレードオフ：安定性、予測性と近似&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;避けられないトレードオフ&lt;/h2&gt;
&lt;p&gt;このライブラリは、ユーザが必要とするであろうすべてを提供するために最善を尽くす。しかし、どの時間ライブラリにも、できることを制限する固有の制約がある。 特に、ユーザはある特定のアプリケーションに、次の3つの能力の内どの2つが必要かを選ぶ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;壁掛け時計の時刻との厳密な一致&lt;/li&gt;
&lt;li&gt;正確な数学, 例: 時間長の計算&lt;/li&gt;
&lt;li&gt;未来の時間位置(timepoints)を取り扱う能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;あるライブラリは、3つすべてを与えると暗黙のうちに約束するかもしれない。しかし、実際にテストしてみれば、同時に2つだけが本当である。 この制限は、どんな特定のライブラリでも設計や実装の欠陥ではない;もっと正確に言えば、それは国際基準によって定義される時法系が非常に異なる結果である。 3つのケースについてそれぞれ見てみよう:&lt;/p&gt;
&lt;p&gt;壁掛け時計の時刻との厳密な一致を望むなら、UTC あるいは地域時間のいずれかを使用しなければならない。 UTC 時刻同士の差を取って時間長(duration)を計算し、秒精度が必要な場合、2つの時間はあまり遠い未来にあってはならない。なぜなら、うるう秒が計算に影響するが、そればたったの約半年前に決定されるものだからである。 地域時間については、立法機関が思うままにDST規則を変えることができ、また(実際に)変えるので、未来の時間長(duration)計算は、いつでも異常になり得る。&lt;/p&gt;
&lt;p&gt;壁掛け時計の未来の時間を扱いたければ、(一般的なケースで)上述と同じ理由のために、正確な時間長(durations)を計算することができないであろう。&lt;/p&gt;
&lt;p&gt;もし未来の時間について正確な計算を必要とするなら、TAI あるいは同等の物を使わなければならないだろう。しかし、TAI から UTC あるいは地域時間への写像はうるう秒に依存すため、壁掛け時計の時間と正確には一致しないであろう。&lt;/p&gt;
&lt;h2&gt;安定性、予測性と近似&lt;/h2&gt;
&lt;p&gt;ここに、何が起こっているのかを説明するのに役立つある基礎理論がある。 時間型が任意の抽象的なデータ型(ADT;Abstract Data Type)のように、それらの値に対する操作と一緒に1セットの値であることを忘れないで欲しい。&lt;/p&gt;
&lt;h3&gt;安定性(Stability)&lt;/h3&gt;
&lt;p&gt;与えられた値に関連付いたビットパターンが時間とともに変化しない場合、型の表現は安定している。 不安定な表現を備えた型は、おそらく誰の役にも立たない。したがって、我々はどんな時間ライブラリにも安定した表現だけを使用するよう要求するだろう。&lt;/p&gt;
&lt;p&gt;特定のオペランドに演算を適用する結果が時間とともに変化しない場合、型に対する演算は安定している。&lt;/p&gt;
&lt;h3&gt;予測性(Predictability)&lt;/h3&gt;
&lt;p&gt;集合は、よく明確(well-defined)であるか不明確(ill-defined)であるか、の 2つのカテゴリーに分類される。 型が集合であるので、型をカバーするためにこれらの定義を拡張することができる。&lt;/p&gt;
&lt;p&gt;任意の型 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; について、値 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;x&lt;/span&gt;&lt;/code&gt; が型 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; のメンバーかどうか決める述語 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;is_member( x )&lt;/span&gt;&lt;/code&gt; があるとする。 この述語は、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;false&lt;/span&gt;&lt;/code&gt;, あるいは &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dont_know&lt;/span&gt;&lt;/code&gt; を返すものとする。&lt;/p&gt;
&lt;p&gt;すべての &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;x&lt;/span&gt;&lt;/code&gt; について、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;is_member( x )&lt;/span&gt;&lt;/code&gt; が &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt; か &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;false&lt;/span&gt;&lt;/code&gt; のどちらかを返す場合、集合 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; は &lt;strong&gt;明確(well-defined)&lt;/strong&gt; であるという。&lt;/p&gt;
&lt;p&gt;任意の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;x&lt;/span&gt;&lt;/code&gt; について、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;is_member( x )&lt;/span&gt;&lt;/code&gt; が &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dont_know&lt;/span&gt;&lt;/code&gt; を返す場合、集合 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; は &lt;strong&gt;不明確(ill-defined)&lt;/strong&gt; であるという。&lt;/p&gt;
&lt;p&gt;それらは数学で通常使われる規則である。 しかしながら、時間型に特有な特性のために、この考察を洗練し、以下のように第3のカテゴリーを作ることは有用である:&lt;/p&gt;
&lt;p&gt;任意の時間型 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; について、値 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;x&lt;/span&gt;&lt;/code&gt; が &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; のメンバーかどうか決める述語 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;is_member( x, t )&lt;/span&gt;&lt;/code&gt; があるとする。 述語が評価されるとき、パラメータ &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;t&lt;/span&gt;&lt;/code&gt; は時間に相当する。 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;xi&lt;/span&gt;&lt;/code&gt; それぞれに対して、以下のような時間 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;ti&lt;/span&gt;&lt;/code&gt; と値 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;v&lt;/span&gt;&lt;/code&gt; があるとする:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;v = true&lt;/span&gt;&lt;/code&gt; あるいは &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;v = false&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;t &amp;lt; ti&lt;/span&gt;&lt;/code&gt; である全ての &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;t&lt;/span&gt;&lt;/code&gt; について、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;is_member( xi, t )&lt;/span&gt;&lt;/code&gt; は &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dont_know&lt;/span&gt;&lt;/code&gt; を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;t &amp;gt;= ti&lt;/span&gt;&lt;/code&gt; である全ての &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;t&lt;/span&gt;&lt;/code&gt; について、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;is_member( xi, t )&lt;/span&gt;&lt;/code&gt; は &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;v&lt;/span&gt;&lt;/code&gt; を返す&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;xi&lt;/span&gt;&lt;/code&gt; が &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; のメンバーであるかどうか「見つけ出す」とき、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;ti&lt;/span&gt;&lt;/code&gt; はこのように時間である。今、我々は時間型の3つのカテゴリーを定義することができる:&lt;/p&gt;
&lt;p&gt;全ての &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;xi&lt;/span&gt;&lt;/code&gt; について、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;ti&lt;/span&gt;&lt;/code&gt; = 負の無限大 のとき、型 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; は &lt;strong&gt;予測可能&lt;/strong&gt; であるという。&lt;/p&gt;
&lt;p&gt;ある &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;xi&lt;/span&gt;&lt;/code&gt; について、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;ti&lt;/span&gt;&lt;/code&gt; = 正の無限大 のとき、型 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; は &lt;strong&gt;不明確(ill-formed)&lt;/strong&gt; であるという。&lt;/p&gt;
&lt;p&gt;それ以外のとき、型 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt; は &lt;strong&gt;予測不能&lt;/strong&gt; であるという。 (これは、ある &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;xi&lt;/span&gt;&lt;/code&gt; のために &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;ti&lt;/span&gt;&lt;/code&gt; が有限であることを意味する)&lt;/p&gt;
&lt;p&gt;不明確(ill-formed)な集合には実用性がほとんど無いので、これ以上は議論しない。 上記について簡単に言えば、予測可能な型は全ての値が事前に分かっているが、予測不能な型ではいくつかの値がある特定の時間になるまで分からない。&lt;/p&gt;
&lt;h3&gt;操作の安定性&lt;/h3&gt;
&lt;p&gt;予測可能な型には2つの重要な特性がある:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;それらの要素から連続する整数への、順序を維持する写像が有る&lt;/li&gt;
&lt;li&gt;それらの値に対する時間長(duration)の演算は安定している&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この実用上の効果は時間長(duration)の計算を単純な整数の減算で実装できるということである。 予測可能な型の例は TAI timepoints およびグレゴリオ暦の日付である。&lt;/p&gt;
&lt;p&gt;予測できない型は正反対の特性を持っている:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;それらの要素から連続する整数への、順序を維持する写像が無い&lt;/li&gt;
&lt;li&gt;それらの値に対する時間長(duration)の演算は安定していない&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;予測できない型の例は UTC timepoints および地域時間 timepoints である。&lt;/p&gt;
&lt;p&gt;予測不能な型の中の範囲が予測可能であり得ると示すことによって、これを少し改善することができる。また、完全にその範囲内で実行された演算は安定しているであろう。 例えば、UTC timepoints において 1970-01-01 から現在までの範囲は予測可能である。したがって、その範囲内での時間長(duration)の計算は安定しているであろう。&lt;/p&gt;
&lt;h3&gt;近似(Approximations)&lt;/h3&gt;
&lt;p&gt;UTC と 地域時間のような重要な時間型が実際には予測不能なので、これらの制限は問題である。また、したがって、それらに対する演算は時々不安定である。しかし、実用上の問題として、地域時間で指定される将来の 2つの時間位置(timepoints)の間の時間長(duration)を計算するようなこの種の演算を実行したいことが多々ある。&lt;/p&gt;
&lt;p&gt;このライブラリにできる最善策は、近似値(一般に可能で、大抵の用途で十分である)を提供することである。 もちろん、文書は、答えが近似値(したがって不安定である)であること、そしてエラーがどの位の大きさになり得るのか明示しなくてはならない。 多くの点で、予測不能な集合での計算は浮動小数点数の使用(結果がほぼ正確だろうと期待されるだけ)に似ている。 予測可能な集合での計算は整数の使用と似ており、そして結果が正確であると期待される。&lt;/p&gt;
&lt;p&gt;正確な答えが要求されたり、不安定さを許容できない状況のために、ユーザがそれを明示できなければならない。 そして、ユーザが正確で安定した答えが得られないような計算を要求すれば、ライブラリは例外を投げるべきである。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Date-Time Terminology -- Posix Timeのインデックス名を、他に合わせて修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/basic_terms.html"/>
      <id>7f58c07e51ccc8e8dc377cb57ea5cb20e49e92ac:archive/boost_docs/libs/date_time/basic_terms.md</id>
      <updated>2014-11-20 20:21:33 +0900</updated>
      
        <content type="html">&lt;h1&gt;Date-Time Terminology&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下は日付・時間分野に関する用語である。&lt;/p&gt;
&lt;p&gt;時間型の分類:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;時間位置(Timepoint)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時間連続体(time continuum)の中の特定の位置を表す。定規の目盛に似ている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間長(Timelength)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時間連続体中のどの時間位置にも関係しない時間の長さ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間間隔(Timeinterval)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時間連続体中の特定の時間位置に関係する時間の長さ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;他の用語:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;正確度(Accuracy)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;誤差の単位, クロックから読み出した時間と真の時間との差&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;暦法系(Calendar System)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;日付レベルの分解能で時間位置(time points)にラベルを付ける体系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;クロックデバイス&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;暦法系あるいは時法系に関して現在の日付や時刻を供給する(あるハードウェアに結び付けられた)ソフトウェアコンポーネント。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精密度(Precision)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;クロック間隔の計測単位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分解能(Resolution)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時法系/暦法系あるいは時間型で表現可能な最小の時間間隔(例: 1秒，一世紀)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安定性(Stability)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;根本的な表現（実装）が特定の（抽象的な）値に関連付いたことを示すクラスの特性は決して変化しない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時法系(Time System)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;日付レベルより高い分解能で時間位置(time points)にラベル付けするための体系。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;標準的な日付・時間用語:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;エポック(Epoch)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時法系/暦法系の始点となる時間位置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;夏時間(DST)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Daylight Savings Time; いくつかの地域で夏期に日照時間を延長するために使われている地域時間の調整&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間帯(Time zone)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;「地域時間」を提供するために、夏時間(DST)規則と協定標準時(UT)からのオフセットで定義される地球上の地域&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;協定標準時(UTC Time)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Coordinated Universal Time; 経度0 で計測される民間の時法系。 うるう秒を使用することで、地球自転に適応されている。 ズールー時間(Zulu Time)として知られる。 グリニッジ標準時(Greenwich Mean Time)として知られている類似の時法系を置き換えた。 詳細は &lt;a href=&#34;http://aa.usno.navy.mil/faq/docs/UT.html&#34; target=&#34;_blank&#34;&gt;http://aa.usno.navy.mil/faq/docs/UT.html&lt;/a&gt; を参照されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TAI Time&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;世界中の原子時計を使って 0.1 マイクロ秒の分解能で計測される、高精度で単調な時法系(もっと良い用語が必要)。 地球の自転には適応していない。詳細は &lt;a href=&#34;http://www.bipm.fr/enus/5_Scientific/c_time/time_server.html&#34; target=&#34;_blank&#34;&gt;http://www.bipm.fr/enus/5_Scientific/c_time/time_server.html&lt;/a&gt; を参照されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらにいくつかの実験的なもの:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;地域時間(Local Time)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;世界の特定の地域で測定される時間&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Time Label&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;暦法系あるいは時法系に関して、完全にあるいは部分的に特定の日付時間を明示するタプル。これは年-月-日の表現である。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間長の調整(Adjusting Time Length)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;その時々に依存した物理的な時間の長さを表現する時間長(duration)。 例えば、1ヶ月間の時間長(duration)は一般に日数の定数ではない。 その実際の長さは、評価する日付に依存して決定される。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;設計に関する用語:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;生成関数(Generation function)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一つ以上のパラメータからなる特定の時間位置(time points), 長さ(length), あるいは間隔(intervals)の集合を生成する関数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;訳注: &lt;/p&gt;
&lt;p&gt;時間用語の訳語について、国土地理院の地理情報標準第2版にある&lt;a href=&#34;http://www.gsi.go.jp/GIS/stdind/stdindpdf/jsgi02.pdf&#34; target=&#34;_blank&#34;&gt;時間スキーマ&lt;/a&gt;を参考にしてみました。&lt;/p&gt;
&lt;p&gt;Accuracy と Precision の使い分けは&lt;a href=&#34;http://www.mathworks.com/access/helpdesk/jhelp/toolbox/daq/c1_int15.shtml&#34; target=&#34;_blank&#34;&gt;ここ&lt;/a&gt;を参考にしました。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gregorian::date -- Posix Timeのインデックス名を、他に合わせて修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html"/>
      <id>7f58c07e51ccc8e8dc377cb57ea5cb20e49e92ac:archive/boost_docs/libs/date_time/class_date.md</id>
      <updated>2014-11-20 20:21:33 +0900</updated>
      
        <content type="html">&lt;h1&gt;gregorian::date&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Date Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html#header&#34;&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html#construction&#34;&gt;Construction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html#construct-from-string&#34;&gt;Construct from String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html#construct-from-clock&#34;&gt;Construct from Clock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html#accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html#conversion-to-string&#34;&gt;Conversion To String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html#operators&#34;&gt;Operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;boost::gregorian::date&lt;/span&gt;&lt;/code&gt; クラスはライブラリユーザーにとって主要なインタフェースである。 一般に、日付クラスは代入可能ではあるが、一度構築されると不変である事が多い。&lt;/p&gt;
&lt;p&gt;日付の生成について別の方法が&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_iterators.html&#34;&gt;date iterators&lt;/a&gt;と&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_algorithms.html&#34;&gt;date algorithms or generators&lt;/a&gt;に含まれている。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/header&#34; name=&#34;header&#34;&gt;Header&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//全ての型とI/Oを含む&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

もしくは&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian_types.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//型のみでI/Oは含まない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/construction&#34; name=&#34;construction&#34;&gt;Construction&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date(greg_year year, greg_month month, greg_day day)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日付の要素から構築する。year, month, day の範囲が不正な場合、それぞれ &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::out_of_range&lt;/span&gt;&lt;/code&gt; から派生した &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bad_year&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bad_day_of_month&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bad_day_month&lt;/span&gt;&lt;/code&gt; 例外を投げる。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(2002,Jan,10)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date(date d)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コピーコンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d1(d)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date(special_values sv)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;無限大、無効値(not-a-date-time)、最大値、最小値を構築するコンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d1(neg_infin);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d2(pos_infin);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d3(not_a_date_time);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d4(max_date);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d5(min_date);&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/construct-from-string&#34; name=&#34;construct-from-string&#34;&gt;Construction From String&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date from_string(const std::string&amp;amp;)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年-月-日の順に区切られた文字列から　例:2002-1-25&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string ds(&#34;2002/1/25&#34;);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(from_string(ds))&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date from_undelimited_string(const std::string&amp;amp;)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年-月-日の順のISO形式から　例:20020125&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string ds(&#34;20020125&#34;);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(from_string(ds))&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/construct-from-clock&#34; name=&#34;construct-from-clock&#34;&gt;Construction From Clock&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;day_clock::local_day()&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;計算機に設定された時間帯に準じた地域時間を取得する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(day_clock::local_day())&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;day_clock::universal_day()&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC 標準時を取得する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(day_clock::universal_day())&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/accessors&#34; name=&#34;accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_month month() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の部分を取得&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(2002,Jan,10); d.month() --&amp;gt; 1;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_day day() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日の部分を取得&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(2002,Jan,10); d.day() --&amp;gt; 10;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_ymd year_month_day() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_ymd&lt;/span&gt;&lt;/code&gt; 構造体を返す&lt;br /&gt; 日付の3つの要素全てが必要なときに便利である&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(2002,Jan,10);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date::ymd_type ymd = d.year_month_day(); ymd.year --&amp;gt; 2002, ymd.month --&amp;gt; 1, ymd.day --&amp;gt; 10&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_day_of_week day_of_week() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;曜日を返す(例: &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Sunday&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Monday&lt;/span&gt;&lt;/code&gt;, etc.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(2002,Jan,10); d.day() --&amp;gt; Thursday;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool is_infinity() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日付が正または負の無限大の時 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt; を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(pos_infin); d.is_infinity() --&amp;gt; true;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool is_neg_infinity() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日付が負の無限大の時 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt; を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(neg_infin); d.is_neg_infinity() --&amp;gt; true;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool is_pos_infinity() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日付が正の無限大の時 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt; を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(neg_infin); d.is_pos_infinity() --&amp;gt; true;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool is_not_a_date() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日付が無効値(not a date)の時 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt; を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(not_a_date_time); d.is_not_a_date() --&amp;gt; true;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/conversion-to-string&#34; name=&#34;conversion-to-string&#34;&gt;Conversion To String&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string to_simple_string(date d)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;YYYY-mmm-DD (mmm は月名の3文字短縮形)形式に変換&lt;/td&gt;
&lt;td&gt;2002-Jan-01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string to_iso_string(date d)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;YYYYMMDD 形式に変換&lt;/td&gt;
&lt;td&gt;20020131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string to_iso_extended_string(date d)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;YYYY-MM-DD 形式に変換&lt;/td&gt;
&lt;td&gt;2002-01-31&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/operators&#34; name=&#34;operators&#34;&gt;Operators&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;lt;&amp;lt;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ストリーム出力演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(2002,Jan,1);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::cout &amp;lt;&amp;lt; d &amp;lt;&amp;lt; std::endl;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator==, operator!=,&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;, operator&amp;lt;,&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;=, operator&amp;lt;=&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;サポートする比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;d1 == d2&lt;/span&gt;&lt;/code&gt;, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date operator+(date_duration) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;オフセット日数 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration&lt;/span&gt;&lt;/code&gt; を加えた日付を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(2002,Jan,1);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd(1);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d2 = d + dd;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date operator-(date_duration) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;オフセット日数 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration&lt;/span&gt;&lt;/code&gt; を差し引いた日付を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d(2002,Jan,1);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd(1);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d2 = d - dd;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration operator-(date) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2つの日付を差し引いた日数(date duration)を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d1(2002,Jan,1);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d2(2002,Jan,2);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd = d2-d1;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gregorian::date_duration -- Posix Timeのインデックス名を、他に合わせて修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_duration.html"/>
      <id>7f58c07e51ccc8e8dc377cb57ea5cb20e49e92ac:archive/boost_docs/libs/date_time/class_date_duration.md</id>
      <updated>2014-11-20 20:21:33 +0900</updated>
      
        <content type="html">&lt;h1&gt;gregorian::date_duration&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Date Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_duration.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_duration.html#header&#34;&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_duration.html#construction&#34;&gt;Construction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_duration.html#accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_duration.html#operators&#34;&gt;Operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;boost::gregorian::date_duration&lt;/span&gt;&lt;/code&gt; は，&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;gregorian::date&lt;/span&gt;&lt;/code&gt;の演算で使うシンプルな日数を表すクラスである。durationの値は正と負どちらも使用できる。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/header&#34; name=&#34;header&#34;&gt;Header&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//全ての型とI/Oを含む&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

もしくは&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian_types.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//型のみでI/Oは含まない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/construction&#34; name=&#34;construction&#34;&gt;Construction&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration(long)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日数を生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd(3); //3 日&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/accessors&#34; name=&#34;accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;long days() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日数を取得&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd(3); dd.days() --&amp;gt; 3&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool is_negative() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日数が&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;0&lt;/span&gt;&lt;/code&gt;より小さいとき&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd(-1); dd.is_negative() --&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;static date_duration unit()&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;duration type の取りうる最小単位を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration::unit() --&amp;gt; date_duration(1)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/operators&#34; name=&#34;operators&#34;&gt;Operators&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator==, operator!=,&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;, operator&amp;lt;&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;=, operator&amp;lt;=&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;サポートする比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dd1 == dd2&lt;/span&gt;&lt;/code&gt;, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration operator+(date_duration) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日数を加算する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd1(3);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd2(5);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd3 = dd1 + dd2;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration operator-(date_duration) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日数の差を取る&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd1(3);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd2(5);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_duration dd3 = dd1 - dd2;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gregorian::date_period -- Posix Timeのインデックス名を、他に合わせて修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html"/>
      <id>7f58c07e51ccc8e8dc377cb57ea5cb20e49e92ac:archive/boost_docs/libs/date_time/class_date_period.md</id>
      <updated>2014-11-20 20:21:33 +0900</updated>
      
        <content type="html">&lt;h1&gt;gregorian::date_period&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Date Period Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html#header&#34;&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html#construction&#34;&gt;Construction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html#accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html#conversion-to-string&#34;&gt;Conversion To String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html#operators&#34;&gt;Operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;boost::gregorian::date_period&lt;/span&gt;&lt;/code&gt; クラスは、二つの日付の範囲(期間)を直接表現する。 プログラムの条件付きの論理を単純化することによって、ある種の計算を単純化する能力を提供する。 例えば、日付が週末あるいは休日のような不規則なスケジュールの中であるかどうか試すのは &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period&lt;/span&gt;&lt;/code&gt; のコレクションを使って達成され得る。 これは、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period&lt;/span&gt;&lt;/code&gt; が別の期間(date period)と重複する場合に評価を許可する、あるいは重複している期間を生成する、といったいくつかの方法によって容易になる。 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/period_calc.cpp.html&#34;&gt;period calculation example(期間計算の例)&lt;/a&gt; はこの例を提供する。&lt;/p&gt;
&lt;p&gt;無限値と組み合わせて使用される期間(date periods)は、「追って通知があるまで」といった複雑な概念を表現する能力を持っている。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/header&#34; name=&#34;header&#34;&gt;Header&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//全ての型とI/Oを含む&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

もしくは&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian_types.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//型のみでI/Oは含まない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/construction&#34; name=&#34;construction&#34;&gt;Construction&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period(date begin, date last)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;[begin, last)&lt;/span&gt;&lt;/code&gt; で表される期間(period)を生成する。&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;last &amp;lt;= begin&lt;/span&gt;&lt;/code&gt; のときは null となる。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp(date(2002,Jan,10), date_duration(2));&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period(date start, date end)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;[begin, begin+len)&lt;/span&gt;&lt;/code&gt;で表される期間(period)を生成する。&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;len &amp;lt;= 0&lt;/span&gt;&lt;/code&gt; のときは null となる。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp(date(2002,Jan,10), date_duration(2));&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period(date_period rhs)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コピーコンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp1(dp)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/accessors&#34; name=&#34;accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date begin() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;期間(period)の初日を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp.begin() --&amp;gt; 2002-Jan-01&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date last() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;期間(period)の最終日を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp.last() --&amp;gt; 2002-Jan-09&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date end() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;期間(period)の最終日の翌日を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp.end() --&amp;gt; 2002-Jan-10&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool is_null() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;期間(period)が正しい形式でないとき&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; 例: &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;end&lt;/span&gt;&lt;/code&gt;が&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;start&lt;/span&gt;&lt;/code&gt;より小さい&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp(date(2002,Jan,10), date(2002,Jan,1));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp.is_null() --&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool contains(date) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日付が期間(period)の範囲内にあるとき&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp.contains(date(2002,Jan,2)) --&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool contains(date_period) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period&lt;/span&gt;&lt;/code&gt; が期間(period)の範囲内にあるとき&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp1(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp2(date(2002,Jan,2), date(2002,Jan,3));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp1.contains(dp2) --&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp2.contains(dp1) --&amp;gt; false&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool intersects(date_period) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;期間(period)が重複するとき&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp1(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp2(date(2002,Jan,2), date(2002,Jan,3));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp2.intersects(dp1) --&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period intersection(date_period) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2つの期間(period)から重複する期間(period)を計算する。 期間(period)が重複しないときは null が返る&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp1(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp2(date(2002,Jan,2), date(2002,Jan,3));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp2.intersects(dp1) --&amp;gt; dp2&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period merge(date_period) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2つの期間(period)を結合して返す。期間(period)が重複しないときは null が返る&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp1(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp2(date(2002,Jan,9), date(2002,Jan,31));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp2.intersects(dp1) --&amp;gt; 2002-Jan-01/2002-Jan-31&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period shift(date_duration)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;初日と最終日に日数(date_duration)を加算する。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_period dp1(date(2002,Jan,1), date(2002,Jan,10));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp1.shift(date_duration(1)); --&amp;gt; 2002-Jan-02/2002-Jan-11&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/conversion-to-string&#34; name=&#34;conversion-to-string&#34;&gt;Conversion To String&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string to_simple_string(date_period dp)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;[YYYY-mmm-DD/YYYY-mmm-DD] (mmm は月名の3文字短縮形)形式の文字列に変換&lt;/td&gt;
&lt;td&gt;[2002-Jan-01/2002-Jan-31]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/operators&#34; name=&#34;operators&#34;&gt;Operators&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator==, operator!=,&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;, operator&amp;lt;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;サポートする比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp1 == dp2&lt;/span&gt;&lt;/code&gt;, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;lt;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp1.end()&lt;/span&gt;&lt;/code&gt;が&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp2.begin()&lt;/span&gt;&lt;/code&gt;よりも小さいとき &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp1 &amp;lt; dp2&lt;/span&gt;&lt;/code&gt;, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp1.begin()&lt;/span&gt;&lt;/code&gt;が&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp2.end()&lt;/span&gt;&lt;/code&gt;よりも大きいとき &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dp1 &amp;gt; dp2&lt;/span&gt;&lt;/code&gt;, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gregorian::gregorian_calendar -- Posix Timeのインデックス名を、他に合わせて修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/class_gregorian_calendar.html"/>
      <id>7f58c07e51ccc8e8dc377cb57ea5cb20e49e92ac:archive/boost_docs/libs/date_time/class_gregorian_calendar.md</id>
      <updated>2014-11-20 20:21:33 +0900</updated>
      
        <content type="html">&lt;h1&gt;gregorian::gregorian_calendar&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Date Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_gregorian_calendar.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_gregorian_calendar.html#header&#34;&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_gregorian_calendar.html#functions&#34;&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;boost::gregorian::gregorian_calendar&lt;/span&gt;&lt;/code&gt; クラスは、グレゴリオ暦の日付システムを生成するのに必要な機能を実装する。 これは、年-月-日 形式の日付と日付番号表現との相互変換を行う。&lt;/p&gt;
&lt;p&gt;このクラスは、主に &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;gregorian::date&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; によってアクセスされることを意図しており、ユーザによって直接使用される事はない。 しかしながら、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;end_of_month_day&lt;/span&gt;&lt;/code&gt;機能に役に立つ、有用な機能がある。&lt;/p&gt;
&lt;p&gt;サンプル &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/print_month.cpp.html&#34;&gt;print month&lt;/a&gt; で、この例を説明している。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/header&#34; name=&#34;header&#34;&gt;Header&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//全ての型とI/Oを含む&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

もしくは&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian_types.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//型のみでI/Oは含まない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/functions&#34; name=&#34;functions&#34;&gt;Functions&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;static short day_of_week(ymd_type)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;曜日を返す (0==Sunday, 1==Monday, etc)&lt;/td&gt;
&lt;td&gt;参照: &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;gregorian::date day_of_week&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;static date_int_type day_number(ymd_type)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;ymd_type&lt;/span&gt;&lt;/code&gt; を日付番号に変換する。日付番号は、エポック(Epoch)からの通算日数の絶対値である&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;static short end_of_month_day(year_type, month_type)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた年と月から、その月の最終日を決定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;static ymd_type from_day_number(date_int_type)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日付番号を &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;ymd&lt;/span&gt;&lt;/code&gt; 構造体に変換する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;static bool is_leap_year(year_type)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した年がうるう年なら &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt; を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;gregorian_calendar::is_leap_year(2000) --&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Date Generators / Algorithms -- Posix Timeのインデックス名を、他に合わせて修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/date_algorithms.html"/>
      <id>7f58c07e51ccc8e8dc377cb57ea5cb20e49e92ac:archive/boost_docs/libs/date_time/date_algorithms.md</id>
      <updated>2014-11-20 20:21:33 +0900</updated>
      
        <content type="html">&lt;h1&gt;Date Generators / Algorithms&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Date Generators / Algorithms&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_algorithms.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_algorithms.html#header&#34;&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_algorithms.html#class-overview&#34;&gt;Class Overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;日付アルゴリズムあるいはジェネレータは、他の日付あるいは日付のスケジュールを生成するためのツールである。 生成関数は、月と日のような日付のある部分で始まり、その後、具体的な日付を生成するために残りの部分を供給される。 これは、プログラマが「2月の最初の日曜日」のような概念を表わし、次に、1つ以上の年を供給された時に日付の具体的なセットを生成することを想定している。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; boost&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;gregorian; 
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; boost&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;date_time&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;nth_kday_of_month&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;date&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; nkday;
nkday &lt;span style=&#34;color: #0000FF&#34;&gt;ldgen&lt;/span&gt;(nkday&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;first, Monday, Sep)); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// US labor day (アメリカ合衆国 労働者の日)&lt;/span&gt;
date labor_day &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; ldgen.get_date(&lt;span style=&#34;color: #666666&#34;&gt;2002&lt;/span&gt;); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 2002年の労働者の日を計算&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/print_holidays.cpp.html&#34;&gt;print holidays example&lt;/a&gt; に詳細な使い方の例を示す。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/header&#34; name=&#34;header&#34;&gt;Header&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/date_generators.hpp&#34; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class-overview&#34; name=&#34;class-overview&#34;&gt;Class Overview&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Class&lt;/th&gt;
&lt;th&gt;Construction Parameters&lt;/th&gt;
&lt;th&gt;get_date Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;first_kday_after&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_day_of_week day_of_week&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date start_day&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2002年1月1日以降の最初の日曜日のといったものを計算する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;first_kday_after fkaf(Monday);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d = fkaf.get_date(date(2002,Jan,1));//2002-Jan-07&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;first_kday_before&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_day_of_week day_of_week&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date start_day&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2002年2月1日以前の最初の月曜日といったものを計算する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;first_kday_before fkbf(Monday);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d = fkbf.get_date(date(2002,Feb,1));//2002-Jan-28&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;last_kday_of_month&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_day_of_week day_of_week&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_month month&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_year year&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月最後の月曜日といったものを計算する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;last_kday_of_month lkm(Monday,Jan);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d = lkm.get_date(2002);//2002-Jan-28&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;first_kday_of_month&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_day_of_week day_of_week&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_month month&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_year year&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月最初の月曜日といったものを計算する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;first_kday_of_month fkm(Monday,Jan);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d = fkm.get_date(2002);//2002-Jan-07&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;partial_date&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_month month&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_day day_of_month&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;greg_year year&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月および日を与えられた日付に、年を適用することにより日付を生成する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;partial_date pd(Jan,1);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date d = pd.get_date(2002);//2002-Jan-01&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Tue Sep 3 16:02:55 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gregorian::date iterators -- Posix Timeのインデックス名を、他に合わせて修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/date_iterators.html"/>
      <id>7f58c07e51ccc8e8dc377cb57ea5cb20e49e92ac:archive/boost_docs/libs/date_time/date_iterators.md</id>
      <updated>2014-11-20 20:21:33 +0900</updated>
      
        <content type="html">&lt;h1&gt;gregorian::date iterators&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Date Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_iterators.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_iterators.html#header&#34;&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_iterators.html#class-overview&#34;&gt;Class Overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;日付イテレータは、日単位で反復するための標準的なメカニズムを提供する。 日付イテレータは(STLの)&lt;a href=&#34;http://www.sgi.com/tech/stl/InputIterator.html&#34; target=&#34;_blank&#34;&gt;入力イテレータ&lt;/a&gt;のモデルであり、日付と他の日付生成タスクで集合を代入するために使われる。 例えば、&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/print_month.cpp.html&#34;&gt;print month の例&lt;/a&gt;では、1ヶ月の全ての日々を反復し、それらをプリントする。&lt;/p&gt;
&lt;p&gt;ここにあるイテレータは全て &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;boost::gregorian::date_iterator&lt;/span&gt;&lt;/code&gt; からの派生である。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/header&#34; name=&#34;header&#34;&gt;Header&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//全ての型とI/Oを含む&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

もしくは&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/gregorian/gregorian_types.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//型のみでI/Oは含まない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class-overview&#34; name=&#34;class-overview&#34;&gt;Class Overview&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Class&lt;/th&gt;
&lt;th&gt;Construction Parameters&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_iterator&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;全ての日付単位イテレータに共通な基底クラス&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;day_iterator&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date start_date, int day_count=1&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;day_count&lt;/span&gt;&lt;/code&gt; 日単位で反復する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;week_iterator&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date start_date, int week_offset=1&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;week_offset&lt;/span&gt;&lt;/code&gt; 週単位で反復する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;month_iterator&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date start_date, int month_offset=1&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;month_offset 月単位で反復する。&lt;br /&gt; 月末の取り扱いについては、特別な規則がある。 それは、最初の日が月の最終日であるときは、常にその月の最終日に合わせて調整されるというものである。 日付がその月末を越えている場合(例: 1月31日+1ヶ月)、月の最終日に合わせて調整される。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;year_iterator&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date start_date, int year_offset=1&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;year_offset&lt;/span&gt;&lt;/code&gt; 年単位で反復する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Date-Time Concepts - Calculation -- Boost.DateTime : 計算コンセプトの翻訳ドキュメントを追加</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/calculations.html"/>
      <id>11a3ff527e8d6ed105f07d22890924c9799fa42e:archive/boost_docs/libs/date_time/calculations.md</id>
      <updated>2014-11-20 20:19:25 +0900</updated>
      
        <content type="html">&lt;h1&gt;Date-Time Concepts - Calculation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Calculation Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/calculations.html#timepoints&#34;&gt;Timepoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/calculations.html#durations&#34;&gt;Durations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/calculations.html#interval&#34;&gt;Interval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/calculations.html#special-cases&#34;&gt;Special Cases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/timepoints&#34; name=&#34;timepoints&#34;&gt;Timepoints&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このセクションでは，GDTL timepoints で行える基本的な算術規則をいくつか示す。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Timepoint &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; Duration &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Timepoint
Timepoint &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt; Duration &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Timepoint

Duration &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; Timepoint &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Undefined 
Duration &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt; Timepoint &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Undefined

Timepoint &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; Timepoint &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Undefined
Timepoint &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt; Timepoint &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Duration
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/durations&#34; name=&#34;durations&#34;&gt;Durations&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このセクションでは時間長(time duration)に関する標準的な演算を示す。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Duration &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; Duration  &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Duration
Duration &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt; Duration  &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Duration

Duration &lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt; Integer   &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Duration  
Integer  &lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt; Duration  &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Duration  

Duration(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt; Integer &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Duration(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;) 
Duration(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;Integer   &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Duration(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;) 
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/interval&#34; name=&#34;interval&#34;&gt;Intervals&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ここに時間間隔(intervals)によって支援された&#34;演算&#34;がある。 それらは半開区間に基づいている。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//These can be defined by either of 2 Timepoints or a Timepoint and Duration&lt;/span&gt;
Timeinterval intersects Timeinterval &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt;
Timeinterval intersection Timeinterval &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Timeperiod &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//results undefined if no intersection &lt;/span&gt;
Timeinterval contains  Timepoint    &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt;
Timeinterval contains  Timeinterval &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt;  
Timeinterval shift Duration         &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; shift start and end by duration amount
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/special-cases&#34; name=&#34;special-cases&#34;&gt;Special Cases&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一般に，非日時値(NADT;Not A Date Time)や無限大といった特別な値は，浮動小数点値のような規則に従うべきである。 戻り値として NADT を返す代わりに，例外を投げるNADTに基づいたシステムを形成することが可能であるべきであることに注意する必要がある。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Timepoint(NADT) &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; Duration &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Timepoint(NADT)
Timepoint(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; Duration &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Timepoint(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;)
Timepoint &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; Duration(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Timepoint(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;)
Timepoint &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt; Duration(&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;--&amp;gt;&lt;/span&gt; Timepoint(&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;∞&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost Date-Time Library Documentation -- ページ名の先頭が大文字の場合はhtmlに変換しないルールだったので(READMEとかのため)、ページ名を修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time.html"/>
      <id>282fae150552720ecc34e94428ffe68e2a2289eb:archive/boost_docs/libs/date_time.md</id>
      <updated>2014-11-20 18:14:53 +0900</updated>
      
        <content type="html">&lt;h1&gt;Boost Date-Time Library Documentation&lt;/h1&gt;
&lt;p&gt;Version 1.00&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;翻訳元ドキュメント： &lt;a href=&#34;http://www.boost.org/doc/libs/1_31_0/libs/date_time/doc/index.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/1_31_0/libs/date_time/doc/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;概要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#usage-examples&#34;&gt;Usage Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#domain-concepts&#34;&gt;Domain Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#tests&#34;&gt;Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#design-and-extensions&#34;&gt;Design and Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html#more-info&#34;&gt;More Info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/build_info.html&#34;&gt;Build-Compiler Information&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;日付プログラミング&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorian Date System&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date.html&#34;&gt;Class date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_duration.html&#34;&gt;Class date_duration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_date_period.html&#34;&gt;Class date_period&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_iterators.html&#34;&gt;Date Iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/date_algorithms.html&#34;&gt;Date Generators / Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_gregorian_calendar.html&#34;&gt;Class gregorian_calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/class_date.html#construct-from-clock&#34;&gt;Class day_clock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;時間プログラミング&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Time System&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_ptime.html&#34;&gt;Class ptime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html&#34;&gt;Class time_duration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_period.html&#34;&gt;Class time_period&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/time_iterators.html&#34;&gt;Time Iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/local_time_adjust.html&#34;&gt;UTC / Local Time Adjustments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ジェネリックプログラミングの概念に基づいた日付・時間ライブラリ&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/motivation&#34; name=&#34;motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このライブラリの開発動機は、多くのプロジェクトの多くの日付時間ライブラリで動作すること、また、それらの構築を手助けすることである。 日付時間ライブラリは多くの開発プロジェクトに対して、基礎的な構造を提供する。 しかしそれらの多くは、計算、書式化、変換、その他のいくつかの機能に限界がある。 例えば多くのライブラリは、うるう秒を正しく扱うこと、無限のような概念を提供すること、高分解能の時間資源やネットワーク上の時間資源を利用することが出来ない。 そのうえ、これらのライブラリは、どれも日付や時間の表現形式が厳密である傾向にあるため、プロジェクトやサブプロジェクトのためにカスタマイズすることが出来ない。&lt;/p&gt;
&lt;p&gt;日付や時間に関するプログラミングは、文字列や整数に関するプログラミングと同じくらいシンプルで自然であるべきである。 多くの時間論理を備えたアプリケーションは、演算子と計算能力の頑健な集合により、根本的に単純化することができる。 クラスは日付時間の比較、時間の長さ(length)や期間(duration)の加算、時計からの日付時間の取得、日付時間間隔(interval)に関する自然な動作を提供すべきである。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/usage-examples&#34; name=&#34;usage-examples&#34;&gt;Usage Examples&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;次に，グレゴリオ暦システムの使用例を示す。 詳細は「&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;日付プログラミング&lt;/a&gt;」で解説する。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; boost&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;gregorian; 
date &lt;span style=&#34;color: #0000FF&#34;&gt;weekstart&lt;/span&gt;(&lt;span style=&#34;color: #666666&#34;&gt;2002&lt;/span&gt;,Feb,&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);
date &lt;span style=&#34;color: #0000FF&#34;&gt;weekend&lt;/span&gt;  (&lt;span style=&#34;color: #666666&#34;&gt;2002&lt;/span&gt;,Feb,&lt;span style=&#34;color: #666666&#34;&gt;7&lt;/span&gt;);
date_duration &lt;span style=&#34;color: #0000FF&#34;&gt;fiveDays&lt;/span&gt;(&lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;); 
date d3 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; d1 &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; fiveDays;
date today &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; day_clock&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;local_day();
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (d3 &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;=&lt;/span&gt; today) {} &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//date comparison operators&lt;/span&gt;

date_period thisWeek(d1,d2);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (thisWeek.contains(today)) {}&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//do something&lt;/span&gt;

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//iterate and print the week&lt;/span&gt;
day_iterator itr(weekstart);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (; itr &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;=&lt;/span&gt; weekend; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;itr) {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; to_iso_extended_string(&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;itr) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;

そして &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;posix_time&lt;/span&gt;&lt;/code&gt; システムの使用例である。 詳細は「&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;時間プログラミング&lt;/a&gt;」で解説する。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; boost&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;posix_time; 
date &lt;span style=&#34;color: #0000FF&#34;&gt;d&lt;/span&gt;(&lt;span style=&#34;color: #666666&#34;&gt;2002&lt;/span&gt;,Feb,&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//an arbitrary date&lt;/span&gt;
ptime &lt;span style=&#34;color: #0000FF&#34;&gt;t1&lt;/span&gt;(d, hours(&lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;nanosec(&lt;span style=&#34;color: #666666&#34;&gt;100&lt;/span&gt;));&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//date + time of day offset&lt;/span&gt;
ptime t2 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; t1 &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt; minutes(&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;seconds(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;);
ptime now &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; second_clock&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;local_time(); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//use the clock&lt;/span&gt;
&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//Get the date part out of the time&lt;/span&gt;
date today &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; now.date();
date tommorrow &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; today &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; date_duration(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);
ptime &lt;span style=&#34;color: #0000FF&#34;&gt;tommorrow_start&lt;/span&gt;(tommorrow); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//midnight &lt;/span&gt;

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//starting at current time iterator adds by one hour&lt;/span&gt;
time_iterator &lt;span style=&#34;color: #0000FF&#34;&gt;titr&lt;/span&gt;(now,hours(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;)); 
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (; titr &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; tommorrow_start; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;titr) {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; to_simple_string(&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;titr) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/domain-concepts&#34; name=&#34;domain-concepts&#34;&gt;Domain Concepts&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;日付・時間の分野には専門用語と問題が多い。以下はライブラリ中に見られる概念の簡単な紹介である。&lt;/p&gt;
&lt;p&gt;このライブラリは3つの基本的な時間型をサポートする。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Time Point&lt;ul&gt;
&lt;li&gt;時間位置。時刻。連続する時間内での位置を示す&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Time Duration&lt;ul&gt;
&lt;li&gt;時間長。時間連続体においてどの位置にも結びついていない時間の長さ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Time Interval&lt;ul&gt;
&lt;li&gt;時間間隔。時間連続体の特定の位置に結びついた時間長。期間とも&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの時間型にはそれぞれ表現可能な最小の時間間隔(duration)で定義される &lt;strong&gt;分解能&lt;/strong&gt; がある。 &lt;strong&gt;時法系(Time system)&lt;/strong&gt; は、時刻にラベルを付けて計算するための規則はもちろんのこと、これらすべての時間型も提供する。 &lt;strong&gt;暦法系(Calendar system)&lt;/strong&gt; は最大の分解能(1日)を持っている簡素な時法系である。 &lt;strong&gt;グレゴリオ暦&lt;/strong&gt; は今日最も広く使われている暦法系である(ISOシステムは基本的にこれの派生物である)。 しかし、他にも多くの暦法系がある。 &lt;strong&gt;UTC(Coordinated Universal Time;協定標準時)&lt;/strong&gt; は広く使われている民間の時法系である。UTC がうるう秒（これは、必要に応じて適用されるもので、予測可能ではない）の使用によって経度0において地球自転に対して調整される。 たいていの &lt;strong&gt;地域時間システム&lt;/strong&gt; が UTC に基づいているが、地球自転に対して同じように調整されるために、昼時間はどこでも同じである。 さらに、夏の昼時間を長くするためのサマータイム(DST)調整を含む地域時間もある。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;クロックデバイス&lt;/strong&gt; は時法系に関して現在の日付あるいは時刻を供給する(あるハードウェアに結び付けられた)ソフトウェアコンポーネントである。&lt;/p&gt;
&lt;p&gt;ライブラリは日付と時間の計算をサポートする。しかしながら、時間の計算は整数の計算と全く同じというわけにはいかない。 もし、時間計算の正確度(accuracy)が重要ならば、&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/tradeoffs.html&#34;&gt;Stability, Predictability, and Approximations(安定性、予測性と近似)&lt;/a&gt;を読む必要がある。&lt;/p&gt;
&lt;p&gt;追加資料を以下に示す&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/basic_terms.html&#34;&gt;Basic Terminology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/caluculations.html&#34;&gt;Calculations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/tradeoffs.html&#34;&gt;安定性、予測性と近似&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/references.html&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/tests&#34; name=&#34;tests&#34;&gt;Tests&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ライブラリは、以下のディレクトリで多数のテストを提供している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libs/date_time/test &lt;/li&gt;
&lt;li&gt;libs/date_time/test/gregorian&lt;/li&gt;
&lt;li&gt;libs/date_time/test/posix_time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらのテストをビルドして実行することで、ライブラリが正しくインストールされ、確実に機能していることを確認できる。 加えて、これらのテストは新しいコンパイラへの移植を容易にする。 最後に、テストは使用例で明示的に記述されない多くの機能の例を提供する。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/design-and-extensions&#34; name=&#34;design-and-extensions&#34;&gt;Design and Extensions&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このライブラリの起源の大部分は（今まで）ほとんどの日付時間ライブラリがカスタマイズと拡張を許す方法で構築されないという観察であった。 典型的な例では、カレンダーロジックは直接日付クラスに構築される。 あるいは時計検索機能は直接時間クラスに作り上げられる。 これらのデザイン決定は通常、拡張したりライブラリの振る舞いを変更することを不可能にする。 もっと基本的なレベルにおいては、時間表現あるいはグレゴリオ暦の分解能について通常仮定がある。&lt;/p&gt;
&lt;p&gt;高分解能の時間表現やそれ以外の仮定からの要求を、時間ライブラリの実装が満たすことが出来ないために、結果的に不完全なライブラリを使わざるをえない、というのは、よくあることである。 この種のライブラリの開発は、まったく些細なことではないので、こういう結果は非常に残念なことである。&lt;/p&gt;
&lt;p&gt;（このライブラリの）設計は完璧というには程遠いが、それでも現在の設計は、著者の知るどんな時間ライブラリよりもはるかに柔軟である。 将来のバージョンでは、拡張性のさまざまな面について、さらに文書化されることが期待される。 ライブラリの設計目標についての情報は&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/DesignGoals.html&#34;&gt;ここ&lt;/a&gt;に要約されている。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/acknowledgements&#34; name=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many people have contributed to the development of this library. In particular Hugo Duncan and Joel de Guzman for help with porting to various compilers. For initial development of concepts and design Corwin Joy and Michael Kenniston deserve special thanks. Also extra thanks to Michael for writing up the theory and tradeoffs part of the documentation. Dave Zumbro for initial inspiration and sage thoughts. Many thanks to boost reviewers and users including: William Seymour, Kjell Elster, Beman Dawes, Gary Powell, Andrew Maclean, William Kempf, Peter Dimov, Chris Little, David Moore, Darin Adler, Gennadiy Rozental, Joachim Achtzehnter, Paul Bristow, Jan Langer, Mark Rodgers, Glen Knowles, Matthew Denman, and George Heintzelman.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/more-info&#34; name=&#34;more-info&#34;&gt;More Info&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;現在、ライブラリの設計はWikiと電子メールによる議論によって発展している。 詳しい情報はこちらへ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.crystalclearsoftware.com/cgi-bin/boost_wiki/wiki.pl?GDTL&#34; target=&#34;_blank&#34;&gt;Boost Wiki GDTL Start Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.crystalclearsoftware.com/libraries/date_time/index.html&#34; target=&#34;_blank&#34;&gt;Full Doxygen Reference Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Thu Sep 5 07:22:00 MST 2002 by Jeff Garland © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Date-Time Terminology -- ページ名の先頭が大文字の場合はhtmlに変換しないルールだったので(READMEとかのため)、ページ名を修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/basic_terms.html"/>
      <id>282fae150552720ecc34e94428ffe68e2a2289eb:archive/boost_docs/libs/date_time/basic_terms.md</id>
      <updated>2014-11-20 18:14:53 +0900</updated>
      
        <content type="html">&lt;h1&gt;Date-Time Terminology&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;posix_timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下は日付・時間分野に関する用語である。&lt;/p&gt;
&lt;p&gt;時間型の分類:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;時間位置(Timepoint)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時間連続体(time continuum)の中の特定の位置を表す。定規の目盛に似ている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間長(Timelength)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時間連続体中のどの時間位置にも関係しない時間の長さ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間間隔(Timeinterval)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時間連続体中の特定の時間位置に関係する時間の長さ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;他の用語:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;正確度(Accuracy)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;誤差の単位, クロックから読み出した時間と真の時間との差&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;暦法系(Calendar System)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;日付レベルの分解能で時間位置(time points)にラベルを付ける体系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;クロックデバイス&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;暦法系あるいは時法系に関して現在の日付や時刻を供給する(あるハードウェアに結び付けられた)ソフトウェアコンポーネント。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精密度(Precision)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;クロック間隔の計測単位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分解能(Resolution)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時法系/暦法系あるいは時間型で表現可能な最小の時間間隔(例: 1秒，一世紀)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安定性(Stability)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;根本的な表現（実装）が特定の（抽象的な）値に関連付いたことを示すクラスの特性は決して変化しない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時法系(Time System)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;日付レベルより高い分解能で時間位置(time points)にラベル付けするための体系。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;標準的な日付・時間用語:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;エポック(Epoch)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;時法系/暦法系の始点となる時間位置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;夏時間(DST)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Daylight Savings Time; いくつかの地域で夏期に日照時間を延長するために使われている地域時間の調整&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間帯(Time zone)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;「地域時間」を提供するために、夏時間(DST)規則と協定標準時(UT)からのオフセットで定義される地球上の地域&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;協定標準時(UTC Time)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Coordinated Universal Time; 経度0 で計測される民間の時法系。 うるう秒を使用することで、地球自転に適応されている。 ズールー時間(Zulu Time)として知られる。 グリニッジ標準時(Greenwich Mean Time)として知られている類似の時法系を置き換えた。 詳細は &lt;a href=&#34;http://aa.usno.navy.mil/faq/docs/UT.html&#34; target=&#34;_blank&#34;&gt;http://aa.usno.navy.mil/faq/docs/UT.html&lt;/a&gt; を参照されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TAI Time&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;世界中の原子時計を使って 0.1 マイクロ秒の分解能で計測される、高精度で単調な時法系(もっと良い用語が必要)。 地球の自転には適応していない。詳細は &lt;a href=&#34;http://www.bipm.fr/enus/5_Scientific/c_time/time_server.html&#34; target=&#34;_blank&#34;&gt;http://www.bipm.fr/enus/5_Scientific/c_time/time_server.html&lt;/a&gt; を参照されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらにいくつかの実験的なもの:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;地域時間(Local Time)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;世界の特定の地域で測定される時間&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Time Label&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;暦法系あるいは時法系に関して、完全にあるいは部分的に特定の日付時間を明示するタプル。これは年-月-日の表現である。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間長の調整(Adjusting Time Length)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;その時々に依存した物理的な時間の長さを表現する時間長(duration)。 例えば、1ヶ月間の時間長(duration)は一般に日数の定数ではない。 その実際の長さは、評価する日付に依存して決定される。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;設計に関する用語:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;生成関数(Generation function)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一つ以上のパラメータからなる特定の時間位置(time points), 長さ(length), あるいは間隔(intervals)の集合を生成する関数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;訳注: &lt;/p&gt;
&lt;p&gt;時間用語の訳語について、国土地理院の地理情報標準第2版にある&lt;a href=&#34;http://www.gsi.go.jp/GIS/stdind/stdindpdf/jsgi02.pdf&#34; target=&#34;_blank&#34;&gt;時間スキーマ&lt;/a&gt;を参考にしてみました。&lt;/p&gt;
&lt;p&gt;Accuracy と Precision の使い分けは&lt;a href=&#34;http://www.mathworks.com/access/helpdesk/jhelp/toolbox/daq/c1_int15.shtml&#34; target=&#34;_blank&#34;&gt;ここ&lt;/a&gt;を参考にしました。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Date-Time Build-Compiler Information -- ページ名の先頭が大文字の場合はhtmlに変換しないルールだったので(READMEとかのため)、ページ名を修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/build_info.html"/>
      <id>282fae150552720ecc34e94428ffe68e2a2289eb:archive/boost_docs/libs/date_time/build_info.md</id>
      <updated>2014-11-20 18:14:53 +0900</updated>
      
        <content type="html">&lt;h1&gt;Date-Time Build-Compiler Information&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Build-Compiler Information&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/build_info.html#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/build_info.html#compilation-options&#34;&gt;Compilation Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/compiler-portability-notes&#34;&gt;Compiler/Portability Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/build_info.html#directory-structure&#34;&gt;Directory Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/build_info.html#required-boost-libraries&#34;&gt;Required Boost Libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/overview&#34; name=&#34;overview&#34;&gt;Overview&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ライブラリ関数のいくつかはライブラリファイルを作成する必要がある。 これらの関数を含むライブラリ( &lt;strong&gt;libboost_date_time&lt;/strong&gt; )を作成するには、buildディレクトリにあるJamfileを使う。&lt;/p&gt;
&lt;p&gt;変数&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;DATE_TIME_INLINE&lt;/span&gt;&lt;/code&gt;は、ある特定のコア関数のインライン化を制御する。 デフォルトでこの変数はライブラリのコンパイル時に定義されている。 ライブラリを使っている全てのコンパイル単位でこの定義を含んでいなければ、リンクエラーになるだろう。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/compilation-options&#34; name=&#34;compilation-options&#34;&gt;Compilation Options&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;デフォルトでは &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;posix_time&lt;/span&gt;&lt;/code&gt; はナノ秒レベルの精度を提供するために内部で 64bit整数と32bit整数を使う。 選択肢として、一つの 64bit整数でマイクロ秒レベルの精度を提供することもできる。 この代替実装は、ナノ秒精度を必要としない多くのアプリケーションでパフォーマンスの向上と省メモリが期待できる。&lt;/p&gt;
&lt;p&gt;変数&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG&lt;/span&gt;&lt;/code&gt;はbuild/Jamfileで定義されており、これらのオプションを選択する。 64bit整数版を使う場合、単にJamfileからこの定義を削除する。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/compiler-portability-notes&#34; name=&#34;compiler-portability-notes&#34;&gt;Compiler/Portability Notes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Boost Date-Time libraryは、多くのコンパイラでビルドされテストされた。 しかしながら、いくつかのコンパイラと標準ライブラリで問題がある。 これらの問題のいくつかは回避可能であるが、回避できない問題も残っている。 以下のコンパイラはライブラリの機能を完全にサポートしている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 3.0.3 on Linux&lt;/li&gt;
&lt;li&gt;GCC 3.1 (cygwin)&lt;/li&gt;
&lt;li&gt;MSVC 7&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特に、標準ロケールに対するサポートが完全でないと &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;iostream&lt;/span&gt;&lt;/code&gt; ベースの入出力サポートが制約される事がある。そういったコンパイラのために、より限定された文字列ベースの入出力を提供している。&lt;/p&gt;
&lt;p&gt;以下のコンパイラ及び標準ライブラリはこの制約を含む&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 2.9x on Linux&lt;/li&gt;
&lt;li&gt;Borland 5.1.1 and 5.6&lt;/li&gt;
&lt;li&gt;MSVC 6 SP5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ComeauやMetroworksといった他のコンパイラでは、ライブラリの初期バージョンでテストに成功している。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/directory-structure&#34; name=&#34;directory-structure&#34;&gt;Directory Structure&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;date_time&lt;/span&gt;&lt;/code&gt;のディレクトリ構成はBoostに合わせて変更された。&lt;/p&gt;
&lt;p&gt;ディレクトリ構成は次のようになっている&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ディレクトリ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/boost/date_time&lt;/td&gt;
&lt;td&gt;共通ヘッダ及びテンプレート&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/boost/date_time/gregoran&lt;/td&gt;
&lt;td&gt;グレゴリオ暦システムのヘッダファイル&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/boost/date_time/posix_time&lt;/td&gt;
&lt;td&gt;Posix Time系のヘッダファイル&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/libs/date_time/build&lt;/td&gt;
&lt;td&gt;ビルドファイルと出力ディレクトリ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/libs/date_time/test&lt;/td&gt;
&lt;td&gt;ジェネリックコードに関するテスト一式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/libs/date_time/test/gregorian&lt;/td&gt;
&lt;td&gt;グレゴリオ暦に関するテスト一式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/libs/date_time/examples/gregorian&lt;/td&gt;
&lt;td&gt;グレゴリオ暦に関する良いコード例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/libs/date_time/src/gregorian&lt;/td&gt;
&lt;td&gt;libboost_date_time用のcppファイル&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/libs/date_time/test/posix_time&lt;/td&gt;
&lt;td&gt;Posix Time系に関するテスト一式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/libs/date_time/examples/posix_time&lt;/td&gt;
&lt;td&gt;時間に関する良いコード例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/libs/date_time/src/posix_time&lt;/td&gt;
&lt;td&gt;空 (ファイルが一つあるが、ソースコードではない)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/required-boost-libraries&#34; name=&#34;required-boost-libraries&#34;&gt;Required Boost Libraries&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このライブラリは以下のライブラリに依存している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;boost.tokenizer&lt;/li&gt;
&lt;li&gt;boost.integer(cstdint)&lt;/li&gt;
&lt;li&gt;boost.operators&lt;/li&gt;
&lt;li&gt;boost::lexical_cast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;よって、最低限これらのライブラリがインストールされている必要がある。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>posix_time::time_duration -- ページ名の先頭が大文字の場合はhtmlに変換しないルールだったので(READMEとかのため)、ページ名を修正</title>
      <link href="http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html"/>
      <id>282fae150552720ecc34e94428ffe68e2a2289eb:archive/boost_docs/libs/date_time/class_time_duration.md</id>
      <updated>2014-11-20 18:14:53 +0900</updated>
      
        <content type="html">&lt;h1&gt;posix_time::time_duration&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time.html&#34;&gt;全体のインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/gregorian.html&#34;&gt;Gregorianのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/posix_time.html&#34;&gt;Posix Timeのインデックスへ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Time Duration Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html#header&#34;&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html#construction&#34;&gt;Construction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html#count-based-construction&#34;&gt;Count Based Construction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html#construct-from-string&#34;&gt;Construct from String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html#accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html#conversion-to-string&#34;&gt;Conversion To String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/class_time_duration.html#operators&#34;&gt;Operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/introduction&#34; name=&#34;introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;boost::posix_time::time_duration&lt;/span&gt;&lt;/code&gt; クラスは時間の長さを確実に表現できる基底型である。 時間長(duration)は正あるいは負の値を取り得る。&lt;/p&gt;
&lt;p&gt;以下に示すように、異なった分解能を調整するために基底の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration&lt;/span&gt;&lt;/code&gt; から継承するいくつかの小さなヘルパークラスがある。 これらのクラスによって、コードを短く、意図をより明確にすることができる。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://www.boost.org/doc/libs/1_31_0/libs/date_time/doc/time_duration_inherit.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;例:&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; boost&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;gregorian;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; boost&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;posix_time;

time_duration td &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; hours(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; seconds(&lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//01:00:01&lt;/span&gt;
td &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; hours(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; nanosec(&lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//01:00:00.000000005&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

注意：高分解能(たとえば&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;nanosec&lt;/span&gt;&lt;/code&gt;)が存在するかどうかは、依存するインストールライブラリによって異なる。詳細は、&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/build_info.html&#34;&gt;Build-Compiler Information&lt;/a&gt;を参照。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/header&#34; name=&#34;header&#34;&gt;Header&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/posix_time/posix_time.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//全ての型とI/Oを含む&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

もしくは&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &#34;boost/date_time/posix_time/posix_time_types.hpp&#34; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//型のみでI/Oは含まない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/construction&#34; name=&#34;construction&#34;&gt;Construction&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration(hours,minutes,seconds,fractional_seconds)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数値から時間長(duration)を生成する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td(1,2,3,9); //1 hr 2 min 3 sec 9 nanoseconds&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/count-based-construction&#34; name=&#34;count-based-construction&#34;&gt;Construction By Count&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;hours(long)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間単位で生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td = hours(3);&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;minutes(long)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分単位で生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td = minutes(3);&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;seconds(long)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位で生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td = seconds(3);&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;milliseconds(long)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ秒単位で生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td = milliseconds(3);&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;microseconds(long)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ秒単位で生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td = microseconds(3);&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;nanoseconds(long)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ秒単位で生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td = nanoseconds(3);&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/conversion-to-string&#34; name=&#34;conversion-to-string&#34;&gt;Construction From String&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration duration_from_string(const std::string&amp;amp;)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;区切られた文字列から生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string ts(&#34;23:59:59.000&#34;);&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duraton td(duration_from_string(ts));&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/accessors&#34; name=&#34;accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;long hours() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間の部分を取得&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td(1,2,3); td.hours() --&amp;gt; 1&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;long minutes() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正規化された分の部分を取得&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td(1,2,3); td.minutes() --&amp;gt; 2&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;long seconds() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒の部分を取得&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td(1,2,3); td.hours() --&amp;gt; 3&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;long fractional_seconds() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒の小数部を取得&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td(1,2,3, 1000); td.fractional_seconds() --&amp;gt; 1000&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;bool is_negative() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間長(duration)が負の時 &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td(-1,0,0); td.is_negative() --&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration invert_sign() const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;符号を反転させた時間長(duration)を新たに生成&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td(-1,0,0); td.invert_sign() --&amp;gt; 01:00:00&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;static gdtl::time_resolutions resolution()&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration&lt;/span&gt;&lt;/code&gt; クラスが表現可能な分解能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration::resolution() --&amp;gt; nano&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;boost::int64_t ticks()&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間長(duration)型の生の数を返す&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td(0,0,0, 1000); td.ticks() --&amp;gt; 1000&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;static time_duration unit()&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間長(duration)型の扱える最小単位を返す(1ナノ秒)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration::unit() --&amp;gt; time_duration(0,0,0,1)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/conversion-to-string&#34; name=&#34;conversion-to-string&#34;&gt;Conversion To String&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string to_simple_string(time_duration)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;HH:MM:SS.fffffffff 形式に変換する(fff...部は、秒の小数部が0でないときのみ含まれる)&lt;/td&gt;
&lt;td&gt;10:00:01.123456789&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::string to_iso_string(time_duration)&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;HHMMSS,fffffffff 形式に変換する&lt;/td&gt;
&lt;td&gt;100001,123456789&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/operators&#34; name=&#34;operators&#34;&gt;Operators&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator==, operator!=,&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;, operator&amp;lt;&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;=, operator&amp;lt;=&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;サポートする比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;dd1 == dd2&lt;/span&gt;&lt;/code&gt;, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration operator+(time_duration) const&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間長(durations)を加算する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td1(hours(1)+minutes(2));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td2(seconds(10)); time_duration td3 = td1 + td2;&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration operator-(time_duration) const&lt;/span&gt;&lt;/code&gt; 時間長(durations)を減算する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td1(hours(1)+nanosec(2));&lt;/span&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;time_duration td2 = td1 - minutes(1);&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;Last modified: Wed Aug 28 17:52:03 MST 2002 by &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/jeff@crystalclearsoftware.com&#34;&gt;Jeff Garland&lt;/a&gt; © 2000-2002 &lt;/p&gt;
&lt;p&gt;Japanese Translation Copyright (C) 2003 &lt;a href=&#34;http://boostjp.github.io/archive/boost_docs/libs/date_time/sshino@cppll.jp&#34;&gt;Shoji Shinohara&lt;/a&gt;.&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>