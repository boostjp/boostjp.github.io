<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2018-03-15T07:25:44.091309</updated>
  <id>19732eee-02ef-4dc0-81dc-d53fffc26825</id>

  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : Contractを追加 (close #213)</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>ac628dd1db9644d0e66ab94ec6171813beb3f7ce:document/version/1_67_0.md</id>
      <updated>2018-03-15T16:22:09+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/contract&#34; target=&#34;_blank&#34;&gt;Contract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++用の契約プログラミングライブラリ。契約プログラミングの全ての機能をサポートしている： サブ契約、クラスの不変条件、事後条件 (古い値と戻り値)、事前条件、表明失敗時の挙動をカスタマイズ (例として、例外を投げるかプログラムを異常終了させるか)、コンパイルに含めるかどうかと表明のチェックをオプショナルに、などなど。作者Lorenzo Caminiti氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::get_option&lt;/code&gt;にconst修飾を付け忘れていたので追加&lt;/li&gt;
&lt;li&gt;GCCのいくつかのバージョンで発生するパースエラーを回避&lt;/li&gt;
&lt;li&gt;チュートリアルのサンプルコードが壊れていたので修正&lt;/li&gt;
&lt;li&gt;実験的な機能を追加。experimentalな機能は、予告なく変更される可能性があるので注意&lt;ul&gt;
&lt;li&gt;&lt;code&gt;experimental::detached&lt;/code&gt; : 非同期操作の完了をハンドリングしない指定。完了ハンドラの代わりに指定する&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_socket.async_send(my_buffer, boost::asio::experimental::detached);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::redirect_error&lt;/code&gt; : &lt;code&gt;error_code&lt;/code&gt;をキャプチャして完了ハンドラに紐付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::co_spawn&lt;/code&gt; : コルーチン仕様を統合する機能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Ticket 13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : Asioを追加 (close #238)</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>1e3c614d37c9bad3913b38e75708fb60b019d7ea:document/version/1_67_0.md</id>
      <updated>2018-03-15T14:23:05+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;basic_socket_acceptor::get_option&lt;/code&gt;にconst修飾を付け忘れていたので追加&lt;/li&gt;
&lt;li&gt;GCCのいくつかのバージョンで発生するパースエラーを回避&lt;/li&gt;
&lt;li&gt;チュートリアルのサンプルコードが壊れていたので修正&lt;/li&gt;
&lt;li&gt;実験的な機能を追加。experimentalな機能は、予告なく変更される可能性があるので注意&lt;ul&gt;
&lt;li&gt;&lt;code&gt;experimental::detached&lt;/code&gt; : 非同期操作の完了をハンドリングしない指定。完了ハンドラの代わりに指定する&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_socket.async_send(my_buffer, boost::asio::experimental::detached);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::redirect_error&lt;/code&gt; : &lt;code&gt;error_code&lt;/code&gt;をキャプチャして完了ハンドラに紐付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::co_spawn&lt;/code&gt; : コルーチン仕様を統合する機能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Ticket 13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : Multi-indexの誤訳を修正</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>debb3a90cd953f00d0c488d746a46027515a5896:document/version/1_67_0.md</id>
      <updated>2018-03-14T16:38:52+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Ticket 13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; クラスのメンバの使用をやめた (代わりに&lt;code&gt;std::allocator_traits&lt;/code&gt;を使用)&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : リンクミスを修正</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>bd95c50b34cd7d413028a9018bdd80c769082485:document/version/1_67_0.md</id>
      <updated>2018-03-14T15:01:08+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #12609&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Ticket 13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; の使用をやめた&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.67.0リリースノート -- 1.67.0リリースノート : リンクミスを修正</title>
      <link href="https://boostjp.github.io/document/version/1_67_0.html"/>
      <id>e4e2493bd8e5823b59923d06295a8a6701c30c70:document/version/1_67_0.md</id>
      <updated>2018-03-14T14:56:12+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.67.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_67_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_67_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_67_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 1.66.0で追加された&lt;code&gt;(op)_and_test&lt;/code&gt;操作の結果を反対にした。これらの関数は、演算結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す。これは標準ライブラリのほかの&lt;code&gt;test&lt;/code&gt;関数と一貫した動作である。この関数を使用するたびに警告を出力する&lt;code&gt;BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST&lt;/code&gt;オプションを用意した。これを定義することで、仕様変更前のこれらの関数を使用しているところを検出できる&lt;/li&gt;
&lt;li&gt;C++2a用の更新。&lt;code&gt;memory_order&lt;/code&gt;がスコープ付きのenumになったことへの対応。&lt;code&gt;memory_order_acquire&lt;/code&gt;の代わりに&lt;code&gt;memory_order::acquire&lt;/code&gt;を使用できる。古い名前は互換性のために残る。参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html&#34; target=&#34;_blank&#34;&gt;P0439R0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++2a用の更新。浮動小数点数型のアトミック操作を実験的にサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; (加算)、&lt;code&gt;sub&lt;/code&gt; (減算)、&lt;code&gt;negate&lt;/code&gt; (符号反転)の、&lt;code&gt;fetch_&lt;/code&gt;バージョンと&lt;code&gt;opaque_&lt;/code&gt;バージョン (戻り値型が&lt;code&gt;void&lt;/code&gt;) を追加した&lt;/li&gt;
&lt;li&gt;ロックフリーのプロパティマクロとして、&lt;code&gt;BOOST_ATOMIC_FLOAT_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_DOUBLE_LOCK_FREE&lt;/code&gt;, &lt;code&gt;BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE&lt;/code&gt;を追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_FLOATING_POINT&lt;/code&gt;を定義することで、浮動小数点数版を無効にできる&lt;/li&gt;
&lt;li&gt;参照 : &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html&#34; target=&#34;_blank&#34;&gt;P0020R6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新たな実験的な操作を追加&lt;ul&gt;
&lt;li&gt;符号反転する&lt;code&gt;negate_and_test&lt;/code&gt;と、ビット反転する&lt;code&gt;complement_and_test&lt;/code&gt;。結果がゼロでない場合に&lt;code&gt;true&lt;/code&gt;を返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetch_&lt;/code&gt;と違って変更後の値が返る&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;negate&lt;/code&gt;, &lt;code&gt;bitwise_and&lt;/code&gt;, &lt;code&gt;bitwise_or&lt;/code&gt;, &lt;code&gt;bitwise_xor&lt;/code&gt;, &lt;code&gt;bitwise_complement&lt;/code&gt;操作を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;型&lt;code&gt;T&lt;/code&gt;のデフォルトコンストラクタがtrivial (自明) であれば、それを要素とする&lt;code&gt;atomic&lt;/code&gt;型のデフォルトコンストラクタもそうなるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atomic&lt;/code&gt;型の内部実装として、符号付き整数型のオーバーフローに起因する未定義動作を回避するようにした。このライブラリの内部で2の補数表現を使用し、オーバーフロー規則に合致するようにした。現在、このライブラリは2の補数表現のネイティブ符号付き整数型を要求する (ただし、定義されたオーバーフローのセマンティクスはない。ライブラリ内部で未定義動作を引き起こさないだけ)&lt;/li&gt;
&lt;li&gt;Clangサポートを改善。とくに、DCASがロックフリーにならない問題を修正し、32ビットx86で不正なコードが生成される可能があった問題を修正した&lt;/li&gt;
&lt;li&gt;MinGWサポートを改善。GCC 4.6以上向けに、x86のDCASのコンパイルを修正&lt;/li&gt;
&lt;li&gt;x86 PIEコードで、asmブロックが&lt;code&gt;ebx&lt;/code&gt;値を保存するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#datetime&#34; id=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;さまざまな2038年問題 (32ビット問題) を修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/2818&#34; target=&#34;_blank&#34;&gt;Trac #2818&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/2819&#34; target=&#34;_blank&#34;&gt;Trac #2819&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/3487&#34; target=&#34;_blank&#34;&gt;Trac #3487&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/4543&#34; target=&#34;_blank&#34;&gt;Trac #4543&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/8450&#34; target=&#34;_blank&#34;&gt;Trac #8450&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9158&#34; target=&#34;_blank&#34;&gt;Trac #9158&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9489&#34; target=&#34;_blank&#34;&gt;Trac #9489&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10570&#34; target=&#34;_blank&#34;&gt;Trac #10570&lt;/a&gt;, [Trac #12609(https://svn.boost.org/trac10/ticket/2818)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/issues/56&#34; target=&#34;_blank&#34;&gt;GitHub #56&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub #58&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub #70&lt;/a&gt; 1.66.0で導入したバイナリシリアライゼーションのレグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4430&#34; target=&#34;_blank&#34;&gt;Trac #4430&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10087&#34; target=&#34;_blank&#34;&gt;Trac #11087&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/68&#34; target=&#34;_blank&#34;&gt;GitHub #68&lt;/a&gt; タイムゾーンのデータベースファイルを更新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/1078&#34; target=&#34;_blank&#34;&gt;Trac #1078&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; &lt;code&gt;from_iso_string&lt;/code&gt;を拡張し、&lt;code&gt;to_iso_string&lt;/code&gt;が出力する特殊な値を読めるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13159&#34; target=&#34;_blank&#34;&gt;Trac #13159&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12630&#34; target=&#34;_blank&#34;&gt;Trac #12630&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub #71&lt;/a&gt; さまざまな問題を解決するために、サポートする年の最大値を10000から9999に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11142&#34; target=&#34;_blank&#34;&gt;Trac #11142&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/63&#34; target=&#34;_blank&#34;&gt;GitHub #63&lt;/a&gt; &lt;code&gt;boost::date_time::period_parser::delimiter_strings&lt;/code&gt;がなにもしていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11168&#34; target=&#34;_blank&#34;&gt;Trac #11168&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/64&#34; target=&#34;_blank&#34;&gt;GitHub #64&lt;/a&gt; 無限大のような特殊な値を整数に変換できないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12363&#34; target=&#34;_blank&#34;&gt;Trac #12363&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/60&#34; target=&#34;_blank&#34;&gt;GitHub #60&lt;/a&gt; &lt;code&gt;int_adapter&lt;/code&gt;内での&lt;code&gt;is_signed&lt;/code&gt;を定数のまま使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12910&#34; target=&#34;_blank&#34;&gt;Trac #12910&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/59&#34; target=&#34;_blank&#34;&gt;GitHub #59&lt;/a&gt; &lt;code&gt;boost::date_time::time_input_facet&lt;/code&gt;で&lt;code&gt;%j&lt;/code&gt; (その年の何日目か) のみを使用した場合に例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13194&#34; target=&#34;_blank&#34;&gt;Trac #13194&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; &lt;code&gt;time_input_facet&lt;/code&gt;が&lt;code&gt;%e&lt;/code&gt; (2桁スペース埋めの日) がパースできない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/date_time/pull/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub #72&lt;/a&gt; プロジェクトの測定と品質を向上させるために、GitHubのCIビルド環境を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/3606&#34; target=&#34;_blank&#34;&gt;Trac #3606&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/9882&#34; target=&#34;_blank&#34;&gt;Trac #9882&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/date_time/pull/62&#34; target=&#34;_blank&#34;&gt;GitHub #62&lt;/a&gt; コンパイラの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17 との互換性向上: アロケータを使うために、メンバに直にアクセスするのではなく、&lt;code&gt;allocator_traits&lt;/code&gt; を使うようにした&lt;/li&gt;
&lt;li&gt;ABI の 名前空間の定義を更新することで、gcc 7 以降との互換性を向上させた&lt;/li&gt;
&lt;li&gt;&#34;TextFile&#34; sink の &#34;Append&#34; 設定パラメータをドキュメントに追加した。このパラメータは以前からサポートされていたが、ドキュメントの更新だけが抜けていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13307&#34; target=&#34;_blank&#34;&gt;Ticket 13307&lt;/a&gt; &lt;code&gt;operator&amp;amp;&lt;/code&gt; をオーバーロードしていた要素を完全に受け入れられるようになった。この修正を行うために、Boost.Operators を更新してくれた Daniel Frey に感謝する&lt;/li&gt;
&lt;li&gt;C++17 で非推奨になった &lt;code&gt;std::allocator&lt;/code&gt; の使用をやめた&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#poly-collection&#34; id=&#34;poly-collection&#34;&gt;PolyCollection&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/7&#34; target=&#34;_blank&#34;&gt;GitHub #7&lt;/a&gt; C++17で非推奨になった&lt;code&gt;std::iterator&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_67_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; OSが提供するエントロピーを直接使用するために、&lt;code&gt;random_generator&lt;/code&gt;を最適化&lt;/li&gt;
&lt;li&gt;UUIDのバルク生成のために、&lt;code&gt;random_generator_mt19937&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;エントロピーの取得エラーを、無視するのでなく処理するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/issues/24&#34; target=&#34;_blank&#34;&gt;GitHub #24&lt;/a&gt; Windows UWPをサポート&lt;/li&gt;
&lt;li&gt;CloudABIをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/mumumu&#34; target=&#34;_blank&#34;&gt;Yoshinari Takaoka&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>