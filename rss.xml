<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="http://boostjp.github.io" />
  <updated>2015-11-17T23:01:35.675133</updated>
  <id>f04e3de1-25c9-4789-9fbf-6512d9cf6d05</id>

  
    <entry>
      <title>Boost 1.60.0リリースノート -- Boost 1.60.0リリースノート : Filesystemを追加(close #54)</title>
      <link href="http://boostjp.github.io/document/version/1_60_0.html"/>
      <id>017c132f050fc8a0298b9469bb0967d8b6c0d16a:document/version/1_60_0.md</id>
      <updated>2015-11-17 17:58:49 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.60.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_60_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_60_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_60_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_60_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Hanaのリリースは延期&lt;/h2&gt;
&lt;p&gt;時間的な制約により、&lt;a href=&#34;https://github.com/boostorg/hana&#34; target=&#34;_blank&#34;&gt;Hana&lt;/a&gt;のリリースは、Boostの以降のリリースに延期となった。&lt;/p&gt;
&lt;p&gt;これによって、HanaがBoostの一部として正式にリリースする前に、いくつかの既知の問題に対処できる。詳細はメーリングリストを参照。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://article.gmane.org/gmane.comp.lib.boost.devel/263964&#34; target=&#34;_blank&#34;&gt;http://article.gmane.org/gmane.comp.lib.boost.devel/263964&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;このリリースでのBoostは、コンパイラが最新のWindows SDKをサポートしていてWindows XP以外の場合に、Windows Vista/Windows Server 2008をデフォルトコンパイルとする。古いバージョンのWindowsでは、デフォルトのオプションでコンパイルされたバイナリを実行できなくなる。&lt;/p&gt;
&lt;p&gt;Windows APIのバージョン番号を&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;マクロを定義することによって、対象のWindowsバージョンを明示的に指定することもできる。たとえば、Windows XP向けにBoostをコンパイルするには、次のコマンドを使用する：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;b2 release define=BOOST_USE_WINAPI_VERSION=0x0501
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Windows APIのバージョン番号の一覧は、以下のページで確認できる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/6sehtctf.aspx&#34; target=&#34;_blank&#34;&gt;Modifying &lt;code&gt;WINVER&lt;/code&gt; and &lt;code&gt;_WIN32_WINNT&lt;/code&gt; - MSDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この変更は、BoostのWindows APIに対する抽象レイヤーを使用しているライブラリだけに影響する。現在は、以下のライブラリが対象である： Boost.Chrono、Boost.Dll、Boost.Log、Boost.UUID。これらのライブラリに依存するライブラリも対象となる。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/vmd/&#34; target=&#34;_blank&#34;&gt;VMD&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;可変引数マクロデータライブラリ(Variadic Macro Data Library)&lt;/li&gt;
&lt;li&gt;作者 : Edward Diener&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#thread&#34;&gt;Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#uuid&#34;&gt;UUID&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;atomic&amp;lt;&amp;gt;&lt;/code&gt;のストレージに、適切なアラインメントを設定した。これによって、ネイティブのワードサイズより大きいデータ単位に対するアトミック操作のサポートに関する問題が修正される。&lt;/li&gt;
&lt;li&gt;IBM XL C++コンパイラでのPowerPC向けのコンパイルエラーを修正。PowerPCアセンブラのメモリバリアを正しいものにした。&lt;/li&gt;
&lt;li&gt;MSVC-8でのARM向けのコンパイルエラーを修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10994&#34; target=&#34;_blank&#34;&gt;#10994&lt;/a&gt; 128ビットアトミック操作を使用したときの、gcc 4.4でのx86-64向けのコンパイルエラーを修正。&lt;/li&gt;
&lt;li&gt;x86/x86-64向けのgccアセンブラブロックを最適化し、使用するレジスタ数を減らした。これはbinutils 2.10以降を必要とする。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#chrono&#34; name=&#34;chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン2.0.5&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10778&#34; target=&#34;_blank&#34;&gt;#10778&lt;/a&gt; VC14 CTP4において、&lt;code&gt;boost::chrono&lt;/code&gt;の&lt;code&gt;duration&lt;/code&gt;が&lt;code&gt;TriviallyCopyable&lt;/code&gt;ではないために、それを要素とする&lt;code&gt;atomic&lt;/code&gt;のコンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10840&#34; target=&#34;_blank&#34;&gt;#10840&lt;/a&gt; test_7868.cppで、&lt;code&gt;puts()&lt;/code&gt;関数の呼び出しが&lt;code&gt;std::&lt;/code&gt;修飾されていない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10851&#34; target=&#34;_blank&#34;&gt;#10851&lt;/a&gt; time_point_output.cppで、&lt;code&gt;puts()&lt;/code&gt;関数の呼び出しが&lt;code&gt;std::&lt;/code&gt;修飾されていない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10893&#34; target=&#34;_blank&#34;&gt;#10893&lt;/a&gt; ドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10992&#34; target=&#34;_blank&#34;&gt;#10992&lt;/a&gt; ChronoのIO State Saverが、Boost.IO State Saverと異なるインタフェースだったのを修正。コンストラクタの第1パラメータを、&lt;code&gt;state_type&lt;/code&gt;から&lt;code&gt;state_type&amp;amp;&lt;/code&gt;に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10995&#34; target=&#34;_blank&#34;&gt;#10995&lt;/a&gt; &lt;code&gt;duration_put::put_value()&lt;/code&gt;で、小数部が切り詰められる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11006&#34; target=&#34;_blank&#34;&gt;#11006&lt;/a&gt; &lt;code&gt;time_fmt_io_saver&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11012&#34; target=&#34;_blank&#34;&gt;#11012&lt;/a&gt; chrono_io v2で、&lt;code&gt;boost::chrono::duration &amp;lt; boost::rational &amp;lt;int&amp;gt;&amp;gt;&lt;/code&gt;のコンパイルに失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;標準C++に提案されている、Polymorphic Memory Resourcesを実装した&lt;ul&gt;
&lt;li&gt;標準のドキュメントは以下：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4480.html&#34; target=&#34;_blank&#34;&gt;C++ Extensions for Library Fundamentals (最新のドラフト仕様: N4480)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://isocpp.org/files/papers/N3916.pdf&#34; target=&#34;_blank&#34;&gt;N3916 Polymorphic Memory Resources (r2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT&lt;/code&gt;での事前条件のチェックを強化した(&lt;code&gt;pop_back()&lt;/code&gt;, &lt;code&gt;pop_front()&lt;/code&gt;, &lt;code&gt;back()&lt;/code&gt;, &lt;code&gt;front()&lt;/code&gt;、その他)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_string&lt;/code&gt;に、C++11の&lt;code&gt;back()&lt;/code&gt;と&lt;code&gt;front()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11627&#34; target=&#34;_blank&#34;&gt;Trac #11627&lt;/a&gt; &lt;code&gt;small_vector&amp;lt;T,n&amp;gt;::swap( )&lt;/code&gt;が壊れていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11628&#34; target=&#34;_blank&#34;&gt;Trac #11628&lt;/a&gt; 要素のデストラクタを呼ぶ必要のない&lt;code&gt;small_vector&amp;lt;int,n&amp;gt;&lt;/code&gt;で、要素のデストラクタが個別に呼び出されていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11697&#34; target=&#34;_blank&#34;&gt;Trac #11697&lt;/a&gt; 可変引数テンプレートのツールとして作成したタプルの初期化が、tail -&amp;gt; headの順になっていたので、head -&amp;gt; tailの順になるよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11698&#34; target=&#34;_blank&#34;&gt;Trac #11698&lt;/a&gt; &lt;code&gt;static_storage_allocator&lt;/code&gt;の&lt;code&gt;return&lt;/code&gt;文漏れを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;flat_map&lt;/code&gt;のドキュメントで、計算量が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt; dlmallocの実装で、アドレス取得がヌルチェックの中で行われていたために、アドレスを間接参照できない場合があったので修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11603&#34; target=&#34;_blank&#34;&gt;#11603&lt;/a&gt; PPC32/MACH-Oアセンブラの誤字を修正&lt;/li&gt;
&lt;li&gt;Cygwinをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シンボルのデマングルツールに、Android NDKのgabi++ ABIのサポートを追加&lt;/li&gt;
&lt;li&gt;入れ子型の存在をSFINAEチェックするためのツールとして、&lt;code&gt;enable_if_has_type&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#filesystem&#34; name=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;以下の関数を追加した&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;path::lexically_normal()&lt;/code&gt; : パスの正規化を行う。正規化では、冗長なカレントディレクトリ(ドット)の指定や親ディレクトリ(ドット-ドット)の削除を行う。例：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;foo/./bar/..&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_normal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;foo/.///bar/../&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_normal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;foo/.&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;path::lexically_relative()&lt;/code&gt; : パラメータで指定されたパスから&lt;code&gt;*this&lt;/code&gt;のパスへの相対パスを求める。例：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;/a/d&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;/a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;../../d&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;/a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;/a/d&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;../b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c/x/y&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;../..&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;.&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;c/d&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;relative()&lt;/code&gt; : 第2パラメータのパスから第1パラメータのパスへの、相対パスを求める&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weakly_canonical()&lt;/code&gt; : パラメータで指定されたパスのシンボリックリンクを解決し、正規化した結果のパスを返す&lt;/li&gt;
&lt;li&gt;上記4関数の追加で協力してくれたJamie Allsop氏に、多大な感謝をする&lt;/li&gt;
&lt;li&gt;これによって解決したチケットは以下： &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/1976&#34; target=&#34;_blank&#34;&gt;#1976&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5897&#34; target=&#34;_blank&#34;&gt;#5897&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6249&#34; target=&#34;_blank&#34;&gt;#6249&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;クラスに、&lt;code&gt;reverse_iterator&lt;/code&gt;と&lt;code&gt;const_reverse_iterator&lt;/code&gt;型を追加し、&lt;code&gt;rbegin()&lt;/code&gt;、&lt;code&gt;rend()&lt;/code&gt;メンバ関数を追加した&lt;/li&gt;
&lt;li&gt;Filesystem TSによって規定された、C++11の&lt;code&gt;noexcept&lt;/code&gt;を付加(コンパイラが&lt;code&gt;noexcept&lt;/code&gt;をサポートしていれば)&lt;/li&gt;
&lt;li&gt;Filesystem TSによって規定された、C++11のムーブコンストラクタとムーブ代入演算子を追加(コンパイラがムーブをサポートしていれば)&lt;/li&gt;
&lt;li&gt;Filesystem TSの規定に従って、関数の名前をいくつか変更した。現在は、古い名前と新しい名前、両方をサポートしている。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;クラスに&lt;code&gt;size()&lt;/code&gt;メンバ関数を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6874&#34; target=&#34;_blank&#34;&gt;#6874&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;チケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11733&#34; target=&#34;_blank&#34;&gt;#11733&lt;/a&gt; boost/libs/filesystem/src/unique_path.cppでのunistd.hのインクルード漏れを修正。Idar Tollefsen氏によるパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5706&#34; target=&#34;_blank&#34;&gt;#5706&lt;/a&gt; WindowsのTemporary User Profilesで&lt;code&gt;unique_path()&lt;/code&gt;が失敗する問題を修正。Sebastian Redl氏によるpull requestを適用した(&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/15&#34; target=&#34;_blank&#34;&gt;pull request #15&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10591&#34; target=&#34;_blank&#34;&gt;#10591&lt;/a&gt; このライブラリを、iOS 8でビルドできない問題を修正。Daniel Seither氏のパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9454&#34; target=&#34;_blank&#34;&gt;#9454&lt;/a&gt; &lt;code&gt;BOOST_FILESYSTEM_NO_DEPRECATED&lt;/code&gt;がdefineされていると、このライブラリをビルドできない問題を修正。Makesim氏のパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11447&#34; target=&#34;_blank&#34;&gt;#11447&lt;/a&gt; &lt;code&gt;__OpenBSD__&lt;/code&gt;マクロ名が間違っていたのを修正。Jasper Lievisse Adriaanse氏のパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11288&#34; target=&#34;_blank&#34;&gt;#11288&lt;/a&gt; 文字列の冗長なメモリ確保を回避した。Yevhen Ivannikov氏のパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11175&#34; target=&#34;_blank&#34;&gt;#11175&lt;/a&gt; 古いドキュメントが原因で、このライブラリが例外を無効にして使用できるとユーザーに期待させてしまっていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11166&#34; target=&#34;_blank&#34;&gt;#11166&lt;/a&gt; &lt;code&gt;remove()&lt;/code&gt;関数の、競合の可能性を減らした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7258&#34; target=&#34;_blank&#34;&gt;#7258&lt;/a&gt; &lt;code&gt;create_directories()&lt;/code&gt;関数に指定されたパスの最後がスラッシュの場合に、&lt;code&gt;false&lt;/code&gt;を返してしまっていたので修正。それにともなって、パスに「&lt;code&gt;.&lt;/code&gt;」もしくは「&lt;code&gt;..&lt;/code&gt;」が含まれていた場合のテストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10766&#34; target=&#34;_blank&#34;&gt;#10766&lt;/a&gt; 冗長な区切り文字が付いたパスに対して&lt;code&gt;parent_path()&lt;/code&gt;を呼び出すと、間違った値が返されていたという問題が報告されたが、これは動作としては正しかったので、ドキュメントにその動作を記載した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7607&#34; target=&#34;_blank&#34;&gt;#7607&lt;/a&gt; スラッシュで終わるパスのファイル名が「&lt;code&gt;.&lt;/code&gt;」であると推論される問題。この問題は、&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7258&#34; target=&#34;_blank&#34;&gt;#7258&lt;/a&gt;と&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10766&#34; target=&#34;_blank&#34;&gt;#10766&lt;/a&gt;で解決した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11061&#34; target=&#34;_blank&#34;&gt;#11061&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11062&#34; target=&#34;_blank&#34;&gt;#11062&lt;/a&gt; パスを逆順に辿ることができないという問題だが、これはreverse iterator機能の追加によって解決した&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;その他修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCCのいくつかの警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_status&lt;/code&gt;と&lt;code&gt;recursive_directory_iterator&lt;/code&gt;のバグを修正 : 1引数以外のコンストラクタを非&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;リファレンスドキュメントを整理した : 残りのドキュメントにも、同じスタイルシートを適用した。タブのフォントサイズを調整した。テーブル内の長すぎる行を修正した&lt;/li&gt;
&lt;li&gt;Jonathan Wakely氏とMarcel Raad氏からのpull requestを含む、小さい修正を行った。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#flyweight&#34; name=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全てのFusionコンテナとジェネレータはC++11の可変長テンプレートをサポートした。(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/89&#34; target=&#34;_blank&#34;&gt;pull-request 89&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/97&#34; target=&#34;_blank&#34;&gt;pull-request 97&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/100&#34; target=&#34;_blank&#34;&gt;pull-request 100&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fusion::vector&lt;/code&gt;に関する注意&lt;ul&gt;
&lt;li&gt;実装上の理由により、番号付きのvector(つまり&lt;code&gt;fusion::vectorN&lt;/code&gt;の形)はC++11のエイリアステンプレートを使って提供され、C++11以降ではdeprecatedとなる。
  この場合、いくつかの部分特殊化がコンパイルエラーとなる為、&lt;code&gt;BOOST_FUSION_HAS_VARIADIC_VECTOR&lt;/code&gt;マクロを使用して実装を切り替えなければならない(&lt;a href=&#34;https://github.com/boostorg/spirit/pull/158/files#diff-250ce096dee927d2b7eb5a4e24afb8cd&#34; target=&#34;_blank&#34;&gt;Spiritへのpull request&lt;/a&gt;を参照されたい)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::nview&lt;/code&gt;はC++11の可変長テンプレートをサポートした。(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/90&#34; target=&#34;_blank&#34;&gt;pull-request 90&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::fold&lt;/code&gt;がSFINAE-friendlyとなった。(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/102&#34; target=&#34;_blank&#34;&gt;pull-request 102&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Fusionシーケンスを&lt;code&gt;fusion::deque&lt;/code&gt;へ変換できなかった。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11572&#34; target=&#34;_blank&#34;&gt;#11572&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;(ドキュメント) 関数の戻り値の型が正しくなかった。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3358&#34; target=&#34;_blank&#34;&gt;#3358&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;offset_ptr&lt;/code&gt;のパフォーマンスを改善し、あらゆる未定義動作を削除した。異なるコンパイラでの特殊ケースが必要なくなった。&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11699&#34; target=&#34;_blank&#34;&gt;Trac #11699&lt;/a&gt; Visual Studio 2015のバグにより、標準クラステンプレートの先行宣言がコンパイルエラーになっていたので、ワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;順序付き連想コンテナでの「&lt;a href=&#34;http://www.boost.org/doc/libs/release/doc/html/intrusive/advanced_lookups_insertions.html&#34; target=&#34;_blank&#34;&gt;高度な検索と挿入&lt;/a&gt;」に、比較関数のサポートを追加した。&lt;code&gt;key_compare&lt;/code&gt;と同じ「狭義の弱順序(strict weak ordering)」を提供することなしに、比較関数オブジェクトでコンテナを分割できる。&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11701&#34; target=&#34;_blank&#34;&gt;Boost Trac #11701&lt;/a&gt; &lt;code&gt;boost::intrusive::set::equal_range&lt;/code&gt;のレギュレッション&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11765&#34; target=&#34;_blank&#34;&gt;Boost Trac #11765&lt;/a&gt; sgtreeのテストコードが不正だったので修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#locale&#34; name=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ジェネリックな&lt;code&gt;codecvt&lt;/code&gt;ファセットと、汎用的な目的に使用できる&lt;code&gt;utf8_codecvt&lt;/code&gt;ファセットを実装した&lt;/li&gt;
&lt;li&gt;FreeBSD 10.0と上記の機能向けに、POSIXのロケールをサポートした&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10017&#34; target=&#34;_blank&#34;&gt;#10017&lt;/a&gt; &lt;code&gt;sun&lt;/code&gt;をSunOSに向けて再定義した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11163&#34; target=&#34;_blank&#34;&gt;#11163&lt;/a&gt; &lt;code&gt;set_default_messages_domain()&lt;/code&gt;の不正な振る舞いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11673&#34; target=&#34;_blank&#34;&gt;#11673&lt;/a&gt; ビルドの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;最新のICUバージョンでのテストを修正&lt;/li&gt;
&lt;li&gt;libc++の問題へのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;新たなマクロ&lt;code&gt;BOOST_LOCALE_ENABLE_CHAR16_T&lt;/code&gt;と&lt;code&gt;BOOST_LOCALE_ENABLE_CHAR32_T&lt;/code&gt;を追加。これは、C++11が有効であれば&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;に置き換えられる。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;全体的な変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows環境で、構成マクロ&lt;code&gt;BOOST_LOG_USE_WINNT6_API&lt;/code&gt;は使われなくなる。ターゲット環境を設定するマクロ&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;を定義することによって、Windowsのバージョンを設定する必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11559&#34; target=&#34;_blank&#34;&gt;#11559&lt;/a&gt; AndroidでのGoogle NDKのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11549&#34; target=&#34;_blank&#34;&gt;#11549&lt;/a&gt; ロギング文のいくつかのコンパイルエラーを修正。ストリームに入れる最初のオブジェクトは、&lt;code&gt;formatting_ostream&lt;/code&gt;がサポートされていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11549&#34; target=&#34;_blank&#34;&gt;#11549&lt;/a&gt; Solaris Studio 12.4向けのワークアラウンドを追加。&lt;code&gt;formatting_ostream&lt;/code&gt;のコンパイルエラーが修正される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11541&#34; target=&#34;_blank&#34;&gt;#11541&lt;/a&gt; ネイティブの&lt;code&gt;wchar_t&lt;/code&gt;を無効にしたときのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;POSIXライクシステム上での、&lt;code&gt;boost_log_setup&lt;/code&gt;ライブラリからのエクスポートシンボルを修正&lt;/li&gt;
&lt;li&gt;character decoratorsのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11691&#34; target=&#34;_blank&#34;&gt;#11691&lt;/a&gt; ファイル名にdate/timeのプレースホルダが含まれている場合に、text file sink backendで不正なファイル名であると判定される問題に対するワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらなる詳細は、&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#move&#34; name=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正 &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11615&#34; target=&#34;_blank&#34;&gt;#11615&lt;/a&gt;: type_traits.hppで&lt;code&gt;std::size_t&lt;/code&gt;を完全修飾せず使っている場所があったので修正&lt;ul&gt;
&lt;li&gt;訳者註: &lt;code&gt;&amp;lt;cstddef&amp;gt;&lt;/code&gt; ヘッダをインクルードしてもグローバル名前空間に&lt;code&gt;size_t&lt;/code&gt;が存在するとは限らない為、一部の標準ライブラリ実装ではコンパイルできない問題があった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#multi-index&#34; name=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;オプショナルな定義である&lt;code&gt;foreach&lt;/code&gt;マクロ名による、&lt;a href=&#34;http://www.qt.io/&#34; target=&#34;_blank&#34;&gt;Qtフレームワーク&lt;/a&gt;との相互運用の問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#optional&#34; name=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11203&#34; target=&#34;_blank&#34;&gt;#11203&lt;/a&gt; &lt;code&gt;boost::none&lt;/code&gt;の実装を再度変更した。内部リンケージの&lt;code&gt;const&lt;/code&gt;オブジェクトとした。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン1.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SIMDハードウェアの検出機能を追加。&lt;code&gt;BOOST_HW_*&lt;/code&gt;マクロを使用する(Charly Chevalier氏に感謝)&lt;/li&gt;
&lt;li&gt;クロスコンパイルのチェックを行うための、コンパイルのみ行うユーティリティを追加&lt;/li&gt;
&lt;li&gt;テストの警告を修正&lt;/li&gt;
&lt;li&gt;Windowsプラットフォームの、&lt;code&gt;AVAILABLE&lt;/code&gt;マクロの誤字を修正(Vemund Handeland氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン3.1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コマンドラインのインタフェースを改善&lt;/li&gt;
&lt;li&gt;データセットのAPIを改善 : データセットの生成に初期化子リストを使用できるようにし、データセットの構築をより容易にした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正とリクエスト&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3384&#34; target=&#34;_blank&#34;&gt;#3384&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6032&#34; target=&#34;_blank&#34;&gt;#6032&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10317&#34; target=&#34;_blank&#34;&gt;#10317&lt;/a&gt; ダブルクォーテーションで囲まれた引数が、スペースで分割されてしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6859&#34; target=&#34;_blank&#34;&gt;#6859&lt;/a&gt; コマンドラインの、最後の空パラメータが無視される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11279&#34; target=&#34;_blank&#34;&gt;#11279&lt;/a&gt; 不正なパラメータを渡した際に、それが報告されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11478&#34; target=&#34;_blank&#34;&gt;#11478&lt;/a&gt; アサーションの失敗で送出される例外のメッセージが固定文言のため、原因がわからなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11571&#34; target=&#34;_blank&#34;&gt;#11571&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11625&#34; target=&#34;_blank&#34;&gt;#11625&lt;/a&gt; &lt;code&gt;BOOST_TEST( ..., per_element() )&lt;/code&gt;で、コンテナの比較ができない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11623&#34; target=&#34;_blank&#34;&gt;#11623&lt;/a&gt; Clangで&lt;code&gt;BOOST_TEST()&lt;/code&gt;のコンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11624&#34; target=&#34;_blank&#34;&gt;#11624&lt;/a&gt; C++11モードのGCCとClangで、&lt;code&gt;BOOST_TEST( 0.0 == 0.0 )&lt;/code&gt;というテストが失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#thread&#34; name=&#34;thread&#34;&gt;Thread&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン4.6.0&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;実験的な新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11231&#34; target=&#34;_blank&#34;&gt;#11231&lt;/a&gt; &lt;code&gt;future&lt;/code&gt;のデストラクタをブロッキングしないよう設定する機能を追加。&lt;code&gt;BOOST_THREAD_FUTURE_BLOCKING&lt;/code&gt;をdefineする&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11424&#34; target=&#34;_blank&#34;&gt;#11424&lt;/a&gt; &lt;code&gt;shared_mutex&lt;/code&gt;の名前変更として&lt;code&gt;shared_timed_mutex&lt;/code&gt;を提供し、元のtimed mutex機能付きの&lt;code&gt;shared_mutex&lt;/code&gt;を非推奨とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11734&#34; target=&#34;_blank&#34;&gt;#11734&lt;/a&gt; &lt;code&gt;future::then(Cont)&lt;/code&gt;を、可能であればスレッドを引き継いで実行するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11736&#34; target=&#34;_blank&#34;&gt;#11736&lt;/a&gt; &lt;code&gt;launch::executor&lt;/code&gt;を&lt;code&gt;future::then(launch::executor, cont)&lt;/code&gt;のように使用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11737&#34; target=&#34;_blank&#34;&gt;#11737&lt;/a&gt; &lt;code&gt;launch::inherit&lt;/code&gt;ポリシーを追加した。これを使用することにより、親の&lt;code&gt;then()&lt;/code&gt;で指定されたポリシーを引き継げるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/3926&#34; target=&#34;_blank&#34;&gt;#3926&lt;/a&gt; &lt;code&gt;thread_specific_ptr&lt;/code&gt;とdlopenライブラリの組み合わせでセグメンテーションフォルトとなる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6377&#34; target=&#34;_blank&#34;&gt;#6377&lt;/a&gt; 時間が変更されると条件変数がブロックする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6787&#34; target=&#34;_blank&#34;&gt;#6787&lt;/a&gt; システム時間が逆行すると、&lt;code&gt;boost::thread::sleep()&lt;/code&gt;がハングする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/7665&#34; target=&#34;_blank&#34;&gt;#7665&lt;/a&gt; &lt;code&gt;this_thread::sleep_for()&lt;/code&gt;が&lt;code&gt;steady_clock&lt;/code&gt;を使用していなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/7720&#34; target=&#34;_blank&#34;&gt;#7720&lt;/a&gt; &lt;code&gt;mutex&lt;/code&gt;の集中的なロック取得／解除で&lt;code&gt;lock_error&lt;/code&gt;例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9309&#34; target=&#34;_blank&#34;&gt;#9309&lt;/a&gt; clang-darwin-tot11環境で、test_latchがたまに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10788&#34; target=&#34;_blank&#34;&gt;#10788&lt;/a&gt; &lt;code&gt;GetLogicalProcessor&lt;/code&gt;が、Windowsプラットフォームの&lt;code&gt;0x0502&lt;/code&gt;以下では使用できなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11090&#34; target=&#34;_blank&#34;&gt;#11090&lt;/a&gt; ex_future_unwrapが、ThreadSanitizerによると、ロック取得の順番によってデッドロックする可能性があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11158&#34; target=&#34;_blank&#34;&gt;#11158&lt;/a&gt; pthreadのスレッドが、faketimeを使用するとデッドロックする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11174&#34; target=&#34;_blank&#34;&gt;#11174&lt;/a&gt; &lt;code&gt;boost::condition_variable::timed_wait()&lt;/code&gt;で無限に待つと、述語が突然起床することがある問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11185&#34; target=&#34;_blank&#34;&gt;#11185&lt;/a&gt; ドキュメントのURLリダイレクトが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11192&#34; target=&#34;_blank&#34;&gt;#11192&lt;/a&gt; &lt;code&gt;boost::future::then()&lt;/code&gt;と&lt;code&gt;executor&lt;/code&gt;を組み合わせると、コンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11250&#34; target=&#34;_blank&#34;&gt;#11250&lt;/a&gt; &lt;code&gt;make_exceptional()&lt;/code&gt;で作った&lt;code&gt;future&lt;/code&gt;オブジェクトが、そのデストラクタでアサーション失敗していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11256&#34; target=&#34;_blank&#34;&gt;#11256&lt;/a&gt; 継続関数内で&lt;code&gt;future&amp;lt;&amp;gt;::is_ready() == false&lt;/code&gt;となる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11261&#34; target=&#34;_blank&#34;&gt;#11261&lt;/a&gt; &lt;code&gt;basic_thread_pool&lt;/code&gt;内でスコープ付きスレッドの使い方が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11262&#34; target=&#34;_blank&#34;&gt;#11262&lt;/a&gt; &lt;code&gt;shared_state_nullary_task&lt;/code&gt;内で直接的なポインタの使い方が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11263&#34; target=&#34;_blank&#34;&gt;#11263&lt;/a&gt; いくつかのアンロック操作が不足していたために、&lt;code&gt;lock()&lt;/code&gt;関数で「すれにロックされている」という例外が発生する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11266&#34; target=&#34;_blank&#34;&gt;#11266&lt;/a&gt; &lt;code&gt;boost::packaged_task&lt;/code&gt;クラスの可変引数シグニチャが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11302&#34; target=&#34;_blank&#34;&gt;#11302&lt;/a&gt; &lt;code&gt;BOOST_THREAD_PATCH&lt;/code&gt;をdefineするとビルドが通らなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11322&#34; target=&#34;_blank&#34;&gt;#11322&lt;/a&gt; &lt;code&gt;sleep_for()&lt;/code&gt;のナノ秒オーバーロードを使用すると、Windows上で返ってくるのが早すぎる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11329&#34; target=&#34;_blank&#34;&gt;#11329&lt;/a&gt; &lt;code&gt;GetProcessHeap()&lt;/code&gt;のusingディレクティブが失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11368&#34; target=&#34;_blank&#34;&gt;#11368&lt;/a&gt; sleep操作で起床しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11377&#34; target=&#34;_blank&#34;&gt;#11377&lt;/a&gt; pthread環境上でシステム時間を変更すると、条件変数が永遠に待ってしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11435&#34; target=&#34;_blank&#34;&gt;#11435&lt;/a&gt; future.hppの、GCCでの警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11555&#34; target=&#34;_blank&#34;&gt;#11555&lt;/a&gt; devector.hppが、&lt;code&gt;allocator_traits_type&lt;/code&gt;の存在を前提としていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11562&#34; target=&#34;_blank&#34;&gt;#11562&lt;/a&gt; タイマー起動後にシステム時間を設定すると、タイマーがすぐに切れる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11672&#34; target=&#34;_blank&#34;&gt;#11672&lt;/a&gt; 内部実装で、&lt;code&gt;auto_ptr&lt;/code&gt;の代わりに&lt;code&gt;unique_ptr&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11688&#34; target=&#34;_blank&#34;&gt;#11688&lt;/a&gt; &lt;code&gt;thread::try_join_until()&lt;/code&gt;で、システム時間が変更された場合のbusy waitを待機&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11672&#34; target=&#34;_blank&#34;&gt;#11716&lt;/a&gt; &lt;code&gt;then()&lt;/code&gt;が、親のexecutorを引き継ぐようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_60_0.html#uuid&#34; name=&#34;uuid&#34;&gt;UUID&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;UUIDを比較する際にクラッシュを引き起こす可能性のあるMSVC codegenのバグに対する、ワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;MSVCのコンパイラスイッチを使って、AVXが有効かどうかを検出できるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.6&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.8.4, 4.9.3, 5.1.0, 5.2.1&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, C++03, mingw: 3.4.5&lt;/li&gt;
&lt;li&gt;GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14, mingw: 4.9.3, 5.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.9.0, 5.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.4, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.1, 3.2, 3.3, 3.4.2, 3.6.0, 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.7.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.4, 4.7.3, 4.8.1, 4.9.3, 5.1.0, 6.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.2.1&lt;/li&gt;
&lt;li&gt;IBM XL C++: 13.1.2.0&lt;/li&gt;
&lt;li&gt;Intel: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 7.0.0&lt;/li&gt;
&lt;li&gt;GCC: 5.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, C++03, mingw: 3.4.5&lt;/li&gt;
&lt;li&gt;GCC, C++11, mingw: 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14, mingw: 4.9.3, 5.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.9.0, 5.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.4.1, 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.8.5, 5.2.0, 6.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.4, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.59.0リリースノート -- バッククォートの閉じ忘れを修正</title>
      <link href="http://boostjp.github.io/document/version/1_59_0.html"/>
      <id>e6495cd1a6fe05f65a92f001582c971d7f36c567:document/version/1_59_0.md</id>
      <updated>2015-11-16 14:03:19 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.59.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_59_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_59_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_59_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_59_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の不具合&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11549&#34; target=&#34;_blank&#34;&gt;#11549&lt;/a&gt; Logライブラリに、いくつかのロギング文のコンパイルが通らない問題がある。この問題は、以下のコミットで修正された &lt;a href=&#34;https://github.com/boostorg/log/commit/7da193fde1a9c1bc925ee980339f4df2e1a66fa7&#34; target=&#34;_blank&#34;&gt;commit 7da193f&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/convert&#34; target=&#34;_blank&#34;&gt;Convert&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;拡張性のある型変換フレームワーク&lt;/li&gt;
&lt;li&gt;Vladimir Batov作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/coroutine2&#34; target=&#34;_blank&#34;&gt;Coroutine2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14で記述されたコルーチンライブラリ&lt;ul&gt;
&lt;li&gt;訳註: 既に存在するBoost.Coroutineはdeprecatedとなり、メンテナンスのみ行うという宣言がOliverよりされている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Oliver Kowalke作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#property-tree&#34;&gt;Property Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub #26&lt;/a&gt;: &lt;code&gt;stable_vector::capacity()&lt;/code&gt;のバグを修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/timsong-cpp&#34; target=&#34;_blank&#34;&gt;Arindam Mukerjee&lt;/a&gt;に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt;: &lt;code&gt;stable_vector::index_of&lt;/code&gt;のdoxygenコメントを修正&lt;ul&gt;
&lt;li&gt;kariya-mitsuruに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11380&#34; target=&#34;_blank&#34;&gt;#11380&lt;/a&gt;: &lt;code&gt;gcc&lt;/code&gt;と&lt;code&gt;libc++&lt;/code&gt;の組み合わせ下において&lt;code&gt;std_fwd.hpp&lt;/code&gt;内のコンテナの前方宣言が正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11388&#34; target=&#34;_blank&#34;&gt;#11388&lt;/a&gt;: Visual Studio 2010において&lt;code&gt;boost::container::list::emplace_back&lt;/code&gt;が壊れていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11339&#34; target=&#34;_blank&#34;&gt;#11339&lt;/a&gt;: &lt;code&gt;VC12 LNK2005 error&lt;/code&gt;が&lt;code&gt;boost::container::adaptive_pool&lt;/code&gt;で起きていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11223&#34; target=&#34;_blank&#34;&gt;#11223&lt;/a&gt; &lt;code&gt;std::integer_sequence&lt;/code&gt;サポートのチェックを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_USE_WINFIBERS&lt;/code&gt;をdefineすると、&lt;code&gt;execution_context&lt;/code&gt;の内部でWindowsのFiberを使用するようにした&lt;/li&gt;
&lt;li&gt;32ビットWindows上のMinGWでのアセンブラをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#coroutine&#34; name=&#34;coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10978&#34; target=&#34;_blank&#34;&gt;#10978&lt;/a&gt; 不要なセミコロンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11230&#34; target=&#34;_blank&#34;&gt;#11230&lt;/a&gt; &lt;code&gt;coroutine_error&lt;/code&gt;のエラーメッセージがダングリングポインタとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11234&#34; target=&#34;_blank&#34;&gt;#11234&lt;/a&gt; &lt;code&gt;boost::range::algorithms&lt;/code&gt;との組み合わせでコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11356&#34; target=&#34;_blank&#34;&gt;#11356&lt;/a&gt;  &lt;code&gt;BOOST_USE_SEGMENTED_STACKS&lt;/code&gt;でコルーチンがセグメンテーションフォルトしていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいコンセプトが追加された。シーケンスには&lt;code&gt;Unbounded Sequence&lt;/code&gt;、イテレータには&lt;code&gt;Unbounded Iterator&lt;/code&gt;が追加された (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/85&#34; target=&#34;_blank&#34;&gt;pull-request 85&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;現在、&lt;code&gt;Unbounded Sequence&lt;/code&gt;は&lt;code&gt;fusion::(value_)at(_c)&lt;/code&gt;及び&lt;code&gt;fusion::(value_)at_key&lt;/code&gt;の挙動に影響を与える&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unbounded Iterator&lt;/code&gt;は現在効果を持たない（今後のリリースのために予約されている）&lt;/li&gt;
&lt;li&gt;詳細はそれぞれ次のドキュメントを参照のこと：&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/libs/fusion/doc/html/fusion/sequence/concepts/unbounded_sequence.html&#34; target=&#34;_blank&#34;&gt;Unbounded Sequence&lt;/a&gt;及び&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/libs/fusion/doc/html/fusion/iterator/concepts/unbounded_iterator.html&#34; target=&#34;_blank&#34;&gt;Unbounded Iterator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::list&lt;/code&gt;がC++11の可変長テンプレートに対応した (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/84&#34; target=&#34;_blank&#34;&gt;pull-request 84&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;utility&amp;gt;&lt;/code&gt;のインクルード忘れを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11161&#34; target=&#34;_blank&#34;&gt;#11161&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;いくつかの&lt;code&gt;constexpr&lt;/code&gt;のサポートを差し戻した (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11211&#34; target=&#34;_blank&#34;&gt;#11211&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11267&#34; target=&#34;_blank&#34;&gt;#11267&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;インクルード忘れによる&lt;code&gt;fold&lt;/code&gt;のコンパイルエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11249&#34; target=&#34;_blank&#34;&gt;#11249&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;空の構造体がアダプトできなくなっていたのを修正 (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11269&#34; target=&#34;_blank&#34;&gt;#11269&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;古すぎる（そして既に正しくない）回避策を削除。これはMSVC-8もしくはそれ以前にのみ影響がある (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/78&#34; target=&#34;_blank&#34;&gt;pull-request 78&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::list&lt;/code&gt;から派生したシーケンスをコピーする際に起こっていたコンパイルエラーを修正 (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/87&#34; target=&#34;_blank&#34;&gt;pull-request 87&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::tuple&lt;/code&gt;をコピーする際のコンパイルエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11140&#34; target=&#34;_blank&#34;&gt;#11141&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCC 4.6用の回避策を追加 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11517&#34; target=&#34;_blank&#34;&gt;#11517&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#geometry&#34; name=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Rangeをサポートするために、&lt;code&gt;rtree&lt;/code&gt;に、&lt;code&gt;const_iterator&lt;/code&gt;、&lt;code&gt;begin()&lt;/code&gt;、&lt;code&gt;end()&lt;/code&gt;を追加。&lt;/li&gt;
&lt;li&gt;C++11の&lt;code&gt;initializer_list&lt;/code&gt;をサポート。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disjoint()&lt;/code&gt;と&lt;code&gt;intersects()&lt;/code&gt;に、以下の組み合わせサポートを追加：&lt;ul&gt;
&lt;li&gt;multipoint/linestring&lt;/li&gt;
&lt;li&gt;multipoint/multilinestring&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;relate()&lt;/code&gt;、&lt;code&gt;relation()&lt;/code&gt;アルゴリズムを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intersection()&lt;/code&gt;に、pointlikeとlinearの組み合わせサポートを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difference(pointlike, linear)&lt;/code&gt;の実装を追加。&lt;/li&gt;
&lt;li&gt;新アルゴリズム&lt;code&gt;is_empty()&lt;/code&gt;を追加。これはジオメトリが空集合を持つ場合に&lt;code&gt;true&lt;/code&gt;を返す。&lt;/li&gt;
&lt;li&gt;spherical equatorial座標系の&lt;code&gt;envelope()&lt;/code&gt;アルゴリズムに、pointlikeとlinearの組み合わせサポートを追加。&lt;/li&gt;
&lt;li&gt;geographic座標系の&lt;code&gt;envelope()&lt;/code&gt;アルゴリズムに、pointlikeジオメトリのサポートを追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;の&lt;code&gt;const_query_iterator&lt;/code&gt;を、ForwardIteratorの分類にした。&lt;/li&gt;
&lt;li&gt;multi-point周りのbufferの、bufferのパフォーマンスを大幅に改善した。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;buffer side strategyが、&lt;code&gt;bool&lt;/code&gt;の代わりに&lt;code&gt;error_code&lt;/code&gt;を返すようになった。site strategyを自分用にカスタマイズするのであれば、これに適応させる必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11113&#34; target=&#34;_blank&#34;&gt;#11113&lt;/a&gt; &lt;code&gt;rtree&lt;/code&gt;を&lt;code&gt;BOOST_FOREACH&lt;/code&gt;で回せるようにする&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11232&#34; target=&#34;_blank&#34;&gt;#11232&lt;/a&gt; &lt;code&gt;relate()&lt;/code&gt;機能のリクエスト&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11236&#34; target=&#34;_blank&#34;&gt;#11236&lt;/a&gt; 整数座標系で、&lt;code&gt;centroid()&lt;/code&gt;の結果が間違っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11268&#34; target=&#34;_blank&#34;&gt;#11268&lt;/a&gt; &lt;code&gt;intersection()&lt;/code&gt;の&lt;code&gt;multi_linestring&lt;/code&gt;と&lt;code&gt;box&lt;/code&gt;に対する組み合わせのレギュレッションを修正。1.57と1.55でコンパイルが通らなかった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11332&#34; target=&#34;_blank&#34;&gt;#11332&lt;/a&gt; 極端な座標値の&lt;code&gt;buffer&lt;/code&gt;でアサーションに失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11346&#34; target=&#34;_blank&#34;&gt;#11346&lt;/a&gt; segment iteratorが参照ではなく値を返すため、Rangeで動作しなかった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11436&#34; target=&#34;_blank&#34;&gt;#11436&lt;/a&gt; &lt;code&gt;sym_difference(py1, py2, mpy)&lt;/code&gt;が間違った&lt;code&gt;multipolygon&lt;/code&gt;を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Buffer&lt;/code&gt; : &lt;code&gt;intersection()&lt;/code&gt;を計算する、より強力な方法を使用することによって、バッファ生成時のいくつかのエラーを修正。&lt;/li&gt;
&lt;li&gt;2つのセグメントの交差(intersection)において、セグメントの選択がIPから行われていたのを修正。segment-pointの近傍のpoint、もしくは他の最短のセグメントを選択するようになった。これは、(ほとんど発生しない)無効な出力ポリゴンを作る小さな三角形の生成を回避する。&lt;/li&gt;
&lt;li&gt;整数グリッドに丸める代わりに、roundの再スケーリングを行うようにした。(この修正は、これまでのジオメトリ生成にいくつかの影響がある)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;detail::has_spikes()&lt;/code&gt;の、無限ループになる可能性があった部分を修正した。(このループは、渡されたpointがNaN座標を持っているときに起こり得た)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5139&#34; target=&#34;_blank&#34;&gt;#5139&lt;/a&gt; &lt;code&gt;boost::interprocess::basic_vectorstream&lt;/code&gt;の初期位置が不正だったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/19&#34; target=&#34;_blank&#34;&gt;GitHub Pull #19&lt;/a&gt; 例外オブジェクトの可視性を修正&lt;ul&gt;
&lt;li&gt;Romain-Geisslerに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;mapとmulti_mapに似たインターフェースを実装&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/doc/html/intrusive/map_multimap.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/1_59_0/doc/html/intrusive/map_multimap.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;テンプレートの実体化を減らすためにハッシュテーブルを使うコンテナをリファクタリング&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#lexical-cast&#34; name=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;警告を修正&lt;/li&gt;
&lt;li&gt;メタプログラムを整理し、簡易化した(Edward Diener氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;全体的な変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gcc.gnu.org/wiki/Visibility&#34; target=&#34;_blank&#34;&gt;シンボル可視性&lt;/a&gt;をサポートし、このライブラリの内部的なシンボルを隠した。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的な変更&lt;/strong&gt;&lt;/span&gt; : このライブラリの下層の型(underlying types)の管理に、Boost.TypeIndexを使用するようにした。これによって、以下のpublicインタフェースが影響を受ける：&lt;ul&gt;
&lt;li&gt;このライブラリでは、問題のある型の説明のために&lt;code&gt;invalid_type&lt;/code&gt;例外を送出しているが、それに&lt;code&gt;typeindex::type_index&lt;/code&gt;が付加されるようになった。これまでは、&lt;code&gt;type_info_wrapper&lt;/code&gt;型を使用していた。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type_info_info&lt;/code&gt;例外のエラー情報には、&lt;code&gt;type_info_wrapper&lt;/code&gt;の代わりに&lt;code&gt;typeindex::type_index&lt;/code&gt;を含めるようになった。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attribute_value::get_type()&lt;/code&gt;関数は、&lt;code&gt;type_info_wrapper&lt;/code&gt;の代わりに&lt;code&gt;typeindex::type_index&lt;/code&gt;を返すようになった。また、ユーザー定義の属性値の実装も同様に、変更する必要がある。(&lt;code&gt;attribute_value::impl::get_type()&lt;/code&gt;仮想メンバ関数も、&lt;code&gt;typeindex::type_index&lt;/code&gt;型を返すようになった)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type_info_wrapper&lt;/code&gt;コンポーネントは非推奨となり、詳細のリリースから削除される予定。代わりに、Boost.TypeIndexを推奨する。&lt;/li&gt;
&lt;li&gt;以前から非推奨だった、以下のヘッダを削除：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/intrusive_ref_counter.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/explicit_operator_bool.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/empty_deleter.hpp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11446&#34; target=&#34;_blank&#34;&gt;#11446&lt;/a&gt; OpenBSDのビルドをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11398&#34; target=&#34;_blank&#34;&gt;#11398&lt;/a&gt; イベント同期プリミティブの内部実装に、非同期ログを使用するよう改善した。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11190&#34; target=&#34;_blank&#34;&gt;#11190&lt;/a&gt; いくつかのケースで、&lt;code&gt;attribute_value_set::insert()&lt;/code&gt;関数と&lt;code&gt;attribute_value_set&lt;/code&gt;のコンストラクタがおかしい動作をしていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらなる詳細は、&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;Changelog&lt;/a&gt;を参照。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#move&#34; name=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unique_ptr&lt;/code&gt;の変換コンストラクタを、C++03では値でパラメータを受け取るよう変更した。&lt;ul&gt;
&lt;li&gt;C++03 : &lt;code&gt;unique_ptr(unique_ptr&amp;lt;U, E&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;C++11 : &lt;code&gt;unique_ptr(unique_ptr&amp;lt;U, E&amp;gt;&amp;amp;&amp;amp;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11229&#34; target=&#34;_blank&#34;&gt;#11229&lt;/a&gt; &lt;code&gt;vector&lt;/code&gt;がムーブのみ可能な型に対して&lt;code&gt;memcpy&lt;/code&gt;していた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#multi-index&#34; name=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ranked indicesを追加&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;predef_check&lt;/code&gt;機能のさまざまな問題を修正&lt;/li&gt;
&lt;li&gt;Oracleからの最新バージョンのコンパイラに合わせて、SunProの検出機能を更新&lt;/li&gt;
&lt;li&gt;Boost.Build側に対する&lt;code&gt;predef_check&lt;/code&gt;式に、&lt;code&gt;and&lt;/code&gt;と&lt;code&gt;or&lt;/code&gt;の論理演算子を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ARCH_PARISC&lt;/code&gt;の綴りを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MAKE_YYYYM&lt;/code&gt;マクロの、月を正しく制限するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#property-tree&#34; name=&#34;property-tree&#34;&gt;Property Tree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいJSONパーサーで、Unicodeを完全サポートした。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 新しいパーサーでは、JSONファイル中のコメントや文字列連結をサポートしない。古いパーサーの非標準機能が削除されたため、それらの機能に依存したコードが壊れる可能性がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVCとMinGW環境下において、&lt;code&gt;dllexport&lt;/code&gt;が無いことによる警告とコンパイルエラーを修正 (Daniela Engert, Marcel Raad)&lt;/li&gt;
&lt;li&gt;未初期化のフィールドを修正 (Zoey Greer)&lt;/li&gt;
&lt;li&gt;暗黙の値を持ったオプションがそれ以上トークンを処理するのを抑止 (Michael John Decker)&lt;/li&gt;
&lt;li&gt;複数のトークンを受け取るオプションの上限を32k個ではなくintのmaxに緩和 (Hans Hohenfeld)&lt;ul&gt;
&lt;li&gt;訳者註: intのmaxではなくunsigned intのmaxが使用される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;コードの整形とドキュメントの修正 (Jurko Gospodnetić, Lauri Nurmi)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no-rtti&lt;/code&gt;の最低限のサポート (Minmin Gong)&lt;/li&gt;
&lt;li&gt;環境変数のポインタをendの次までインクリメントしてしまうのを修正 (Vladimir Prus)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン3に、メジャーアップデート&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;汎用的なテストマクロ&lt;code&gt;BOOST_TEST&lt;/code&gt;を追加。&lt;ul&gt;
&lt;li&gt;たとえば、&lt;code&gt;BOOST_CHECK_EQUAL(a, b)&lt;/code&gt;の代わりに&lt;code&gt;BOOST_TEST(a == b)&lt;/code&gt;を使用できる。&lt;/li&gt;
&lt;li&gt;このマクロには、任意の条件式を指定できる。ただし、&lt;code&gt;||&lt;/code&gt;演算子および&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;は直接使用できないため、&lt;code&gt;BOOST_TEST((true || false))&lt;/code&gt;のように丸カッコで条件式を囲む必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;データ駆動のテストケース(パラメタライズドテスト)
  &lt;br /&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;BOOST_TEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;124&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;BOOST_AUTO_TEST_CASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_case1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;…&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// パラメータ&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 各パラメータをtest1()関数に渡してテストを実行&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BOOST_PARAM_TEST_CASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;テストの細かな挙動を制御するための「属性(attribute)」機能を追加&lt;ul&gt;
&lt;li&gt;たとえば、論理グループ化、テストの依存関係、テストの有効化・無効化などに使用する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CLIから学んだ、色付けのための&lt;code&gt;colour_output&lt;/code&gt;、テストケースのリストアップのための&lt;code&gt;list_content&lt;/code&gt;、および拡張ユニットテストフィルタリング(否定、ラベル)を追加&lt;/li&gt;
&lt;li&gt;Quickbookを使用して、ドキュメントのリファクタと書き直しを行った。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;取り組んだ問題&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2018&#34; target=&#34;_blank&#34;&gt;#2018&lt;/a&gt; 「実行時パラメータのリファレンス」章のドキュメントにおける、英語文法的な間違い、およびコマンドライン引数名の間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2450&#34; target=&#34;_blank&#34;&gt;#2450&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、数式が正しく表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2018&#34; target=&#34;_blank&#34;&gt;#2717&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_EQUAL_COLLECTION&lt;/code&gt;ドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2759&#34; target=&#34;_blank&#34;&gt;#2759&lt;/a&gt; new-year-resolution.htmlドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3182&#34; target=&#34;_blank&#34;&gt;#3182&lt;/a&gt; メモリリークの検出レポートを出力するファイルを、指定できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3316&#34; target=&#34;_blank&#34;&gt;#3316&lt;/a&gt; &lt;code&gt;init_tests_func()&lt;/code&gt;からログを出力しようとするとアクセス違反が起こる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3392&#34; target=&#34;_blank&#34;&gt;#3392&lt;/a&gt; &lt;code&gt;BOOST_TEST_PASSPOINT&lt;/code&gt;マクロのドキュメントが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3402&#34; target=&#34;_blank&#34;&gt;#3402&lt;/a&gt; ドキュメントに記載されているマクロ名が間違っていたので修正(#2717と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3445&#34; target=&#34;_blank&#34;&gt;#3445&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3463&#34; target=&#34;_blank&#34;&gt;#3463&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;のドキュメントで&lt;code&gt;&amp;gt;=&lt;/code&gt;を使用すると書いていたため、&lt;code&gt;&amp;gt;&lt;/code&gt;での比較に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3542&#34; target=&#34;_blank&#34;&gt;#3542&lt;/a&gt; コマンドライン引数の名前が&lt;code&gt;build_info&lt;/code&gt;となっていたが、正しくは&lt;code&gt;detect_memory_leak&lt;/code&gt;。(#2018と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3592&#34; target=&#34;_blank&#34;&gt;#3592&lt;/a&gt; &lt;code&gt;under_debugger()&lt;/code&gt;が無限ループする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3595&#34; target=&#34;_blank&#34;&gt;#3595&lt;/a&gt; マクロ名の誤字を修正(#2759と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3623&#34; target=&#34;_blank&#34;&gt;#3623&lt;/a&gt; マクロ名の誤字を修正(#2759と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3664&#34; target=&#34;_blank&#34;&gt;#3664&lt;/a&gt; &lt;code&gt;SIGCHLDP&lt;/code&gt;が致命的なエラーとなることを考慮するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3784&#34; target=&#34;_blank&#34;&gt;#3784&lt;/a&gt; Execution Monitor Compilationのドキュメント間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3785&#34; target=&#34;_blank&#34;&gt;#3785&lt;/a&gt; Program Execution Monitor implementationのドキュメント間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3811&#34; target=&#34;_blank&#34;&gt;#3811&lt;/a&gt; グローバル名前空間で定義するCリンケージの関数に、名前衝突を避けるために&lt;code&gt;boost_&lt;/code&gt;プレフィックスを付けた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3834&#34; target=&#34;_blank&#34;&gt;#3834&lt;/a&gt; HTMLが正しく表示されない問題を修正(#2450と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3896&#34; target=&#34;_blank&#34;&gt;#3896&lt;/a&gt; コマンドライン引数の説明が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3932&#34; target=&#34;_blank&#34;&gt;#3932&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;の説明が間違っていたので修正(#3463と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3938&#34; target=&#34;_blank&#34;&gt;#3938&lt;/a&gt; ドキュメントのマクロ名が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3964&#34; target=&#34;_blank&#34;&gt;#3964&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_CLOSE_FRACTION&lt;/code&gt;のドキュメントが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3978&#34; target=&#34;_blank&#34;&gt;#3978&lt;/a&gt; テストログのファイルへのリダイレクトが失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3979&#34; target=&#34;_blank&#34;&gt;#3979&lt;/a&gt; &lt;code&gt;&amp;lt;boost/test/exception_safety.hpp&amp;gt;&lt;/code&gt;がさらなるインクルードを要求する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4161&#34; target=&#34;_blank&#34;&gt;#4161&lt;/a&gt; ドキュメントのスペルミスを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4275&#34; target=&#34;_blank&#34;&gt;#4275&lt;/a&gt; ドキュメントの間違いを修正(#2717と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4389&#34; target=&#34;_blank&#34;&gt;#4389&lt;/a&gt; 依存するテストの実行を有効にできるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4434&#34; target=&#34;_blank&#34;&gt;#4434&lt;/a&gt; ドキュメントの誤字&lt;code&gt;BOOST_AUTO_EST_CASE&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4587&#34; target=&#34;_blank&#34;&gt;#4587&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4806&#34; target=&#34;_blank&#34;&gt;#4806&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4911&#34; target=&#34;_blank&#34;&gt;#4911&lt;/a&gt; 例外発生時に、例外の本来の型名を出力するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4923&#34; target=&#34;_blank&#34;&gt;#4923&lt;/a&gt; ドキュメントのサンプルコードにセミコロンが不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4924&#34; target=&#34;_blank&#34;&gt;#4924&lt;/a&gt; ドキュメントの小さな誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4982&#34; target=&#34;_blank&#34;&gt;#4982&lt;/a&gt; ドキュメントに記載されている、作者Gennadiy Rozentalのメールアドレスが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5008&#34; target=&#34;_blank&#34;&gt;#5008&lt;/a&gt; テストケースの開始と終了のチェックポイントを挿入&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5036&#34; target=&#34;_blank&#34;&gt;#5036&lt;/a&gt; メモリリークのレポートを、VCでは&lt;code&gt;stdout&lt;/code&gt;に対して書き込んでいたが、&lt;code&gt;strerr&lt;/code&gt;に書き込むよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5262&#34; target=&#34;_blank&#34;&gt;#5262&lt;/a&gt; run_testに、否定(negation)のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5374&#34; target=&#34;_blank&#34;&gt;#5374&lt;/a&gt; VS2010で、エラーのリストが表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5412&#34; target=&#34;_blank&#34;&gt;#5412&lt;/a&gt; 内部で使用しているXMLフォーマッターの、サブシーケンスを処理する文字列が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5563&#34; target=&#34;_blank&#34;&gt;#5563&lt;/a&gt; グローバルなフィクスチャの中でテストマクロを使用するとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5582&#34; target=&#34;_blank&#34;&gt;#5582&lt;/a&gt; &lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt;のメモリリークを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5599&#34; target=&#34;_blank&#34;&gt;#5599&lt;/a&gt; ドキュメントの導入がイケてない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5718&#34; target=&#34;_blank&#34;&gt;#5718&lt;/a&gt; 単体テストフレームワークのソースコード例へのリンクが壊れていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5729&#34; target=&#34;_blank&#34;&gt;#5729&lt;/a&gt; &lt;code&gt;fpt_limits&lt;/code&gt;の中で&lt;code&gt;static_cast&lt;/code&gt;が不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5870&#34; target=&#34;_blank&#34;&gt;#5870&lt;/a&gt; 警告の制御にスタックが使われていなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5972&#34; target=&#34;_blank&#34;&gt;#5972&lt;/a&gt; 出力ストリームにテストツリーをテキストでダンプするオプションをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6002&#34; target=&#34;_blank&#34;&gt;#6002&lt;/a&gt; テストログのファイルへのリダイレクトが失敗する問題を修正(#3978と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6071&#34; target=&#34;_blank&#34;&gt;#6071&lt;/a&gt; Boost Test (Boost 1.46.0) + GCC 4.6.1で、&lt;code&gt;operator[]&lt;/code&gt;のオーバーロードが曖昧であるというコンパイルエラーが発生していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6074&#34; target=&#34;_blank&#34;&gt;#6074&lt;/a&gt; 警告をエラーとして扱うオプションが、Boost.Testのリリースモードで扱えない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6161&#34; target=&#34;_blank&#34;&gt;#6161&lt;/a&gt; SunOS環境で、&lt;code&gt;putenv()&lt;/code&gt;の宣言がコンパイルエラーになっていたので修正(#6766と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6766&#34; target=&#34;_blank&#34;&gt;#6766&lt;/a&gt; config.hppの&lt;code&gt;putenv()&lt;/code&gt;が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6712&#34; target=&#34;_blank&#34;&gt;#6712&lt;/a&gt; GCCの警告を除去&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6748&#34; target=&#34;_blank&#34;&gt;#6748&lt;/a&gt; ドキュメントのリンクが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7046&#34; target=&#34;_blank&#34;&gt;#7046&lt;/a&gt; 例外のエラーメッセージが512文字を超えていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7397&#34; target=&#34;_blank&#34;&gt;#7397&lt;/a&gt; Boost.Testが、1.48.0で非推奨になったBoost.Timerのクラスを使っていたので、新しいクラスを使用するよう更新した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7410&#34; target=&#34;_blank&#34;&gt;#7410&lt;/a&gt; テストケースが&lt;code&gt;__FILE__&lt;/code&gt;と&lt;code&gt;__LINE__&lt;/code&gt;をキャプチャするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8862&#34; target=&#34;_blank&#34;&gt;#8862&lt;/a&gt; ドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9179&#34; target=&#34;_blank&#34;&gt;#9179&lt;/a&gt; ドキュメントのリンクが壊れていたので修正(const_string.hpp/const_string_test.cppが見つからない)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9272&#34; target=&#34;_blank&#34;&gt;#9272&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;のドキュメントバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9390&#34; target=&#34;_blank&#34;&gt;#9390&lt;/a&gt; &lt;code&gt;BOOST_TEST_DONT_PRINT_LOG_VALUE&lt;/code&gt;が、一部のマクロに対して使用できなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9409&#34; target=&#34;_blank&#34;&gt;#9409&lt;/a&gt; いくつかのサンプルコードが不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9537&#34; target=&#34;_blank&#34;&gt;#9537&lt;/a&gt; const_string_testのサンプルコードが失敗していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9539&#34; target=&#34;_blank&#34;&gt;#9539&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、数式が正しく表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9581&#34; target=&#34;_blank&#34;&gt;#9581&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、Squassabiaへのリンクが壊れていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10318&#34; target=&#34;_blank&#34;&gt;#10318&lt;/a&gt; ドキュメントの小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10888&#34; target=&#34;_blank&#34;&gt;#10888&lt;/a&gt; アサーションの失敗が、VS 2010、VS 2012、VS 2013でエラーウィンドウに表示されない問題を修正(重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11054&#34; target=&#34;_blank&#34;&gt;#11054&lt;/a&gt; Expression Templateを有効にすると、多倍長の浮動小数点数に対する比較が失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11347&#34; target=&#34;_blank&#34;&gt;#11347&lt;/a&gt; &lt;code&gt;DS&lt;/code&gt;識別子が原因で、&lt;code&gt;doc/examples/dataset_example*.cpp&lt;/code&gt;のテストが失敗していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11358&#34; target=&#34;_blank&#34;&gt;#11358&lt;/a&gt; signedとunsignedの比較で警告が出ていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11359&#34; target=&#34;_blank&#34;&gt;#11359&lt;/a&gt; &lt;code&gt;BOOST_CHECK_EQUAL_COLLECTIONS&lt;/code&gt;マクロで、出力演算子の制御ができない問題を修正(#9390と重複)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#type-index&#34; name=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;コンパイル時間とモジュール性を改善するために、いくつかのBoostライブラリへの依存関係を削除&lt;/li&gt;
&lt;li&gt;テストの警告を修正し、メンテナンス上の改善をいくつか行った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11196&#34; target=&#34;_blank&#34;&gt;#11196&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11283&#34; target=&#34;_blank&#34;&gt;#11283&lt;/a&gt; element_index.hppでの、インクルード不足を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11251&#34; target=&#34;_blank&#34;&gt;#11251&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11285&#34; target=&#34;_blank&#34;&gt;#11285&lt;/a&gt; C++14での&lt;code&gt;aplly_visitor&lt;/code&gt;のサンプルコードとconst参照を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get&amp;lt;reference&amp;gt;(variant_variable)&lt;/code&gt;のコンパイル時チェックを緩和(Nicolas Cornu氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.6&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.8.2, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3&lt;/li&gt;
&lt;li&gt;Intel: 15.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 8.0, 9.0, 10.0, 11.0, 12.0, 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6&lt;/li&gt;
&lt;li&gt;GCC: 4.8, 4.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Sun: 6.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.6, 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.4, 4.7.3, 4.8.1, 5.1.0, 6.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.1&lt;/li&gt;
&lt;li&gt;Intel: 15.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6&lt;/li&gt;
&lt;li&gt;4.8, 4.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.4.1&lt;/li&gt;
&lt;li&gt;GCC: 4.8.5, 5.1.0, 6.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.59.0リリースノート -- fix typo</title>
      <link href="http://boostjp.github.io/document/version/1_59_0.html"/>
      <id>8e90f68cfc0432ebd5bfbcb6f89db0dd6b1db78c:document/version/1_59_0.md</id>
      <updated>2015-11-15 18:42:10 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.59.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_59_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_59_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_59_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_59_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の不具合&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11549&#34; target=&#34;_blank&#34;&gt;#11549&lt;/a&gt; Logライブラリに、いくつかのロギング文のコンパイルが通らない問題がある。この問題は、以下のコミットで修正された &lt;a href=&#34;https://github.com/boostorg/log/commit/7da193fde1a9c1bc925ee980339f4df2e1a66fa7&#34; target=&#34;_blank&#34;&gt;commit 7da193f&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/convert&#34; target=&#34;_blank&#34;&gt;Convert&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;拡張性のある型変換フレームワーク&lt;/li&gt;
&lt;li&gt;Vladimir Batov作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/coroutine2&#34; target=&#34;_blank&#34;&gt;Coroutine2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14で記述されたコルーチンライブラリ&lt;ul&gt;
&lt;li&gt;訳註: 既に存在するBoost.Coroutineはdeprecatedとなり、メンテナンスのみ行うという宣言がOliverよりされている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Oliver Kowalke作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#property-tree&#34;&gt;Property Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub #26&lt;/a&gt;: &lt;code&gt;stable_vector::capacity()&lt;/code&gt;のバグを修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/timsong-cpp&#34; target=&#34;_blank&#34;&gt;Arindam Mukerjee&lt;/a&gt;に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt;: &lt;code&gt;stable_vector::index_of&lt;/code&gt;のdoxygenコメントを修正&lt;ul&gt;
&lt;li&gt;kariya-mitsuruに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11380&#34; target=&#34;_blank&#34;&gt;#11380&lt;/a&gt;: &lt;code&gt;gcc&lt;/code&gt;と&lt;code&gt;libc++&lt;/code&gt;の組み合わせ下において&lt;code&gt;std_fwd.hpp&lt;/code&gt;内のコンテナの前方宣言が正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11388&#34; target=&#34;_blank&#34;&gt;#11388&lt;/a&gt;: Visual Studio 2010において&lt;code&gt;boost::container::list::emplace_back&lt;/code&gt;が壊れていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11339&#34; target=&#34;_blank&#34;&gt;#11339&lt;/a&gt;: &lt;code&gt;VC12 LNK2005 error&lt;/code&gt;が&lt;code&gt;boost::container::adaptive_pool&lt;/code&gt;で起きていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11223&#34; target=&#34;_blank&#34;&gt;#11223&lt;/a&gt; &lt;code&gt;std::integer_sequence&lt;/code&gt;サポートのチェックを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_USE_WINFIBERS&lt;/code&gt;をdefineすると、&lt;code&gt;execution_context&lt;/code&gt;の内部でWindowsのFiberを使用するようにした&lt;/li&gt;
&lt;li&gt;32ビットWindows上のMinGWでのアセンブラをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#coroutine&#34; name=&#34;coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10978&#34; target=&#34;_blank&#34;&gt;#10978&lt;/a&gt; 不要なセミコロンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11230&#34; target=&#34;_blank&#34;&gt;#11230&lt;/a&gt; &lt;code&gt;coroutine_error&lt;/code&gt;のエラーメッセージがダングリングポインタとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11234&#34; target=&#34;_blank&#34;&gt;#11234&lt;/a&gt; &lt;code&gt;boost::range::algorithms&lt;/code&gt;との組み合わせでコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11356&#34; target=&#34;_blank&#34;&gt;#11356&lt;/a&gt;  &lt;code&gt;BOOST_USE_SEGMENTED_STACKS&lt;/code&gt;でコルーチンがセグメンテーションフォルトしていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいコンセプトが追加された。シーケンスには&lt;code&gt;Unbounded Sequence&lt;/code&gt;、イテレータには&lt;code&gt;Unbounded Iterator&lt;/code&gt;が追加された (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/85&#34; target=&#34;_blank&#34;&gt;pull-request 85&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;現在、&lt;code&gt;Unbounded Sequence&lt;/code&gt;は&lt;code&gt;fusion::(value_)at(_c)&lt;/code&gt;及び&lt;code&gt;fusion::(value_)at_key&lt;/code&gt;の挙動に影響を与える&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unbounded Iterator&lt;/code&gt;は現在効果を持たない（今後のリリースのために予約されている）&lt;/li&gt;
&lt;li&gt;詳細はそれぞれ次のドキュメントを参照のこと：&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/libs/fusion/doc/html/fusion/sequence/concepts/unbounded_sequence.html&#34; target=&#34;_blank&#34;&gt;Unbounded Sequence&lt;/a&gt;及び&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/libs/fusion/doc/html/fusion/iterator/concepts/unbounded_iterator.html&#34; target=&#34;_blank&#34;&gt;Unbounded Iterator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::list&lt;/code&gt;がC++11の可変長テンプレートに対応した (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/84&#34; target=&#34;_blank&#34;&gt;pull-request 84&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;utility&amp;gt;&lt;/code&gt;のインクルード忘れを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11161&#34; target=&#34;_blank&#34;&gt;#11161&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;いくつかの&lt;code&gt;constexpr&lt;/code&gt;のサポートを差し戻した (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11211&#34; target=&#34;_blank&#34;&gt;#11211&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11267&#34; target=&#34;_blank&#34;&gt;#11267&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;インクルード忘れによる&lt;code&gt;fold&lt;/code&gt;のコンパイルエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11249&#34; target=&#34;_blank&#34;&gt;#11249&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;空の構造体がアダプトできなくなっていたのを修正 (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11269&#34; target=&#34;_blank&#34;&gt;#11269&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;古すぎる（そして既に正しくない）回避策を削除。これはMSVC-8もしくはそれ以前にのみ影響がある (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/78&#34; target=&#34;_blank&#34;&gt;pull-request 78&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::list&lt;/code&gt;から派生したシーケンスをコピーする際に起こっていたコンパイルエラーを修正 (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/87&#34; target=&#34;_blank&#34;&gt;pull-request 87&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::tuple&lt;/code&gt;をコピーする際のコンパイルエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11140&#34; target=&#34;_blank&#34;&gt;#11141&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCC 4.6用の回避策を追加 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11517&#34; target=&#34;_blank&#34;&gt;#11517&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#geometry&#34; name=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Rangeをサポートするために、&lt;code&gt;rtree&lt;/code&gt;に、&lt;code&gt;const_iterator&lt;/code&gt;、&lt;code&gt;begin()&lt;/code&gt;、&lt;code&gt;end()&lt;/code&gt;を追加。&lt;/li&gt;
&lt;li&gt;C++11の&lt;code&gt;initializer_list&lt;/code&gt;をサポート。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disjoint()&lt;/code&gt;と&lt;code&gt;intersects()&lt;/code&gt;に、以下の組み合わせサポートを追加：&lt;ul&gt;
&lt;li&gt;multipoint/linestring&lt;/li&gt;
&lt;li&gt;multipoint/multilinestring&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;relate()&lt;/code&gt;、&lt;code&gt;relation()&lt;/code&gt;アルゴリズムを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intersection()&lt;/code&gt;に、pointlikeとlinearの組み合わせサポートを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difference(pointlike, linear)&lt;/code&gt;の実装を追加。&lt;/li&gt;
&lt;li&gt;新アルゴリズム&lt;code&gt;is_empty()&lt;/code&gt;を追加。これはジオメトリが空集合を持つ場合に&lt;code&gt;true&lt;/code&gt;を返す。&lt;/li&gt;
&lt;li&gt;spherical equatorial座標系の&lt;code&gt;envelope()&lt;/code&gt;アルゴリズムに、pointlikeとlinearの組み合わせサポートを追加。&lt;/li&gt;
&lt;li&gt;geographic座標系の&lt;code&gt;envelope()&lt;/code&gt;アルゴリズムに、pointlikeジオメトリのサポートを追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;の&lt;code&gt;const_query_iterator&lt;/code&gt;を、ForwardIteratorの分類にした。&lt;/li&gt;
&lt;li&gt;multi-point周りのbufferの、bufferのパフォーマンスを大幅に改善した。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;buffer side strategyが、&lt;code&gt;bool&lt;/code&gt;の代わりに&lt;code&gt;error_code&lt;/code&gt;を返すようになった。site strategyを自分用にカスタマイズするのであれば、これに適応させる必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11113&#34; target=&#34;_blank&#34;&gt;#11113&lt;/a&gt; &lt;code&gt;rtree&lt;/code&gt;を&lt;code&gt;BOOST_FOREACH&lt;/code&gt;で回せるようにする&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11232&#34; target=&#34;_blank&#34;&gt;#11232&lt;/a&gt; &lt;code&gt;relate()&lt;/code&gt;機能のリクエスト&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11236&#34; target=&#34;_blank&#34;&gt;#11236&lt;/a&gt; 整数座標系で、&lt;code&gt;centroid()&lt;/code&gt;の結果が間違っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11268&#34; target=&#34;_blank&#34;&gt;#11268&lt;/a&gt; &lt;code&gt;intersection()&lt;/code&gt;の&lt;code&gt;multi_linestring&lt;/code&gt;と&lt;code&gt;box&lt;/code&gt;に対する組み合わせのレギュレッションを修正。1.57と1.55でコンパイルが通らなかった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11332&#34; target=&#34;_blank&#34;&gt;#11332&lt;/a&gt; 極端な座標値の&lt;code&gt;buffer&lt;/code&gt;でアサーションに失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11346&#34; target=&#34;_blank&#34;&gt;#11346&lt;/a&gt; segment iteratorが参照ではなく値を返すため、Rangeで動作しなかった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11436&#34; target=&#34;_blank&#34;&gt;#11436&lt;/a&gt; &lt;code&gt;sym_difference(py1, py2, mpy)&lt;/code&gt;が間違った&lt;code&gt;multipolygon&lt;/code&gt;を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Buffer&lt;/code&gt; : &lt;code&gt;intersection()&lt;/code&gt;を計算する、より強力な方法を使用することによって、バッファ生成時のいくつかのエラーを修正。&lt;/li&gt;
&lt;li&gt;2つのセグメントの交差(intersection)において、セグメントの選択がIPから行われていたのを修正。segment-pointの近傍のpoint、もしくは他の最短のセグメントを選択するようになった。これは、(ほとんど発生しない)無効な出力ポリゴンを作る小さな三角形の生成を回避する。&lt;/li&gt;
&lt;li&gt;整数グリッドに丸める代わりに、roundの再スケーリングを行うようにした。(この修正は、これまでのジオメトリ生成にいくつかの影響がある)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;detail::has_spikes()&lt;/code&gt;の、無限ループになる可能性があった部分を修正した。(このループは、渡されたpointがNaN座標を持っているときに起こり得た)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5139&#34; target=&#34;_blank&#34;&gt;#5139&lt;/a&gt; &lt;code&gt;boost::interprocess::basic_vectorstream&lt;/code&gt;の初期位置が不正だったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/19&#34; target=&#34;_blank&#34;&gt;GitHub Pull #19&lt;/a&gt; 例外オブジェクトの可視性を修正&lt;ul&gt;
&lt;li&gt;Romain-Geisslerに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;mapとmulti_mapに似たインターフェースを実装&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/doc/html/intrusive/map_multimap.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/1_59_0/doc/html/intrusive/map_multimap.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;テンプレートの実体化を減らすためにハッシュテーブルを使うコンテナをリファクタリング&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#lexical-cast&#34; name=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;警告を修正&lt;/li&gt;
&lt;li&gt;メタプログラムを整理し、簡易化した(Edward Diener氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;全体的な変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gcc.gnu.org/wiki/Visibility&#34; target=&#34;_blank&#34;&gt;シンボル可視性&lt;/a&gt;をサポートし、このライブラリの内部的なシンボルを隠した。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的な変更&lt;/strong&gt;&lt;/span&gt; : このライブラリの下層の型(underlying types)の管理に、Boost.TypeIndexを使用するようにした。これによって、以下のpublicインタフェースが影響を受ける：&lt;ul&gt;
&lt;li&gt;このライブラリでは、問題のある型の説明のために&lt;code&gt;invalid_type&lt;/code&gt;例外を送出しているが、それに&lt;code&gt;typeindex::type_index&lt;/code&gt;が付加されるようになった。これまでは、&lt;code&gt;type_info_wrapper&lt;/code&gt;型を使用していた。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type_info_info&lt;/code&gt;例外のエラー情報には、&lt;code&gt;type_info_wrapper&lt;/code&gt;の代わりに&lt;code&gt;typeindex::type_index&lt;/code&gt;を含めるようになった。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attribute_value::get_type()&lt;/code&gt;関数は、&lt;code&gt;type_info_wrapper&lt;/code&gt;の代わりに&lt;code&gt;typeindex::type_index&lt;/code&gt;を返すようになった。また、ユーザー定義の属性値の実装も同様に、変更する必要がある。(&lt;code&gt;attribute_value::impl::get_type()&lt;/code&gt;仮想メンバ関数も、&lt;code&gt;typeindex::type_index&lt;/code&gt;型を返すようになった)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type_info_wrapper&lt;/code&gt;コンポーネントは非推奨となり、詳細のリリースから削除される予定。代わりに、Boost.TypeIndexを推奨する。&lt;/li&gt;
&lt;li&gt;以前から非推奨だった、以下のヘッダを削除：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/intrusive_ref_counter.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/explicit_operator_bool.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/empty_deleter.hpp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11446&#34; target=&#34;_blank&#34;&gt;#11446&lt;/a&gt; OpenBSDのビルドをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11398&#34; target=&#34;_blank&#34;&gt;#11398&lt;/a&gt; イベント同期プリミティブの内部実装に、非同期ログを使用するよう改善した。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11190&#34; target=&#34;_blank&#34;&gt;#11190&lt;/a&gt; いくつかのケースで、&lt;code&gt;attribute_value_set::insert()&lt;/code&gt;関数と&lt;code&gt;attribute_value_set&lt;/code&gt;のコンストラクタがおかしい動作をしていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらなる詳細は、&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;Changelog&lt;/a&gt;を参照。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#move&#34; name=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unique_ptr&lt;/code&gt;の変換コンストラクタを、C++03では値でパラメータを受け取るよう変更した。&lt;ul&gt;
&lt;li&gt;C++03 : &lt;code&gt;unique_ptr(unique_ptr&amp;lt;U, E&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;C++11 : &lt;code&gt;unique_ptr(unique_ptr&amp;lt;U, E&amp;gt;&amp;amp;&amp;amp;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11229&#34; target=&#34;_blank&#34;&gt;#11229&lt;/a&gt; &lt;code&gt;vector&lt;/code&gt;がムーブのみ可能な型に対して&lt;code&gt;memcpy&lt;/code&gt;していた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#multi-index&#34; name=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ranked indicesを追加&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;predef_check&lt;/code&gt;機能のさまざまな問題を修正&lt;/li&gt;
&lt;li&gt;Oracleからの最新バージョンのコンパイラに合わせて、SunProの検出機能を更新&lt;/li&gt;
&lt;li&gt;Boost.Build側に対する&lt;code&gt;predef_check&lt;/code&gt;式に、&lt;code&gt;and&lt;/code&gt;と&lt;code&gt;or&lt;/code&gt;の論理演算子を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ARCH_PARISC&lt;/code&gt;の綴りを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MAKE_YYYYM&lt;/code&gt;マクロの、月を正しく制限するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#property-tree&#34; name=&#34;property-tree&#34;&gt;Property Tree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいJSONパーサーで、Unicodeを完全サポートした。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 新しいパーサーでは、JSONファイル中のコメントや文字列連結をサポートしない。古いパーサーの非標準機能が削除されたため、それらの機能に依存したコードが壊れる可能性がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVCとMinGW環境下において、&lt;code&gt;dllexport&lt;/code&gt;が無いことによる警告とコンパイルエラーを修正 (Daniela Engert, Marcel Raad)&lt;/li&gt;
&lt;li&gt;未初期化のフィールドを修正 (Zoey Greer)&lt;/li&gt;
&lt;li&gt;暗黙の値を持ったオプションがそれ以上トークンを処理するのを抑止 (Michael John Decker)&lt;/li&gt;
&lt;li&gt;複数のトークンを受け取るオプションの上限を32k個ではなくintのmaxに緩和 (Hans Hohenfeld)&lt;ul&gt;
&lt;li&gt;訳者註: intのmaxではなくunsigned intのmaxが使用される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;コードの整形とドキュメントの修正 (Jurko Gospodnetić, Lauri Nurmi)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no-rtti&lt;/code&gt;の最低限のサポート (Minmin Gong)&lt;/li&gt;
&lt;li&gt;環境変数のポインタをendの次までインクリメントしてしまうのを修正 (Vladimir Prus)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン3に、メジャーアップデート&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;汎用的なテストマクロ&lt;code&gt;BOOST_TEST&lt;/code&gt;を追加。&lt;ul&gt;
&lt;li&gt;たとえば、&lt;code&gt;BOOST_CHECK_EQUAL(a, b)&lt;/code&gt;の代わりに&lt;code&gt;BOOST_TEST(a == b)&lt;/code&gt;を使用できる。&lt;/li&gt;
&lt;li&gt;このマクロには、任意の条件式を指定できる。ただし、&lt;code&gt;||&lt;/code&gt;演算子および&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;は直接使用できないため、&lt;code&gt;BOOST_TEST((true || false))&lt;/code&gt;のように丸カッコで条件式を囲む必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;データ駆動のテストケース(パラメタライズドテスト)
  &lt;br /&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;BOOST_TEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;124&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;BOOST_AUTO_TEST_CASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_case1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;…&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// パラメータ&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 各パラメータをtest1()関数に渡してテストを実行&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BOOST_PARAM_TEST_CASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;テストの細かな挙動を制御するための「属性(attribute)」機能を追加&lt;ul&gt;
&lt;li&gt;たとえば、論理グループ化、テストの依存関係、テストの有効化・無効化などに使用する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CLIから学んだ、色付けのための&lt;code&gt;colour_output&lt;/code&gt;、テストケースのリストアップのための`list_content、および拡張ユニットテストフィルタリング(否定、ラベル)を追加&lt;/li&gt;
&lt;li&gt;Quickbookを使用して、ドキュメントのリファクタと書き直しを行った。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;取り組んだ問題&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2018&#34; target=&#34;_blank&#34;&gt;#2018&lt;/a&gt; 「実行時パラメータのリファレンス」章のドキュメントにおける、英語文法的な間違い、およびコマンドライン引数名の間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2450&#34; target=&#34;_blank&#34;&gt;#2450&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、数式が正しく表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2018&#34; target=&#34;_blank&#34;&gt;#2717&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_EQUAL_COLLECTION&lt;/code&gt;ドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2759&#34; target=&#34;_blank&#34;&gt;#2759&lt;/a&gt; new-year-resolution.htmlドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3182&#34; target=&#34;_blank&#34;&gt;#3182&lt;/a&gt; メモリリークの検出レポートを出力するファイルを、指定できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3316&#34; target=&#34;_blank&#34;&gt;#3316&lt;/a&gt; &lt;code&gt;init_tests_func()&lt;/code&gt;からログを出力しようとするとアクセス違反が起こる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3392&#34; target=&#34;_blank&#34;&gt;#3392&lt;/a&gt; &lt;code&gt;BOOST_TEST_PASSPOINT&lt;/code&gt;マクロのドキュメントが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3402&#34; target=&#34;_blank&#34;&gt;#3402&lt;/a&gt; ドキュメントに記載されているマクロ名が間違っていたので修正(#2717と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3445&#34; target=&#34;_blank&#34;&gt;#3445&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3463&#34; target=&#34;_blank&#34;&gt;#3463&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;のドキュメントで&lt;code&gt;&amp;gt;=&lt;/code&gt;を使用すると書いていたため、&lt;code&gt;&amp;gt;&lt;/code&gt;での比較に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3542&#34; target=&#34;_blank&#34;&gt;#3542&lt;/a&gt; コマンドライン引数の名前が&lt;code&gt;build_info&lt;/code&gt;となっていたが、正しくは&lt;code&gt;detect_memory_leak&lt;/code&gt;。(#2018と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3592&#34; target=&#34;_blank&#34;&gt;#3592&lt;/a&gt; &lt;code&gt;under_debugger()&lt;/code&gt;が無限ループする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3595&#34; target=&#34;_blank&#34;&gt;#3595&lt;/a&gt; マクロ名の誤字を修正(#2759と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3623&#34; target=&#34;_blank&#34;&gt;#3623&lt;/a&gt; マクロ名の誤字を修正(#2759と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3664&#34; target=&#34;_blank&#34;&gt;#3664&lt;/a&gt; &lt;code&gt;SIGCHLDP&lt;/code&gt;が致命的なエラーとなることを考慮するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3784&#34; target=&#34;_blank&#34;&gt;#3784&lt;/a&gt; Execution Monitor Compilationのドキュメント間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3785&#34; target=&#34;_blank&#34;&gt;#3785&lt;/a&gt; Program Execution Monitor implementationのドキュメント間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3811&#34; target=&#34;_blank&#34;&gt;#3811&lt;/a&gt; グローバル名前空間で定義するCリンケージの関数に、名前衝突を避けるために&lt;code&gt;boost_&lt;/code&gt;プレフィックスを付けた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3834&#34; target=&#34;_blank&#34;&gt;#3834&lt;/a&gt; HTMLが正しく表示されない問題を修正(#2450と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3896&#34; target=&#34;_blank&#34;&gt;#3896&lt;/a&gt; コマンドライン引数の説明が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3932&#34; target=&#34;_blank&#34;&gt;#3932&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;の説明が間違っていたので修正(#3463と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3938&#34; target=&#34;_blank&#34;&gt;#3938&lt;/a&gt; ドキュメントのマクロ名が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3964&#34; target=&#34;_blank&#34;&gt;#3964&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_CLOSE_FRACTION&lt;/code&gt;のドキュメントが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3978&#34; target=&#34;_blank&#34;&gt;#3978&lt;/a&gt; テストログのファイルへのリダイレクトが失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3979&#34; target=&#34;_blank&#34;&gt;#3979&lt;/a&gt; &lt;code&gt;&amp;lt;boost/test/exception_safety.hpp&amp;gt;&lt;/code&gt;がさらなるインクルードを要求する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4161&#34; target=&#34;_blank&#34;&gt;#4161&lt;/a&gt; ドキュメントのスペルミスを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4275&#34; target=&#34;_blank&#34;&gt;#4275&lt;/a&gt; ドキュメントの間違いを修正(#2717と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4389&#34; target=&#34;_blank&#34;&gt;#4389&lt;/a&gt; 依存するテストの実行を有効にできるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4434&#34; target=&#34;_blank&#34;&gt;#4434&lt;/a&gt; ドキュメントの誤字&lt;code&gt;BOOST_AUTO_EST_CASE&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4587&#34; target=&#34;_blank&#34;&gt;#4587&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4806&#34; target=&#34;_blank&#34;&gt;#4806&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4911&#34; target=&#34;_blank&#34;&gt;#4911&lt;/a&gt; 例外発生時に、例外の本来の型名を出力するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4923&#34; target=&#34;_blank&#34;&gt;#4923&lt;/a&gt; ドキュメントのサンプルコードにセミコロンが不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4924&#34; target=&#34;_blank&#34;&gt;#4924&lt;/a&gt; ドキュメントの小さな誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4982&#34; target=&#34;_blank&#34;&gt;#4982&lt;/a&gt; ドキュメントに記載されている、作者Gennadiy Rozentalのメールアドレスが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5008&#34; target=&#34;_blank&#34;&gt;#5008&lt;/a&gt; テストケースの開始と終了のチェックポイントを挿入&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5036&#34; target=&#34;_blank&#34;&gt;#5036&lt;/a&gt; メモリリークのレポートを、VCでは&lt;code&gt;stdout&lt;/code&gt;に対して書き込んでいたが、&lt;code&gt;strerr&lt;/code&gt;に書き込むよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5262&#34; target=&#34;_blank&#34;&gt;#5262&lt;/a&gt; run_testに、否定(negation)のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5374&#34; target=&#34;_blank&#34;&gt;#5374&lt;/a&gt; VS2010で、エラーのリストが表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5412&#34; target=&#34;_blank&#34;&gt;#5412&lt;/a&gt; 内部で使用しているXMLフォーマッターの、サブシーケンスを処理する文字列が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5563&#34; target=&#34;_blank&#34;&gt;#5563&lt;/a&gt; グローバルなフィクスチャの中でテストマクロを使用するとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5582&#34; target=&#34;_blank&#34;&gt;#5582&lt;/a&gt; &lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt;のメモリリークを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5599&#34; target=&#34;_blank&#34;&gt;#5599&lt;/a&gt; ドキュメントの導入がイケてない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5718&#34; target=&#34;_blank&#34;&gt;#5718&lt;/a&gt; 単体テストフレームワークのソースコード例へのリンクが壊れていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5729&#34; target=&#34;_blank&#34;&gt;#5729&lt;/a&gt; &lt;code&gt;fpt_limits&lt;/code&gt;の中で&lt;code&gt;static_cast&lt;/code&gt;が不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5870&#34; target=&#34;_blank&#34;&gt;#5870&lt;/a&gt; 警告の制御にスタックが使われていなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5972&#34; target=&#34;_blank&#34;&gt;#5972&lt;/a&gt; 出力ストリームにテストツリーをテキストでダンプするオプションをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6002&#34; target=&#34;_blank&#34;&gt;#6002&lt;/a&gt; テストログのファイルへのリダイレクトが失敗する問題を修正(#3978と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6071&#34; target=&#34;_blank&#34;&gt;#6071&lt;/a&gt; Boost Test (Boost 1.46.0) + GCC 4.6.1で、&lt;code&gt;operator[]&lt;/code&gt;のオーバーロードが曖昧であるというコンパイルエラーが発生していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6074&#34; target=&#34;_blank&#34;&gt;#6074&lt;/a&gt; 警告をエラーとして扱うオプションが、Boost.Testのリリースモードで扱えない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6161&#34; target=&#34;_blank&#34;&gt;#6161&lt;/a&gt; SunOS環境で、&lt;code&gt;putenv()&lt;/code&gt;の宣言がコンパイルエラーになっていたので修正(#6766と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6766&#34; target=&#34;_blank&#34;&gt;#6766&lt;/a&gt; config.hppの&lt;code&gt;putenv()&lt;/code&gt;が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6712&#34; target=&#34;_blank&#34;&gt;#6712&lt;/a&gt; GCCの警告を除去&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6748&#34; target=&#34;_blank&#34;&gt;#6748&lt;/a&gt; ドキュメントのリンクが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7046&#34; target=&#34;_blank&#34;&gt;#7046&lt;/a&gt; 例外のエラーメッセージが512文字を超えていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7397&#34; target=&#34;_blank&#34;&gt;#7397&lt;/a&gt; Boost.Testが、1.48.0で非推奨になったBoost.Timerのクラスを使っていたので、新しいクラスを使用するよう更新した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7410&#34; target=&#34;_blank&#34;&gt;#7410&lt;/a&gt; テストケースが&lt;code&gt;__FILE__&lt;/code&gt;と&lt;code&gt;__LINE__&lt;/code&gt;をキャプチャするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8862&#34; target=&#34;_blank&#34;&gt;#8862&lt;/a&gt; ドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9179&#34; target=&#34;_blank&#34;&gt;#9179&lt;/a&gt; ドキュメントのリンクが壊れていたので修正(const_string.hpp/const_string_test.cppが見つからない)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9272&#34; target=&#34;_blank&#34;&gt;#9272&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;のドキュメントバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9390&#34; target=&#34;_blank&#34;&gt;#9390&lt;/a&gt; &lt;code&gt;BOOST_TEST_DONT_PRINT_LOG_VALUE&lt;/code&gt;が、一部のマクロに対して使用できなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9409&#34; target=&#34;_blank&#34;&gt;#9409&lt;/a&gt; いくつかのサンプルコードが不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9537&#34; target=&#34;_blank&#34;&gt;#9537&lt;/a&gt; const_string_testのサンプルコードが失敗していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9539&#34; target=&#34;_blank&#34;&gt;#9539&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、数式が正しく表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9581&#34; target=&#34;_blank&#34;&gt;#9581&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、Squassabiaへのリンクが壊れていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10318&#34; target=&#34;_blank&#34;&gt;#10318&lt;/a&gt; ドキュメントの小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10888&#34; target=&#34;_blank&#34;&gt;#10888&lt;/a&gt; アサーションの失敗が、VS 2010、VS 2012、VS 2013でエラーウィンドウに表示されない問題を修正(重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11054&#34; target=&#34;_blank&#34;&gt;#11054&lt;/a&gt; Expression Templateを有効にすると、多倍長の浮動小数点数に対する比較が失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11347&#34; target=&#34;_blank&#34;&gt;#11347&lt;/a&gt; &lt;code&gt;DS&lt;/code&gt;識別子が原因で、&lt;code&gt;doc/examples/dataset_example*.cpp&lt;/code&gt;のテストが失敗していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11358&#34; target=&#34;_blank&#34;&gt;#11358&lt;/a&gt; signedとunsignedの比較で警告が出ていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11359&#34; target=&#34;_blank&#34;&gt;#11359&lt;/a&gt; &lt;code&gt;BOOST_CHECK_EQUAL_COLLECTIONS&lt;/code&gt;マクロで、出力演算子の制御ができない問題を修正(#9390と重複)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#type-index&#34; name=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;コンパイル時間とモジュール性を改善するために、いくつかのBoostライブラリへの依存関係を削除&lt;/li&gt;
&lt;li&gt;テストの警告を修正し、メンテナンス上の改善をいくつか行った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/document/version/1_59_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11196&#34; target=&#34;_blank&#34;&gt;#11196&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11283&#34; target=&#34;_blank&#34;&gt;#11283&lt;/a&gt; element_index.hppでの、インクルード不足を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11251&#34; target=&#34;_blank&#34;&gt;#11251&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11285&#34; target=&#34;_blank&#34;&gt;#11285&lt;/a&gt; C++14での&lt;code&gt;aplly_visitor&lt;/code&gt;のサンプルコードとconst参照を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get&amp;lt;reference&amp;gt;(variant_variable)&lt;/code&gt;のコンパイル時チェックを緩和(Nicolas Cornu氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.6&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.8.2, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3&lt;/li&gt;
&lt;li&gt;Intel: 15.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 8.0, 9.0, 10.0, 11.0, 12.0, 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6&lt;/li&gt;
&lt;li&gt;GCC: 4.8, 4.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Sun: 6.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.6, 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.4, 4.7.3, 4.8.1, 5.1.0, 6.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.1&lt;/li&gt;
&lt;li&gt;Intel: 15.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6&lt;/li&gt;
&lt;li&gt;4.8, 4.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.4.1&lt;/li&gt;
&lt;li&gt;GCC: 4.8.5, 5.1.0, 6.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>線形代数 -- Merge pull request #53 from e-kwsm/master
</title>
      <link href="http://boostjp.github.io/tips/linear-algebra.html"/>
      <id>a3cf8141c37cae83a70be19c7f94d92d2bb57f80:tips/linear-algebra.md</id>
      <updated>2015-11-13 08:52:28 +0900
</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;線形代数&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;線形代数には、&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/index.htm&#34; target=&#34;_blank&#34;&gt;Boost uBLAS Library&lt;/a&gt;を使用する。&lt;/p&gt;
&lt;h2&gt;インデックス&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#basic-vector-usage&#34;&gt;ベクトルの基本操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#vector-length&#34;&gt;ベクトルの長さを取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#normalize&#34;&gt;ベクトルを正規化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#inner-product&#34;&gt;2つのベクトルの内積を求める&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#angle&#34;&gt;2つのベクトルが成す角度を求める&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#basic-vector-usage&#34; name=&#34;basic-vector-usage&#34;&gt;ベクトルの基本操作&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ベクトルには、&lt;code&gt;boost::numeric::ublas&lt;/code&gt;名前空間の&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/vector.htm#vector&#34; target=&#34;_blank&#34;&gt;vector&lt;/a&gt;&lt;/code&gt;クラステンプレートを使用する。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/io.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// double型を要素とする3次元ベクトル&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 各要素の参照と代入&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// x&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// y&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// z&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 出力ストリーム&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// ベクトルの演算&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// ベクトルの複合演算&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;[3](3,0,4)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vector&lt;/code&gt;クラスは、テンプレート引数で要素の型をとり、コンストラクタでは次元数を引数にとる。&lt;/p&gt;
&lt;p&gt;各要素は、&lt;code&gt;operator[]()&lt;/code&gt;で参照できる。&lt;/p&gt;
&lt;p&gt;ベクトルの演算は、四則演算全てをサポートしており、各演算は以下の意味を持つ：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;演算&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v + u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(v[0] + u[0], v[1] + u[1], ..., v[i] + u[i])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v - u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(v[0] - u[0], v[1] - u[1], ..., v[i] - u[i])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v * n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(v[0] * n, v[1] * n, ..., v[i] * n)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v / n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(v[0] / n, v[1] / n, ..., v[i] / n)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#vector-length&#34; name=&#34;vector-length&#34;&gt;ベクトルの長さを取得する&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ベクトルの長さを取得するには、&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/vector_expression.htm#vector_reductions&#34; target=&#34;_blank&#34;&gt;boost::numeric::ublas::norm_2()&lt;/a&gt;&lt;/code&gt;関数を使用する。この関数は、ユークリッドノルム(2-ノルム)を計算して返す。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// ベクトルの長さを取得する&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;norm_2&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;2.23607
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#normalize&#34; name=&#34;normalize&#34;&gt;ベクトルを正規化する&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ベクトルの正規化とは、ベクトルの長さを1にする変換のことである。Boost.uBLASでは、正規化のための関数が直接的には用意されていないため、自分で計算する必要がある。&lt;/p&gt;
&lt;p&gt;正規化の計算は、以下の&lt;code&gt;normalize()&lt;/code&gt;関数のように、ベクトルを長さで割ることでできる。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/io.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;v / ublas::norm_2(v)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 正規化&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalized_vec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;length : &#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;norm_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;normalized_vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalized_vec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;length : 1
[3](0.894427,0,0.447214)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;値の比率をそのままに、長さが1になっていることがわかる。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#inner-product&#34; name=&#34;inner-product&#34;&gt;2つのベクトルの内積を求める&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;2つのベクトルの内積を求めるには、&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/vector_expression.htm#vector_operations&#34; target=&#34;_blank&#34;&gt;boost::ublas::inner_prod()&lt;/a&gt;&lt;/code&gt;関数を使用する。この関数は、2つのベクトルを引数にとり、ベクトルの要素型で内積値を返す。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;inner_prod&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;-3
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;内積は、2つのベクトルが同じ方向を向いていれば正の値、逆方向を向いていれば負の値を返すという特徴がある。&lt;/p&gt;
&lt;p&gt;これを利用して、「負の値だったら位置ベクトルが目的地に到達した(衝突した)」と判定するのに応用できる。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#angle&#34; name=&#34;angle&#34;&gt;2つのベクトルが成す角度を求める&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;2つのベクトルが成す角度の計算を、以下の&lt;code&gt;angle()&lt;/code&gt;関数の実装で示す。この関数は、2つのベクトルを与えると、ラジアンで角度が返される。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;cmath&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/algorithm/clamp.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/geometry/util/math.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/math/constants/constants.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;angle(const ublas::vector&amp;lt;T&amp;gt;&amp;amp; v, const ublas::vector&amp;lt;T&amp;gt;&amp;amp; u)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;norm_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;norm_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geometry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;constants&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;half_pi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inner_prod&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rounded&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;algorithm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rounded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;radian_to_degree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;180.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;constants&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;angle(v, u); // 角度がラジアンで返される&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;radian_to_degree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 度に変換してみる&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;0.785398
45
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;計算の詳細は、Wikipediaを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E3%83%99%E3%82%AF%E3%83%88%E3%83%AB%E3%81%AE%E3%81%AA%E3%81%99%E8%A7%92&#34; target=&#34;_blank&#34;&gt;ベクトルのなす角 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;documented boost version is 1.53.0&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>E Kawashima
</name>
        <email>e-kwsm@users.noreply.github.com
</email>
      </author>
    </entry>
  
    <entry>
      <title>線形代数 -- tips/linear-algebra.md: ゼロベクトルは任意のベクトルと直交</title>
      <link href="http://boostjp.github.io/tips/linear-algebra.html"/>
      <id>1a4be4b8cd8f97fd5306d1c54ae226b20714efdc:tips/linear-algebra.md</id>
      <updated>2015-11-13 08:38:33 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;線形代数&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;線形代数には、&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/index.htm&#34; target=&#34;_blank&#34;&gt;Boost uBLAS Library&lt;/a&gt;を使用する。&lt;/p&gt;
&lt;h2&gt;インデックス&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#basic-vector-usage&#34;&gt;ベクトルの基本操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#vector-length&#34;&gt;ベクトルの長さを取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#normalize&#34;&gt;ベクトルを正規化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#inner-product&#34;&gt;2つのベクトルの内積を求める&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#angle&#34;&gt;2つのベクトルが成す角度を求める&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#basic-vector-usage&#34; name=&#34;basic-vector-usage&#34;&gt;ベクトルの基本操作&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ベクトルには、&lt;code&gt;boost::numeric::ublas&lt;/code&gt;名前空間の&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/vector.htm#vector&#34; target=&#34;_blank&#34;&gt;vector&lt;/a&gt;&lt;/code&gt;クラステンプレートを使用する。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/io.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// double型を要素とする3次元ベクトル&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 各要素の参照と代入&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// x&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// y&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// z&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 出力ストリーム&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// ベクトルの演算&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// ベクトルの複合演算&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;[3](3,0,4)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vector&lt;/code&gt;クラスは、テンプレート引数で要素の型をとり、コンストラクタでは次元数を引数にとる。&lt;/p&gt;
&lt;p&gt;各要素は、&lt;code&gt;operator[]()&lt;/code&gt;で参照できる。&lt;/p&gt;
&lt;p&gt;ベクトルの演算は、四則演算全てをサポートしており、各演算は以下の意味を持つ：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;演算&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v + u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(v[0] + u[0], v[1] + u[1], ..., v[i] + u[i])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v - u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(v[0] - u[0], v[1] - u[1], ..., v[i] - u[i])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v * n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(v[0] * n, v[1] * n, ..., v[i] * n)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v / n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(v[0] / n, v[1] / n, ..., v[i] / n)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#vector-length&#34; name=&#34;vector-length&#34;&gt;ベクトルの長さを取得する&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ベクトルの長さを取得するには、&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/vector_expression.htm#vector_reductions&#34; target=&#34;_blank&#34;&gt;boost::numeric::ublas::norm_2()&lt;/a&gt;&lt;/code&gt;関数を使用する。この関数は、ユークリッドノルム(2-ノルム)を計算して返す。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// ベクトルの長さを取得する&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;norm_2&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;2.23607
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#normalize&#34; name=&#34;normalize&#34;&gt;ベクトルを正規化する&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ベクトルの正規化とは、ベクトルの長さを1にする変換のことである。Boost.uBLASでは、正規化のための関数が直接的には用意されていないため、自分で計算する必要がある。&lt;/p&gt;
&lt;p&gt;正規化の計算は、以下の&lt;code&gt;normalize()&lt;/code&gt;関数のように、ベクトルを長さで割ることでできる。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/io.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;v / ublas::norm_2(v)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 正規化&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalized_vec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;length : &#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;norm_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;normalized_vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalized_vec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;length : 1
[3](0.894427,0,0.447214)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;値の比率をそのままに、長さが1になっていることがわかる。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#inner-product&#34; name=&#34;inner-product&#34;&gt;2つのベクトルの内積を求める&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;2つのベクトルの内積を求めるには、&lt;code&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/vector_expression.htm#vector_operations&#34; target=&#34;_blank&#34;&gt;boost::ublas::inner_prod()&lt;/a&gt;&lt;/code&gt;関数を使用する。この関数は、2つのベクトルを引数にとり、ベクトルの要素型で内積値を返す。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;inner_prod&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;-3
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;内積は、2つのベクトルが同じ方向を向いていれば正の値、逆方向を向いていれば負の値を返すという特徴がある。&lt;/p&gt;
&lt;p&gt;これを利用して、「負の値だったら位置ベクトルが目的地に到達した(衝突した)」と判定するのに応用できる。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://boostjp.github.io/tips/linear-algebra.html#angle&#34; name=&#34;angle&#34;&gt;2つのベクトルが成す角度を求める&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;2つのベクトルが成す角度の計算を、以下の&lt;code&gt;angle()&lt;/code&gt;関数の実装で示す。この関数は、2つのベクトルを与えると、ラジアンで角度が返される。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;cmath&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/numeric/ublas/vector.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/algorithm/clamp.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/geometry/util/math.hpp&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;boost/math/constants/constants.hpp&amp;gt;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;angle(const ublas::vector&amp;lt;T&amp;gt;&amp;amp; v, const ublas::vector&amp;lt;T&amp;gt;&amp;amp; u)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;norm_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;norm_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geometry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;constants&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;half_pi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inner_prod&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rounded&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;algorithm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rounded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;radian_to_degree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;180.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;constants&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;ublas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;angle(v, u); // 角度がラジアンで返される&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;radian_to_degree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 度に変換してみる&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;出力：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;0.785398
45
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;計算の詳細は、Wikipediaを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E3%83%99%E3%82%AF%E3%83%88%E3%83%AB%E3%81%AE%E3%81%AA%E3%81%99%E8%A7%92&#34; target=&#34;_blank&#34;&gt;ベクトルのなす角 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;documented boost version is 1.53.0&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>E Kawashima</name>
        <email>e-kwsm@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>