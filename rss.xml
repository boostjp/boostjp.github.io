<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2018-08-03T07:14:53.762582</updated>
  <id>3cf0668f-9a88-40d0-bc11-b83ce6fd40c8</id>

  
    <entry>
      <title>Boost 1.68.0リリースノート -- 1.68.0リリースノート : テスト済みコンパイラを記載 (close #286)</title>
      <link href="https://boostjp.github.io/document/version/1_68_0.html"/>
      <id>10211ec1035efddb0958339d49c0d77e782225ad:document/version/1_68_0.md</id>
      <updated>2018-08-03T16:08:31+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.68.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_68_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_68_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boost.WinAPIのターゲットを、(それが可能な状況で) デフォルトでWindows 7に更新した。前回までのリリースでは、デフォルトはWindows Vistaだった。&lt;/p&gt;
&lt;p&gt;Boost.WinAPIは、いくつかのBoostライブラリの内部で使用している、Windows SDKの抽象レイヤーである。Boost.Beast、Boost.Chrono、Boost.DateTime、Boost.DLL、Boost.Log、Boost.Process、Boost.Stacktrace、Boost.System、Boost.Thread、Boost.UUIDなどで使用している。&lt;/p&gt;
&lt;p&gt;ターゲットのWindowsバージョンを選択するためには、Boostをビルドする際に&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;を定義する必要があり、その値は&lt;code&gt;_WIN32_WINNT&lt;/code&gt;と同じである。例として：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;b2 release define=BOOST_USE_WINAPI_VERSION=0x0501 stage
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Windows APIのバージョンリストは、以下のページで確認できる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/6sehtctf.aspx&#34; target=&#34;_blank&#34;&gt;Modifying WINVER and _WIN32_WINNT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boost.org/libs/yap&#34; target=&#34;_blank&#34;&gt;YAP&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14以降用の、Expression Templateのライブラリ。作者Zach Laine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34;&gt;Signals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;全ての複合操作の実装で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するよう、不足していたところを修正。非同期操作の完了ハンドラに関連したクラッシュを経験しているユーザーは、アップグレードすることを推奨する&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;beast/experimental&amp;gt;&lt;/code&gt;ディレクトリに含まれる機能は、インタフェースが安定していないため、今後のバージョンで変更される可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; SSLストリームのパフォーマンス限界に対するワークアラウンドとして、&lt;code&gt;flat_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1151&#34; target=&#34;_blank&#34;&gt;GitHub #1151&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/beast/issues/595&#34; target=&#34;_blank&#34;&gt;GitHub #595&lt;/a&gt; ICY HTTP response handshakesをパースするフィルタを持つ&lt;code&gt;http::icy_stream&lt;/code&gt;ストリームを追加&lt;/li&gt;
&lt;li&gt;SSLのより良いパフォーマンスとムーブ構築のために、&lt;code&gt;ssl_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;単体テストのユーティリティとして、&lt;code&gt;test::connect&lt;/code&gt;、&lt;code&gt;test::error&lt;/code&gt;、&lt;code&gt;test::fail_count&lt;/code&gt;、&lt;code&gt;test::stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::is_mutable_body_writer&lt;/code&gt;メタ関数を追加&lt;/li&gt;
&lt;li&gt;疑似乱数生成器 (PRNG) に手動でエントロピーを提供するために、&lt;code&gt;websocket::seed_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;コネクションが使用するセキュアな疑似乱数生成器として、&lt;code&gt;websocket::stream::secure_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成されるWebSocketのマスクが、デフォルトでセキュアな疑似乱数生成器を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt; HTTP server doc rootsの例で、文字列共有を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; &lt;code&gt;handler_ptr::has_value&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1073&#34; target=&#34;_blank&#34;&gt;GitHub #1073&lt;/a&gt; advanced server examplesでの競合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; 複合操作で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; 誤った (spurious) assertを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1113&#34; target=&#34;_blank&#34;&gt;GitHub #1113&lt;/a&gt; message based HTTP writesに、&lt;code&gt;const&lt;/code&gt;と非&lt;code&gt;const&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1119&#34; target=&#34;_blank&#34;&gt;GitHub #1119&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1121&#34; target=&#34;_blank&#34;&gt;GitHub #1121&lt;/a&gt; フィンガープリントのルート証明を例で使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1141&#34; target=&#34;_blank&#34;&gt;GitHub #1141&lt;/a&gt; ちらかっていた複合操作のドキュメントを整理&lt;/li&gt;
&lt;li&gt;ちらかっていたWebSocketストリームのドキュメントを整理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bind_handler&lt;/code&gt;での、ムーブしかできない引数を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::parser&lt;/code&gt;クラスのコンストラクタについてドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;イテレータのvalue typeを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter::max_size&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_prefix&lt;/code&gt;イテレータのデクリメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fields&lt;/code&gt;、&lt;code&gt;FieldsWriter&lt;/code&gt;コンセプトのドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BodyReader&lt;/code&gt;のコンストラクタ要件のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非推奨だった&lt;code&gt;serializer::reader_impl&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;Body&lt;/code&gt;コンセプトの&lt;code&gt;reader&lt;/code&gt;と&lt;code&gt;writer&lt;/code&gt;のコンストラクタシグニチャを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/78&#34; target=&#34;_blank&#34;&gt;GitHub #78&lt;/a&gt; &lt;code&gt;context-impl=ucontext&lt;/code&gt;でのリンクエラーを修正 : &lt;code&gt;boost::context::detail::current_rec&lt;/code&gt;の重複定義&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; Visual Studio 2015 Update 3で、スタック巻き戻し中にクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; いくつかの導入ドキュメントに、なぜCoroutine2を使うのかを記載&lt;ul&gt;
&lt;li&gt;コミット&lt;code&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/commit/a28b850bcd659b1ef2771e76df0114c57a67f1ec&#34; target=&#34;_blank&#34;&gt;a28b850&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; Visual Studioで、C2039でコンパイルに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; 未定義動作のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;buffered_channel&lt;/code&gt;においてチャンネルが満杯になったときの説明をドキュメントに追記&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/172&#34; target=&#34;_blank&#34;&gt;GitHub #172&lt;/a&gt; mingw-w64環境での、&lt;code&gt;HANDLE&lt;/code&gt; (&lt;code&gt;void*)&lt;/code&gt;から&lt;code&gt;std::thread::native_handle_type&lt;/code&gt;への変換でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/175&#34; target=&#34;_blank&#34;&gt;GitHub #175&lt;/a&gt; &lt;code&gt;bufferd_channel&lt;/code&gt;内のスピンロックのunlockミスで&#34;Operation not permitted&#34;例外が送出されていた問題を修正&lt;/li&gt;
&lt;li&gt;NUMAサポートを追加ライブラリファイルfiber-numaとして分離。有効にするにはnumaプロパティを使用する (numa=on)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178&#34; target=&#34;_blank&#34;&gt;GitHub #178&lt;/a&gt;(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178/commits/9de32721749b635ff3e04e690da89cf06602c122&#34; target=&#34;_blank&#34;&gt;該当コミット&lt;/a&gt;)
  GCC 4.4/c++0xにおいて、&lt;code&gt;fusion::deque&lt;/code&gt;コンストラクタの曖昧な呼び出しへの回避策を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/177&#34; target=&#34;_blank&#34;&gt;GitHub #177&lt;/a&gt; C形式配列での問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4427&#34; target=&#34;_blank&#34;&gt;Trac #4427&lt;/a&gt; &lt;code&gt;fusion::for_each&lt;/code&gt;が関数を値で受け取るように修正&lt;ul&gt;
&lt;li&gt;これはコピー不可（もしくはムーヴ不可）関数を使用していた場合に破壊的変更に見えるが、古くから実装が間違っており、当初より正しかったドキュメントに記載された正しい関数シグネチャへと修正した&lt;/li&gt;
&lt;li&gt;使用している場合には用法を再確認されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5490&#34; target=&#34;_blank&#34;&gt;Trac #5490&lt;/a&gt; &lt;code&gt;fusion::transform&lt;/code&gt;における意図しないMPLプレースホルダの置き換えを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4029&#34; target=&#34;_blank&#34;&gt;Trac #4029&lt;/a&gt; FusionシーケンスをMPLシーケンスにアダプトする手順の説明をMPLの章に移動&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6091&#34; target=&#34;_blank&#34;&gt;Trac #6091&lt;/a&gt; Fusionにアダプトした型をFusionのIOシステムに適用する方法についてドキュメントに記載&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; SRS変換での水平グリッドシフト (Horizontal grid shift) (nadgrids)。この機能はアンドキュメントであり、将来的にインタフェースが変更になる可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/478&#34; target=&#34;_blank&#34;&gt;GitHub #478&lt;/a&gt; spherical / geometric座標系でのBox-Segment間の&lt;code&gt;distance&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/487&#34; target=&#34;_blank&#34;&gt;GitHub #487&lt;/a&gt; spherical / geometric座標系での&lt;code&gt;distance&lt;/code&gt;で、剛体の組み合わせが不足していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/489&#34; target=&#34;_blank&#34;&gt;GitHub #489&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) の公式を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/470&#34; target=&#34;_blank&#34;&gt;GitHub #470&lt;/a&gt; 短いspherical / geographicのsegmentでのアサーション失敗を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/471&#34; target=&#34;_blank&#34;&gt;GitHub #471&lt;/a&gt; sphericalなpolygonでの、envelope (凸包) が誤った結果となっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/498&#34; target=&#34;_blank&#34;&gt;GitHub #498&lt;/a&gt; spherical / geographic座標系での、&lt;code&gt;expand()&lt;/code&gt;と&lt;code&gt;make_inverse()&lt;/code&gt;が期待していない結果となっていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/488&#34; target=&#34;_blank&#34;&gt;GitHub #488&lt;/a&gt; &lt;code&gt;closing_iterator&lt;/code&gt;と&lt;code&gt;ever_circling_range_iterator&lt;/code&gt;で、一時オブジェクトへの参照を返していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/495&#34; target=&#34;_blank&#34;&gt;GitHub #495&lt;/a&gt; VxWorks 7でのクロスコンパイルの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I/O拡張を完全に書き直して導入した&lt;/li&gt;
&lt;li&gt;C++11準拠のコンパイラを要求するようにした&lt;/li&gt;
&lt;li&gt;ドキュメントを再フォーマットし、更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; 標準C++で非推奨・削除された機能を、以下のように置き換えた：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::bind1st&lt;/code&gt; → &lt;code&gt;std::bind&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; → &lt;code&gt;std::unique_ptr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::random_shuffle&lt;/code&gt; → &lt;code&gt;std::shuffle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/84&#34; target=&#34;_blank&#34;&gt;GitHub #84&lt;/a&gt; VS2015のリリースビルドでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/87&#34; target=&#34;_blank&#34;&gt;GitHub #87&lt;/a&gt; Stanford GraphBaseの例を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/103&#34; target=&#34;_blank&#34;&gt;GitHub #103&lt;/a&gt; &lt;code&gt;iterator_core_access&lt;/code&gt;のfriend宣言を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; 不足していた&lt;code&gt;&amp;lt;boost/iterator.hpp&amp;gt;&lt;/code&gt;のインクルードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/90&#34; target=&#34;_blank&#34;&gt;GitHub #90&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/88&#34; target=&#34;_blank&#34;&gt;GitHub #88&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; いくつかのドキュメント上のtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/85&#34; target=&#34;_blank&#34;&gt;GitHub #85&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; テストとサンプルコードのいくつかの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13540&#34; target=&#34;_blank&#34;&gt;Trac #13540&lt;/a&gt; clang-tidyの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; VxWorksのサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dump&lt;/code&gt;ストリームマニピュレータの実装で、x86 PIEレジスタに対しては、&lt;code&gt;ebx&lt;/code&gt;レジスタをsave / restoreするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; 求積法 (quadrature) と線積分 (contour integration) で任意精度の複素数をサポート&lt;/li&gt;
&lt;li&gt;多項式加算 (polynomial addition) のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;数値微分ルーチンの改善を継続し、線積分 (contour integration) を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erfc&lt;/code&gt;関数の、有理近似 (rational approximations) の精度を向上&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13478&#34; target=&#34;_blank&#34;&gt;Trac #13478&lt;/a&gt; ムーブできるがコピーできない要素型を持つコンテナを、シリアライズできるようにした。報告者のSébastien Paris氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13518&#34; target=&#34;_blank&#34;&gt;Trac #13518&lt;/a&gt; &lt;code&gt;multi_index_container&lt;/code&gt;のデフォルトコンストラクタに&lt;code&gt;explicit&lt;/code&gt;が付いていたので外した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;任意精度の複素数をサポート&lt;/li&gt;
&lt;li&gt;符号なし整数型への変換を変更し、標準で定義される動作に合わせて切り捨てる (truncate) ようにした&lt;/li&gt;
&lt;li&gt;MPFR文字列フォーマットのバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long long&lt;/code&gt;から&lt;code&gt;cpp_dec_float&lt;/code&gt;への変換での未定義動作を修正&lt;/li&gt;
&lt;li&gt;Eigenとの相互運用サポートを追加&lt;/li&gt;
&lt;li&gt;float128.hppの、Intel CPUが乗ったWindowsでのビルドを修正&lt;/li&gt;
&lt;li&gt;混合式 (mixed expressions) を含む式テンプレートを展開する際の、一時オブジェクトの型を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gmp_float&lt;/code&gt;から浮動小数点数の文字列への変換での、無限ループしてしまう問題を修正&lt;/li&gt;
&lt;li&gt;サポートされていない機能を実行した際により良いエラーメッセージを出力するよう、式テンプレートに対する&lt;code&gt;static_assert&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt;のゼロに対してインクリメントした際に、符号が正しく設定されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::move&lt;/code&gt;の誤った使い方を修正し、NRVOにも頼るようにした&lt;/li&gt;
&lt;li&gt;MPIRのバージョン3.0をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の、指数の型が&lt;code&gt;long long&lt;/code&gt;である場合や、それ以外でより広い整数型に変換するような場合での、さまざまな変換エラーを修正&lt;/li&gt;
&lt;li&gt;GCC 8で&lt;code&gt;std::byte&lt;/code&gt;が導入されたことによる、互換性の問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; &lt;code&gt;std::optional&lt;/code&gt;との互換性のために、&lt;code&gt;has_value()&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; U&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; optional&amp;lt;U&amp;gt;&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;flat_map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__ARM_ARCH&lt;/code&gt;マクロの検出をサポート (Tim Blechmann氏)&lt;/li&gt;
&lt;li&gt;PTXアーキテクチャの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;nvccコンパイラの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;CUDAの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;廃止になった&lt;code&gt;BOOST_ARCH_AMD64&lt;/code&gt;へのリファレンスを削除 (Peter Kolbus氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34; id=&#34;program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; オプションごとの複数のロング名 (long name) をサポート。Eyal Rozenberg氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/python/issues/193&#34; target=&#34;_blank&#34;&gt;GitHub #193&lt;/a&gt; Windows環境での、autolinkのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/19&#34; target=&#34;_blank&#34;&gt;GitHub #19&lt;/a&gt; &lt;code&gt;normalize()&lt;/code&gt;関数の未定義動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34; id=&#34;signals&#34;&gt;Signals&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;ライブラリ削除の注意&lt;/span&gt;&lt;/strong&gt; Boost.Signalsは、次のリリースで削除される&lt;ul&gt;
&lt;li&gt;このライブラリは、バージョン1.54.0から非推奨となっていた。Boost.Signals2に移行すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spirit.X3&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/368&#34; target=&#34;_blank&#34;&gt;GitHub #368&lt;/a&gt; リストのパーサーに対して小さな最適化を入れた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/370&#34; target=&#34;_blank&#34;&gt;GitHub #370&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12085&#34; target=&#34;_blank&#34;&gt;Trac #12085&lt;/a&gt; コンテナを横断する属性 (pass sequence attribute) を、シーケンスパーサー、およびシーケンスパーサーの最終要素に対して使用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/371&#34; target=&#34;_blank&#34;&gt;GitHub #371&lt;/a&gt; 属性チェックのメッセージを細分化した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/373&#34; target=&#34;_blank&#34;&gt;GitHub #373&lt;/a&gt; &lt;code&gt;skip_over&lt;/code&gt;の冗長なチェックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/379&#34; target=&#34;_blank&#34;&gt;GitHub #379&lt;/a&gt; VS2015のバグで&lt;code&gt;noexcept&lt;/code&gt;内での&lt;code&gt;constexpr&lt;/code&gt;に問題があったため、&lt;code&gt;x3::variant&lt;/code&gt;全体にワークアラウンドを入れた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/384&#34; target=&#34;_blank&#34;&gt;GitHub #384&lt;/a&gt; calc4bのサンプルコードのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/374&#34; target=&#34;_blank&#34;&gt;GitHub #374&lt;/a&gt; 小さなコード改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Qi&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/376&#34; target=&#34;_blank&#34;&gt;GitHub #376&lt;/a&gt; &lt;code&gt;permutation&lt;/code&gt;と&lt;code&gt;sequence_or&lt;/code&gt;演算子のADTサポートを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/383&#34; target=&#34;_blank&#34;&gt;GitHub #383&lt;/a&gt; &lt;code&gt;iterator_source&lt;/code&gt;をランダムアクセスのために特殊化&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/373&#34; target=&#34;_blank&#34;&gt;GitHub #373&lt;/a&gt; &lt;code&gt;skip_over&lt;/code&gt;の冗長なチェックを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Karma&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; &lt;code&gt;get_absolute_value&lt;/code&gt;関数の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/375&#34; target=&#34;_blank&#34;&gt;GitHub #375&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/6126&#34; target=&#34;_blank&#34;&gt;Trac #6126&lt;/a&gt; ADTのgetterがby valueで値を返した場合の、スコープ外での使用のバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Classic&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/336&#34; target=&#34;_blank&#34;&gt;GitHub #336&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/386&#34; target=&#34;_blank&#34;&gt;GitHub #386&lt;/a&gt; レグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/367&#34; target=&#34;_blank&#34;&gt;GitHub #367&lt;/a&gt; 小さなコード改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; Solarisとその他プラットフォームでのコンパイルエラーを修正するために、&lt;code&gt;dladdr()&lt;/code&gt;関数に渡すアドレスの&lt;code&gt;const&lt;/code&gt;修飾を修正&lt;/li&gt;
&lt;li&gt;Boost.LexicalCastへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/system/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; C++14以降向けに、&lt;code&gt;error_code&lt;/code&gt;と&lt;code&gt;error_condition&lt;/code&gt;に&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.8 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_68_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master_test_suite_t&lt;/code&gt;オブジェクトをコピー可能でなくした&lt;/li&gt;
&lt;li&gt;データセットの遅延を可能にしたため、データセット引数の追加のコピーが発生する可能性がある。これはとくに、&lt;code&gt;std::initializer_list&lt;/code&gt;で作成されたデータセットの場合に当てはまる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;データセットのテストケースでコマンドラインパラメータを使用するようにした&lt;ul&gt;
&lt;li&gt;データセットから生成されたテストは、フレームワークのセットアップ中にインスタンス化される。これによって、データセットのジェネレータが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスする。遅延インスタンス化されるべきデータセットを示すために、新たに&lt;code&gt;data::make_delayed&lt;/code&gt;ヘルパを導入した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;これによって、&lt;code&gt;data::make&lt;/code&gt;によってデータセットを作成する際に、可変個の引数を扱えるようになった。データセットが単相的であるため、最初の要素の型にキャスト可能である必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/143&#34; target=&#34;_blank&#34;&gt;GitHub #143&lt;/a&gt; &lt;code&gt;exception_api.run-fail.cpp&lt;/code&gt;の例で、条件式が逆だった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/145&#34; target=&#34;_blank&#34;&gt;GitHub #145&lt;/a&gt; 最近のCygwin環境での、ライブラリのビルドを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12095&#34; target=&#34;_blank&#34;&gt;Trac #12095&lt;/a&gt; 事前条件の失敗はエラーにすべきではなかったので、スキップするよう適切にハンドリング&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12953&#34; target=&#34;_blank&#34;&gt;Trac #12953&lt;/a&gt; データセットのテストケースが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスできるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13504&#34; target=&#34;_blank&#34;&gt;Trac #13504&lt;/a&gt; コマンドライン引数&lt;code&gt;catch_system_errors&lt;/code&gt;のshort formが動作しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13525&#34; target=&#34;_blank&#34;&gt;Trac #13525&lt;/a&gt; GCC 4.6.3でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13528&#34; target=&#34;_blank&#34;&gt;Trac #13528&lt;/a&gt; コマンドライン引数&lt;code&gt;--report_sink&lt;/code&gt;を使用するとクラッシュする問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34; id=&#34;type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.MPLへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; 後方互換性のために残していた、sha1のdetail名前空間にリダイレクトしていた非推奨のヘッダを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;boost::uuids:uuid&lt;/code&gt;クラスに対する&lt;code&gt;std::hash&lt;/code&gt;の特殊化をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; random generatorsに対するムーブセマンティクスをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; エントロピー獲得時にEINTRを正しくハンドリングするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; Linux環境で、getentropy(3)の代わりにgetrandom(2)を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++0x: 3.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2, 6.0.1, 7.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 5.0.2, 6.0.1&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1&lt;/li&gt;
&lt;li&gt;Intel, C++14: 18.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 9.0.0, 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 9.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 9.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++0x: 4.6.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.1, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0, 7.2.0, 7.3.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 4.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.68.0リリースノート -- 1.68.0リリースノート : Spiritを追加 (close #290)</title>
      <link href="https://boostjp.github.io/document/version/1_68_0.html"/>
      <id>78611ca2290217a3e50b9bbe0d72f0636c97b02f:document/version/1_68_0.md</id>
      <updated>2018-08-03T16:05:58+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.68.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_68_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_68_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boost.WinAPIのターゲットを、(それが可能な状況で) デフォルトでWindows 7に更新した。前回までのリリースでは、デフォルトはWindows Vistaだった。&lt;/p&gt;
&lt;p&gt;Boost.WinAPIは、いくつかのBoostライブラリの内部で使用している、Windows SDKの抽象レイヤーである。Boost.Beast、Boost.Chrono、Boost.DateTime、Boost.DLL、Boost.Log、Boost.Process、Boost.Stacktrace、Boost.System、Boost.Thread、Boost.UUIDなどで使用している。&lt;/p&gt;
&lt;p&gt;ターゲットのWindowsバージョンを選択するためには、Boostをビルドする際に&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;を定義する必要があり、その値は&lt;code&gt;_WIN32_WINNT&lt;/code&gt;と同じである。例として：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;b2 release define=BOOST_USE_WINAPI_VERSION=0x0501 stage
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Windows APIのバージョンリストは、以下のページで確認できる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/6sehtctf.aspx&#34; target=&#34;_blank&#34;&gt;Modifying WINVER and _WIN32_WINNT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boost.org/libs/yap&#34; target=&#34;_blank&#34;&gt;YAP&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14以降用の、Expression Templateのライブラリ。作者Zach Laine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34;&gt;Signals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;全ての複合操作の実装で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するよう、不足していたところを修正。非同期操作の完了ハンドラに関連したクラッシュを経験しているユーザーは、アップグレードすることを推奨する&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;beast/experimental&amp;gt;&lt;/code&gt;ディレクトリに含まれる機能は、インタフェースが安定していないため、今後のバージョンで変更される可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; SSLストリームのパフォーマンス限界に対するワークアラウンドとして、&lt;code&gt;flat_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1151&#34; target=&#34;_blank&#34;&gt;GitHub #1151&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/beast/issues/595&#34; target=&#34;_blank&#34;&gt;GitHub #595&lt;/a&gt; ICY HTTP response handshakesをパースするフィルタを持つ&lt;code&gt;http::icy_stream&lt;/code&gt;ストリームを追加&lt;/li&gt;
&lt;li&gt;SSLのより良いパフォーマンスとムーブ構築のために、&lt;code&gt;ssl_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;単体テストのユーティリティとして、&lt;code&gt;test::connect&lt;/code&gt;、&lt;code&gt;test::error&lt;/code&gt;、&lt;code&gt;test::fail_count&lt;/code&gt;、&lt;code&gt;test::stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::is_mutable_body_writer&lt;/code&gt;メタ関数を追加&lt;/li&gt;
&lt;li&gt;疑似乱数生成器 (PRNG) に手動でエントロピーを提供するために、&lt;code&gt;websocket::seed_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;コネクションが使用するセキュアな疑似乱数生成器として、&lt;code&gt;websocket::stream::secure_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成されるWebSocketのマスクが、デフォルトでセキュアな疑似乱数生成器を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt; HTTP server doc rootsの例で、文字列共有を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; &lt;code&gt;handler_ptr::has_value&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1073&#34; target=&#34;_blank&#34;&gt;GitHub #1073&lt;/a&gt; advanced server examplesでの競合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; 複合操作で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; 誤った (spurious) assertを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1113&#34; target=&#34;_blank&#34;&gt;GitHub #1113&lt;/a&gt; message based HTTP writesに、&lt;code&gt;const&lt;/code&gt;と非&lt;code&gt;const&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1119&#34; target=&#34;_blank&#34;&gt;GitHub #1119&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1121&#34; target=&#34;_blank&#34;&gt;GitHub #1121&lt;/a&gt; フィンガープリントのルート証明を例で使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1141&#34; target=&#34;_blank&#34;&gt;GitHub #1141&lt;/a&gt; ちらかっていた複合操作のドキュメントを整理&lt;/li&gt;
&lt;li&gt;ちらかっていたWebSocketストリームのドキュメントを整理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bind_handler&lt;/code&gt;での、ムーブしかできない引数を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::parser&lt;/code&gt;クラスのコンストラクタについてドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;イテレータのvalue typeを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter::max_size&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_prefix&lt;/code&gt;イテレータのデクリメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fields&lt;/code&gt;、&lt;code&gt;FieldsWriter&lt;/code&gt;コンセプトのドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BodyReader&lt;/code&gt;のコンストラクタ要件のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非推奨だった&lt;code&gt;serializer::reader_impl&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;Body&lt;/code&gt;コンセプトの&lt;code&gt;reader&lt;/code&gt;と&lt;code&gt;writer&lt;/code&gt;のコンストラクタシグニチャを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/78&#34; target=&#34;_blank&#34;&gt;GitHub #78&lt;/a&gt; &lt;code&gt;context-impl=ucontext&lt;/code&gt;でのリンクエラーを修正 : &lt;code&gt;boost::context::detail::current_rec&lt;/code&gt;の重複定義&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; Visual Studio 2015 Update 3で、スタック巻き戻し中にクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; いくつかの導入ドキュメントに、なぜCoroutine2を使うのかを記載&lt;ul&gt;
&lt;li&gt;コミット&lt;code&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/commit/a28b850bcd659b1ef2771e76df0114c57a67f1ec&#34; target=&#34;_blank&#34;&gt;a28b850&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; Visual Studioで、C2039でコンパイルに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; 未定義動作のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;buffered_channel&lt;/code&gt;においてチャンネルが満杯になったときの説明をドキュメントに追記&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/172&#34; target=&#34;_blank&#34;&gt;GitHub #172&lt;/a&gt; mingw-w64環境での、&lt;code&gt;HANDLE&lt;/code&gt; (&lt;code&gt;void*)&lt;/code&gt;から&lt;code&gt;std::thread::native_handle_type&lt;/code&gt;への変換でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/175&#34; target=&#34;_blank&#34;&gt;GitHub #175&lt;/a&gt; &lt;code&gt;bufferd_channel&lt;/code&gt;内のスピンロックのunlockミスで&#34;Operation not permitted&#34;例外が送出されていた問題を修正&lt;/li&gt;
&lt;li&gt;NUMAサポートを追加ライブラリファイルfiber-numaとして分離。有効にするにはnumaプロパティを使用する (numa=on)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178&#34; target=&#34;_blank&#34;&gt;GitHub #178&lt;/a&gt;(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178/commits/9de32721749b635ff3e04e690da89cf06602c122&#34; target=&#34;_blank&#34;&gt;該当コミット&lt;/a&gt;)
  GCC 4.4/c++0xにおいて、&lt;code&gt;fusion::deque&lt;/code&gt;コンストラクタの曖昧な呼び出しへの回避策を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/177&#34; target=&#34;_blank&#34;&gt;GitHub #177&lt;/a&gt; C形式配列での問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4427&#34; target=&#34;_blank&#34;&gt;Trac #4427&lt;/a&gt; &lt;code&gt;fusion::for_each&lt;/code&gt;が関数を値で受け取るように修正&lt;ul&gt;
&lt;li&gt;これはコピー不可（もしくはムーヴ不可）関数を使用していた場合に破壊的変更に見えるが、古くから実装が間違っており、当初より正しかったドキュメントに記載された正しい関数シグネチャへと修正した&lt;/li&gt;
&lt;li&gt;使用している場合には用法を再確認されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5490&#34; target=&#34;_blank&#34;&gt;Trac #5490&lt;/a&gt; &lt;code&gt;fusion::transform&lt;/code&gt;における意図しないMPLプレースホルダの置き換えを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4029&#34; target=&#34;_blank&#34;&gt;Trac #4029&lt;/a&gt; FusionシーケンスをMPLシーケンスにアダプトする手順の説明をMPLの章に移動&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6091&#34; target=&#34;_blank&#34;&gt;Trac #6091&lt;/a&gt; Fusionにアダプトした型をFusionのIOシステムに適用する方法についてドキュメントに記載&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; SRS変換での水平グリッドシフト (Horizontal grid shift) (nadgrids)。この機能はアンドキュメントであり、将来的にインタフェースが変更になる可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/478&#34; target=&#34;_blank&#34;&gt;GitHub #478&lt;/a&gt; spherical / geometric座標系でのBox-Segment間の&lt;code&gt;distance&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/487&#34; target=&#34;_blank&#34;&gt;GitHub #487&lt;/a&gt; spherical / geometric座標系での&lt;code&gt;distance&lt;/code&gt;で、剛体の組み合わせが不足していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/489&#34; target=&#34;_blank&#34;&gt;GitHub #489&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) の公式を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/470&#34; target=&#34;_blank&#34;&gt;GitHub #470&lt;/a&gt; 短いspherical / geographicのsegmentでのアサーション失敗を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/471&#34; target=&#34;_blank&#34;&gt;GitHub #471&lt;/a&gt; sphericalなpolygonでの、envelope (凸包) が誤った結果となっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/498&#34; target=&#34;_blank&#34;&gt;GitHub #498&lt;/a&gt; spherical / geographic座標系での、&lt;code&gt;expand()&lt;/code&gt;と&lt;code&gt;make_inverse()&lt;/code&gt;が期待していない結果となっていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/488&#34; target=&#34;_blank&#34;&gt;GitHub #488&lt;/a&gt; &lt;code&gt;closing_iterator&lt;/code&gt;と&lt;code&gt;ever_circling_range_iterator&lt;/code&gt;で、一時オブジェクトへの参照を返していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/495&#34; target=&#34;_blank&#34;&gt;GitHub #495&lt;/a&gt; VxWorks 7でのクロスコンパイルの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I/O拡張を完全に書き直して導入した&lt;/li&gt;
&lt;li&gt;C++11準拠のコンパイラを要求するようにした&lt;/li&gt;
&lt;li&gt;ドキュメントを再フォーマットし、更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; 標準C++で非推奨・削除された機能を、以下のように置き換えた：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::bind1st&lt;/code&gt; → &lt;code&gt;std::bind&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; → &lt;code&gt;std::unique_ptr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::random_shuffle&lt;/code&gt; → &lt;code&gt;std::shuffle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/84&#34; target=&#34;_blank&#34;&gt;GitHub #84&lt;/a&gt; VS2015のリリースビルドでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/87&#34; target=&#34;_blank&#34;&gt;GitHub #87&lt;/a&gt; Stanford GraphBaseの例を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/103&#34; target=&#34;_blank&#34;&gt;GitHub #103&lt;/a&gt; &lt;code&gt;iterator_core_access&lt;/code&gt;のfriend宣言を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; 不足していた&lt;code&gt;&amp;lt;boost/iterator.hpp&amp;gt;&lt;/code&gt;のインクルードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/90&#34; target=&#34;_blank&#34;&gt;GitHub #90&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/88&#34; target=&#34;_blank&#34;&gt;GitHub #88&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; いくつかのドキュメント上のtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/85&#34; target=&#34;_blank&#34;&gt;GitHub #85&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; テストとサンプルコードのいくつかの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13540&#34; target=&#34;_blank&#34;&gt;Trac #13540&lt;/a&gt; clang-tidyの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; VxWorksのサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dump&lt;/code&gt;ストリームマニピュレータの実装で、x86 PIEレジスタに対しては、&lt;code&gt;ebx&lt;/code&gt;レジスタをsave / restoreするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; 求積法 (quadrature) と線積分 (contour integration) で任意精度の複素数をサポート&lt;/li&gt;
&lt;li&gt;多項式加算 (polynomial addition) のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;数値微分ルーチンの改善を継続し、線積分 (contour integration) を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erfc&lt;/code&gt;関数の、有理近似 (rational approximations) の精度を向上&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13478&#34; target=&#34;_blank&#34;&gt;Trac #13478&lt;/a&gt; ムーブできるがコピーできない要素型を持つコンテナを、シリアライズできるようにした。報告者のSébastien Paris氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13518&#34; target=&#34;_blank&#34;&gt;Trac #13518&lt;/a&gt; &lt;code&gt;multi_index_container&lt;/code&gt;のデフォルトコンストラクタに&lt;code&gt;explicit&lt;/code&gt;が付いていたので外した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;任意精度の複素数をサポート&lt;/li&gt;
&lt;li&gt;符号なし整数型への変換を変更し、標準で定義される動作に合わせて切り捨てる (truncate) ようにした&lt;/li&gt;
&lt;li&gt;MPFR文字列フォーマットのバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long long&lt;/code&gt;から&lt;code&gt;cpp_dec_float&lt;/code&gt;への変換での未定義動作を修正&lt;/li&gt;
&lt;li&gt;Eigenとの相互運用サポートを追加&lt;/li&gt;
&lt;li&gt;float128.hppの、Intel CPUが乗ったWindowsでのビルドを修正&lt;/li&gt;
&lt;li&gt;混合式 (mixed expressions) を含む式テンプレートを展開する際の、一時オブジェクトの型を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gmp_float&lt;/code&gt;から浮動小数点数の文字列への変換での、無限ループしてしまう問題を修正&lt;/li&gt;
&lt;li&gt;サポートされていない機能を実行した際により良いエラーメッセージを出力するよう、式テンプレートに対する&lt;code&gt;static_assert&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt;のゼロに対してインクリメントした際に、符号が正しく設定されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::move&lt;/code&gt;の誤った使い方を修正し、NRVOにも頼るようにした&lt;/li&gt;
&lt;li&gt;MPIRのバージョン3.0をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の、指数の型が&lt;code&gt;long long&lt;/code&gt;である場合や、それ以外でより広い整数型に変換するような場合での、さまざまな変換エラーを修正&lt;/li&gt;
&lt;li&gt;GCC 8で&lt;code&gt;std::byte&lt;/code&gt;が導入されたことによる、互換性の問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; &lt;code&gt;std::optional&lt;/code&gt;との互換性のために、&lt;code&gt;has_value()&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; U&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; optional&amp;lt;U&amp;gt;&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;flat_map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__ARM_ARCH&lt;/code&gt;マクロの検出をサポート (Tim Blechmann氏)&lt;/li&gt;
&lt;li&gt;PTXアーキテクチャの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;nvccコンパイラの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;CUDAの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;廃止になった&lt;code&gt;BOOST_ARCH_AMD64&lt;/code&gt;へのリファレンスを削除 (Peter Kolbus氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34; id=&#34;program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; オプションごとの複数のロング名 (long name) をサポート。Eyal Rozenberg氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/python/issues/193&#34; target=&#34;_blank&#34;&gt;GitHub #193&lt;/a&gt; Windows環境での、autolinkのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/19&#34; target=&#34;_blank&#34;&gt;GitHub #19&lt;/a&gt; &lt;code&gt;normalize()&lt;/code&gt;関数の未定義動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34; id=&#34;signals&#34;&gt;Signals&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;ライブラリ削除の注意&lt;/span&gt;&lt;/strong&gt; Boost.Signalsは、次のリリースで削除される&lt;ul&gt;
&lt;li&gt;このライブラリは、バージョン1.54.0から非推奨となっていた。Boost.Signals2に移行すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#spirit&#34; id=&#34;spirit&#34;&gt;Spirit&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spirit.X3&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/368&#34; target=&#34;_blank&#34;&gt;GitHub #368&lt;/a&gt; リストのパーサーに対して小さな最適化を入れた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/370&#34; target=&#34;_blank&#34;&gt;GitHub #370&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/12085&#34; target=&#34;_blank&#34;&gt;Trac #12085&lt;/a&gt; コンテナを横断する属性 (pass sequence attribute) を、シーケンスパーサー、およびシーケンスパーサーの最終要素に対して使用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/371&#34; target=&#34;_blank&#34;&gt;GitHub #371&lt;/a&gt; 属性チェックのメッセージを細分化した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/373&#34; target=&#34;_blank&#34;&gt;GitHub #373&lt;/a&gt; &lt;code&gt;skip_over&lt;/code&gt;の冗長なチェックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/379&#34; target=&#34;_blank&#34;&gt;GitHub #379&lt;/a&gt; VS2015のバグで&lt;code&gt;noexcept&lt;/code&gt;内での&lt;code&gt;constexpr&lt;/code&gt;に問題があったため、&lt;code&gt;x3::variant&lt;/code&gt;全体にワークアラウンドを入れた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/384&#34; target=&#34;_blank&#34;&gt;GitHub #384&lt;/a&gt; calc4bのサンプルコードのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/374&#34; target=&#34;_blank&#34;&gt;GitHub #374&lt;/a&gt; 小さなコード改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Qi&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/376&#34; target=&#34;_blank&#34;&gt;GitHub #376&lt;/a&gt; &lt;code&gt;permutation&lt;/code&gt;と&lt;code&gt;sequence_or&lt;/code&gt;演算子のADTサポートを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/383&#34; target=&#34;_blank&#34;&gt;GitHub #383&lt;/a&gt; &lt;code&gt;iterator_source&lt;/code&gt;をランダムアクセスのために特殊化&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/373&#34; target=&#34;_blank&#34;&gt;GitHub #373&lt;/a&gt; &lt;code&gt;skip_over&lt;/code&gt;の冗長なチェックを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Karma&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; &lt;code&gt;get_absolute_value&lt;/code&gt;関数の未定義動作を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/375&#34; target=&#34;_blank&#34;&gt;GitHub #375&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/6126&#34; target=&#34;_blank&#34;&gt;Trac #6126&lt;/a&gt; ADTのgetterがby valueで値を返した場合の、スコープ外での使用のバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spirit.Classic&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/336&#34; target=&#34;_blank&#34;&gt;GitHub #336&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/spirit/pull/386&#34; target=&#34;_blank&#34;&gt;GitHub #386&lt;/a&gt; レグレッションを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/spirit/pull/367&#34; target=&#34;_blank&#34;&gt;GitHub #367&lt;/a&gt; 小さなコード改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; Solarisとその他プラットフォームでのコンパイルエラーを修正するために、&lt;code&gt;dladdr()&lt;/code&gt;関数に渡すアドレスの&lt;code&gt;const&lt;/code&gt;修飾を修正&lt;/li&gt;
&lt;li&gt;Boost.LexicalCastへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/system/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; C++14以降向けに、&lt;code&gt;error_code&lt;/code&gt;と&lt;code&gt;error_condition&lt;/code&gt;に&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.8 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_68_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master_test_suite_t&lt;/code&gt;オブジェクトをコピー可能でなくした&lt;/li&gt;
&lt;li&gt;データセットの遅延を可能にしたため、データセット引数の追加のコピーが発生する可能性がある。これはとくに、&lt;code&gt;std::initializer_list&lt;/code&gt;で作成されたデータセットの場合に当てはまる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;データセットのテストケースでコマンドラインパラメータを使用するようにした&lt;ul&gt;
&lt;li&gt;データセットから生成されたテストは、フレームワークのセットアップ中にインスタンス化される。これによって、データセットのジェネレータが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスする。遅延インスタンス化されるべきデータセットを示すために、新たに&lt;code&gt;data::make_delayed&lt;/code&gt;ヘルパを導入した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;これによって、&lt;code&gt;data::make&lt;/code&gt;によってデータセットを作成する際に、可変個の引数を扱えるようになった。データセットが単相的であるため、最初の要素の型にキャスト可能である必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/143&#34; target=&#34;_blank&#34;&gt;GitHub #143&lt;/a&gt; &lt;code&gt;exception_api.run-fail.cpp&lt;/code&gt;の例で、条件式が逆だった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/145&#34; target=&#34;_blank&#34;&gt;GitHub #145&lt;/a&gt; 最近のCygwin環境での、ライブラリのビルドを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12095&#34; target=&#34;_blank&#34;&gt;Trac #12095&lt;/a&gt; 事前条件の失敗はエラーにすべきではなかったので、スキップするよう適切にハンドリング&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12953&#34; target=&#34;_blank&#34;&gt;Trac #12953&lt;/a&gt; データセットのテストケースが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスできるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13504&#34; target=&#34;_blank&#34;&gt;Trac #13504&lt;/a&gt; コマンドライン引数&lt;code&gt;catch_system_errors&lt;/code&gt;のshort formが動作しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13525&#34; target=&#34;_blank&#34;&gt;Trac #13525&lt;/a&gt; GCC 4.6.3でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13528&#34; target=&#34;_blank&#34;&gt;Trac #13528&lt;/a&gt; コマンドライン引数&lt;code&gt;--report_sink&lt;/code&gt;を使用するとクラッシュする問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34; id=&#34;type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.MPLへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; 後方互換性のために残していた、sha1のdetail名前空間にリダイレクトしていた非推奨のヘッダを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;boost::uuids:uuid&lt;/code&gt;クラスに対する&lt;code&gt;std::hash&lt;/code&gt;の特殊化をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; random generatorsに対するムーブセマンティクスをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; エントロピー獲得時にEINTRを正しくハンドリングするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; Linux環境で、getentropy(3)の代わりにgetrandom(2)を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.68.0リリースノート -- 1.68.0リリースノート : Multiprecisionにさらに追加 (close #278)</title>
      <link href="https://boostjp.github.io/document/version/1_68_0.html"/>
      <id>28c19a9fe7828b113d381e25f31d49fff2a028bd:document/version/1_68_0.md</id>
      <updated>2018-08-01T16:26:25+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.68.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_68_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_68_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boost.WinAPIのターゲットを、(それが可能な状況で) デフォルトでWindows 7に更新した。前回までのリリースでは、デフォルトはWindows Vistaだった。&lt;/p&gt;
&lt;p&gt;Boost.WinAPIは、いくつかのBoostライブラリの内部で使用している、Windows SDKの抽象レイヤーである。Boost.Beast、Boost.Chrono、Boost.DateTime、Boost.DLL、Boost.Log、Boost.Process、Boost.Stacktrace、Boost.System、Boost.Thread、Boost.UUIDなどで使用している。&lt;/p&gt;
&lt;p&gt;ターゲットのWindowsバージョンを選択するためには、Boostをビルドする際に&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;を定義する必要があり、その値は&lt;code&gt;_WIN32_WINNT&lt;/code&gt;と同じである。例として：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;b2 release define=BOOST_USE_WINAPI_VERSION=0x0501 stage
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Windows APIのバージョンリストは、以下のページで確認できる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/6sehtctf.aspx&#34; target=&#34;_blank&#34;&gt;Modifying WINVER and _WIN32_WINNT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boost.org/libs/yap&#34; target=&#34;_blank&#34;&gt;YAP&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14以降用の、Expression Templateのライブラリ。作者Zach Laine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34;&gt;Signals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;全ての複合操作の実装で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するよう、不足していたところを修正。非同期操作の完了ハンドラに関連したクラッシュを経験しているユーザーは、アップグレードすることを推奨する&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;beast/experimental&amp;gt;&lt;/code&gt;ディレクトリに含まれる機能は、インタフェースが安定していないため、今後のバージョンで変更される可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; SSLストリームのパフォーマンス限界に対するワークアラウンドとして、&lt;code&gt;flat_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1151&#34; target=&#34;_blank&#34;&gt;GitHub #1151&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/beast/issues/595&#34; target=&#34;_blank&#34;&gt;GitHub #595&lt;/a&gt; ICY HTTP response handshakesをパースするフィルタを持つ&lt;code&gt;http::icy_stream&lt;/code&gt;ストリームを追加&lt;/li&gt;
&lt;li&gt;SSLのより良いパフォーマンスとムーブ構築のために、&lt;code&gt;ssl_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;単体テストのユーティリティとして、&lt;code&gt;test::connect&lt;/code&gt;、&lt;code&gt;test::error&lt;/code&gt;、&lt;code&gt;test::fail_count&lt;/code&gt;、&lt;code&gt;test::stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::is_mutable_body_writer&lt;/code&gt;メタ関数を追加&lt;/li&gt;
&lt;li&gt;疑似乱数生成器 (PRNG) に手動でエントロピーを提供するために、&lt;code&gt;websocket::seed_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;コネクションが使用するセキュアな疑似乱数生成器として、&lt;code&gt;websocket::stream::secure_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成されるWebSocketのマスクが、デフォルトでセキュアな疑似乱数生成器を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt; HTTP server doc rootsの例で、文字列共有を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; &lt;code&gt;handler_ptr::has_value&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1073&#34; target=&#34;_blank&#34;&gt;GitHub #1073&lt;/a&gt; advanced server examplesでの競合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; 複合操作で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; 誤った (spurious) assertを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1113&#34; target=&#34;_blank&#34;&gt;GitHub #1113&lt;/a&gt; message based HTTP writesに、&lt;code&gt;const&lt;/code&gt;と非&lt;code&gt;const&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1119&#34; target=&#34;_blank&#34;&gt;GitHub #1119&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1121&#34; target=&#34;_blank&#34;&gt;GitHub #1121&lt;/a&gt; フィンガープリントのルート証明を例で使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1141&#34; target=&#34;_blank&#34;&gt;GitHub #1141&lt;/a&gt; ちらかっていた複合操作のドキュメントを整理&lt;/li&gt;
&lt;li&gt;ちらかっていたWebSocketストリームのドキュメントを整理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bind_handler&lt;/code&gt;での、ムーブしかできない引数を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::parser&lt;/code&gt;クラスのコンストラクタについてドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;イテレータのvalue typeを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter::max_size&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_prefix&lt;/code&gt;イテレータのデクリメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fields&lt;/code&gt;、&lt;code&gt;FieldsWriter&lt;/code&gt;コンセプトのドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BodyReader&lt;/code&gt;のコンストラクタ要件のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非推奨だった&lt;code&gt;serializer::reader_impl&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;Body&lt;/code&gt;コンセプトの&lt;code&gt;reader&lt;/code&gt;と&lt;code&gt;writer&lt;/code&gt;のコンストラクタシグニチャを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/78&#34; target=&#34;_blank&#34;&gt;GitHub #78&lt;/a&gt; &lt;code&gt;context-impl=ucontext&lt;/code&gt;でのリンクエラーを修正 : &lt;code&gt;boost::context::detail::current_rec&lt;/code&gt;の重複定義&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; Visual Studio 2015 Update 3で、スタック巻き戻し中にクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; いくつかの導入ドキュメントに、なぜCoroutine2を使うのかを記載&lt;ul&gt;
&lt;li&gt;コミット&lt;code&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/commit/a28b850bcd659b1ef2771e76df0114c57a67f1ec&#34; target=&#34;_blank&#34;&gt;a28b850&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; Visual Studioで、C2039でコンパイルに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; 未定義動作のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;buffered_channel&lt;/code&gt;においてチャンネルが満杯になったときの説明をドキュメントに追記&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/172&#34; target=&#34;_blank&#34;&gt;GitHub #172&lt;/a&gt; mingw-w64環境での、&lt;code&gt;HANDLE&lt;/code&gt; (&lt;code&gt;void*)&lt;/code&gt;から&lt;code&gt;std::thread::native_handle_type&lt;/code&gt;への変換でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/175&#34; target=&#34;_blank&#34;&gt;GitHub #175&lt;/a&gt; &lt;code&gt;bufferd_channel&lt;/code&gt;内のスピンロックのunlockミスで&#34;Operation not permitted&#34;例外が送出されていた問題を修正&lt;/li&gt;
&lt;li&gt;NUMAサポートを追加ライブラリファイルfiber-numaとして分離。有効にするにはnumaプロパティを使用する (numa=on)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178&#34; target=&#34;_blank&#34;&gt;GitHub #178&lt;/a&gt;(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178/commits/9de32721749b635ff3e04e690da89cf06602c122&#34; target=&#34;_blank&#34;&gt;該当コミット&lt;/a&gt;)
  GCC 4.4/c++0xにおいて、&lt;code&gt;fusion::deque&lt;/code&gt;コンストラクタの曖昧な呼び出しへの回避策を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/177&#34; target=&#34;_blank&#34;&gt;GitHub #177&lt;/a&gt; C形式配列での問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4427&#34; target=&#34;_blank&#34;&gt;Trac #4427&lt;/a&gt; &lt;code&gt;fusion::for_each&lt;/code&gt;が関数を値で受け取るように修正&lt;ul&gt;
&lt;li&gt;これはコピー不可（もしくはムーヴ不可）関数を使用していた場合に破壊的変更に見えるが、古くから実装が間違っており、当初より正しかったドキュメントに記載された正しい関数シグネチャへと修正した&lt;/li&gt;
&lt;li&gt;使用している場合には用法を再確認されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5490&#34; target=&#34;_blank&#34;&gt;Trac #5490&lt;/a&gt; &lt;code&gt;fusion::transform&lt;/code&gt;における意図しないMPLプレースホルダの置き換えを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4029&#34; target=&#34;_blank&#34;&gt;Trac #4029&lt;/a&gt; FusionシーケンスをMPLシーケンスにアダプトする手順の説明をMPLの章に移動&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6091&#34; target=&#34;_blank&#34;&gt;Trac #6091&lt;/a&gt; Fusionにアダプトした型をFusionのIOシステムに適用する方法についてドキュメントに記載&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; SRS変換での水平グリッドシフト (Horizontal grid shift) (nadgrids)。この機能はアンドキュメントであり、将来的にインタフェースが変更になる可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/478&#34; target=&#34;_blank&#34;&gt;GitHub #478&lt;/a&gt; spherical / geometric座標系でのBox-Segment間の&lt;code&gt;distance&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/487&#34; target=&#34;_blank&#34;&gt;GitHub #487&lt;/a&gt; spherical / geometric座標系での&lt;code&gt;distance&lt;/code&gt;で、剛体の組み合わせが不足していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/489&#34; target=&#34;_blank&#34;&gt;GitHub #489&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) の公式を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/470&#34; target=&#34;_blank&#34;&gt;GitHub #470&lt;/a&gt; 短いspherical / geographicのsegmentでのアサーション失敗を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/471&#34; target=&#34;_blank&#34;&gt;GitHub #471&lt;/a&gt; sphericalなpolygonでの、envelope (凸包) が誤った結果となっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/498&#34; target=&#34;_blank&#34;&gt;GitHub #498&lt;/a&gt; spherical / geographic座標系での、&lt;code&gt;expand()&lt;/code&gt;と&lt;code&gt;make_inverse()&lt;/code&gt;が期待していない結果となっていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/488&#34; target=&#34;_blank&#34;&gt;GitHub #488&lt;/a&gt; &lt;code&gt;closing_iterator&lt;/code&gt;と&lt;code&gt;ever_circling_range_iterator&lt;/code&gt;で、一時オブジェクトへの参照を返していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/495&#34; target=&#34;_blank&#34;&gt;GitHub #495&lt;/a&gt; VxWorks 7でのクロスコンパイルの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I/O拡張を完全に書き直して導入した&lt;/li&gt;
&lt;li&gt;C++11準拠のコンパイラを要求するようにした&lt;/li&gt;
&lt;li&gt;ドキュメントを再フォーマットし、更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; 標準C++で非推奨・削除された機能を、以下のように置き換えた：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::bind1st&lt;/code&gt; → &lt;code&gt;std::bind&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; → &lt;code&gt;std::unique_ptr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::random_shuffle&lt;/code&gt; → &lt;code&gt;std::shuffle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/84&#34; target=&#34;_blank&#34;&gt;GitHub #84&lt;/a&gt; VS2015のリリースビルドでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/87&#34; target=&#34;_blank&#34;&gt;GitHub #87&lt;/a&gt; Stanford GraphBaseの例を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/103&#34; target=&#34;_blank&#34;&gt;GitHub #103&lt;/a&gt; &lt;code&gt;iterator_core_access&lt;/code&gt;のfriend宣言を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; 不足していた&lt;code&gt;&amp;lt;boost/iterator.hpp&amp;gt;&lt;/code&gt;のインクルードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/90&#34; target=&#34;_blank&#34;&gt;GitHub #90&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/88&#34; target=&#34;_blank&#34;&gt;GitHub #88&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; いくつかのドキュメント上のtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/85&#34; target=&#34;_blank&#34;&gt;GitHub #85&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; テストとサンプルコードのいくつかの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13540&#34; target=&#34;_blank&#34;&gt;Trac #13540&lt;/a&gt; clang-tidyの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; VxWorksのサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dump&lt;/code&gt;ストリームマニピュレータの実装で、x86 PIEレジスタに対しては、&lt;code&gt;ebx&lt;/code&gt;レジスタをsave / restoreするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; 求積法 (quadrature) と線積分 (contour integration) で任意精度の複素数をサポート&lt;/li&gt;
&lt;li&gt;多項式加算 (polynomial addition) のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;数値微分ルーチンの改善を継続し、線積分 (contour integration) を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erfc&lt;/code&gt;関数の、有理近似 (rational approximations) の精度を向上&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13478&#34; target=&#34;_blank&#34;&gt;Trac #13478&lt;/a&gt; ムーブできるがコピーできない要素型を持つコンテナを、シリアライズできるようにした。報告者のSébastien Paris氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13518&#34; target=&#34;_blank&#34;&gt;Trac #13518&lt;/a&gt; &lt;code&gt;multi_index_container&lt;/code&gt;のデフォルトコンストラクタに&lt;code&gt;explicit&lt;/code&gt;が付いていたので外した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;任意精度の複素数をサポート&lt;/li&gt;
&lt;li&gt;符号なし整数型への変換を変更し、標準で定義される動作に合わせて切り捨てる (truncate) ようにした&lt;/li&gt;
&lt;li&gt;MPFR文字列フォーマットのバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long long&lt;/code&gt;から&lt;code&gt;cpp_dec_float&lt;/code&gt;への変換での未定義動作を修正&lt;/li&gt;
&lt;li&gt;Eigenとの相互運用サポートを追加&lt;/li&gt;
&lt;li&gt;float128.hppの、Intel CPUが乗ったWindowsでのビルドを修正&lt;/li&gt;
&lt;li&gt;混合式 (mixed expressions) を含む式テンプレートを展開する際の、一時オブジェクトの型を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gmp_float&lt;/code&gt;から浮動小数点数の文字列への変換での、無限ループしてしまう問題を修正&lt;/li&gt;
&lt;li&gt;サポートされていない機能を実行した際により良いエラーメッセージを出力するよう、式テンプレートに対する&lt;code&gt;static_assert&lt;/code&gt;を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt;のゼロに対してインクリメントした際に、符号が正しく設定されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::move&lt;/code&gt;の誤った使い方を修正し、NRVOにも頼るようにした&lt;/li&gt;
&lt;li&gt;MPIRのバージョン3.0をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の、指数の型が&lt;code&gt;long long&lt;/code&gt;である場合や、それ以外でより広い整数型に変換するような場合での、さまざまな変換エラーを修正&lt;/li&gt;
&lt;li&gt;GCC 8で&lt;code&gt;std::byte&lt;/code&gt;が導入されたことによる、互換性の問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; &lt;code&gt;std::optional&lt;/code&gt;との互換性のために、&lt;code&gt;has_value()&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; U&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; optional&amp;lt;U&amp;gt;&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;flat_map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__ARM_ARCH&lt;/code&gt;マクロの検出をサポート (Tim Blechmann氏)&lt;/li&gt;
&lt;li&gt;PTXアーキテクチャの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;nvccコンパイラの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;CUDAの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;廃止になった&lt;code&gt;BOOST_ARCH_AMD64&lt;/code&gt;へのリファレンスを削除 (Peter Kolbus氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34; id=&#34;program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; オプションごとの複数のロング名 (long name) をサポート。Eyal Rozenberg氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/python/issues/193&#34; target=&#34;_blank&#34;&gt;GitHub #193&lt;/a&gt; Windows環境での、autolinkのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/19&#34; target=&#34;_blank&#34;&gt;GitHub #19&lt;/a&gt; &lt;code&gt;normalize()&lt;/code&gt;関数の未定義動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34; id=&#34;signals&#34;&gt;Signals&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;ライブラリ削除の注意&lt;/span&gt;&lt;/strong&gt; Boost.Signalsは、次のリリースで削除される&lt;ul&gt;
&lt;li&gt;このライブラリは、バージョン1.54.0から非推奨となっていた。Boost.Signals2に移行すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; Solarisとその他プラットフォームでのコンパイルエラーを修正するために、&lt;code&gt;dladdr()&lt;/code&gt;関数に渡すアドレスの&lt;code&gt;const&lt;/code&gt;修飾を修正&lt;/li&gt;
&lt;li&gt;Boost.LexicalCastへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/system/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; C++14以降向けに、&lt;code&gt;error_code&lt;/code&gt;と&lt;code&gt;error_condition&lt;/code&gt;に&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.8 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_68_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master_test_suite_t&lt;/code&gt;オブジェクトをコピー可能でなくした&lt;/li&gt;
&lt;li&gt;データセットの遅延を可能にしたため、データセット引数の追加のコピーが発生する可能性がある。これはとくに、&lt;code&gt;std::initializer_list&lt;/code&gt;で作成されたデータセットの場合に当てはまる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;データセットのテストケースでコマンドラインパラメータを使用するようにした&lt;ul&gt;
&lt;li&gt;データセットから生成されたテストは、フレームワークのセットアップ中にインスタンス化される。これによって、データセットのジェネレータが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスする。遅延インスタンス化されるべきデータセットを示すために、新たに&lt;code&gt;data::make_delayed&lt;/code&gt;ヘルパを導入した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;これによって、&lt;code&gt;data::make&lt;/code&gt;によってデータセットを作成する際に、可変個の引数を扱えるようになった。データセットが単相的であるため、最初の要素の型にキャスト可能である必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/143&#34; target=&#34;_blank&#34;&gt;GitHub #143&lt;/a&gt; &lt;code&gt;exception_api.run-fail.cpp&lt;/code&gt;の例で、条件式が逆だった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/145&#34; target=&#34;_blank&#34;&gt;GitHub #145&lt;/a&gt; 最近のCygwin環境での、ライブラリのビルドを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12095&#34; target=&#34;_blank&#34;&gt;Trac #12095&lt;/a&gt; 事前条件の失敗はエラーにすべきではなかったので、スキップするよう適切にハンドリング&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12953&#34; target=&#34;_blank&#34;&gt;Trac #12953&lt;/a&gt; データセットのテストケースが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスできるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13504&#34; target=&#34;_blank&#34;&gt;Trac #13504&lt;/a&gt; コマンドライン引数&lt;code&gt;catch_system_errors&lt;/code&gt;のshort formが動作しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13525&#34; target=&#34;_blank&#34;&gt;Trac #13525&lt;/a&gt; GCC 4.6.3でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13528&#34; target=&#34;_blank&#34;&gt;Trac #13528&lt;/a&gt; コマンドライン引数&lt;code&gt;--report_sink&lt;/code&gt;を使用するとクラッシュする問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34; id=&#34;type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.MPLへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; 後方互換性のために残していた、sha1のdetail名前空間にリダイレクトしていた非推奨のヘッダを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;boost::uuids:uuid&lt;/code&gt;クラスに対する&lt;code&gt;std::hash&lt;/code&gt;の特殊化をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; random generatorsに対するムーブセマンティクスをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; エントロピー獲得時にEINTRを正しくハンドリングするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; Linux環境で、getentropy(3)の代わりにgetrandom(2)を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.68.0リリースノート -- 1.68.0リリースノート : Mathにさらに追加 (close #277)</title>
      <link href="https://boostjp.github.io/document/version/1_68_0.html"/>
      <id>50ed4ef01cb4d14084acb61ec23f1a9468cd3f27:document/version/1_68_0.md</id>
      <updated>2018-08-01T16:09:01+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.68.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_68_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_68_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boost.WinAPIのターゲットを、(それが可能な状況で) デフォルトでWindows 7に更新した。前回までのリリースでは、デフォルトはWindows Vistaだった。&lt;/p&gt;
&lt;p&gt;Boost.WinAPIは、いくつかのBoostライブラリの内部で使用している、Windows SDKの抽象レイヤーである。Boost.Beast、Boost.Chrono、Boost.DateTime、Boost.DLL、Boost.Log、Boost.Process、Boost.Stacktrace、Boost.System、Boost.Thread、Boost.UUIDなどで使用している。&lt;/p&gt;
&lt;p&gt;ターゲットのWindowsバージョンを選択するためには、Boostをビルドする際に&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;を定義する必要があり、その値は&lt;code&gt;_WIN32_WINNT&lt;/code&gt;と同じである。例として：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;b2 release define=BOOST_USE_WINAPI_VERSION=0x0501 stage
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Windows APIのバージョンリストは、以下のページで確認できる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/6sehtctf.aspx&#34; target=&#34;_blank&#34;&gt;Modifying WINVER and _WIN32_WINNT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boost.org/libs/yap&#34; target=&#34;_blank&#34;&gt;YAP&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14以降用の、Expression Templateのライブラリ。作者Zach Laine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34;&gt;Signals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;全ての複合操作の実装で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するよう、不足していたところを修正。非同期操作の完了ハンドラに関連したクラッシュを経験しているユーザーは、アップグレードすることを推奨する&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;beast/experimental&amp;gt;&lt;/code&gt;ディレクトリに含まれる機能は、インタフェースが安定していないため、今後のバージョンで変更される可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; SSLストリームのパフォーマンス限界に対するワークアラウンドとして、&lt;code&gt;flat_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1151&#34; target=&#34;_blank&#34;&gt;GitHub #1151&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/beast/issues/595&#34; target=&#34;_blank&#34;&gt;GitHub #595&lt;/a&gt; ICY HTTP response handshakesをパースするフィルタを持つ&lt;code&gt;http::icy_stream&lt;/code&gt;ストリームを追加&lt;/li&gt;
&lt;li&gt;SSLのより良いパフォーマンスとムーブ構築のために、&lt;code&gt;ssl_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;単体テストのユーティリティとして、&lt;code&gt;test::connect&lt;/code&gt;、&lt;code&gt;test::error&lt;/code&gt;、&lt;code&gt;test::fail_count&lt;/code&gt;、&lt;code&gt;test::stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::is_mutable_body_writer&lt;/code&gt;メタ関数を追加&lt;/li&gt;
&lt;li&gt;疑似乱数生成器 (PRNG) に手動でエントロピーを提供するために、&lt;code&gt;websocket::seed_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;コネクションが使用するセキュアな疑似乱数生成器として、&lt;code&gt;websocket::stream::secure_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成されるWebSocketのマスクが、デフォルトでセキュアな疑似乱数生成器を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt; HTTP server doc rootsの例で、文字列共有を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; &lt;code&gt;handler_ptr::has_value&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1073&#34; target=&#34;_blank&#34;&gt;GitHub #1073&lt;/a&gt; advanced server examplesでの競合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; 複合操作で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; 誤った (spurious) assertを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1113&#34; target=&#34;_blank&#34;&gt;GitHub #1113&lt;/a&gt; message based HTTP writesに、&lt;code&gt;const&lt;/code&gt;と非&lt;code&gt;const&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1119&#34; target=&#34;_blank&#34;&gt;GitHub #1119&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1121&#34; target=&#34;_blank&#34;&gt;GitHub #1121&lt;/a&gt; フィンガープリントのルート証明を例で使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1141&#34; target=&#34;_blank&#34;&gt;GitHub #1141&lt;/a&gt; ちらかっていた複合操作のドキュメントを整理&lt;/li&gt;
&lt;li&gt;ちらかっていたWebSocketストリームのドキュメントを整理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bind_handler&lt;/code&gt;での、ムーブしかできない引数を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::parser&lt;/code&gt;クラスのコンストラクタについてドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;イテレータのvalue typeを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter::max_size&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_prefix&lt;/code&gt;イテレータのデクリメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fields&lt;/code&gt;、&lt;code&gt;FieldsWriter&lt;/code&gt;コンセプトのドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BodyReader&lt;/code&gt;のコンストラクタ要件のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非推奨だった&lt;code&gt;serializer::reader_impl&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;Body&lt;/code&gt;コンセプトの&lt;code&gt;reader&lt;/code&gt;と&lt;code&gt;writer&lt;/code&gt;のコンストラクタシグニチャを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/78&#34; target=&#34;_blank&#34;&gt;GitHub #78&lt;/a&gt; &lt;code&gt;context-impl=ucontext&lt;/code&gt;でのリンクエラーを修正 : &lt;code&gt;boost::context::detail::current_rec&lt;/code&gt;の重複定義&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; Visual Studio 2015 Update 3で、スタック巻き戻し中にクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; いくつかの導入ドキュメントに、なぜCoroutine2を使うのかを記載&lt;ul&gt;
&lt;li&gt;コミット&lt;code&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/commit/a28b850bcd659b1ef2771e76df0114c57a67f1ec&#34; target=&#34;_blank&#34;&gt;a28b850&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; Visual Studioで、C2039でコンパイルに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; 未定義動作のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;buffered_channel&lt;/code&gt;においてチャンネルが満杯になったときの説明をドキュメントに追記&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/172&#34; target=&#34;_blank&#34;&gt;GitHub #172&lt;/a&gt; mingw-w64環境での、&lt;code&gt;HANDLE&lt;/code&gt; (&lt;code&gt;void*)&lt;/code&gt;から&lt;code&gt;std::thread::native_handle_type&lt;/code&gt;への変換でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/175&#34; target=&#34;_blank&#34;&gt;GitHub #175&lt;/a&gt; &lt;code&gt;bufferd_channel&lt;/code&gt;内のスピンロックのunlockミスで&#34;Operation not permitted&#34;例外が送出されていた問題を修正&lt;/li&gt;
&lt;li&gt;NUMAサポートを追加ライブラリファイルfiber-numaとして分離。有効にするにはnumaプロパティを使用する (numa=on)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178&#34; target=&#34;_blank&#34;&gt;GitHub #178&lt;/a&gt;(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178/commits/9de32721749b635ff3e04e690da89cf06602c122&#34; target=&#34;_blank&#34;&gt;該当コミット&lt;/a&gt;)
  GCC 4.4/c++0xにおいて、&lt;code&gt;fusion::deque&lt;/code&gt;コンストラクタの曖昧な呼び出しへの回避策を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/177&#34; target=&#34;_blank&#34;&gt;GitHub #177&lt;/a&gt; C形式配列での問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4427&#34; target=&#34;_blank&#34;&gt;Trac #4427&lt;/a&gt; &lt;code&gt;fusion::for_each&lt;/code&gt;が関数を値で受け取るように修正&lt;ul&gt;
&lt;li&gt;これはコピー不可（もしくはムーヴ不可）関数を使用していた場合に破壊的変更に見えるが、古くから実装が間違っており、当初より正しかったドキュメントに記載された正しい関数シグネチャへと修正した&lt;/li&gt;
&lt;li&gt;使用している場合には用法を再確認されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5490&#34; target=&#34;_blank&#34;&gt;Trac #5490&lt;/a&gt; &lt;code&gt;fusion::transform&lt;/code&gt;における意図しないMPLプレースホルダの置き換えを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4029&#34; target=&#34;_blank&#34;&gt;Trac #4029&lt;/a&gt; FusionシーケンスをMPLシーケンスにアダプトする手順の説明をMPLの章に移動&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6091&#34; target=&#34;_blank&#34;&gt;Trac #6091&lt;/a&gt; Fusionにアダプトした型をFusionのIOシステムに適用する方法についてドキュメントに記載&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; SRS変換での水平グリッドシフト (Horizontal grid shift) (nadgrids)。この機能はアンドキュメントであり、将来的にインタフェースが変更になる可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/478&#34; target=&#34;_blank&#34;&gt;GitHub #478&lt;/a&gt; spherical / geometric座標系でのBox-Segment間の&lt;code&gt;distance&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/487&#34; target=&#34;_blank&#34;&gt;GitHub #487&lt;/a&gt; spherical / geometric座標系での&lt;code&gt;distance&lt;/code&gt;で、剛体の組み合わせが不足していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/489&#34; target=&#34;_blank&#34;&gt;GitHub #489&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) の公式を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/470&#34; target=&#34;_blank&#34;&gt;GitHub #470&lt;/a&gt; 短いspherical / geographicのsegmentでのアサーション失敗を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/471&#34; target=&#34;_blank&#34;&gt;GitHub #471&lt;/a&gt; sphericalなpolygonでの、envelope (凸包) が誤った結果となっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/498&#34; target=&#34;_blank&#34;&gt;GitHub #498&lt;/a&gt; spherical / geographic座標系での、&lt;code&gt;expand()&lt;/code&gt;と&lt;code&gt;make_inverse()&lt;/code&gt;が期待していない結果となっていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/488&#34; target=&#34;_blank&#34;&gt;GitHub #488&lt;/a&gt; &lt;code&gt;closing_iterator&lt;/code&gt;と&lt;code&gt;ever_circling_range_iterator&lt;/code&gt;で、一時オブジェクトへの参照を返していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/495&#34; target=&#34;_blank&#34;&gt;GitHub #495&lt;/a&gt; VxWorks 7でのクロスコンパイルの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I/O拡張を完全に書き直して導入した&lt;/li&gt;
&lt;li&gt;C++11準拠のコンパイラを要求するようにした&lt;/li&gt;
&lt;li&gt;ドキュメントを再フォーマットし、更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; 標準C++で非推奨・削除された機能を、以下のように置き換えた：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::bind1st&lt;/code&gt; → &lt;code&gt;std::bind&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; → &lt;code&gt;std::unique_ptr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::random_shuffle&lt;/code&gt; → &lt;code&gt;std::shuffle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/84&#34; target=&#34;_blank&#34;&gt;GitHub #84&lt;/a&gt; VS2015のリリースビルドでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/87&#34; target=&#34;_blank&#34;&gt;GitHub #87&lt;/a&gt; Stanford GraphBaseの例を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/103&#34; target=&#34;_blank&#34;&gt;GitHub #103&lt;/a&gt; &lt;code&gt;iterator_core_access&lt;/code&gt;のfriend宣言を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; 不足していた&lt;code&gt;&amp;lt;boost/iterator.hpp&amp;gt;&lt;/code&gt;のインクルードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/90&#34; target=&#34;_blank&#34;&gt;GitHub #90&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/88&#34; target=&#34;_blank&#34;&gt;GitHub #88&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; いくつかのドキュメント上のtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/85&#34; target=&#34;_blank&#34;&gt;GitHub #85&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; テストとサンプルコードのいくつかの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13540&#34; target=&#34;_blank&#34;&gt;Trac #13540&lt;/a&gt; clang-tidyの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; VxWorksのサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dump&lt;/code&gt;ストリームマニピュレータの実装で、x86 PIEレジスタに対しては、&lt;code&gt;ebx&lt;/code&gt;レジスタをsave / restoreするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; 求積法 (quadrature) と線積分 (contour integration) で任意精度の複素数をサポート&lt;/li&gt;
&lt;li&gt;多項式加算 (polynomial addition) のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;数値微分ルーチンの改善を継続し、線積分 (contour integration) を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erfc&lt;/code&gt;関数の、有理近似 (rational approximations) の精度を向上&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13478&#34; target=&#34;_blank&#34;&gt;Trac #13478&lt;/a&gt; ムーブできるがコピーできない要素型を持つコンテナを、シリアライズできるようにした。報告者のSébastien Paris氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13518&#34; target=&#34;_blank&#34;&gt;Trac #13518&lt;/a&gt; &lt;code&gt;multi_index_container&lt;/code&gt;のデフォルトコンストラクタに&lt;code&gt;explicit&lt;/code&gt;が付いていたので外した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;任意精度の複素数をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; &lt;code&gt;std::optional&lt;/code&gt;との互換性のために、&lt;code&gt;has_value()&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; U&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; optional&amp;lt;U&amp;gt;&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;flat_map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__ARM_ARCH&lt;/code&gt;マクロの検出をサポート (Tim Blechmann氏)&lt;/li&gt;
&lt;li&gt;PTXアーキテクチャの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;nvccコンパイラの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;CUDAの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;廃止になった&lt;code&gt;BOOST_ARCH_AMD64&lt;/code&gt;へのリファレンスを削除 (Peter Kolbus氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34; id=&#34;program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; オプションごとの複数のロング名 (long name) をサポート。Eyal Rozenberg氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/python/issues/193&#34; target=&#34;_blank&#34;&gt;GitHub #193&lt;/a&gt; Windows環境での、autolinkのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/19&#34; target=&#34;_blank&#34;&gt;GitHub #19&lt;/a&gt; &lt;code&gt;normalize()&lt;/code&gt;関数の未定義動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34; id=&#34;signals&#34;&gt;Signals&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;ライブラリ削除の注意&lt;/span&gt;&lt;/strong&gt; Boost.Signalsは、次のリリースで削除される&lt;ul&gt;
&lt;li&gt;このライブラリは、バージョン1.54.0から非推奨となっていた。Boost.Signals2に移行すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; Solarisとその他プラットフォームでのコンパイルエラーを修正するために、&lt;code&gt;dladdr()&lt;/code&gt;関数に渡すアドレスの&lt;code&gt;const&lt;/code&gt;修飾を修正&lt;/li&gt;
&lt;li&gt;Boost.LexicalCastへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/system/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; C++14以降向けに、&lt;code&gt;error_code&lt;/code&gt;と&lt;code&gt;error_condition&lt;/code&gt;に&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.8 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_68_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master_test_suite_t&lt;/code&gt;オブジェクトをコピー可能でなくした&lt;/li&gt;
&lt;li&gt;データセットの遅延を可能にしたため、データセット引数の追加のコピーが発生する可能性がある。これはとくに、&lt;code&gt;std::initializer_list&lt;/code&gt;で作成されたデータセットの場合に当てはまる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;データセットのテストケースでコマンドラインパラメータを使用するようにした&lt;ul&gt;
&lt;li&gt;データセットから生成されたテストは、フレームワークのセットアップ中にインスタンス化される。これによって、データセットのジェネレータが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスする。遅延インスタンス化されるべきデータセットを示すために、新たに&lt;code&gt;data::make_delayed&lt;/code&gt;ヘルパを導入した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;これによって、&lt;code&gt;data::make&lt;/code&gt;によってデータセットを作成する際に、可変個の引数を扱えるようになった。データセットが単相的であるため、最初の要素の型にキャスト可能である必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/143&#34; target=&#34;_blank&#34;&gt;GitHub #143&lt;/a&gt; &lt;code&gt;exception_api.run-fail.cpp&lt;/code&gt;の例で、条件式が逆だった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/145&#34; target=&#34;_blank&#34;&gt;GitHub #145&lt;/a&gt; 最近のCygwin環境での、ライブラリのビルドを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12095&#34; target=&#34;_blank&#34;&gt;Trac #12095&lt;/a&gt; 事前条件の失敗はエラーにすべきではなかったので、スキップするよう適切にハンドリング&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12953&#34; target=&#34;_blank&#34;&gt;Trac #12953&lt;/a&gt; データセットのテストケースが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスできるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13504&#34; target=&#34;_blank&#34;&gt;Trac #13504&lt;/a&gt; コマンドライン引数&lt;code&gt;catch_system_errors&lt;/code&gt;のshort formが動作しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13525&#34; target=&#34;_blank&#34;&gt;Trac #13525&lt;/a&gt; GCC 4.6.3でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13528&#34; target=&#34;_blank&#34;&gt;Trac #13528&lt;/a&gt; コマンドライン引数&lt;code&gt;--report_sink&lt;/code&gt;を使用するとクラッシュする問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34; id=&#34;type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.MPLへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; 後方互換性のために残していた、sha1のdetail名前空間にリダイレクトしていた非推奨のヘッダを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;boost::uuids:uuid&lt;/code&gt;クラスに対する&lt;code&gt;std::hash&lt;/code&gt;の特殊化をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; random generatorsに対するムーブセマンティクスをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; エントロピー獲得時にEINTRを正しくハンドリングするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; Linux環境で、getentropy(3)の代わりにgetrandom(2)を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.68.0リリースノート -- 1.68.0リリースノート : Testを追加 (close #289)</title>
      <link href="https://boostjp.github.io/document/version/1_68_0.html"/>
      <id>76db22eecc5a3734e8e082d32ba8ca7410cc3364:document/version/1_68_0.md</id>
      <updated>2018-07-30T16:36:10+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.68.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_68_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_68_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_68_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;Boost.WinAPIのターゲットを、(それが可能な状況で) デフォルトでWindows 7に更新した。前回までのリリースでは、デフォルトはWindows Vistaだった。&lt;/p&gt;
&lt;p&gt;Boost.WinAPIは、いくつかのBoostライブラリの内部で使用している、Windows SDKの抽象レイヤーである。Boost.Beast、Boost.Chrono、Boost.DateTime、Boost.DLL、Boost.Log、Boost.Process、Boost.Stacktrace、Boost.System、Boost.Thread、Boost.UUIDなどで使用している。&lt;/p&gt;
&lt;p&gt;ターゲットのWindowsバージョンを選択するためには、Boostをビルドする際に&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;を定義する必要があり、その値は&lt;code&gt;_WIN32_WINNT&lt;/code&gt;と同じである。例として：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;b2 release define=BOOST_USE_WINAPI_VERSION=0x0501 stage
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Windows APIのバージョンリストは、以下のページで確認できる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/6sehtctf.aspx&#34; target=&#34;_blank&#34;&gt;Modifying WINVER and _WIN32_WINNT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://boost.org/libs/yap&#34; target=&#34;_blank&#34;&gt;YAP&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14以降用の、Expression Templateのライブラリ。作者Zach Laine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34;&gt;GIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34;&gt;Signals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;全ての複合操作の実装で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するよう、不足していたところを修正。非同期操作の完了ハンドラに関連したクラッシュを経験しているユーザーは、アップグレードすることを推奨する&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;beast/experimental&amp;gt;&lt;/code&gt;ディレクトリに含まれる機能は、インタフェースが安定していないため、今後のバージョンで変更される可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1108&#34; target=&#34;_blank&#34;&gt;GitHub #1108&lt;/a&gt; SSLストリームのパフォーマンス限界に対するワークアラウンドとして、&lt;code&gt;flat_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1151&#34; target=&#34;_blank&#34;&gt;GitHub #1151&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/beast/issues/595&#34; target=&#34;_blank&#34;&gt;GitHub #595&lt;/a&gt; ICY HTTP response handshakesをパースするフィルタを持つ&lt;code&gt;http::icy_stream&lt;/code&gt;ストリームを追加&lt;/li&gt;
&lt;li&gt;SSLのより良いパフォーマンスとムーブ構築のために、&lt;code&gt;ssl_stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;単体テストのユーティリティとして、&lt;code&gt;test::connect&lt;/code&gt;、&lt;code&gt;test::error&lt;/code&gt;、&lt;code&gt;test::fail_count&lt;/code&gt;、&lt;code&gt;test::stream&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::is_mutable_body_writer&lt;/code&gt;メタ関数を追加&lt;/li&gt;
&lt;li&gt;疑似乱数生成器 (PRNG) に手動でエントロピーを提供するために、&lt;code&gt;websocket::seed_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;コネクションが使用するセキュアな疑似乱数生成器として、&lt;code&gt;websocket::stream::secure_prng&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成されるWebSocketのマスクが、デフォルトでセキュアな疑似乱数生成器を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1109&#34; target=&#34;_blank&#34;&gt;GitHub #1109&lt;/a&gt; HTTP server doc rootsの例で、文字列共有を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; &lt;code&gt;handler_ptr::has_value&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1073&#34; target=&#34;_blank&#34;&gt;GitHub #1073&lt;/a&gt; advanced server examplesでの競合を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; 複合操作で&lt;code&gt;executor_work_guard&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1079&#34; target=&#34;_blank&#34;&gt;GitHub #1079&lt;/a&gt; 誤った (spurious) assertを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1113&#34; target=&#34;_blank&#34;&gt;GitHub #1113&lt;/a&gt; message based HTTP writesに、&lt;code&gt;const&lt;/code&gt;と非&lt;code&gt;const&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1119&#34; target=&#34;_blank&#34;&gt;GitHub #1119&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/pull/1121&#34; target=&#34;_blank&#34;&gt;GitHub #1121&lt;/a&gt; フィンガープリントのルート証明を例で使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast/issues/1141&#34; target=&#34;_blank&#34;&gt;GitHub #1141&lt;/a&gt; ちらかっていた複合操作のドキュメントを整理&lt;/li&gt;
&lt;li&gt;ちらかっていたWebSocketストリームのドキュメントを整理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bind_handler&lt;/code&gt;での、ムーブしかできない引数を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http::parser&lt;/code&gt;クラスのコンストラクタについてドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter&lt;/code&gt;イテレータのvalue typeを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_adapter::max_size&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buffers_prefix&lt;/code&gt;イテレータのデクリメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fields&lt;/code&gt;、&lt;code&gt;FieldsWriter&lt;/code&gt;コンセプトのドキュメントを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BodyReader&lt;/code&gt;のコンストラクタ要件のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非推奨だった&lt;code&gt;serializer::reader_impl&lt;/code&gt;を削除&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;Body&lt;/code&gt;コンセプトの&lt;code&gt;reader&lt;/code&gt;と&lt;code&gt;writer&lt;/code&gt;のコンストラクタシグニチャを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/78&#34; target=&#34;_blank&#34;&gt;GitHub #78&lt;/a&gt; &lt;code&gt;context-impl=ucontext&lt;/code&gt;でのリンクエラーを修正 : &lt;code&gt;boost::context::detail::current_rec&lt;/code&gt;の重複定義&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#coroutine2&#34; id=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt; Visual Studio 2015 Update 3で、スタック巻き戻し中にクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; いくつかの導入ドキュメントに、なぜCoroutine2を使うのかを記載&lt;ul&gt;
&lt;li&gt;コミット&lt;code&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/commit/a28b850bcd659b1ef2771e76df0114c57a67f1ec&#34; target=&#34;_blank&#34;&gt;a28b850&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/20&#34; target=&#34;_blank&#34;&gt;GitHub #20&lt;/a&gt; Visual Studioで、C2039でコンパイルに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/22&#34; target=&#34;_blank&#34;&gt;GitHub #22&lt;/a&gt; 未定義動作のドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fiber&#34; id=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/170&#34; target=&#34;_blank&#34;&gt;GitHub #170&lt;/a&gt; &lt;code&gt;buffered_channel&lt;/code&gt;においてチャンネルが満杯になったときの説明をドキュメントに追記&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/172&#34; target=&#34;_blank&#34;&gt;GitHub #172&lt;/a&gt; mingw-w64環境での、&lt;code&gt;HANDLE&lt;/code&gt; (&lt;code&gt;void*)&lt;/code&gt;から&lt;code&gt;std::thread::native_handle_type&lt;/code&gt;への変換でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/175&#34; target=&#34;_blank&#34;&gt;GitHub #175&lt;/a&gt; &lt;code&gt;bufferd_channel&lt;/code&gt;内のスピンロックのunlockミスで&#34;Operation not permitted&#34;例外が送出されていた問題を修正&lt;/li&gt;
&lt;li&gt;NUMAサポートを追加ライブラリファイルfiber-numaとして分離。有効にするにはnumaプロパティを使用する (numa=on)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178&#34; target=&#34;_blank&#34;&gt;GitHub #178&lt;/a&gt;(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/178/commits/9de32721749b635ff3e04e690da89cf06602c122&#34; target=&#34;_blank&#34;&gt;該当コミット&lt;/a&gt;)
  GCC 4.4/c++0xにおいて、&lt;code&gt;fusion::deque&lt;/code&gt;コンストラクタの曖昧な呼び出しへの回避策を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/177&#34; target=&#34;_blank&#34;&gt;GitHub #177&lt;/a&gt; C形式配列での問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4427&#34; target=&#34;_blank&#34;&gt;Trac #4427&lt;/a&gt; &lt;code&gt;fusion::for_each&lt;/code&gt;が関数を値で受け取るように修正&lt;ul&gt;
&lt;li&gt;これはコピー不可（もしくはムーヴ不可）関数を使用していた場合に破壊的変更に見えるが、古くから実装が間違っており、当初より正しかったドキュメントに記載された正しい関数シグネチャへと修正した&lt;/li&gt;
&lt;li&gt;使用している場合には用法を再確認されたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5490&#34; target=&#34;_blank&#34;&gt;Trac #5490&lt;/a&gt; &lt;code&gt;fusion::transform&lt;/code&gt;における意図しないMPLプレースホルダの置き換えを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/4029&#34; target=&#34;_blank&#34;&gt;Trac #4029&lt;/a&gt; FusionシーケンスをMPLシーケンスにアダプトする手順の説明をMPLの章に移動&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/6091&#34; target=&#34;_blank&#34;&gt;Trac #6091&lt;/a&gt; Fusionにアダプトした型をFusionのIOシステムに適用する方法についてドキュメントに記載&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; SRS変換での水平グリッドシフト (Horizontal grid shift) (nadgrids)。この機能はアンドキュメントであり、将来的にインタフェースが変更になる可能性がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/478&#34; target=&#34;_blank&#34;&gt;GitHub #478&lt;/a&gt; spherical / geometric座標系でのBox-Segment間の&lt;code&gt;distance&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/487&#34; target=&#34;_blank&#34;&gt;GitHub #487&lt;/a&gt; spherical / geometric座標系での&lt;code&gt;distance&lt;/code&gt;で、剛体の組み合わせが不足していた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/489&#34; target=&#34;_blank&#34;&gt;GitHub #489&lt;/a&gt; 内部的な使用のため、直接測地問題 (direct geodesic problem) の公式を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したIssue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/470&#34; target=&#34;_blank&#34;&gt;GitHub #470&lt;/a&gt; 短いspherical / geographicのsegmentでのアサーション失敗を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/471&#34; target=&#34;_blank&#34;&gt;GitHub #471&lt;/a&gt; sphericalなpolygonでの、envelope (凸包) が誤った結果となっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/498&#34; target=&#34;_blank&#34;&gt;GitHub #498&lt;/a&gt; spherical / geographic座標系での、&lt;code&gt;expand()&lt;/code&gt;と&lt;code&gt;make_inverse()&lt;/code&gt;が期待していない結果となっていた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/488&#34; target=&#34;_blank&#34;&gt;GitHub #488&lt;/a&gt; &lt;code&gt;closing_iterator&lt;/code&gt;と&lt;code&gt;ever_circling_range_iterator&lt;/code&gt;で、一時オブジェクトへの参照を返していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/495&#34; target=&#34;_blank&#34;&gt;GitHub #495&lt;/a&gt; VxWorks 7でのクロスコンパイルの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#gil&#34; id=&#34;gil&#34;&gt;GIL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I/O拡張を完全に書き直して導入した&lt;/li&gt;
&lt;li&gt;C++11準拠のコンパイラを要求するようにした&lt;/li&gt;
&lt;li&gt;ドキュメントを再フォーマットし、更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#graph&#34; id=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/89&#34; target=&#34;_blank&#34;&gt;GitHub #89&lt;/a&gt; 標準C++で非推奨・削除された機能を、以下のように置き換えた：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::bind1st&lt;/code&gt; → &lt;code&gt;std::bind&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; → &lt;code&gt;std::unique_ptr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::random_shuffle&lt;/code&gt; → &lt;code&gt;std::shuffle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/84&#34; target=&#34;_blank&#34;&gt;GitHub #84&lt;/a&gt; VS2015のリリースビルドでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/87&#34; target=&#34;_blank&#34;&gt;GitHub #87&lt;/a&gt; Stanford GraphBaseの例を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/103&#34; target=&#34;_blank&#34;&gt;GitHub #103&lt;/a&gt; &lt;code&gt;iterator_core_access&lt;/code&gt;のfriend宣言を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; 不足していた&lt;code&gt;&amp;lt;boost/iterator.hpp&amp;gt;&lt;/code&gt;のインクルードを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/90&#34; target=&#34;_blank&#34;&gt;GitHub #90&lt;/a&gt; 未使用変数の警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/88&#34; target=&#34;_blank&#34;&gt;GitHub #88&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; いくつかのドキュメント上のtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/graph/pull/85&#34; target=&#34;_blank&#34;&gt;GitHub #85&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/graph/pull/105&#34; target=&#34;_blank&#34;&gt;GitHub #105&lt;/a&gt; テストとサンプルコードのいくつかの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13540&#34; target=&#34;_blank&#34;&gt;Trac #13540&lt;/a&gt; clang-tidyの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/39&#34; target=&#34;_blank&#34;&gt;GitHub #39&lt;/a&gt; VxWorksのサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dump&lt;/code&gt;ストリームマニピュレータの実装で、x86 PIEレジスタに対しては、&lt;code&gt;ebx&lt;/code&gt;レジスタをsave / restoreするようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/math/pull/128&#34; target=&#34;_blank&#34;&gt;GitHub #128&lt;/a&gt; 求積法 (quadrature) と線積分 (contour integration) で任意精度の複素数をサポート&lt;/li&gt;
&lt;li&gt;多項式加算 (polynomial addition) のパフォーマンスを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13478&#34; target=&#34;_blank&#34;&gt;Trac #13478&lt;/a&gt; ムーブできるがコピーできない要素型を持つコンテナを、シリアライズできるようにした。報告者のSébastien Paris氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13518&#34; target=&#34;_blank&#34;&gt;Trac #13518&lt;/a&gt; &lt;code&gt;multi_index_container&lt;/code&gt;のデフォルトコンストラクタに&lt;code&gt;explicit&lt;/code&gt;が付いていたので外した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;任意精度の複素数をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#optional&#34; id=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/optional/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; &lt;code&gt;std::optional&lt;/code&gt;との互換性のために、&lt;code&gt;has_value()&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; U&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T -&amp;gt; optional&amp;lt;U&amp;gt;&lt;/code&gt;の変換関数を使って&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;から&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;に変換するための&lt;code&gt;flat_map()&lt;/code&gt;関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#predef&#34; id=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__ARM_ARCH&lt;/code&gt;マクロの検出をサポート (Tim Blechmann氏)&lt;/li&gt;
&lt;li&gt;PTXアーキテクチャの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;nvccコンパイラの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;CUDAの検出を追加 (Benjamin Worpitz氏)&lt;/li&gt;
&lt;li&gt;廃止になった&lt;code&gt;BOOST_ARCH_AMD64&lt;/code&gt;へのリファレンスを削除 (Peter Kolbus氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#program-options&#34; id=&#34;program-options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; オプションごとの複数のロング名 (long name) をサポート。Eyal Rozenberg氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#python&#34; id=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/python/issues/193&#34; target=&#34;_blank&#34;&gt;GitHub #193&lt;/a&gt; Windows環境での、autolinkのバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#rational&#34; id=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/rational/pull/19&#34; target=&#34;_blank&#34;&gt;GitHub #19&lt;/a&gt; &lt;code&gt;normalize()&lt;/code&gt;関数の未定義動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#signals&#34; id=&#34;signals&#34;&gt;Signals&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;ライブラリ削除の注意&lt;/span&gt;&lt;/strong&gt; Boost.Signalsは、次のリリースで削除される&lt;ul&gt;
&lt;li&gt;このライブラリは、バージョン1.54.0から非推奨となっていた。Boost.Signals2に移行すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/54&#34; target=&#34;_blank&#34;&gt;GitHub #54&lt;/a&gt; Solarisとその他プラットフォームでのコンパイルエラーを修正するために、&lt;code&gt;dladdr()&lt;/code&gt;関数に渡すアドレスの&lt;code&gt;const&lt;/code&gt;修飾を修正&lt;/li&gt;
&lt;li&gt;Boost.LexicalCastへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/system/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub #23&lt;/a&gt; C++14以降向けに、&lt;code&gt;error_code&lt;/code&gt;と&lt;code&gt;error_condition&lt;/code&gt;に&lt;code&gt;constexpr&lt;/code&gt;を追加した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#test&#34; id=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.test v3.8 の詳細については、&lt;a href=&#34;http://www.boost.org/doc/libs/1_68_0/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Changes log&lt;/a&gt; を参照すること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color:red;&#34;&gt;破壊的変更&lt;/span&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master_test_suite_t&lt;/code&gt;オブジェクトをコピー可能でなくした&lt;/li&gt;
&lt;li&gt;データセットの遅延を可能にしたため、データセット引数の追加のコピーが発生する可能性がある。これはとくに、&lt;code&gt;std::initializer_list&lt;/code&gt;で作成されたデータセットの場合に当てはまる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;データセットのテストケースでコマンドラインパラメータを使用するようにした&lt;ul&gt;
&lt;li&gt;データセットから生成されたテストは、フレームワークのセットアップ中にインスタンス化される。これによって、データセットのジェネレータが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスする。遅延インスタンス化されるべきデータセットを示すために、新たに&lt;code&gt;data::make_delayed&lt;/code&gt;ヘルパを導入した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;これによって、&lt;code&gt;data::make&lt;/code&gt;によってデータセットを作成する際に、可変個の引数を扱えるようになった。データセットが単相的であるため、最初の要素の型にキャスト可能である必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正とPull Request&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/143&#34; target=&#34;_blank&#34;&gt;GitHub #143&lt;/a&gt; &lt;code&gt;exception_api.run-fail.cpp&lt;/code&gt;の例で、条件式が逆だった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/145&#34; target=&#34;_blank&#34;&gt;GitHub #145&lt;/a&gt; 最近のCygwin環境での、ライブラリのビルドを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12095&#34; target=&#34;_blank&#34;&gt;Trac #12095&lt;/a&gt; 事前条件の失敗はエラーにすべきではなかったので、スキップするよう適切にハンドリング&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12953&#34; target=&#34;_blank&#34;&gt;Trac #12953&lt;/a&gt; データセットのテストケースが&lt;code&gt;argc&lt;/code&gt;と&lt;code&gt;argv&lt;/code&gt;にアクセスできるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13504&#34; target=&#34;_blank&#34;&gt;Trac #13504&lt;/a&gt; コマンドライン引数&lt;code&gt;catch_system_errors&lt;/code&gt;のshort formが動作しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13525&#34; target=&#34;_blank&#34;&gt;Trac #13525&lt;/a&gt; GCC 4.6.3でのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13528&#34; target=&#34;_blank&#34;&gt;Trac #13528&lt;/a&gt; コマンドライン引数&lt;code&gt;--report_sink&lt;/code&gt;を使用するとクラッシュする問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#type-index&#34; id=&#34;type-index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.MPLへの依存をなくした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_68_0.html#uuid&#34; id=&#34;uuid&#34;&gt;Uuid&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/69&#34; target=&#34;_blank&#34;&gt;GitHub #69&lt;/a&gt; 後方互換性のために残していた、sha1のdetail名前空間にリダイレクトしていた非推奨のヘッダを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;boost::uuids:uuid&lt;/code&gt;クラスに対する&lt;code&gt;std::hash&lt;/code&gt;の特殊化をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; random generatorsに対するムーブセマンティクスをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/74&#34; target=&#34;_blank&#34;&gt;GitHub #74&lt;/a&gt; エントロピー獲得時にEINTRを正しくハンドリングするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/uuid/pull/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; Linux環境で、getentropy(3)の代わりにgetrandom(2)を使用するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>