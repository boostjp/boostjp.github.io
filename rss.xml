<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2025-10-03T14:39:44.532903</updated>
  <id>f7044127-fb8d-4ca1-b5bc-76dee42234f4</id>

  
    <entry>
      <title>Boost 1.89.0リリースノート -- 1.89.0 : Asioを追加</title>
      <link href="https://boostjp.github.io/document/version/1_89_0.html"/>
      <id>641c78cd02d6618a9a09fd1c067eaa057319d302:document/version/1_89_0.md</id>
      <updated>2025-08-12T11:05:49+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.89.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_89_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_89_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_89_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_89_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/bloom&#34; target=&#34;_blank&#34;&gt;Bloom&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ブルームフィルタ。作者Joaquín M López Muñoz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#charconv&#34;&gt;Charconv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cobalt&#34;&gt;Cobalt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#compat&#34;&gt;Compat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#detail&#34;&gt;Detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hash2&#34;&gt;Hash2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mqtt5&#34;&gt;MQTT5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#random&#34;&gt;Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++20モジュールの初期サポート&lt;/strong&gt;。詳細はドキュメントを参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;execution_context&lt;/code&gt;、&lt;code&gt;io_context&lt;/code&gt;、&lt;code&gt;thread_pool&lt;/code&gt; にアロケータコンストラクタ追加。指定アロケータを実行コンテキストに関連するオブジェクトの割り当てに使用する&lt;/li&gt;
&lt;li&gt;タイマーキューのヒープに使う&lt;code&gt;vector&lt;/code&gt;の領域を予約するための新しい設定パラメータ &lt;code&gt;&#34;timer&#34;&lt;/code&gt; / &lt;code&gt;&#34;heap_reserve&#34;&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_resolve&lt;/code&gt; において非同期アドレス解決をエミュレートする内部スレッド数を指定する新しい設定パラメータ &lt;code&gt;&#34;resolver&#34;&lt;/code&gt; / &lt;code&gt;&#34;threads&#34;&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;便利ヘッダ &lt;code&gt;boost/asio.hpp&lt;/code&gt; から &lt;code&gt;deadline_timer&lt;/code&gt;、&lt;code&gt;basic_deadline_timer&lt;/code&gt;、&lt;code&gt;time_traits&lt;/code&gt; を削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connect_pipe&lt;/code&gt; が作成する Windows 名前付きパイプが、複数の独立したプラグインDLL使用時の競合を回避するため、一意の名前を使用するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_CONCURRENCY_HINT_SAFE&lt;/code&gt; を &lt;code&gt;io_context&lt;/code&gt; のデフォルトコンストラクタと整合性を持たせるよう変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_CONCURRENCY_HINT_UNSAFE_IO&lt;/code&gt; のドキュメント修正、登録されたロックが有効なままであることを反映した&lt;/li&gt;
&lt;li&gt;任意の依存関係のための b2 および cmake ビルドターゲットを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::asio::detail::throw_exception&lt;/code&gt; に &lt;code&gt;[[noreturn]]&lt;/code&gt; 属性を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;co_spawn&lt;/code&gt; を修正し、完了ハンドラの非再入呼び出しに対する非同期操作要件を遵守させるようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_signal_set&lt;/code&gt; の非同期シグナル安全性に関するドキュメント注記を追加&lt;/li&gt;
&lt;li&gt;異なるプラットフォームでの各種小規模コンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;x86、AArch32、AArch64、PPCバックエンドのasmベースにTSANインストルメンテーションを追加。これにより、スレッド同期にBoost.Atomicを使用するコードのTSANの誤検出エラーが抑制される&lt;/li&gt;
&lt;li&gt;Boost 1.84でのアナウンスに従い、Windows 10より古いWindowsバージョンのサポートを削除&lt;ul&gt;
&lt;li&gt;MinGW-w64ユーザーへの注意。MinGW-w64のWindows SDKヘッダはデフォルトで&lt;code&gt;_WIN32_WINNT&lt;/code&gt;を古いWindowsバージョンに定義するため、Boost.Atomicおよびそれを使用するコードをコンパイルする際に&lt;code&gt;_WIN32_WINNT=0x0A00&lt;/code&gt;または&lt;code&gt;BOOST_USE_WINAPI_VERSION=0x0A00&lt;/code&gt;を定義する必要がある場合がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows CEのサポートは非推奨となり、将来のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;タイムアウト付き待機操作のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pause&lt;/code&gt;操作を公開。これはスピンループのバックオフ対策として使用できる。PowerPCのサポートを追加し、&lt;code&gt;thread_pause&lt;/code&gt;でのAArch64のサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_ATOMIC_FLAG_INIT&lt;/code&gt;マクロ定義を削除。ライブラリが現在C++11を要求するため、&lt;code&gt;BOOST_ATOMIC_FLAG_INIT&lt;/code&gt;は常にサポートされる&lt;/li&gt;
&lt;li&gt;アトミック列挙型のビット演算を有効化。これは列挙型がビットマスクを実装するために使用される場合に有用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;async_base&lt;/code&gt;で&lt;code&gt;immediate_executor_type&lt;/code&gt;を条件付きで定義&lt;/li&gt;
&lt;li&gt;&lt;code&gt;detail/cpu_info.hpp&lt;/code&gt;に不足していた&lt;code&gt;cstdint&lt;/code&gt;ヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::is_trivial&lt;/code&gt;の非推奨警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;handshake_timeout&lt;/code&gt;が読み取り中のクロージングハンドシェイクにも適用されるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail/work_guard.hpp&lt;/code&gt;を&lt;code&gt;net::executor_work_guard&lt;/code&gt;に置き換え&lt;/li&gt;
&lt;li&gt;MinGWでのテストビルドの移植性の問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;ドキュメントから移動されたセクションを削除&lt;/li&gt;
&lt;li&gt;テストから余分なログメッセージを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;yliu1021氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#charconv&#34; id=&#34;charconv&#34;&gt;Charconv&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;整数型の&lt;code&gt;from_chars&lt;/code&gt;でのパフォーマンス低下を修正&lt;/li&gt;
&lt;li&gt;浮動小数点型の&lt;code&gt;to_chars&lt;/code&gt;で指定された精度での丸めと末尾の小数点のバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cobalt&#34; id=&#34;cobalt&#34;&gt;Cobalt&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ジェネレータとプロミスのムーブ代入を修正&lt;/li&gt;
&lt;li&gt;内部例外を修正&lt;/li&gt;
&lt;li&gt;IOライブラリを追加。Cobalt.ioはコンパイル済みライブラリとしてasioの大部分のサブセットを提供&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#compat&#34; id=&#34;compat&#34;&gt;Compat&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;move_only_function.hpp&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_is_avalanching&lt;/code&gt;トレイトクラスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;polymorphic_downcast&lt;/code&gt;と&lt;code&gt;polymorphic_cast&lt;/code&gt;をconstexprで使用できる機能を追加（C++20が必要）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/pull/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; 仕様に従い、入力0に対して&lt;code&gt;bit_ceil&lt;/code&gt;が1を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/issues/190&#34; target=&#34;_blank&#34;&gt;GitHub #190&lt;/a&gt; &lt;code&gt;boost::core::string_view&lt;/code&gt;に&lt;code&gt;std::format&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#detail&#34; id=&#34;detail&#34;&gt;Detail&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_BITMASK&lt;/code&gt;によって生成される演算子が、列挙型の基底型を使用してビット演算を実装するようになった。演算子は可能な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;でマークされる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_BITMASK&lt;/code&gt;によって生成される関数&lt;code&gt;bitmask_set&lt;/code&gt;は非推奨としてマークされた。将来のリリースでは、&lt;code&gt;BOOST_BITMASK&lt;/code&gt;はこの関数の生成を停止する。ユーザーは値がゼロかどうかをテストするために二重否定（&lt;code&gt;!!mask&lt;/code&gt;）を使用することを推奨する。これはBoost.Filesystemで定義された列挙型などに影響する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cygwinでのコンパイルとエクスポートを修正。PR提出してくれた&lt;a href=&#34;https://github.com/Luohaothu&#34; target=&#34;_blank&#34;&gt;Luohao Wang&lt;/a&gt;氏に多大なる感謝！&lt;/li&gt;
&lt;li&gt;FreeBSDでのビルドを修正。バグ報告してくれた&lt;a href=&#34;https://github.com/agokhale&#34; target=&#34;_blank&#34;&gt;ash&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;プリプロセッサオプションに合わせて&lt;code&gt;BOOST_DLL_USE_STD_FS&lt;/code&gt; CMakeオプションを追加。PR提出してくれた&lt;a href=&#34;https://github.com/yurybura&#34; target=&#34;_blank&#34;&gt;Yury Bura&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/335&#34; target=&#34;_blank&#34;&gt;GitHub #335&lt;/a&gt; &lt;code&gt;path::append&lt;/code&gt;で潜在的に無関係なオブジェクトへのポインタを比較することに関するASAN警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;主要な改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1369&#34; target=&#34;_blank&#34;&gt;GitHub #1369&lt;/a&gt; トラバーサルの書き直し&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1402&#34; target=&#34;_blank&#34;&gt;GitHub #1402&lt;/a&gt; ジオメトリ多面体サーフェスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1404&#34; target=&#34;_blank&#34;&gt;GitHub #1404&lt;/a&gt; バッファのパフォーマンス改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1405&#34; target=&#34;_blank&#34;&gt;GitHub #1405&lt;/a&gt; ヘッダファイルでの静的変数と関数を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;破壊的変更&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1401&#34; target=&#34;_blank&#34;&gt;GitHub #1401&lt;/a&gt; 非推奨のヘッダを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1221&#34; target=&#34;_blank&#34;&gt;GitHub #1221&lt;/a&gt; 整数座標を持つ直線的なマルチポリゴンとの差分が、切断された内部を持つ無効なポリゴンを生成する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1295&#34; target=&#34;_blank&#34;&gt;GitHub #1295&lt;/a&gt; 交差での誤った結果（結果ポリゴンが入力ポリゴンの最大のものと等しい）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1349&#34; target=&#34;_blank&#34;&gt;GitHub #1349&lt;/a&gt; ポリゴンの差分が誤った結果を与える&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1382&#34; target=&#34;_blank&#34;&gt;GitHub #1382&lt;/a&gt; バッファ操作が自己交差を作成する&lt;/li&gt;
&lt;li&gt;エラーと警告のさまざまな修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#hash2&#34; id=&#34;hash2&#34;&gt;Hash2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Blake2アルゴリズム（&lt;code&gt;blake2s_256&lt;/code&gt;、&lt;code&gt;blake2b_512&lt;/code&gt;）を追加&lt;/li&gt;
&lt;li&gt;XXH3アルゴリズム（&lt;code&gt;xxh3_128&lt;/code&gt;）を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CMakeの最小バージョンとCMakeでのPython検出を更新&lt;/li&gt;
&lt;li&gt;ドキュメントの改善&lt;ul&gt;
&lt;li&gt;暗黙的に変換できない複数の値型を受け入れる軸の作成例を追加&lt;/li&gt;
&lt;li&gt;次元ごとのデータが既に連続データとして利用可能な場合に、多次元ヒストグラムで&lt;code&gt;histogram::fill&lt;/code&gt;を効率的に使用する方法を示す&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ユーザー定義リテラル演算子の非推奨形式を使用しないようにした&lt;/li&gt;
&lt;li&gt;b2でのモジュラービルド構造のサポートを追加&lt;/li&gt;
&lt;li&gt;狭められた型に関するMSVCでの警告を修正&lt;/li&gt;
&lt;li&gt;ビン内のすべての値を格納するコレクタアキュムレータを追加&lt;/li&gt;
&lt;li&gt;詳細名前空間のテストとクラスへの内部変更&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/92&#34; target=&#34;_blank&#34;&gt;GitHub #92&lt;/a&gt; 無効なイテレータを生成する可能性があった&lt;code&gt;filter_iterator&lt;/code&gt;のコピー/変換コンストラクタを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/93&#34; target=&#34;_blank&#34;&gt;GitHub #93&lt;/a&gt; C++26で非推奨となる&lt;code&gt;std::is_trivial&lt;/code&gt;の&lt;code&gt;iterator_facade&lt;/code&gt;での使用を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; &lt;code&gt;iterator_facade::operator[]&lt;/code&gt;が条件付きで値またはプロキシを返すのではなく、常にプロキシを返すようになった。これにより、値型がトリビアルコピー可能かどうかに関係なく、ユーザーは演算子の結果に参照をバインドできる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade::operator[]&lt;/code&gt;によって返されるプロキシが、参照された値への逆参照演算子の転送をサポートするようになった。これにより&lt;code&gt;it[n]-&amp;gt;foo()&lt;/code&gt;と&lt;code&gt;(*it[n]).foo()&lt;/code&gt;式がコンパイルできるようになる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade::operator[]&lt;/code&gt;によって返されるプロキシが、代入演算子で完全転送を実装するようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントを刷新&lt;/li&gt;
&lt;li&gt;Rangeである&lt;code&gt;optional&lt;/code&gt;は&lt;code&gt;optional&lt;/code&gt;として分類される&lt;/li&gt;
&lt;li&gt;基本クラスを持つ型に対してDescribedクラスサポートが有効化される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_LOG_WITHOUT_ASIO&lt;/code&gt;設定マクロのサポートを追加。これはBoost.Asioへの依存関係を削除し、関連する機能を無効にするために使用できる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;でログファイル名を構成する際に、ファイルカウンタのロケール非依存のフォーマットを使用。これにより&lt;code&gt;file_collector::scan_for_files&lt;/code&gt;での後続のファイル名解析の失敗を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/195&#34; target=&#34;_blank&#34;&gt;GitHub #195&lt;/a&gt; フィルタリング式にユーザー定義の関数オブジェクトを注入することを簡素化する新しい&lt;code&gt;wrap_filter&lt;/code&gt;ユーティリティを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ビルドに明示的なC++14の&lt;code&gt;&amp;lt;type_traits&amp;gt;&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;要件を追加&lt;/li&gt;
&lt;li&gt;さまざまなプラットフォームでのGPUサポートの修正を収集&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x = 0&lt;/code&gt;での下側不完全ガンマ関数を修正&lt;/li&gt;
&lt;li&gt;jSOアルゴリズムでの外部アーカイブエラーを修正&lt;/li&gt;
&lt;li&gt;ibetaでの数値アンダーフローを修正&lt;/li&gt;
&lt;li&gt;大きなaとbの値での逆ibetaを修正&lt;/li&gt;
&lt;li&gt;C++26で安全にするための可変引数関数を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mqtt5&#34; id=&#34;mqtt5&#34;&gt;MQTT5&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mqtt5/issues/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt; ブローカーリストでのURIパスの不正な解析を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mqtt5/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; デフォルトの最大パケットサイズが&lt;code&gt;CONNECT&lt;/code&gt;パケットで明示的に設定されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mqtt5/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; 大きな最大パケットサイズ値での高CPU使用率を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;新しいバックエンドタイプを追加：&lt;code&gt;cpp_double_fp_backend&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Boost.Serializationとの名前空間の衝突を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/313&#34; target=&#34;_blank&#34;&gt;GitHub #313&lt;/a&gt; &lt;code&gt;caching_sha2_password&lt;/code&gt;認証プラグインがTLSなしで使用できるようになった。これはMySQL 8以降のデフォルトである。このプラグインを使用しようとするプレーンテキスト接続は&lt;code&gt;client_errc::auth_plugin_requires_ssl&lt;/code&gt;で失敗しなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/468&#34; target=&#34;_blank&#34;&gt;GitHub #468&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/mysql/issues/488&#34; target=&#34;_blank&#34;&gt;GitHub #488&lt;/a&gt; ターゲットデータベースが存在せず、&lt;code&gt;caching_sha2_password&lt;/code&gt;が使用されている場合の接続確立中に&lt;code&gt;client_errc::incomplete_message&lt;/code&gt;が返される問題を修正。適切なサーバー生成の診断が返されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; ハンドシェイクアルゴリズムがプロトコル違反に対してより回復力を持つようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/pull/475&#34; target=&#34;_blank&#34;&gt;GitHub #475&lt;/a&gt; 不足しているインクルードによるgcc-15でのビルド失敗を修正。PR提出してくれた&lt;a href=&#34;https://github.com/hhoffstaette&#34; target=&#34;_blank&#34;&gt;hhoffstaette&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/doc/libs/master/libs/mysql/doc/html/mysql/benchmarks.html&#34; target=&#34;_blank&#34;&gt;公式ドライバに対するベンチマーク&lt;/a&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/461&#34; target=&#34;_blank&#34;&gt;GitHub #461&lt;/a&gt; &lt;code&gt;metadata&lt;/code&gt;表現を最適化し、構築が高速になり、メモリ使用量が少なくなった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい推奨されるBoostプラクティスに従ってC++20モジュールを書き直し。詳細はドキュメントを参照&lt;/li&gt;
&lt;li&gt;最新のclangコンパイラでのC++26コンパイルを修正。レポートしてくれた&lt;a href=&#34;https://github.com/MBkkt&#34; target=&#34;_blank&#34;&gt;Valery Mironov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;「長さゼロの配列」コンパイラ拡張を使用する型をサポート&lt;/li&gt;
&lt;li&gt;タイプミスを修正。問題を強調してくれた&lt;a href=&#34;https://github.com/TryKuhn&#34; target=&#34;_blank&#34;&gt;Egor&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::pfr::names_as_array(empty_struct{})&lt;/code&gt;で&lt;code&gt;std::array&amp;lt;std::string_view, 0&amp;gt;&lt;/code&gt;型を返すようにし、&lt;code&gt;for (std::string_view name : boost::pfr::names_as_array(empty_struct{}))&lt;/code&gt;のコンパイルを可能にした。バグレポートしてくれた&lt;a href=&#34;https://github.com/sabudilovskiy&#34; target=&#34;_blank&#34;&gt;sabudilovskiy&lt;/a&gt;氏に多大なる感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;v1の&lt;code&gt;process.hpp&lt;/code&gt;インクルードをエミュレートする&lt;code&gt;v1.hpp&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;Windowsパスエスケープの修正&lt;/li&gt;
&lt;li&gt;terminateとasync_waitが終了コード値の損失につながる終了コードの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#random&#34; id=&#34;random&#34;&gt;Random&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beta_distribution&lt;/code&gt;によってNANが生成される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beta_distribution::operator()&lt;/code&gt;のパフォーマンスを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++20モジュールの初期サポート&lt;/strong&gt;。詳細はドキュメントを参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非推奨の&lt;code&gt;boost::unordered::hash_is_avalanching&lt;/code&gt;は現在、&lt;code&gt;&amp;lt;boost/container_hash/hash_is_avalanching.hpp&amp;gt;&lt;/code&gt;の&lt;code&gt;boost::hash_is_avalanching&lt;/code&gt;のusing宣言となった。代わりにそのヘッダを直接使用すること。&lt;code&gt;&amp;lt;boost/unordered/hash_traits.hpp&amp;gt;&lt;/code&gt;は将来削除される予定&lt;/li&gt;
&lt;li&gt;オープンアドレシングコンテナに&lt;code&gt;pull(const_iterator)&lt;/code&gt;を追加。この操作により、ムーブ構築による要素の効率的な削除と取得が可能になる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/tools/build/doc/html/#_version_5_3_2&#34; target=&#34;_blank&#34;&gt;B2バージョン5.3.2&lt;/a&gt;のリリースを含む&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リリースノート -- version: 1.89.0へのリンクを追加</title>
      <link href="https://boostjp.github.io/document/version.html"/>
      <id>09b1a40287b992a8dc692d63d9e986a1a1257071:document/version.md</id>
      <updated>2025-08-09T11:06:20+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;以下は、Boostの各バージョンのリリースノートを翻訳、情報補完したドキュメントです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;version/template.html&#34;&gt;雛形ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;version/1_89_0.html&#34;&gt;1.89.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_88_0.html&#34;&gt;1.88.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_87_0.html&#34;&gt;1.87.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_86_0.html&#34;&gt;1.86.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_85_0.html&#34;&gt;1.85.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_84_0.html&#34;&gt;1.84.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_83_0.html&#34;&gt;1.83.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_82_0.html&#34;&gt;1.82.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_81_0.html&#34;&gt;1.81.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_80_0.html&#34;&gt;1.80.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_79_0.html&#34;&gt;1.79.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_78_0.html&#34;&gt;1.78.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_77_0.html&#34;&gt;1.77.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_76_0.html&#34;&gt;1.76.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_75_0.html&#34;&gt;1.75.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_74_0.html&#34;&gt;1.74.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_73_0.html&#34;&gt;1.73.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_72_0.html&#34;&gt;1.72.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_71_0.html&#34;&gt;1.71.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_70_0.html&#34;&gt;1.70.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_69_0.html&#34;&gt;1.69.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_68_0.html&#34;&gt;1.68.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_67_0.html&#34;&gt;1.67.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_66_0.html&#34;&gt;1.66.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_65_1.html&#34;&gt;1.65.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_65_0.html&#34;&gt;1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_64_0.html&#34;&gt;1.64.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_63_0.html&#34;&gt;1.63.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_62_0.html&#34;&gt;1.62.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_61_0.html&#34;&gt;1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_60_0.html&#34;&gt;1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_59_0.html&#34;&gt;1.59.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_58_0.html&#34;&gt;1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_57_0.html&#34;&gt;1.57.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_56_0.html&#34;&gt;1.56.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_55_0.html&#34;&gt;1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_54_0.html&#34;&gt;1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_53_0.html&#34;&gt;1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_52_0.html&#34;&gt;1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_51_0.html&#34;&gt;1.51.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_50_0.html&#34;&gt;1.50.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_49_0.html&#34;&gt;1.49.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_48_0.html&#34;&gt;1.48.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_47_0.html&#34;&gt;1.47.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_46_1.html&#34;&gt;1.46.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_46_0.html&#34;&gt;1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;version/1_45_0.html&#34;&gt;1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.89.0リリースノート -- 1.89.0のリリースノートを追加</title>
      <link href="https://boostjp.github.io/document/version/1_89_0.html"/>
      <id>2401879d165acd40a2f90af52a1dc1fe26afaa25:document/version/1_89_0.md</id>
      <updated>2025-08-09T11:03:42+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.89.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_89_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_89_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_89_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_89_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/bloom&#34; target=&#34;_blank&#34;&gt;Bloom&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ブルームフィルタ。作者Joaquín M López Muñoz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#charconv&#34;&gt;Charconv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cobalt&#34;&gt;Cobalt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#compat&#34;&gt;Compat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#detail&#34;&gt;Detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hash2&#34;&gt;Hash2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mqtt5&#34;&gt;MQTT5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#process&#34;&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#random&#34;&gt;Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#any&#34; id=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++20モジュールの初期サポート&lt;/strong&gt;。詳細はドキュメントを参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#atomic&#34; id=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;x86、AArch32、AArch64、PPCバックエンドのasmベースにTSANインストルメンテーションを追加。これにより、スレッド同期にBoost.Atomicを使用するコードのTSANの誤検出エラーが抑制される&lt;/li&gt;
&lt;li&gt;Boost 1.84でのアナウンスに従い、Windows 10より古いWindowsバージョンのサポートを削除&lt;ul&gt;
&lt;li&gt;MinGW-w64ユーザーへの注意。MinGW-w64のWindows SDKヘッダはデフォルトで&lt;code&gt;_WIN32_WINNT&lt;/code&gt;を古いWindowsバージョンに定義するため、Boost.Atomicおよびそれを使用するコードをコンパイルする際に&lt;code&gt;_WIN32_WINNT=0x0A00&lt;/code&gt;または&lt;code&gt;BOOST_USE_WINAPI_VERSION=0x0A00&lt;/code&gt;を定義する必要がある場合がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows CEのサポートは非推奨となり、将来のリリースで削除される予定&lt;/li&gt;
&lt;li&gt;タイムアウト付き待機操作のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread_pause&lt;/code&gt;操作を公開。これはスピンループのバックオフ対策として使用できる。PowerPCのサポートを追加し、&lt;code&gt;thread_pause&lt;/code&gt;でのAArch64のサポートを改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ATOMIC_NO_ATOMIC_FLAG_INIT&lt;/code&gt;マクロ定義を削除。ライブラリが現在C++11を要求するため、&lt;code&gt;BOOST_ATOMIC_FLAG_INIT&lt;/code&gt;は常にサポートされる&lt;/li&gt;
&lt;li&gt;アトミック列挙型のビット演算を有効化。これは列挙型がビットマスクを実装するために使用される場合に有用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修正&lt;ul&gt;
&lt;li&gt;&lt;code&gt;async_base&lt;/code&gt;で&lt;code&gt;immediate_executor_type&lt;/code&gt;を条件付きで定義&lt;/li&gt;
&lt;li&gt;&lt;code&gt;detail/cpu_info.hpp&lt;/code&gt;に不足していた&lt;code&gt;cstdint&lt;/code&gt;ヘッダを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::is_trivial&lt;/code&gt;の非推奨警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;handshake_timeout&lt;/code&gt;が読み取り中のクロージングハンドシェイクにも適用されるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail/work_guard.hpp&lt;/code&gt;を&lt;code&gt;net::executor_work_guard&lt;/code&gt;に置き換え&lt;/li&gt;
&lt;li&gt;MinGWでのテストビルドの移植性の問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメンテーション&lt;ul&gt;
&lt;li&gt;ドキュメントから移動されたセクションを削除&lt;/li&gt;
&lt;li&gt;テストから余分なログメッセージを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;謝辞&lt;ul&gt;
&lt;li&gt;yliu1021氏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#charconv&#34; id=&#34;charconv&#34;&gt;Charconv&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;整数型の&lt;code&gt;from_chars&lt;/code&gt;でのパフォーマンス低下を修正&lt;/li&gt;
&lt;li&gt;浮動小数点型の&lt;code&gt;to_chars&lt;/code&gt;で指定された精度での丸めと末尾の小数点のバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cobalt&#34; id=&#34;cobalt&#34;&gt;Cobalt&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ジェネレータとプロミスのムーブ代入を修正&lt;/li&gt;
&lt;li&gt;内部例外を修正&lt;/li&gt;
&lt;li&gt;IOライブラリを追加。Cobalt.ioはコンパイル済みライブラリとしてasioの大部分のサブセットを提供&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#compat&#34; id=&#34;compat&#34;&gt;Compat&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;move_only_function.hpp&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#container_hash&#34; id=&#34;container_hash&#34;&gt;ContainerHash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash_is_avalanching&lt;/code&gt;トレイトクラスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#conversion&#34; id=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;polymorphic_downcast&lt;/code&gt;と&lt;code&gt;polymorphic_cast&lt;/code&gt;をconstexprで使用できる機能を追加（C++20が必要）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/pull/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; 仕様に従い、入力0に対して&lt;code&gt;bit_ceil&lt;/code&gt;が1を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/issues/190&#34; target=&#34;_blank&#34;&gt;GitHub #190&lt;/a&gt; &lt;code&gt;boost::core::string_view&lt;/code&gt;に&lt;code&gt;std::format&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#detail&#34; id=&#34;detail&#34;&gt;Detail&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_BITMASK&lt;/code&gt;によって生成される演算子が、列挙型の基底型を使用してビット演算を実装するようになった。演算子は可能な場合に&lt;code&gt;noexcept&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;でマークされる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_BITMASK&lt;/code&gt;によって生成される関数&lt;code&gt;bitmask_set&lt;/code&gt;は非推奨としてマークされた。将来のリリースでは、&lt;code&gt;BOOST_BITMASK&lt;/code&gt;はこの関数の生成を停止する。ユーザーは値がゼロかどうかをテストするために二重否定（&lt;code&gt;!!mask&lt;/code&gt;）を使用することを推奨する。これはBoost.Filesystemで定義された列挙型などに影響する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cygwinでのコンパイルとエクスポートを修正。PR提出してくれた&lt;a href=&#34;https://github.com/Luohaothu&#34; target=&#34;_blank&#34;&gt;Luohao Wang&lt;/a&gt;氏に多大なる感謝！&lt;/li&gt;
&lt;li&gt;FreeBSDでのビルドを修正。バグ報告してくれた&lt;a href=&#34;https://github.com/agokhale&#34; target=&#34;_blank&#34;&gt;ash&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;プリプロセッサオプションに合わせて&lt;code&gt;BOOST_DLL_USE_STD_FS&lt;/code&gt; CMakeオプションを追加。PR提出してくれた&lt;a href=&#34;https://github.com/yurybura&#34; target=&#34;_blank&#34;&gt;Yury Bura&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/335&#34; target=&#34;_blank&#34;&gt;GitHub #335&lt;/a&gt; &lt;code&gt;path::append&lt;/code&gt;で潜在的に無関係なオブジェクトへのポインタを比較することに関するASAN警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;主要な改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1369&#34; target=&#34;_blank&#34;&gt;GitHub #1369&lt;/a&gt; トラバーサルの書き直し&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1402&#34; target=&#34;_blank&#34;&gt;GitHub #1402&lt;/a&gt; ジオメトリ多面体サーフェスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改善点&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1404&#34; target=&#34;_blank&#34;&gt;GitHub #1404&lt;/a&gt; バッファのパフォーマンス改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1405&#34; target=&#34;_blank&#34;&gt;GitHub #1405&lt;/a&gt; ヘッダファイルでの静的変数と関数を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;破壊的変更&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/pull/1401&#34; target=&#34;_blank&#34;&gt;GitHub #1401&lt;/a&gt; 非推奨のヘッダを削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;問題の解決&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1221&#34; target=&#34;_blank&#34;&gt;GitHub #1221&lt;/a&gt; 整数座標を持つ直線的なマルチポリゴンとの差分が、切断された内部を持つ無効なポリゴンを生成する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1295&#34; target=&#34;_blank&#34;&gt;GitHub #1295&lt;/a&gt; 交差での誤った結果（結果ポリゴンが入力ポリゴンの最大のものと等しい）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1349&#34; target=&#34;_blank&#34;&gt;GitHub #1349&lt;/a&gt; ポリゴンの差分が誤った結果を与える&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1382&#34; target=&#34;_blank&#34;&gt;GitHub #1382&lt;/a&gt; バッファ操作が自己交差を作成する&lt;/li&gt;
&lt;li&gt;エラーと警告のさまざまな修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#hash2&#34; id=&#34;hash2&#34;&gt;Hash2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Blake2アルゴリズム（&lt;code&gt;blake2s_256&lt;/code&gt;、&lt;code&gt;blake2b_512&lt;/code&gt;）を追加&lt;/li&gt;
&lt;li&gt;XXH3アルゴリズム（&lt;code&gt;xxh3_128&lt;/code&gt;）を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CMakeの最小バージョンとCMakeでのPython検出を更新&lt;/li&gt;
&lt;li&gt;ドキュメントの改善&lt;ul&gt;
&lt;li&gt;暗黙的に変換できない複数の値型を受け入れる軸の作成例を追加&lt;/li&gt;
&lt;li&gt;次元ごとのデータが既に連続データとして利用可能な場合に、多次元ヒストグラムで&lt;code&gt;histogram::fill&lt;/code&gt;を効率的に使用する方法を示す&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ユーザー定義リテラル演算子の非推奨形式を使用しないようにした&lt;/li&gt;
&lt;li&gt;b2でのモジュラービルド構造のサポートを追加&lt;/li&gt;
&lt;li&gt;狭められた型に関するMSVCでの警告を修正&lt;/li&gt;
&lt;li&gt;ビン内のすべての値を格納するコレクタアキュムレータを追加&lt;/li&gt;
&lt;li&gt;詳細名前空間のテストとクラスへの内部変更&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/92&#34; target=&#34;_blank&#34;&gt;GitHub #92&lt;/a&gt; 無効なイテレータを生成する可能性があった&lt;code&gt;filter_iterator&lt;/code&gt;のコピー/変換コンストラクタを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/93&#34; target=&#34;_blank&#34;&gt;GitHub #93&lt;/a&gt; C++26で非推奨となる&lt;code&gt;std::is_trivial&lt;/code&gt;の&lt;code&gt;iterator_facade&lt;/code&gt;での使用を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/61&#34; target=&#34;_blank&#34;&gt;GitHub #61&lt;/a&gt; &lt;code&gt;iterator_facade::operator[]&lt;/code&gt;が条件付きで値またはプロキシを返すのではなく、常にプロキシを返すようになった。これにより、値型がトリビアルコピー可能かどうかに関係なく、ユーザーは演算子の結果に参照をバインドできる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade::operator[]&lt;/code&gt;によって返されるプロキシが、参照された値への逆参照演算子の転送をサポートするようになった。これにより&lt;code&gt;it[n]-&amp;gt;foo()&lt;/code&gt;と&lt;code&gt;(*it[n]).foo()&lt;/code&gt;式がコンパイルできるようになる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade::operator[]&lt;/code&gt;によって返されるプロキシが、代入演算子で完全転送を実装するようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントを刷新&lt;/li&gt;
&lt;li&gt;Rangeである&lt;code&gt;optional&lt;/code&gt;は&lt;code&gt;optional&lt;/code&gt;として分類される&lt;/li&gt;
&lt;li&gt;基本クラスを持つ型に対してDescribedクラスサポートが有効化される&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#log&#34; id=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_LOG_WITHOUT_ASIO&lt;/code&gt;設定マクロのサポートを追加。これはBoost.Asioへの依存関係を削除し、関連する機能を無効にするために使用できる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt; &lt;code&gt;text_file_backend&lt;/code&gt;でログファイル名を構成する際に、ファイルカウンタのロケール非依存のフォーマットを使用。これにより&lt;code&gt;file_collector::scan_for_files&lt;/code&gt;での後続のファイル名解析の失敗を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/log/issues/195&#34; target=&#34;_blank&#34;&gt;GitHub #195&lt;/a&gt; フィルタリング式にユーザー定義の関数オブジェクトを注入することを簡素化する新しい&lt;code&gt;wrap_filter&lt;/code&gt;ユーティリティを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#math&#34; id=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ビルドに明示的なC++14の&lt;code&gt;&amp;lt;type_traits&amp;gt;&lt;/code&gt;と&lt;code&gt;constexpr&lt;/code&gt;要件を追加&lt;/li&gt;
&lt;li&gt;さまざまなプラットフォームでのGPUサポートの修正を収集&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x = 0&lt;/code&gt;での下側不完全ガンマ関数を修正&lt;/li&gt;
&lt;li&gt;jSOアルゴリズムでの外部アーカイブエラーを修正&lt;/li&gt;
&lt;li&gt;ibetaでの数値アンダーフローを修正&lt;/li&gt;
&lt;li&gt;大きなaとbの値での逆ibetaを修正&lt;/li&gt;
&lt;li&gt;C++26で安全にするための可変引数関数を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mqtt5&#34; id=&#34;mqtt5&#34;&gt;MQTT5&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mqtt5/issues/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt; ブローカーリストでのURIパスの不正な解析を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mqtt5/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; デフォルトの最大パケットサイズが&lt;code&gt;CONNECT&lt;/code&gt;パケットで明示的に設定されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mqtt5/issues/33&#34; target=&#34;_blank&#34;&gt;GitHub #33&lt;/a&gt; 大きな最大パケットサイズ値での高CPU使用率を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#multiprecision&#34; id=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;新しいバックエンドタイプを追加：&lt;code&gt;cpp_double_fp_backend&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Boost.Serializationとの名前空間の衝突を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#mysql&#34; id=&#34;mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/313&#34; target=&#34;_blank&#34;&gt;GitHub #313&lt;/a&gt; &lt;code&gt;caching_sha2_password&lt;/code&gt;認証プラグインがTLSなしで使用できるようになった。これはMySQL 8以降のデフォルトである。このプラグインを使用しようとするプレーンテキスト接続は&lt;code&gt;client_errc::auth_plugin_requires_ssl&lt;/code&gt;で失敗しなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/468&#34; target=&#34;_blank&#34;&gt;GitHub #468&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/mysql/issues/488&#34; target=&#34;_blank&#34;&gt;GitHub #488&lt;/a&gt; ターゲットデータベースが存在せず、&lt;code&gt;caching_sha2_password&lt;/code&gt;が使用されている場合の接続確立中に&lt;code&gt;client_errc::incomplete_message&lt;/code&gt;が返される問題を修正。適切なサーバー生成の診断が返されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/469&#34; target=&#34;_blank&#34;&gt;GitHub #469&lt;/a&gt; ハンドシェイクアルゴリズムがプロトコル違反に対してより回復力を持つようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/pull/475&#34; target=&#34;_blank&#34;&gt;GitHub #475&lt;/a&gt; 不足しているインクルードによるgcc-15でのビルド失敗を修正。PR提出してくれた&lt;a href=&#34;https://github.com/hhoffstaette&#34; target=&#34;_blank&#34;&gt;hhoffstaette&lt;/a&gt;氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/doc/libs/master/libs/mysql/doc/html/mysql/benchmarks.html&#34; target=&#34;_blank&#34;&gt;公式ドライバに対するベンチマーク&lt;/a&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/mysql/issues/461&#34; target=&#34;_blank&#34;&gt;GitHub #461&lt;/a&gt; &lt;code&gt;metadata&lt;/code&gt;表現を最適化し、構築が高速になり、メモリ使用量が少なくなった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい推奨されるBoostプラクティスに従ってC++20モジュールを書き直し。詳細はドキュメントを参照&lt;/li&gt;
&lt;li&gt;最新のclangコンパイラでのC++26コンパイルを修正。レポートしてくれた&lt;a href=&#34;https://github.com/MBkkt&#34; target=&#34;_blank&#34;&gt;Valery Mironov&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;「長さゼロの配列」コンパイラ拡張を使用する型をサポート&lt;/li&gt;
&lt;li&gt;タイプミスを修正。問題を強調してくれた&lt;a href=&#34;https://github.com/TryKuhn&#34; target=&#34;_blank&#34;&gt;Egor&lt;/a&gt;氏に感謝！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::pfr::names_as_array(empty_struct{})&lt;/code&gt;で&lt;code&gt;std::array&amp;lt;std::string_view, 0&amp;gt;&lt;/code&gt;型を返すようにし、&lt;code&gt;for (std::string_view name : boost::pfr::names_as_array(empty_struct{}))&lt;/code&gt;のコンパイルを可能にした。バグレポートしてくれた&lt;a href=&#34;https://github.com/sabudilovskiy&#34; target=&#34;_blank&#34;&gt;sabudilovskiy&lt;/a&gt;氏に多大なる感謝！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#process&#34; id=&#34;process&#34;&gt;Process&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;v1の&lt;code&gt;process.hpp&lt;/code&gt;インクルードをエミュレートする&lt;code&gt;v1.hpp&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;Windowsパスエスケープの修正&lt;/li&gt;
&lt;li&gt;terminateとasync_waitが終了コード値の損失につながる終了コードの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#random&#34; id=&#34;random&#34;&gt;Random&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beta_distribution&lt;/code&gt;によってNANが生成される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beta_distribution::operator()&lt;/code&gt;のパフォーマンスを改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#type_index&#34; id=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++20モジュールの初期サポート&lt;/strong&gt;。詳細はドキュメントを参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非推奨の&lt;code&gt;boost::unordered::hash_is_avalanching&lt;/code&gt;は現在、&lt;code&gt;&amp;lt;boost/container_hash/hash_is_avalanching.hpp&amp;gt;&lt;/code&gt;の&lt;code&gt;boost::hash_is_avalanching&lt;/code&gt;のusing宣言となった。代わりにそのヘッダを直接使用すること。&lt;code&gt;&amp;lt;boost/unordered/hash_traits.hpp&amp;gt;&lt;/code&gt;は将来削除される予定&lt;/li&gt;
&lt;li&gt;オープンアドレシングコンテナに&lt;code&gt;pull(const_iterator)&lt;/code&gt;を追加。この操作により、ムーブ構築による要素の効率的な削除と取得が可能になる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#build&#34; id=&#34;build&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/tools/build/doc/html/#_version_5_3_2&#34; target=&#34;_blank&#34;&gt;B2バージョン5.3.2&lt;/a&gt;のリリースを含む&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang, C++03: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++03: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang, C++03: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Exporting Class Serialization -- Merge pull request #577 from RyuYamamoto/fix/typo</title>
      <link href="https://boostjp.github.io/document/boostserialization/reference/special-considerations/exporting-class-serialization.html"/>
      <id>b044f4eddc71406d0ecff12425a3c407538dc2f5:document/boostserialization/reference/special-considerations/exporting-class-serialization.md</id>
      <updated>2025-06-09T19:26:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/boostserialization/reference/special-considerations/exporting-class-serialization.md b/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
index 24ecdf2..038dc2a 100644
--- a/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
+++ b/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
@@ -4,7 +4,7 @@
 - 他で参照されないコードをインスタンス化します。
 - シリアライズのために、external識別子とクラスを対応づけます。クラスが明示的に参照されないという事実は、この必要条件を示します。
 
-C++では、明示的に参照されないコードは、仮想関数によって実装されます。よって、派生クラスを基底クラスのポインタまたは参照経由で操作するような用法の場合、exoprtが必要であることを意味します。
+C++では、明示的に参照されないコードは、仮想関数によって実装されます。よって、派生クラスを基底クラスのポインタまたは参照経由で操作するような用法の場合、exportが必要であることを意味します。
 
 任意のアーカイブクラスのヘッダをインクスードするのと同じソースモジュールにある`BOOST_CLASS_EXPORT`は、それらアーカイブクラスにポリモーフィックなポインタのシリアライズを要求するコードをインスタンス化します。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Exporting Class Serialization -- fix typo</title>
      <link href="https://boostjp.github.io/document/boostserialization/reference/special-considerations/exporting-class-serialization.html"/>
      <id>d27874c8665ee41f57133addf542d81916602f5f:document/boostserialization/reference/special-considerations/exporting-class-serialization.md</id>
      <updated>2025-06-09T19:16:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/document/boostserialization/reference/special-considerations/exporting-class-serialization.md b/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
index 24ecdf2..038dc2a 100644
--- a/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
+++ b/document/boostserialization/reference/special-considerations/exporting-class-serialization.md
@@ -4,7 +4,7 @@
 - 他で参照されないコードをインスタンス化します。
 - シリアライズのために、external識別子とクラスを対応づけます。クラスが明示的に参照されないという事実は、この必要条件を示します。
 
-C++では、明示的に参照されないコードは、仮想関数によって実装されます。よって、派生クラスを基底クラスのポインタまたは参照経由で操作するような用法の場合、exoprtが必要であることを意味します。
+C++では、明示的に参照されないコードは、仮想関数によって実装されます。よって、派生クラスを基底クラスのポインタまたは参照経由で操作するような用法の場合、exportが必要であることを意味します。
 
 任意のアーカイブクラスのヘッダをインクスードするのと同じソースモジュールにある`BOOST_CLASS_EXPORT`は、それらアーカイブクラスにポリモーフィックなポインタのシリアライズを要求するコードをインスタンス化します。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>RyuYamamoto</name>
        <email>ryu.yamamoto@tier4.jp</email>
      </author>
    </entry>
  
</feed>