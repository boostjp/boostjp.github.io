<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2022-12-19T14:36:32.197489</updated>
  <id>032540dc-6187-4021-b36b-6118f676e5bf</id>

  
    <entry>
      <title>Boost 1.81.0リリースノート -- 1.81.0 : Asioを追加</title>
      <link href="https://boostjp.github.io/document/version/1_81_0.html"/>
      <id>b09bc33d1efb2eb7cc89604d8e3fa8f33efb35ef:document/version/1_81_0.md</id>
      <updated>2022-12-15T14:15:33+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.81.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_81_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_81_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/url&#34; target=&#34;_blank&#34;&gt;URL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11のみを使用してURLの解析、変更、表示をするライブラリ。機能として、高速なコンパイル、強い不変条件、およびメモリフレンドリーなアプローチによる厳密なコンプライアンスが含まれる (作者Vinnie Falco, Alan de Freitas)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34;&gt;Describe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#asio&#34; id=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;完了トークンアダプタ (completion token adapter) &lt;code&gt;consign&lt;/code&gt;を追加。これにより、完了ハンドラに追加の値をもたせることができる&lt;/li&gt;
&lt;li&gt;完了ハンドラを型消去するための&lt;code&gt;any_completion_handler&amp;lt;&amp;gt;&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;C++20のコルーチンを使用した、ユーザー定義の非同期処理の軽量な実装を可能にする&lt;code&gt;experimental::co_composed&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::make_parallel_group()&lt;/code&gt;に範囲版のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;完了ハンドラに関連するexecutorの型消去ラッパーである&lt;code&gt;any_completion_executor&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;use_future&lt;/code&gt;に不足していた&lt;code&gt;context&lt;/code&gt;クエリを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;execution::any_executor&amp;lt;&amp;gt;&lt;/code&gt; と &lt;code&gt;any_io_executor&lt;/code&gt; に例外を投げないコンストラクタのオーバーロードを追加&lt;/li&gt;
&lt;li&gt;空の &lt;code&gt;execution::any_executor&lt;/code&gt; オブジェクトの表現を最適化し、コピーとムーブのパフォーマンスを向上させた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::reference_wrapper&lt;/code&gt; に &lt;code&gt;associated_cancellation_slot&lt;/code&gt; の特殊化を追加&lt;/li&gt;
&lt;li&gt;I/Oオブジェクトがconst参照でexecutorを返すよう変更&lt;/li&gt;
&lt;li&gt;2 つの引数を持つすべての &lt;code&gt;get&lt;/code&gt; 関数に対して、推論された戻り値の型を使用するよう変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spawn&lt;/code&gt; の実装を修正し、処理されなかった例外を捕捉し、生成されたスレッドの外側で再スローするよう修正&lt;/li&gt;
&lt;li&gt;完了ハンドラが正しいexecutorを通して処理されるように &lt;code&gt;spawn&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;ターミナル状態の &lt;code&gt;spawn&lt;/code&gt; スレッドオブジェクトの掃除部分を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spawn&lt;/code&gt; と &lt;code&gt;co_spawn&lt;/code&gt; の実装を修正し、正しいexecutorにキャンセルハンドラをディスパッチするよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dispatch&lt;/code&gt; の意味論を変更し、executorがそのまま使用されるよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;execution::execute&lt;/code&gt; のカスタマイズポイントとsender/receiver機能を非推奨にした&lt;/li&gt;
&lt;li&gt;C++11 の &lt;code&gt;parallel_group&lt;/code&gt; サンプルを追加&lt;/li&gt;
&lt;li&gt;非推奨の &lt;code&gt;resolve&lt;/code&gt; 変換を使用しないようにサンプルコードを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::channel_traits&lt;/code&gt; の特殊化における曖昧さを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R(error_code)&lt;/code&gt; シグネチャのための特化したチャンネル実装を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_compose&lt;/code&gt;のselfオブジェクトにpublicな&lt;code&gt;cancelled()&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async_compose&lt;/code&gt;のselfオブジェクトに &lt;code&gt;io_executor_type&lt;/code&gt; と &lt;code&gt;get_io_executor&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;Windowsのオーバーラップしたハンドルに対する &lt;code&gt;release()&lt;/code&gt; の実装を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::coro&lt;/code&gt;の遅延待ちを有効にし、&lt;code&gt;experimental::use_coro&lt;/code&gt;を正規化し、アロケータの取り扱いを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experimental::promise&lt;/code&gt; を整理し、非同期操作オブジェクトにした　&lt;/li&gt;
&lt;li&gt;&lt;code&gt;post&lt;/code&gt;/&lt;code&gt;defer&lt;/code&gt; のオーバーロードに &lt;code&gt;blocking.never&lt;/code&gt; を要求できるように制限を加えた&lt;/li&gt;
&lt;li&gt;ディスクリプタの実装を変更し、ノンブロッキングモードの設定時に &lt;code&gt;ioctl&lt;/code&gt; が &lt;code&gt;ENOTTY&lt;/code&gt; で失敗したら、 &lt;code&gt;fcntl&lt;/code&gt; にフォールバックするよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sprintf&lt;/code&gt; の使用に関連するXcodeの非推奨警告を修正しました。&lt;/li&gt;
&lt;li&gt;内部スレッドで実行する場合の &lt;code&gt;select_reactor::run&lt;/code&gt; に渡される引数を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASIO_DISABLE_SMALL_BLOCK_RECYCLING&lt;/code&gt; が定義されている場合のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;Clang 14以降でのC++20コルーチンサポートの検出を更新&lt;/li&gt;
&lt;li&gt;C++17 以降をターゲットにしている場合、標準ライブラリの機能検出を常に &lt;code&gt;std::invoke_result&lt;/code&gt; を有効化するよう変更&lt;/li&gt;
&lt;li&gt;MSVCでの戻り値型推論の検出を修正&lt;/li&gt;
&lt;li&gt;非同期操作の要件を更新し、関連するexecutorへの要件を緩和&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boost.org/doc/libs/1_81_0/doc/html/boost_asio/overview/implementation.html&#34; target=&#34;_blank&#34;&gt;io_uringの実装上の注意ドキュメント&lt;/a&gt;を追加&lt;/li&gt;
&lt;li&gt;詳細は&lt;a href=&#34;https://www.boost.org/doc/libs/release/doc/html/boost_asio/history.html&#34; target=&#34;_blank&#34;&gt;Revision History&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beast::http::message_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;AsioでBeastのbufferを使用するための&lt;code&gt;buffer_ref&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;操作ごとのキャンセルをサポート&lt;/li&gt;
&lt;li&gt;C++20 awaitのサンプルコードを追加&lt;/li&gt;
&lt;li&gt;WebSocketのメッセージごとの圧縮オプション&lt;/li&gt;
&lt;li&gt;WebSocketのタイムアウトオプションのAPI&lt;/li&gt;
&lt;li&gt;multiple content lengthのエラー&lt;/li&gt;
&lt;li&gt;デフォルトの圧縮とrebindをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;の特殊化を削除し、常に&lt;code&gt;hash_value&lt;/code&gt;を呼び出すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_HASH_NO_EXTENSIONS&lt;/code&gt;のサポートを削除した。拡張は常に有効になる&lt;/li&gt;
&lt;li&gt;すべての標準コンテナをサポート。これには&lt;code&gt;std::forward_list&lt;/code&gt;、と非順序連想コンテナが含まれる&lt;/li&gt;
&lt;li&gt;ユーザー定義のコンテナ (イテレータを返す&lt;code&gt;begin()&lt;/code&gt; / &lt;code&gt;end()&lt;/code&gt; をもつ型) をサポート&lt;/li&gt;
&lt;li&gt;describedなstruct / class (&lt;code&gt;BOOST_DESCRIBE_STRUCT&lt;/code&gt;もしくは&lt;code&gt;BOOST_DESCRIBE_CLASS&lt;/code&gt;でアノテーションがつけられた型) をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash_combine&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;文字列ハッシュのパフォーマンス (および結果の品質) を改善。文字列の&lt;code&gt;boost::hash&lt;/code&gt;は64ビットモードでSMHasherに渡すようになった&lt;/li&gt;
&lt;li&gt;ドキュメントを、変更を反映するために大幅に改訂した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;empty_value&lt;/code&gt;メンバを&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flose_deleter&lt;/code&gt;を追加。このデリータは、&lt;code&gt;std::FILE&lt;/code&gt;へのポインタに対して&lt;code&gt;std::fclose()&lt;/code&gt;を呼び出す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/issues/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; &lt;code&gt;boost/core/bit.hpp&lt;/code&gt;のビット操作ユーティリティが、入力時に符号なし整数を明示的に要求するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bit_width&lt;/code&gt;が入力の値の型ではなく、intを返すようにした。これは&lt;a href=&#34;https://cplusplus.github.io/LWG/issue3656&#34; target=&#34;_blank&#34;&gt;LWG3656&lt;/a&gt;の解決に基づく&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34; id=&#34;describe&#34;&gt;Describe&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-pedantic&lt;/code&gt; オプションが使用されたときに &lt;code&gt;enumerators.hpp&lt;/code&gt;、&lt;code&gt;bases.hpp&lt;/code&gt;、および &lt;code&gt;members.hpp&lt;/code&gt; を含めることができるようにするために、&lt;code&gt;BOOST_DESCRIBE_ENUM&lt;/code&gt; の呼び出しは &lt;code&gt;modifiers.hpp&lt;/code&gt; から 別のヘッダー &lt;code&gt;modifier_description.hpp&lt;/code&gt; に移動した。 その結果、&lt;code&gt;modifiers.hpp&lt;/code&gt;には&lt;code&gt;enum.hpp&lt;/code&gt;が含まれなくなった。 この暗黙的なインクルードに依存しているコードは失敗する可能性があり、&lt;code&gt;enum.hpp&lt;/code&gt; をインクルードするように修正する必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apolukhin/Boost.DLL/issues/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; Windowsプラットフォームでの&lt;code&gt;path_from_handle&lt;/code&gt;の実装を修正。&lt;a href=&#34;https://github.com/SaltfishAmi&#34; target=&#34;_blank&#34;&gt;@SaltfishAmi&lt;/a&gt;氏のバグ報告に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;std::vector&amp;lt;char&amp;gt;&lt;/code&gt; や &lt;code&gt;std::list&amp;lt;wchar_t&amp;gt;&lt;/code&gt; などの文字のコンテナからの &lt;code&gt;path&lt;/code&gt; の構築、代入、および追加は、v3 で非推奨になり、v4で削除された。代わりに文字列型またはイテレータを使用すること&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;boost/filesystem/path_traits.hpp&lt;/code&gt; ヘッダは非推奨となり、将来のリリースで削除される予定。このヘッダには&lt;code&gt;path&lt;/code&gt;の実装の詳細が含まれており、ユーザーのコードでは使用すべきではない&lt;/li&gt;
&lt;li&gt;以前から非推奨だったAPIが、使用時にコンパイル警告を出力するようになった。これらの警告を抑制するために、ユーザーのコードをコンパイルする際は &lt;code&gt;BOOST_FILESYSTEM_ALLOW_DEPRECATED&lt;/code&gt; マクロを定義すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/250&#34; target=&#34;_blank&#34;&gt;GitHub #250&lt;/a&gt; &lt;code&gt;*at&lt;/code&gt; API をサポートしない POSIX システムでのインクルードの不足によるコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; Windows 10より前バージョンで&lt;code&gt;directory_iterator&lt;/code&gt;を構築する際に&lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;を生成するネットワーク共有ファイルシステムのワークアラウンドが追加された&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; Windowsで、パスが &lt;code&gt;&#34;\\\\?\\&#34;&lt;/code&gt; プレフィックスで始まる場合に &lt;code&gt;ERROR_INVALID_FUNCTION&lt;/code&gt; エラーコードで失敗する &lt;code&gt;weakly_canonical&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/208&#34; target=&#34;_blank&#34;&gt;GitHub #208&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; コンストラクタ、代入および追加操作で &lt;code&gt;std::string_view&lt;/code&gt;、&lt;code&gt;boost::string_view&lt;/code&gt; および &lt;code&gt;boost::container::string&lt;/code&gt; (およびそれぞれの &lt;code&gt;wchar_t&lt;/code&gt; 対応物) のサポートを追加&lt;/li&gt;
&lt;li&gt;イテレータのペアを使用する&lt;code&gt;path&lt;/code&gt;コンストラクタ、代入および追加操作が、サポートされているパス文字タイプのいずれでもない値型のイテレータを受け入れなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/255&#34; target=&#34;_blank&#34;&gt;GitHub #255&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; Windowsで、さまざまなマウントされたファイルシステムと 7.21 より前の Wine リリースとの &lt;code&gt;directory_iterator&lt;/code&gt; の互換性を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/262&#34; target=&#34;_blank&#34;&gt;GitHub #262&lt;/a&gt; Windows では、重複排除されたファイルが再解析ファイルではなく、通常のファイルとして報告されるようになりました&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/240&#34; target=&#34;_blank&#34;&gt;GitHub #240&lt;/a&gt; &lt;code&gt;fusion::identity_view&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;fusion::transform_view&lt;/code&gt;に連想シーケンスのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/237&#34; target=&#34;_blank&#34;&gt;GitHub #237&lt;/a&gt; 連想シーケンスで&lt;code&gt;fusion::reverse_view&lt;/code&gt;を使用した場合のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/261&#34; target=&#34;_blank&#34;&gt;GitHub #261&lt;/a&gt; Clang 13での&lt;code&gt;-Wdeprecated-copy&lt;/code&gt;警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/249&#34; target=&#34;_blank&#34;&gt;GitHub #249&lt;/a&gt; 依存関係の小さな再編成。Boost.Coreから&lt;code&gt;boost::ref&lt;/code&gt;と&lt;code&gt;boost::noncopyable&lt;/code&gt;が使用されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt; LinuxとMacOSでのclangとgccのCIテストを追加し、WindowsでのCIテストを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/issues/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/235&#34; target=&#34;_blank&#34;&gt;GitHub #235&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; ドキュメントの改善と誤字の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1048&#34; target=&#34;_blank&#34;&gt;GitHub #1048&lt;/a&gt; Index: IndexableGetterによって値でIndexableが返される場合のダングリング参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; Union: まれに1つのポリゴンが欠落している可能性があった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1081&#34; target=&#34;_blank&#34;&gt;GitHub #1081&lt;/a&gt; Union: 精度のために、内部のリングを見逃す可能性があった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1063&#34; target=&#34;_blank&#34;&gt;GitHub #1063&lt;/a&gt; Intersection: 単純な球面ポリゴンの交差のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1064&#34; target=&#34;_blank&#34;&gt;GitHub #1064&lt;/a&gt; Formulas: 測地線直接式 (geodesic direct formulas) の一貫性の問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1088&#34; target=&#34;_blank&#34;&gt;GitHub #1088&lt;/a&gt; Point: custom point typeのリグレッションを修正&lt;/li&gt;
&lt;li&gt;不足していたインクルードファイル、警告、C++20でのコンパイルエラー、ドキュメントに関するさまざまな修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;bool値のサンプルを集積して真の割合を求め、またその分散と信頼区間 (confidence intervals) を計算する新たな &lt;code&gt;accumulator::fraction&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;fraction用の区間計算機を追加: &lt;code&gt;utility::clopper_pearson&lt;/code&gt;、&lt;code&gt;utility::wilson_interval&lt;/code&gt;、&lt;code&gt;utility::jeffreys_interval&lt;/code&gt;、&lt;code&gt;utility::wald_interval&lt;/code&gt;。これらは、任意の信頼水準 (confidence level) で区間を計算できる&lt;/li&gt;
&lt;li&gt;信頼レベルを確率として渡す&lt;code&gt;utility::confidence_level&lt;/code&gt;型、およびすべての区間計算機の標準偏差の倍数を渡す&lt;code&gt;utility::deviation&lt;/code&gt;型を追加&lt;/li&gt;
&lt;li&gt;内部的な型&lt;code&gt;sub_array&lt;/code&gt;とC++20の&lt;code&gt;span&lt;/code&gt;を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/pull/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;function_output_iterator&lt;/code&gt; は、代入された値のラップされた関数オブジェクトへの完全転送をサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; 別の &lt;code&gt;function_input_iterator&lt;/code&gt; の後置インクリメントの結果から &lt;code&gt;function_input_iterator&lt;/code&gt; を構築する際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade&lt;/code&gt; に基づくイテレータの後置インクリメントの戻り値型が、&lt;code&gt;operator-&amp;gt;&lt;/code&gt; をサポートするようになりました。 &lt;code&gt;(it++)-&amp;gt;foo&lt;/code&gt; は、以前にサポートされていた &lt;code&gt;(*it++).foo&lt;/code&gt; と等価&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;object::stable_erase&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parse&lt;/code&gt;に&lt;code&gt;std::istream&lt;/code&gt;のオーバーロードを追加、&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;に右辺値修飾のアクセッサを追加&lt;/li&gt;
&lt;li&gt;Conversion traitsを再設計&lt;/li&gt;
&lt;li&gt;describedなクラス、enum、&lt;code&gt;std::optional&lt;/code&gt;、&lt;code&gt;std::variant&lt;/code&gt;、null-likeな型 (&lt;code&gt;std::nullptr_t&lt;/code&gt;, &lt;code&gt;std::nullopt_t&lt;/code&gt;, &lt;code&gt;std::monotype&lt;/code&gt;を含む) の変換をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;からユーザー定義型への例外を投げない変換を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt; &lt;code&gt;volatile&lt;/code&gt; 算術型をキャストする際のコンパイルエラーを修正。バグ報告を提供してくれた Giovanni Cerretani 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; 非推奨のヘッダの使用を削除。 Pull Requestを提供してくれた Michael Ford 氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;いくつかの破壊的変更を含むメジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C++11 のサポートが必要になった。C++03 以前のサポートは廃止された&lt;/li&gt;
&lt;li&gt;一部のenumはenum classに変換された。名前の競合を回避する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt; と &lt;code&gt;-sICU_LINK&lt;/code&gt; を、Boost.RegEx で行われるように、きめの細かい設定オプションに置き換える&lt;/li&gt;
&lt;li&gt;libiconv の検出を修正し、一部のプラットフォームで Boost.Locale を (再び) ビルドできるようにしました。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; の使用とサポートを削除&lt;/li&gt;
&lt;li&gt;Windows で &lt;code&gt;wchar_t&lt;/code&gt; を使用して &lt;code&gt;codecvt&lt;/code&gt; が UTF-16 エンコーディングを想定・使用するようにした&lt;/li&gt;
&lt;li&gt;パフォーマンスを向上: &lt;code&gt;basic_format&lt;/code&gt;、&lt;code&gt;date_time&lt;/code&gt;、&lt;code&gt;hold_ptr&lt;/code&gt;をムーブ可能にし、フォーマットキャッシュの使用を修正&lt;/li&gt;
&lt;li&gt;Boost.Locale をより多くの ICU バージョンと互換性を持たせるようにした (特にテスト)&lt;/li&gt;
&lt;li&gt;一部のクラスの RTTI 定義を修正 (可視性の問題)&lt;/li&gt;
&lt;li&gt;一部の libc++ バージョンとの ICU バックエンドの互換性を修正&lt;/li&gt;
&lt;li&gt;一部の演算子の戻り値を修正して、const でない &lt;code&gt;*this&lt;/code&gt; を正しく返すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date_time&lt;/code&gt; の負のロールの int-overflow を修正&lt;/li&gt;
&lt;li&gt;ビルドログをきれいにする多くの警告を処理または抑制&lt;/li&gt;
&lt;li&gt;より多くの Windows コードページのサポートを追加&lt;/li&gt;
&lt;li&gt;ISO-2022-JP などの Windows コードページのサポートを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVCのテストがビルド失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/97&#34; target=&#34;_blank&#34;&gt;GitHub #97&lt;/a&gt; C++14モードでの集成体初期化の検出を改善しました、Denis Mikhailov氏のPull Requestに感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/109&#34; target=&#34;_blank&#34;&gt;GitHub #109&lt;/a&gt; &lt;a href=&#34;https://github.com/boostorg/pfr/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; clang-tidyの警告を黙らせた。Alexander Malkov氏のPull Requestに感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/96&#34; target=&#34;_blank&#34;&gt;GitHub #96&lt;/a&gt; コンパイラがサポートしている場合、fold式を使用するようにした。Jean-Michaël Celerier氏のPull Requestに感謝&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/123&#34; target=&#34;_blank&#34;&gt;GitHub #123&lt;/a&gt; このライブラリでCOMの初期化を使用しなくなった。バグ報告、説明、Pull Requestを提供してくれた Alex Guteniev 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_INCLUDE_FILE&lt;/code&gt; マクロ値を、b2 の libbacktrace の可用性を検出する際に使用できるようになりった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/118&#34; target=&#34;_blank&#34;&gt;GitHub #118&lt;/a&gt; libbacktrace の使用中に単一の &lt;code&gt;backtrace_state&lt;/code&gt; 静的インスタンスを強制的に生成する &lt;code&gt;BOOST_STACKTRACE_BACKTRACE_FORCE_STATIC&lt;/code&gt; マクロを追加。Rasmus Thomsen氏によるバグ報告に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/116&#34; target=&#34;_blank&#34;&gt;GitHub #116&lt;/a&gt; &lt;code&gt;boost/stacktrace/stacktrace.hpp&lt;/code&gt; ヘッダのみをインクルードする際に、未解決の参照を回避するようにした。バグ報告をくれた Long Deng 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/122&#34; target=&#34;_blank&#34;&gt;GitHub #122&lt;/a&gt; Windowsプラットフォームで &lt;code&gt;strlen&lt;/code&gt; を呼び出さないようにすることで、スタックトレースの表示を最適化。Alex Guteniev氏によるバグ報告に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34; id=&#34;stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const value_type&lt;/code&gt;を持つC++20より前のイテレータの2つの&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;な形式の&lt;code&gt;iterator_interface&lt;/code&gt;演算子を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;マクロ &lt;code&gt;BOOST_SYSTEM_DISABLE_THREADS&lt;/code&gt; を定義して、&lt;code&gt;&amp;lt;mutex&amp;gt;&lt;/code&gt; の使用を無効にできるようになった (例: シングルスレッドの libstdc++)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value_type&lt;/code&gt;, &lt;code&gt;error_type&lt;/code&gt;, &lt;code&gt;in_place_value&lt;/code&gt;, &lt;code&gt;in_place_error&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;emplace()&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;オープンアドレッシングに基づく高速なコンテナとして&lt;code&gt;boost::unordered_flat_map&lt;/code&gt;と&lt;code&gt;boost::unordered_flat_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;すべてのコンテナにCTAD推論ガイドを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cplusplus.github.io/LWG/issue2713&#34; target=&#34;_blank&#34;&gt;LWG issue 2713&lt;/a&gt;で規定された、不足していたコンストラクタを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/issues/101&#34; target=&#34;_blank&#34;&gt;GitHub #101&lt;/a&gt; ヘッダの再帰的なインクルードを回避。Nathan Sidwell氏のバグ報告に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/96&#34; target=&#34;_blank&#34;&gt;GitHub #96&lt;/a&gt; 非推奨ヘッダの使用を削除。Michael Ford氏のPull Requestに感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt; C++23モードのClangでのコンパイルエラーを修正。Ed Catmur氏のPull Requestに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::json::value_from&lt;/code&gt;と&lt;code&gt;boost::json::value_to&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.81.0リリースノート -- 1.81.0 : DLL, LexicalCast, Stacktrace, PFR, Variantを追加</title>
      <link href="https://boostjp.github.io/document/version/1_81_0.html"/>
      <id>55e9bd19fec2e092c51d9556cbd7cbf1d9530f2a:document/version/1_81_0.md</id>
      <updated>2022-12-11T21:01:25+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.81.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_81_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_81_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/url&#34; target=&#34;_blank&#34;&gt;URL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11のみを使用してURLの解析、変更、表示をするライブラリ。機能として、高速なコンパイル、強い不変条件、およびメモリフレンドリーなアプローチによる厳密なコンプライアンスが含まれる (作者Vinnie Falco, Alan de Freitas)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34;&gt;Describe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beast::http::message_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;AsioでBeastのbufferを使用するための&lt;code&gt;buffer_ref&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;操作ごとのキャンセルをサポート&lt;/li&gt;
&lt;li&gt;C++20 awaitのサンプルコードを追加&lt;/li&gt;
&lt;li&gt;WebSocketのメッセージごとの圧縮オプション&lt;/li&gt;
&lt;li&gt;WebSocketのタイムアウトオプションのAPI&lt;/li&gt;
&lt;li&gt;multiple content lengthのエラー&lt;/li&gt;
&lt;li&gt;デフォルトの圧縮とrebindをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;の特殊化を削除し、常に&lt;code&gt;hash_value&lt;/code&gt;を呼び出すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_HASH_NO_EXTENSIONS&lt;/code&gt;のサポートを削除した。拡張は常に有効になる&lt;/li&gt;
&lt;li&gt;すべての標準コンテナをサポート。これには&lt;code&gt;std::forward_list&lt;/code&gt;、と非順序連想コンテナが含まれる&lt;/li&gt;
&lt;li&gt;ユーザー定義のコンテナ (イテレータを返す&lt;code&gt;begin()&lt;/code&gt; / &lt;code&gt;end()&lt;/code&gt; をもつ型) をサポート&lt;/li&gt;
&lt;li&gt;describedなstruct / class (&lt;code&gt;BOOST_DESCRIBE_STRUCT&lt;/code&gt;もしくは&lt;code&gt;BOOST_DESCRIBE_CLASS&lt;/code&gt;でアノテーションがつけられた型) をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash_combine&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;文字列ハッシュのパフォーマンス (および結果の品質) を改善。文字列の&lt;code&gt;boost::hash&lt;/code&gt;は64ビットモードでSMHasherに渡すようになった&lt;/li&gt;
&lt;li&gt;ドキュメントを、変更を反映するために大幅に改訂した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;empty_value&lt;/code&gt;メンバを&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flose_deleter&lt;/code&gt;を追加。このデリータは、&lt;code&gt;std::FILE&lt;/code&gt;へのポインタに対して&lt;code&gt;std::fclose()&lt;/code&gt;を呼び出す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/issues/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; &lt;code&gt;boost/core/bit.hpp&lt;/code&gt;のビット操作ユーティリティが、入力時に符号なし整数を明示的に要求するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bit_width&lt;/code&gt;が入力の値の型ではなく、intを返すようにした。これは&lt;a href=&#34;https://cplusplus.github.io/LWG/issue3656&#34; target=&#34;_blank&#34;&gt;LWG3656&lt;/a&gt;の解決に基づく&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34; id=&#34;describe&#34;&gt;Describe&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-pedantic&lt;/code&gt; オプションが使用されたときに &lt;code&gt;enumerators.hpp&lt;/code&gt;、&lt;code&gt;bases.hpp&lt;/code&gt;、および &lt;code&gt;members.hpp&lt;/code&gt; を含めることができるようにするために、&lt;code&gt;BOOST_DESCRIBE_ENUM&lt;/code&gt; の呼び出しは &lt;code&gt;modifiers.hpp&lt;/code&gt; から 別のヘッダー &lt;code&gt;modifier_description.hpp&lt;/code&gt; に移動した。 その結果、&lt;code&gt;modifiers.hpp&lt;/code&gt;には&lt;code&gt;enum.hpp&lt;/code&gt;が含まれなくなった。 この暗黙的なインクルードに依存しているコードは失敗する可能性があり、&lt;code&gt;enum.hpp&lt;/code&gt; をインクルードするように修正する必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#dll&#34; id=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apolukhin/Boost.DLL/issues/57&#34; target=&#34;_blank&#34;&gt;GitHub #57&lt;/a&gt; Windowsプラットフォームでの&lt;code&gt;path_from_handle&lt;/code&gt;の実装を修正。&lt;a href=&#34;https://github.com/SaltfishAmi&#34; target=&#34;_blank&#34;&gt;@SaltfishAmi&lt;/a&gt;氏のバグ報告に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;std::vector&amp;lt;char&amp;gt;&lt;/code&gt; や &lt;code&gt;std::list&amp;lt;wchar_t&amp;gt;&lt;/code&gt; などの文字のコンテナからの &lt;code&gt;path&lt;/code&gt; の構築、代入、および追加は、v3 で非推奨になり、v4で削除された。代わりに文字列型またはイテレータを使用すること&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;boost/filesystem/path_traits.hpp&lt;/code&gt; ヘッダは非推奨となり、将来のリリースで削除される予定。このヘッダには&lt;code&gt;path&lt;/code&gt;の実装の詳細が含まれており、ユーザーのコードでは使用すべきではない&lt;/li&gt;
&lt;li&gt;以前から非推奨だったAPIが、使用時にコンパイル警告を出力するようになった。これらの警告を抑制するために、ユーザーのコードをコンパイルする際は &lt;code&gt;BOOST_FILESYSTEM_ALLOW_DEPRECATED&lt;/code&gt; マクロを定義すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/250&#34; target=&#34;_blank&#34;&gt;GitHub #250&lt;/a&gt; &lt;code&gt;*at&lt;/code&gt; API をサポートしない POSIX システムでのインクルードの不足によるコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; Windows 10より前バージョンで&lt;code&gt;directory_iterator&lt;/code&gt;を構築する際に&lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;を生成するネットワーク共有ファイルシステムのワークアラウンドが追加された&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; Windowsで、パスが &lt;code&gt;&#34;\\\\?\\&#34;&lt;/code&gt; プレフィックスで始まる場合に &lt;code&gt;ERROR_INVALID_FUNCTION&lt;/code&gt; エラーコードで失敗する &lt;code&gt;weakly_canonical&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/208&#34; target=&#34;_blank&#34;&gt;GitHub #208&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; コンストラクタ、代入および追加操作で &lt;code&gt;std::string_view&lt;/code&gt;、&lt;code&gt;boost::string_view&lt;/code&gt; および &lt;code&gt;boost::container::string&lt;/code&gt; (およびそれぞれの &lt;code&gt;wchar_t&lt;/code&gt; 対応物) のサポートを追加&lt;/li&gt;
&lt;li&gt;イテレータのペアを使用する&lt;code&gt;path&lt;/code&gt;コンストラクタ、代入および追加操作が、サポートされているパス文字タイプのいずれでもない値型のイテレータを受け入れなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/255&#34; target=&#34;_blank&#34;&gt;GitHub #255&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; Windowsで、さまざまなマウントされたファイルシステムと 7.21 より前の Wine リリースとの &lt;code&gt;directory_iterator&lt;/code&gt; の互換性を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/262&#34; target=&#34;_blank&#34;&gt;GitHub #262&lt;/a&gt; Windows では、重複排除されたファイルが再解析ファイルではなく、通常のファイルとして報告されるようになりました&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/240&#34; target=&#34;_blank&#34;&gt;GitHub #240&lt;/a&gt; &lt;code&gt;fusion::identity_view&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;fusion::transform_view&lt;/code&gt;に連想シーケンスのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/237&#34; target=&#34;_blank&#34;&gt;GitHub #237&lt;/a&gt; 連想シーケンスで&lt;code&gt;fusion::reverse_view&lt;/code&gt;を使用した場合のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/261&#34; target=&#34;_blank&#34;&gt;GitHub #261&lt;/a&gt; Clang 13での&lt;code&gt;-Wdeprecated-copy&lt;/code&gt;警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/249&#34; target=&#34;_blank&#34;&gt;GitHub #249&lt;/a&gt; 依存関係の小さな再編成。Boost.Coreから&lt;code&gt;boost::ref&lt;/code&gt;と&lt;code&gt;boost::noncopyable&lt;/code&gt;が使用されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt; LinuxとMacOSでのclangとgccのCIテストを追加し、WindowsでのCIテストを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/issues/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/235&#34; target=&#34;_blank&#34;&gt;GitHub #235&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; ドキュメントの改善と誤字の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1048&#34; target=&#34;_blank&#34;&gt;GitHub #1048&lt;/a&gt; Index: IndexableGetterによって値でIndexableが返される場合のダングリング参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; Union: まれに1つのポリゴンが欠落している可能性があった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1081&#34; target=&#34;_blank&#34;&gt;GitHub #1081&lt;/a&gt; Union: 精度のために、内部のリングを見逃す可能性があった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1063&#34; target=&#34;_blank&#34;&gt;GitHub #1063&lt;/a&gt; Intersection: 単純な球面ポリゴンの交差のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1064&#34; target=&#34;_blank&#34;&gt;GitHub #1064&lt;/a&gt; Formulas: 測地線直接式 (geodesic direct formulas) の一貫性の問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1088&#34; target=&#34;_blank&#34;&gt;GitHub #1088&lt;/a&gt; Point: custom point typeのリグレッションを修正&lt;/li&gt;
&lt;li&gt;不足していたインクルードファイル、警告、C++20でのコンパイルエラー、ドキュメントに関するさまざまな修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;bool値のサンプルを集積して真の割合を求め、またその分散と信頼区間 (confidence intervals) を計算する新たな &lt;code&gt;accumulator::fraction&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;fraction用の区間計算機を追加: &lt;code&gt;utility::clopper_pearson&lt;/code&gt;、&lt;code&gt;utility::wilson_interval&lt;/code&gt;、&lt;code&gt;utility::jeffreys_interval&lt;/code&gt;、&lt;code&gt;utility::wald_interval&lt;/code&gt;。これらは、任意の信頼水準 (confidence level) で区間を計算できる&lt;/li&gt;
&lt;li&gt;信頼レベルを確率として渡す&lt;code&gt;utility::confidence_level&lt;/code&gt;型、およびすべての区間計算機の標準偏差の倍数を渡す&lt;code&gt;utility::deviation&lt;/code&gt;型を追加&lt;/li&gt;
&lt;li&gt;内部的な型&lt;code&gt;sub_array&lt;/code&gt;とC++20の&lt;code&gt;span&lt;/code&gt;を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/pull/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;function_output_iterator&lt;/code&gt; は、代入された値のラップされた関数オブジェクトへの完全転送をサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; 別の &lt;code&gt;function_input_iterator&lt;/code&gt; の後置インクリメントの結果から &lt;code&gt;function_input_iterator&lt;/code&gt; を構築する際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade&lt;/code&gt; に基づくイテレータの後置インクリメントの戻り値型が、&lt;code&gt;operator-&amp;gt;&lt;/code&gt; をサポートするようになりました。 &lt;code&gt;(it++)-&amp;gt;foo&lt;/code&gt; は、以前にサポートされていた &lt;code&gt;(*it++).foo&lt;/code&gt; と等価&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;object::stable_erase&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parse&lt;/code&gt;に&lt;code&gt;std::istream&lt;/code&gt;のオーバーロードを追加、&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;に右辺値修飾のアクセッサを追加&lt;/li&gt;
&lt;li&gt;Conversion traitsを再設計&lt;/li&gt;
&lt;li&gt;describedなクラス、enum、&lt;code&gt;std::optional&lt;/code&gt;、&lt;code&gt;std::variant&lt;/code&gt;、null-likeな型 (&lt;code&gt;std::nullptr_t&lt;/code&gt;, &lt;code&gt;std::nullopt_t&lt;/code&gt;, &lt;code&gt;std::monotype&lt;/code&gt;を含む) の変換をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;からユーザー定義型への例外を投げない変換を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#lexical-cast&#34; id=&#34;lexical-cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/issues/50&#34; target=&#34;_blank&#34;&gt;GitHub #50&lt;/a&gt; &lt;code&gt;volatile&lt;/code&gt; 算術型をキャストする際のコンパイルエラーを修正。バグ報告を提供してくれた Giovanni Cerretani 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/lexical_cast/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub #53&lt;/a&gt; 非推奨のヘッダの使用を削除。 Pull Requestを提供してくれた Michael Ford 氏に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;いくつかの破壊的変更を含むメジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C++11 のサポートが必要になった。C++03 以前のサポートは廃止された&lt;/li&gt;
&lt;li&gt;一部のenumはenum classに変換された。名前の競合を回避する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt; と &lt;code&gt;-sICU_LINK&lt;/code&gt; を、Boost.RegEx で行われるように、きめの細かい設定オプションに置き換える&lt;/li&gt;
&lt;li&gt;libiconv の検出を修正し、一部のプラットフォームで Boost.Locale を (再び) ビルドできるようにしました。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; の使用とサポートを削除&lt;/li&gt;
&lt;li&gt;Windows で &lt;code&gt;wchar_t&lt;/code&gt; を使用して &lt;code&gt;codecvt&lt;/code&gt; が UTF-16 エンコーディングを想定・使用するようにした&lt;/li&gt;
&lt;li&gt;パフォーマンスを向上: &lt;code&gt;basic_format&lt;/code&gt;、&lt;code&gt;date_time&lt;/code&gt;、&lt;code&gt;hold_ptr&lt;/code&gt;をムーブ可能にし、フォーマットキャッシュの使用を修正&lt;/li&gt;
&lt;li&gt;Boost.Locale をより多くの ICU バージョンと互換性を持たせるようにした (特にテスト)&lt;/li&gt;
&lt;li&gt;一部のクラスの RTTI 定義を修正 (可視性の問題)&lt;/li&gt;
&lt;li&gt;一部の libc++ バージョンとの ICU バックエンドの互換性を修正&lt;/li&gt;
&lt;li&gt;一部の演算子の戻り値を修正して、const でない &lt;code&gt;*this&lt;/code&gt; を正しく返すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date_time&lt;/code&gt; の負のロールの int-overflow を修正&lt;/li&gt;
&lt;li&gt;ビルドログをきれいにする多くの警告を処理または抑制&lt;/li&gt;
&lt;li&gt;より多くの Windows コードページのサポートを追加&lt;/li&gt;
&lt;li&gt;ISO-2022-JP などの Windows コードページのサポートを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVCのテストがビルド失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/97&#34; target=&#34;_blank&#34;&gt;GitHub #97&lt;/a&gt; C++14モードでの集成体初期化の検出を改善しました、Denis Mikhailov氏のPull Requestに感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/109&#34; target=&#34;_blank&#34;&gt;GitHub #109&lt;/a&gt; &lt;a href=&#34;https://github.com/boostorg/pfr/pull/104&#34; target=&#34;_blank&#34;&gt;GitHub #104&lt;/a&gt; clang-tidyの警告を黙らせた。Alexander Malkov氏のPull Requestに感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/pfr/pull/96&#34; target=&#34;_blank&#34;&gt;GitHub #96&lt;/a&gt; コンパイラがサポートしている場合、fold式を使用するようにした。Jean-Michaël Celerier氏のPull Requestに感謝&lt;/li&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stacktrace&#34; id=&#34;stacktrace&#34;&gt;Stacktrace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/pull/123&#34; target=&#34;_blank&#34;&gt;GitHub #123&lt;/a&gt; このライブラリでCOMの初期化を使用しなくなった。バグ報告、説明、Pull Requestを提供してくれた Alex Guteniev 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_STACKTRACE_BACKTRACE_INCLUDE_FILE&lt;/code&gt; マクロ値を、b2 の libbacktrace の可用性を検出する際に使用できるようになりった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/118&#34; target=&#34;_blank&#34;&gt;GitHub #118&lt;/a&gt; libbacktrace の使用中に単一の &lt;code&gt;backtrace_state&lt;/code&gt; 静的インスタンスを強制的に生成する &lt;code&gt;BOOST_STACKTRACE_BACKTRACE_FORCE_STATIC&lt;/code&gt; マクロを追加。Rasmus Thomsen氏によるバグ報告に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/116&#34; target=&#34;_blank&#34;&gt;GitHub #116&lt;/a&gt; &lt;code&gt;boost/stacktrace/stacktrace.hpp&lt;/code&gt; ヘッダのみをインクルードする際に、未解決の参照を回避するようにした。バグ報告をくれた Long Deng 氏に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/122&#34; target=&#34;_blank&#34;&gt;GitHub #122&lt;/a&gt; Windowsプラットフォームで &lt;code&gt;strlen&lt;/code&gt; を呼び出さないようにすることで、スタックトレースの表示を最適化。Alex Guteniev氏によるバグ報告に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34; id=&#34;stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const value_type&lt;/code&gt;を持つC++20より前のイテレータの2つの&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;な形式の&lt;code&gt;iterator_interface&lt;/code&gt;演算子を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;マクロ &lt;code&gt;BOOST_SYSTEM_DISABLE_THREADS&lt;/code&gt; を定義して、&lt;code&gt;&amp;lt;mutex&amp;gt;&lt;/code&gt; の使用を無効にできるようになった (例: シングルスレッドの libstdc++)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value_type&lt;/code&gt;, &lt;code&gt;error_type&lt;/code&gt;, &lt;code&gt;in_place_value&lt;/code&gt;, &lt;code&gt;in_place_error&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;emplace()&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;オープンアドレッシングに基づく高速なコンテナとして&lt;code&gt;boost::unordered_flat_map&lt;/code&gt;と&lt;code&gt;boost::unordered_flat_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;すべてのコンテナにCTAD推論ガイドを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cplusplus.github.io/LWG/issue2713&#34; target=&#34;_blank&#34;&gt;LWG issue 2713&lt;/a&gt;で規定された、不足していたコンストラクタを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant&#34; id=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/issues/101&#34; target=&#34;_blank&#34;&gt;GitHub #101&lt;/a&gt; ヘッダの再帰的なインクルードを回避。Nathan Sidwell氏のバグ報告に感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/96&#34; target=&#34;_blank&#34;&gt;GitHub #96&lt;/a&gt; 非推奨ヘッダの使用を削除。Michael Ford氏のPull Requestに感謝&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/variant/pull/98&#34; target=&#34;_blank&#34;&gt;GitHub #98&lt;/a&gt; C++23モードのClangでのコンパイルエラーを修正。Ed Catmur氏のPull Requestに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::json::value_from&lt;/code&gt;と&lt;code&gt;boost::json::value_to&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.81.0リリースノート -- 1.81.0 : Histogramを追加</title>
      <link href="https://boostjp.github.io/document/version/1_81_0.html"/>
      <id>eac95f785cd86034f72a056bbaad6c03382af664:document/version/1_81_0.md</id>
      <updated>2022-12-08T10:28:02+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.81.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_81_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_81_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/url&#34; target=&#34;_blank&#34;&gt;URL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11のみを使用してURLの解析、変更、表示をするライブラリ。機能として、高速なコンパイル、強い不変条件、およびメモリフレンドリーなアプローチによる厳密なコンプライアンスが含まれる (作者Vinnie Falco, Alan de Freitas)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34;&gt;Describe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beast::http::message_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;AsioでBeastのbufferを使用するための&lt;code&gt;buffer_ref&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;操作ごとのキャンセルをサポート&lt;/li&gt;
&lt;li&gt;C++20 awaitのサンプルコードを追加&lt;/li&gt;
&lt;li&gt;WebSocketのメッセージごとの圧縮オプション&lt;/li&gt;
&lt;li&gt;WebSocketのタイムアウトオプションのAPI&lt;/li&gt;
&lt;li&gt;multiple content lengthのエラー&lt;/li&gt;
&lt;li&gt;デフォルトの圧縮とrebindをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;の特殊化を削除し、常に&lt;code&gt;hash_value&lt;/code&gt;を呼び出すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_HASH_NO_EXTENSIONS&lt;/code&gt;のサポートを削除した。拡張は常に有効になる&lt;/li&gt;
&lt;li&gt;すべての標準コンテナをサポート。これには&lt;code&gt;std::forward_list&lt;/code&gt;、と非順序連想コンテナが含まれる&lt;/li&gt;
&lt;li&gt;ユーザー定義のコンテナ (イテレータを返す&lt;code&gt;begin()&lt;/code&gt; / &lt;code&gt;end()&lt;/code&gt; をもつ型) をサポート&lt;/li&gt;
&lt;li&gt;describedなstruct / class (&lt;code&gt;BOOST_DESCRIBE_STRUCT&lt;/code&gt;もしくは&lt;code&gt;BOOST_DESCRIBE_CLASS&lt;/code&gt;でアノテーションがつけられた型) をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash_combine&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;文字列ハッシュのパフォーマンス (および結果の品質) を改善。文字列の&lt;code&gt;boost::hash&lt;/code&gt;は64ビットモードでSMHasherに渡すようになった&lt;/li&gt;
&lt;li&gt;ドキュメントを、変更を反映するために大幅に改訂した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;empty_value&lt;/code&gt;メンバを&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flose_deleter&lt;/code&gt;を追加。このデリータは、&lt;code&gt;std::FILE&lt;/code&gt;へのポインタに対して&lt;code&gt;std::fclose()&lt;/code&gt;を呼び出す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/issues/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; &lt;code&gt;boost/core/bit.hpp&lt;/code&gt;のビット操作ユーティリティが、入力時に符号なし整数を明示的に要求するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bit_width&lt;/code&gt;が入力の値の型ではなく、intを返すようにした。これは&lt;a href=&#34;https://cplusplus.github.io/LWG/issue3656&#34; target=&#34;_blank&#34;&gt;LWG3656&lt;/a&gt;の解決に基づく&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34; id=&#34;describe&#34;&gt;Describe&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-pedantic&lt;/code&gt; オプションが使用されたときに &lt;code&gt;enumerators.hpp&lt;/code&gt;、&lt;code&gt;bases.hpp&lt;/code&gt;、および &lt;code&gt;members.hpp&lt;/code&gt; を含めることができるようにするために、&lt;code&gt;BOOST_DESCRIBE_ENUM&lt;/code&gt; の呼び出しは &lt;code&gt;modifiers.hpp&lt;/code&gt; から 別のヘッダー &lt;code&gt;modifier_description.hpp&lt;/code&gt; に移動した。 その結果、&lt;code&gt;modifiers.hpp&lt;/code&gt;には&lt;code&gt;enum.hpp&lt;/code&gt;が含まれなくなった。 この暗黙的なインクルードに依存しているコードは失敗する可能性があり、&lt;code&gt;enum.hpp&lt;/code&gt; をインクルードするように修正する必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;std::vector&amp;lt;char&amp;gt;&lt;/code&gt; や &lt;code&gt;std::list&amp;lt;wchar_t&amp;gt;&lt;/code&gt; などの文字のコンテナからの &lt;code&gt;path&lt;/code&gt; の構築、代入、および追加は、v3 で非推奨になり、v4で削除された。代わりに文字列型またはイテレータを使用すること&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;boost/filesystem/path_traits.hpp&lt;/code&gt; ヘッダは非推奨となり、将来のリリースで削除される予定。このヘッダには&lt;code&gt;path&lt;/code&gt;の実装の詳細が含まれており、ユーザーのコードでは使用すべきではない&lt;/li&gt;
&lt;li&gt;以前から非推奨だったAPIが、使用時にコンパイル警告を出力するようになった。これらの警告を抑制するために、ユーザーのコードをコンパイルする際は &lt;code&gt;BOOST_FILESYSTEM_ALLOW_DEPRECATED&lt;/code&gt; マクロを定義すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/250&#34; target=&#34;_blank&#34;&gt;GitHub #250&lt;/a&gt; &lt;code&gt;*at&lt;/code&gt; API をサポートしない POSIX システムでのインクルードの不足によるコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; Windows 10より前バージョンで&lt;code&gt;directory_iterator&lt;/code&gt;を構築する際に&lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;を生成するネットワーク共有ファイルシステムのワークアラウンドが追加された&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; Windowsで、パスが &lt;code&gt;&#34;\\\\?\\&#34;&lt;/code&gt; プレフィックスで始まる場合に &lt;code&gt;ERROR_INVALID_FUNCTION&lt;/code&gt; エラーコードで失敗する &lt;code&gt;weakly_canonical&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/208&#34; target=&#34;_blank&#34;&gt;GitHub #208&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; コンストラクタ、代入および追加操作で &lt;code&gt;std::string_view&lt;/code&gt;、&lt;code&gt;boost::string_view&lt;/code&gt; および &lt;code&gt;boost::container::string&lt;/code&gt; (およびそれぞれの &lt;code&gt;wchar_t&lt;/code&gt; 対応物) のサポートを追加&lt;/li&gt;
&lt;li&gt;イテレータのペアを使用する&lt;code&gt;path&lt;/code&gt;コンストラクタ、代入および追加操作が、サポートされているパス文字タイプのいずれでもない値型のイテレータを受け入れなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/255&#34; target=&#34;_blank&#34;&gt;GitHub #255&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; Windowsで、さまざまなマウントされたファイルシステムと 7.21 より前の Wine リリースとの &lt;code&gt;directory_iterator&lt;/code&gt; の互換性を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/262&#34; target=&#34;_blank&#34;&gt;GitHub #262&lt;/a&gt; Windows では、重複排除されたファイルが再解析ファイルではなく、通常のファイルとして報告されるようになりました&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/240&#34; target=&#34;_blank&#34;&gt;GitHub #240&lt;/a&gt; &lt;code&gt;fusion::identity_view&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;fusion::transform_view&lt;/code&gt;に連想シーケンスのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/237&#34; target=&#34;_blank&#34;&gt;GitHub #237&lt;/a&gt; 連想シーケンスで&lt;code&gt;fusion::reverse_view&lt;/code&gt;を使用した場合のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/261&#34; target=&#34;_blank&#34;&gt;GitHub #261&lt;/a&gt; Clang 13での&lt;code&gt;-Wdeprecated-copy&lt;/code&gt;警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/249&#34; target=&#34;_blank&#34;&gt;GitHub #249&lt;/a&gt; 依存関係の小さな再編成。Boost.Coreから&lt;code&gt;boost::ref&lt;/code&gt;と&lt;code&gt;boost::noncopyable&lt;/code&gt;が使用されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt; LinuxとMacOSでのclangとgccのCIテストを追加し、WindowsでのCIテストを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/issues/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/235&#34; target=&#34;_blank&#34;&gt;GitHub #235&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; ドキュメントの改善と誤字の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1048&#34; target=&#34;_blank&#34;&gt;GitHub #1048&lt;/a&gt; Index: IndexableGetterによって値でIndexableが返される場合のダングリング参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; Union: まれに1つのポリゴンが欠落している可能性があった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1081&#34; target=&#34;_blank&#34;&gt;GitHub #1081&lt;/a&gt; Union: 精度のために、内部のリングを見逃す可能性があった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1063&#34; target=&#34;_blank&#34;&gt;GitHub #1063&lt;/a&gt; Intersection: 単純な球面ポリゴンの交差のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1064&#34; target=&#34;_blank&#34;&gt;GitHub #1064&lt;/a&gt; Formulas: 測地線直接式 (geodesic direct formulas) の一貫性の問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1088&#34; target=&#34;_blank&#34;&gt;GitHub #1088&lt;/a&gt; Point: custom point typeのリグレッションを修正&lt;/li&gt;
&lt;li&gt;不足していたインクルードファイル、警告、C++20でのコンパイルエラー、ドキュメントに関するさまざまな修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#histogram&#34; id=&#34;histogram&#34;&gt;Histogram&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;bool値のサンプルを集積して真の割合を求め、またその分散と信頼区間 (confidence intervals) を計算する新たな &lt;code&gt;accumulator::fraction&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;fraction用の区間計算機を追加: &lt;code&gt;utility::clopper_pearson&lt;/code&gt;、&lt;code&gt;utility::wilson_interval&lt;/code&gt;、&lt;code&gt;utility::jeffreys_interval&lt;/code&gt;、&lt;code&gt;utility::wald_interval&lt;/code&gt;。これらは、任意の信頼水準 (confidence level) で区間を計算できる&lt;/li&gt;
&lt;li&gt;信頼レベルを確率として渡す&lt;code&gt;utility::confidence_level&lt;/code&gt;型、およびすべての区間計算機の標準偏差の倍数を渡す&lt;code&gt;utility::deviation&lt;/code&gt;型を追加&lt;/li&gt;
&lt;li&gt;内部的な型&lt;code&gt;sub_array&lt;/code&gt;とC++20の&lt;code&gt;span&lt;/code&gt;を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/pull/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;function_output_iterator&lt;/code&gt; は、代入された値のラップされた関数オブジェクトへの完全転送をサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; 別の &lt;code&gt;function_input_iterator&lt;/code&gt; の後置インクリメントの結果から &lt;code&gt;function_input_iterator&lt;/code&gt; を構築する際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade&lt;/code&gt; に基づくイテレータの後置インクリメントの戻り値型が、&lt;code&gt;operator-&amp;gt;&lt;/code&gt; をサポートするようになりました。 &lt;code&gt;(it++)-&amp;gt;foo&lt;/code&gt; は、以前にサポートされていた &lt;code&gt;(*it++).foo&lt;/code&gt; と等価&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;object::stable_erase&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parse&lt;/code&gt;に&lt;code&gt;std::istream&lt;/code&gt;のオーバーロードを追加、&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;に右辺値修飾のアクセッサを追加&lt;/li&gt;
&lt;li&gt;Conversion traitsを再設計&lt;/li&gt;
&lt;li&gt;describedなクラス、enum、&lt;code&gt;std::optional&lt;/code&gt;、&lt;code&gt;std::variant&lt;/code&gt;、null-likeな型 (&lt;code&gt;std::nullptr_t&lt;/code&gt;, &lt;code&gt;std::nullopt_t&lt;/code&gt;, &lt;code&gt;std::monotype&lt;/code&gt;を含む) の変換をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;からユーザー定義型への例外を投げない変換を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;いくつかの破壊的変更を含むメジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C++11 のサポートが必要になった。C++03 以前のサポートは廃止された&lt;/li&gt;
&lt;li&gt;一部のenumはenum classに変換された。名前の競合を回避する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt; と &lt;code&gt;-sICU_LINK&lt;/code&gt; を、Boost.RegEx で行われるように、きめの細かい設定オプションに置き換える&lt;/li&gt;
&lt;li&gt;libiconv の検出を修正し、一部のプラットフォームで Boost.Locale を (再び) ビルドできるようにしました。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; の使用とサポートを削除&lt;/li&gt;
&lt;li&gt;Windows で &lt;code&gt;wchar_t&lt;/code&gt; を使用して &lt;code&gt;codecvt&lt;/code&gt; が UTF-16 エンコーディングを想定・使用するようにした&lt;/li&gt;
&lt;li&gt;パフォーマンスを向上: &lt;code&gt;basic_format&lt;/code&gt;、&lt;code&gt;date_time&lt;/code&gt;、&lt;code&gt;hold_ptr&lt;/code&gt;をムーブ可能にし、フォーマットキャッシュの使用を修正&lt;/li&gt;
&lt;li&gt;Boost.Locale をより多くの ICU バージョンと互換性を持たせるようにした (特にテスト)&lt;/li&gt;
&lt;li&gt;一部のクラスの RTTI 定義を修正 (可視性の問題)&lt;/li&gt;
&lt;li&gt;一部の libc++ バージョンとの ICU バックエンドの互換性を修正&lt;/li&gt;
&lt;li&gt;一部の演算子の戻り値を修正して、const でない &lt;code&gt;*this&lt;/code&gt; を正しく返すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date_time&lt;/code&gt; の負のロールの int-overflow を修正&lt;/li&gt;
&lt;li&gt;ビルドログをきれいにする多くの警告を処理または抑制&lt;/li&gt;
&lt;li&gt;より多くの Windows コードページのサポートを追加&lt;/li&gt;
&lt;li&gt;ISO-2022-JP などの Windows コードページのサポートを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVCのテストがビルド失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34; id=&#34;stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const value_type&lt;/code&gt;を持つC++20より前のイテレータの2つの&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;な形式の&lt;code&gt;iterator_interface&lt;/code&gt;演算子を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;マクロ &lt;code&gt;BOOST_SYSTEM_DISABLE_THREADS&lt;/code&gt; を定義して、&lt;code&gt;&amp;lt;mutex&amp;gt;&lt;/code&gt; の使用を無効にできるようになった (例: シングルスレッドの libstdc++)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value_type&lt;/code&gt;, &lt;code&gt;error_type&lt;/code&gt;, &lt;code&gt;in_place_value&lt;/code&gt;, &lt;code&gt;in_place_error&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;emplace()&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;オープンアドレッシングに基づく高速なコンテナとして&lt;code&gt;boost::unordered_flat_map&lt;/code&gt;と&lt;code&gt;boost::unordered_flat_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;すべてのコンテナにCTAD推論ガイドを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cplusplus.github.io/LWG/issue2713&#34; target=&#34;_blank&#34;&gt;LWG issue 2713&lt;/a&gt;で規定された、不足していたコンストラクタを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::json::value_from&lt;/code&gt;と&lt;code&gt;boost::json::value_to&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.81.0リリースノート -- 1.81.0 : Filesystemの追加リリースノートと、PFRを追加</title>
      <link href="https://boostjp.github.io/document/version/1_81_0.html"/>
      <id>7bdef275d7f01ef5bea822a1df8dd0386c38cba6:document/version/1_81_0.md</id>
      <updated>2022-12-04T12:45:58+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.81.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_81_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_81_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/url&#34; target=&#34;_blank&#34;&gt;URL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11のみを使用してURLの解析、変更、表示をするライブラリ。機能として、高速なコンパイル、強い不変条件、およびメモリフレンドリーなアプローチによる厳密なコンプライアンスが含まれる (作者Vinnie Falco, Alan de Freitas)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34;&gt;Describe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#pfr&#34;&gt;PFR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beast::http::message_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;AsioでBeastのbufferを使用するための&lt;code&gt;buffer_ref&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;操作ごとのキャンセルをサポート&lt;/li&gt;
&lt;li&gt;C++20 awaitのサンプルコードを追加&lt;/li&gt;
&lt;li&gt;WebSocketのメッセージごとの圧縮オプション&lt;/li&gt;
&lt;li&gt;WebSocketのタイムアウトオプションのAPI&lt;/li&gt;
&lt;li&gt;multiple content lengthのエラー&lt;/li&gt;
&lt;li&gt;デフォルトの圧縮とrebindをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;の特殊化を削除し、常に&lt;code&gt;hash_value&lt;/code&gt;を呼び出すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_HASH_NO_EXTENSIONS&lt;/code&gt;のサポートを削除した。拡張は常に有効になる&lt;/li&gt;
&lt;li&gt;すべての標準コンテナをサポート。これには&lt;code&gt;std::forward_list&lt;/code&gt;、と非順序連想コンテナが含まれる&lt;/li&gt;
&lt;li&gt;ユーザー定義のコンテナ (イテレータを返す&lt;code&gt;begin()&lt;/code&gt; / &lt;code&gt;end()&lt;/code&gt; をもつ型) をサポート&lt;/li&gt;
&lt;li&gt;describedなstruct / class (&lt;code&gt;BOOST_DESCRIBE_STRUCT&lt;/code&gt;もしくは&lt;code&gt;BOOST_DESCRIBE_CLASS&lt;/code&gt;でアノテーションがつけられた型) をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash_combine&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;文字列ハッシュのパフォーマンス (および結果の品質) を改善。文字列の&lt;code&gt;boost::hash&lt;/code&gt;は64ビットモードでSMHasherに渡すようになった&lt;/li&gt;
&lt;li&gt;ドキュメントを、変更を反映するために大幅に改訂した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;empty_value&lt;/code&gt;メンバを&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flose_deleter&lt;/code&gt;を追加。このデリータは、&lt;code&gt;std::FILE&lt;/code&gt;へのポインタに対して&lt;code&gt;std::fclose()&lt;/code&gt;を呼び出す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/issues/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; &lt;code&gt;boost/core/bit.hpp&lt;/code&gt;のビット操作ユーティリティが、入力時に符号なし整数を明示的に要求するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bit_width&lt;/code&gt;が入力の値の型ではなく、intを返すようにした。これは&lt;a href=&#34;https://cplusplus.github.io/LWG/issue3656&#34; target=&#34;_blank&#34;&gt;LWG3656&lt;/a&gt;の解決に基づく&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34; id=&#34;describe&#34;&gt;Describe&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-pedantic&lt;/code&gt; オプションが使用されたときに &lt;code&gt;enumerators.hpp&lt;/code&gt;、&lt;code&gt;bases.hpp&lt;/code&gt;、および &lt;code&gt;members.hpp&lt;/code&gt; を含めることができるようにするために、&lt;code&gt;BOOST_DESCRIBE_ENUM&lt;/code&gt; の呼び出しは &lt;code&gt;modifiers.hpp&lt;/code&gt; から 別のヘッダー &lt;code&gt;modifier_description.hpp&lt;/code&gt; に移動した。 その結果、&lt;code&gt;modifiers.hpp&lt;/code&gt;には&lt;code&gt;enum.hpp&lt;/code&gt;が含まれなくなった。 この暗黙的なインクルードに依存しているコードは失敗する可能性があり、&lt;code&gt;enum.hpp&lt;/code&gt; をインクルードするように修正する必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;std::vector&amp;lt;char&amp;gt;&lt;/code&gt; や &lt;code&gt;std::list&amp;lt;wchar_t&amp;gt;&lt;/code&gt; などの文字のコンテナからの &lt;code&gt;path&lt;/code&gt; の構築、代入、および追加は、v3 で非推奨になり、v4で削除された。代わりに文字列型またはイテレータを使用すること&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;boost/filesystem/path_traits.hpp&lt;/code&gt; ヘッダは非推奨となり、将来のリリースで削除される予定。このヘッダには&lt;code&gt;path&lt;/code&gt;の実装の詳細が含まれており、ユーザーのコードでは使用すべきではない&lt;/li&gt;
&lt;li&gt;以前から非推奨だったAPIが、使用時にコンパイル警告を出力するようになった。これらの警告を抑制するために、ユーザーのコードをコンパイルする際は &lt;code&gt;BOOST_FILESYSTEM_ALLOW_DEPRECATED&lt;/code&gt; マクロを定義すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/250&#34; target=&#34;_blank&#34;&gt;GitHub #250&lt;/a&gt; &lt;code&gt;*at&lt;/code&gt; API をサポートしない POSIX システムでのインクルードの不足によるコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; Windows 10より前バージョンで&lt;code&gt;directory_iterator&lt;/code&gt;を構築する際に&lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;を生成するネットワーク共有ファイルシステムのワークアラウンドが追加された&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; Windowsで、パスが &lt;code&gt;&#34;\\\\?\\&#34;&lt;/code&gt; プレフィックスで始まる場合に &lt;code&gt;ERROR_INVALID_FUNCTION&lt;/code&gt; エラーコードで失敗する &lt;code&gt;weakly_canonical&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/208&#34; target=&#34;_blank&#34;&gt;GitHub #208&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; コンストラクタ、代入および追加操作で &lt;code&gt;std::string_view&lt;/code&gt;、&lt;code&gt;boost::string_view&lt;/code&gt; および &lt;code&gt;boost::container::string&lt;/code&gt; (およびそれぞれの &lt;code&gt;wchar_t&lt;/code&gt; 対応物) のサポートを追加&lt;/li&gt;
&lt;li&gt;イテレータのペアを使用する&lt;code&gt;path&lt;/code&gt;コンストラクタ、代入および追加操作が、サポートされているパス文字タイプのいずれでもない値型のイテレータを受け入れなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/255&#34; target=&#34;_blank&#34;&gt;GitHub #255&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/266&#34; target=&#34;_blank&#34;&gt;GitHub #266&lt;/a&gt; Windowsで、さまざまなマウントされたファイルシステムと 7.21 より前の Wine リリースとの &lt;code&gt;directory_iterator&lt;/code&gt; の互換性を改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/262&#34; target=&#34;_blank&#34;&gt;GitHub #262&lt;/a&gt; Windows では、重複排除されたファイルが再解析ファイルではなく、通常のファイルとして報告されるようになりました&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/240&#34; target=&#34;_blank&#34;&gt;GitHub #240&lt;/a&gt; &lt;code&gt;fusion::identity_view&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;fusion::transform_view&lt;/code&gt;に連想シーケンスのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/237&#34; target=&#34;_blank&#34;&gt;GitHub #237&lt;/a&gt; 連想シーケンスで&lt;code&gt;fusion::reverse_view&lt;/code&gt;を使用した場合のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/261&#34; target=&#34;_blank&#34;&gt;GitHub #261&lt;/a&gt; Clang 13での&lt;code&gt;-Wdeprecated-copy&lt;/code&gt;警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/249&#34; target=&#34;_blank&#34;&gt;GitHub #249&lt;/a&gt; 依存関係の小さな再編成。Boost.Coreから&lt;code&gt;boost::ref&lt;/code&gt;と&lt;code&gt;boost::noncopyable&lt;/code&gt;が使用されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt; LinuxとMacOSでのclangとgccのCIテストを追加し、WindowsでのCIテストを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/issues/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/235&#34; target=&#34;_blank&#34;&gt;GitHub #235&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; ドキュメントの改善と誤字の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1048&#34; target=&#34;_blank&#34;&gt;GitHub #1048&lt;/a&gt; Index: IndexableGetterによって値でIndexableが返される場合のダングリング参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; Union: まれに1つのポリゴンが欠落している可能性があった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1081&#34; target=&#34;_blank&#34;&gt;GitHub #1081&lt;/a&gt; Union: 精度のために、内部のリングを見逃す可能性があった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1063&#34; target=&#34;_blank&#34;&gt;GitHub #1063&lt;/a&gt; Intersection: 単純な球面ポリゴンの交差のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1064&#34; target=&#34;_blank&#34;&gt;GitHub #1064&lt;/a&gt; Formulas: 測地線直接式 (geodesic direct formulas) の一貫性の問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1088&#34; target=&#34;_blank&#34;&gt;GitHub #1088&lt;/a&gt; Point: custom point typeのリグレッションを修正&lt;/li&gt;
&lt;li&gt;不足していたインクルードファイル、警告、C++20でのコンパイルエラー、ドキュメントに関するさまざまな修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/pull/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;function_output_iterator&lt;/code&gt; は、代入された値のラップされた関数オブジェクトへの完全転送をサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; 別の &lt;code&gt;function_input_iterator&lt;/code&gt; の後置インクリメントの結果から &lt;code&gt;function_input_iterator&lt;/code&gt; を構築する際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade&lt;/code&gt; に基づくイテレータの後置インクリメントの戻り値型が、&lt;code&gt;operator-&amp;gt;&lt;/code&gt; をサポートするようになりました。 &lt;code&gt;(it++)-&amp;gt;foo&lt;/code&gt; は、以前にサポートされていた &lt;code&gt;(*it++).foo&lt;/code&gt; と等価&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;object::stable_erase&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parse&lt;/code&gt;に&lt;code&gt;std::istream&lt;/code&gt;のオーバーロードを追加、&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;に右辺値修飾のアクセッサを追加&lt;/li&gt;
&lt;li&gt;Conversion traitsを再設計&lt;/li&gt;
&lt;li&gt;describedなクラス、enum、&lt;code&gt;std::optional&lt;/code&gt;、&lt;code&gt;std::variant&lt;/code&gt;、null-likeな型 (&lt;code&gt;std::nullptr_t&lt;/code&gt;, &lt;code&gt;std::nullopt_t&lt;/code&gt;, &lt;code&gt;std::monotype&lt;/code&gt;を含む) の変換をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;からユーザー定義型への例外を投げない変換を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;いくつかの破壊的変更を含むメジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C++11 のサポートが必要になった。C++03 以前のサポートは廃止された&lt;/li&gt;
&lt;li&gt;一部のenumはenum classに変換された。名前の競合を回避する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt; と &lt;code&gt;-sICU_LINK&lt;/code&gt; を、Boost.RegEx で行われるように、きめの細かい設定オプションに置き換える&lt;/li&gt;
&lt;li&gt;libiconv の検出を修正し、一部のプラットフォームで Boost.Locale を (再び) ビルドできるようにしました。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; の使用とサポートを削除&lt;/li&gt;
&lt;li&gt;Windows で &lt;code&gt;wchar_t&lt;/code&gt; を使用して &lt;code&gt;codecvt&lt;/code&gt; が UTF-16 エンコーディングを想定・使用するようにした&lt;/li&gt;
&lt;li&gt;パフォーマンスを向上: &lt;code&gt;basic_format&lt;/code&gt;、&lt;code&gt;date_time&lt;/code&gt;、&lt;code&gt;hold_ptr&lt;/code&gt;をムーブ可能にし、フォーマットキャッシュの使用を修正&lt;/li&gt;
&lt;li&gt;Boost.Locale をより多くの ICU バージョンと互換性を持たせるようにした (特にテスト)&lt;/li&gt;
&lt;li&gt;一部のクラスの RTTI 定義を修正 (可視性の問題)&lt;/li&gt;
&lt;li&gt;一部の libc++ バージョンとの ICU バックエンドの互換性を修正&lt;/li&gt;
&lt;li&gt;一部の演算子の戻り値を修正して、const でない &lt;code&gt;*this&lt;/code&gt; を正しく返すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date_time&lt;/code&gt; の負のロールの int-overflow を修正&lt;/li&gt;
&lt;li&gt;ビルドログをきれいにする多くの警告を処理または抑制&lt;/li&gt;
&lt;li&gt;より多くの Windows コードページのサポートを追加&lt;/li&gt;
&lt;li&gt;ISO-2022-JP などの Windows コードページのサポートを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVCのテストがビルド失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#pfr&#34; id=&#34;pfr&#34;&gt;PFR&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34; id=&#34;stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const value_type&lt;/code&gt;を持つC++20より前のイテレータの2つの&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;な形式の&lt;code&gt;iterator_interface&lt;/code&gt;演算子を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;マクロ &lt;code&gt;BOOST_SYSTEM_DISABLE_THREADS&lt;/code&gt; を定義して、&lt;code&gt;&amp;lt;mutex&amp;gt;&lt;/code&gt; の使用を無効にできるようになった (例: シングルスレッドの libstdc++)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value_type&lt;/code&gt;, &lt;code&gt;error_type&lt;/code&gt;, &lt;code&gt;in_place_value&lt;/code&gt;, &lt;code&gt;in_place_error&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;emplace()&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;オープンアドレッシングに基づく高速なコンテナとして&lt;code&gt;boost::unordered_flat_map&lt;/code&gt;と&lt;code&gt;boost::unordered_flat_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;すべてのコンテナにCTAD推論ガイドを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cplusplus.github.io/LWG/issue2713&#34; target=&#34;_blank&#34;&gt;LWG issue 2713&lt;/a&gt;で規定された、不足していたコンストラクタを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::json::value_from&lt;/code&gt;と&lt;code&gt;boost::json::value_to&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.81.0リリースノート -- 1.81.0 : Core, Filesystem, Geometry, Iterator, STLInterfacesを追加</title>
      <link href="https://boostjp.github.io/document/version/1_81_0.html"/>
      <id>b387488c8b3bb45e9e4603d9f36548b13e278d06:document/version/1_81_0.md</id>
      <updated>2022-12-02T15:01:31+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.81.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_81_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_81_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_81_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boost.org/libs/url&#34; target=&#34;_blank&#34;&gt;URL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++11のみを使用してURLの解析、変更、表示をするライブラリ。機能として、高速なコンパイル、強い不変条件、およびメモリフレンドリーなアプローチによる厳密なコンプライアンスが含まれる (作者Vinnie Falco, Alan de Freitas)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34;&gt;Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34;&gt;Describe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#beast&#34; id=&#34;beast&#34;&gt;Beast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beast::http::message_generator&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;AsioでBeastのbufferを使用するための&lt;code&gt;buffer_ref&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;操作ごとのキャンセルをサポート&lt;/li&gt;
&lt;li&gt;C++20 awaitのサンプルコードを追加&lt;/li&gt;
&lt;li&gt;WebSocketのメッセージごとの圧縮オプション&lt;/li&gt;
&lt;li&gt;WebSocketのタイムアウトオプションのAPI&lt;/li&gt;
&lt;li&gt;multiple content lengthのエラー&lt;/li&gt;
&lt;li&gt;デフォルトの圧縮とrebindをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#container-hash&#34; id=&#34;container-hash&#34;&gt;Container Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::hash&lt;/code&gt;の特殊化を削除し、常に&lt;code&gt;hash_value&lt;/code&gt;を呼び出すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_HASH_NO_EXTENSIONS&lt;/code&gt;のサポートを削除した。拡張は常に有効になる&lt;/li&gt;
&lt;li&gt;すべての標準コンテナをサポート。これには&lt;code&gt;std::forward_list&lt;/code&gt;、と非順序連想コンテナが含まれる&lt;/li&gt;
&lt;li&gt;ユーザー定義のコンテナ (イテレータを返す&lt;code&gt;begin()&lt;/code&gt; / &lt;code&gt;end()&lt;/code&gt; をもつ型) をサポート&lt;/li&gt;
&lt;li&gt;describedなstruct / class (&lt;code&gt;BOOST_DESCRIBE_STRUCT&lt;/code&gt;もしくは&lt;code&gt;BOOST_DESCRIBE_CLASS&lt;/code&gt;でアノテーションがつけられた型) をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash_combine&lt;/code&gt;を改善&lt;/li&gt;
&lt;li&gt;文字列ハッシュのパフォーマンス (および結果の品質) を改善。文字列の&lt;code&gt;boost::hash&lt;/code&gt;は64ビットモードでSMHasherに渡すようになった&lt;/li&gt;
&lt;li&gt;ドキュメントを、変更を反映するために大幅に改訂した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#core&#34; id=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;empty_value&lt;/code&gt;メンバを&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flose_deleter&lt;/code&gt;を追加。このデリータは、&lt;code&gt;std::FILE&lt;/code&gt;へのポインタに対して&lt;code&gt;std::fclose()&lt;/code&gt;を呼び出す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/core/issues/129&#34; target=&#34;_blank&#34;&gt;GitHub #129&lt;/a&gt; &lt;code&gt;boost/core/bit.hpp&lt;/code&gt;のビット操作ユーティリティが、入力時に符号なし整数を明示的に要求するようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bit_width&lt;/code&gt;が入力の値の型ではなく、intを返すようにした。これは&lt;a href=&#34;https://cplusplus.github.io/LWG/issue3656&#34; target=&#34;_blank&#34;&gt;LWG3656&lt;/a&gt;の解決に基づく&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#describe&#34; id=&#34;describe&#34;&gt;Describe&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-pedantic&lt;/code&gt; オプションが使用されたときに &lt;code&gt;enumerators.hpp&lt;/code&gt;、&lt;code&gt;bases.hpp&lt;/code&gt;、および &lt;code&gt;members.hpp&lt;/code&gt; を含めることができるようにするために、&lt;code&gt;BOOST_DESCRIBE_ENUM&lt;/code&gt; の呼び出しは &lt;code&gt;modifiers.hpp&lt;/code&gt; から 別のヘッダー &lt;code&gt;modifier_description.hpp&lt;/code&gt; に移動した。 その結果、&lt;code&gt;modifiers.hpp&lt;/code&gt;には&lt;code&gt;enum.hpp&lt;/code&gt;が含まれなくなった。 この暗黙的なインクルードに依存しているコードは失敗する可能性があり、&lt;code&gt;enum.hpp&lt;/code&gt; をインクルードするように修正する必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#filesystem&#34; id=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;std::vector&amp;lt;char&amp;gt;&lt;/code&gt; や &lt;code&gt;std::list&amp;lt;wchar_t&amp;gt;&lt;/code&gt; などの文字のコンテナからの &lt;code&gt;path&lt;/code&gt; の構築、代入、および追加は、v3 で非推奨になり、v4で削除された。代わりに文字列型またはイテレータを使用すること&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;非推奨&lt;/strong&gt;] &lt;code&gt;boost/filesystem/path_traits.hpp&lt;/code&gt; ヘッダは非推奨となり、将来のリリースで削除される予定。このヘッダには&lt;code&gt;path&lt;/code&gt;の実装の詳細が含まれており、ユーザーのコードでは使用すべきではない&lt;/li&gt;
&lt;li&gt;以前から非推奨だったAPIが、使用時にコンパイル警告を出力するようになった。これらの警告を抑制するために、ユーザーのコードをコンパイルする際は &lt;code&gt;BOOST_FILESYSTEM_ALLOW_DEPRECATED&lt;/code&gt; マクロを定義すること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/250&#34; target=&#34;_blank&#34;&gt;GitHub #250&lt;/a&gt; &lt;code&gt;*at&lt;/code&gt; API をサポートしない POSIX システムでのインクルードの不足によるコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/246&#34; target=&#34;_blank&#34;&gt;GitHub #246&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/filesystem/issues/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt; Windows 10より前バージョンで&lt;code&gt;directory_iterator&lt;/code&gt;を構築する際に&lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;を生成するネットワーク共有ファイルシステムのワークアラウンドが追加された&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/247&#34; target=&#34;_blank&#34;&gt;GitHub #247&lt;/a&gt; Windowsで、パスが &lt;code&gt;&#34;\\\\?\\&#34;&lt;/code&gt; プレフィックスで始まる場合に &lt;code&gt;ERROR_INVALID_FUNCTION&lt;/code&gt; エラーコードで失敗する &lt;code&gt;weakly_canonical&lt;/code&gt; を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/filesystem/issues/208&#34; target=&#34;_blank&#34;&gt;GitHub #208&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; コンストラクタ、代入および追加操作で &lt;code&gt;std::string_view&lt;/code&gt;、&lt;code&gt;boost::string_view&lt;/code&gt; および &lt;code&gt;boost::container::string&lt;/code&gt; (およびそれぞれの &lt;code&gt;wchar_t&lt;/code&gt; 対応物) のサポートを追加&lt;/li&gt;
&lt;li&gt;イテレータのペアを使用する&lt;code&gt;path&lt;/code&gt;コンストラクタ、代入および追加操作が、サポートされているパス文字タイプのいずれでもない値型のイテレータを受け入れなくなった&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#flyweight&#34; id=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#fusion&#34; id=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/240&#34; target=&#34;_blank&#34;&gt;GitHub #240&lt;/a&gt; &lt;code&gt;fusion::identity_view&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/239&#34; target=&#34;_blank&#34;&gt;GitHub #239&lt;/a&gt; &lt;code&gt;fusion::transform_view&lt;/code&gt;に連想シーケンスのサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/237&#34; target=&#34;_blank&#34;&gt;GitHub #237&lt;/a&gt; 連想シーケンスで&lt;code&gt;fusion::reverse_view&lt;/code&gt;を使用した場合のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/261&#34; target=&#34;_blank&#34;&gt;GitHub #261&lt;/a&gt; Clang 13での&lt;code&gt;-Wdeprecated-copy&lt;/code&gt;警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/249&#34; target=&#34;_blank&#34;&gt;GitHub #249&lt;/a&gt; 依存関係の小さな再編成。Boost.Coreから&lt;code&gt;boost::ref&lt;/code&gt;と&lt;code&gt;boost::noncopyable&lt;/code&gt;が使用されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/245&#34; target=&#34;_blank&#34;&gt;GitHub #245&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/236&#34; target=&#34;_blank&#34;&gt;GitHub #236&lt;/a&gt; LinuxとMacOSでのclangとgccのCIテストを追加し、WindowsでのCIテストを修正した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/issues/234&#34; target=&#34;_blank&#34;&gt;GitHub #234&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/235&#34; target=&#34;_blank&#34;&gt;GitHub #235&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/238&#34; target=&#34;_blank&#34;&gt;GitHub #238&lt;/a&gt; ドキュメントの改善と誤字の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#geometry&#34; id=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解決したissue&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1048&#34; target=&#34;_blank&#34;&gt;GitHub #1048&lt;/a&gt; Index: IndexableGetterによって値でIndexableが返される場合のダングリング参照を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1076&#34; target=&#34;_blank&#34;&gt;GitHub #1076&lt;/a&gt; Union: まれに1つのポリゴンが欠落している可能性があった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1081&#34; target=&#34;_blank&#34;&gt;GitHub #1081&lt;/a&gt; Union: 精度のために、内部のリングを見逃す可能性があった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1063&#34; target=&#34;_blank&#34;&gt;GitHub #1063&lt;/a&gt; Intersection: 単純な球面ポリゴンの交差のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1064&#34; target=&#34;_blank&#34;&gt;GitHub #1064&lt;/a&gt; Formulas: 測地線直接式 (geodesic direct formulas) の一貫性の問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/geometry/issues/1088&#34; target=&#34;_blank&#34;&gt;GitHub #1088&lt;/a&gt; Point: custom point typeのリグレッションを修正&lt;/li&gt;
&lt;li&gt;不足していたインクルードファイル、警告、C++20でのコンパイルエラー、ドキュメントに関するさまざまな修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#iterator&#34; id=&#34;iterator&#34;&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/pull/73&#34; target=&#34;_blank&#34;&gt;GitHub #73&lt;/a&gt; &lt;code&gt;function_output_iterator&lt;/code&gt; は、代入された値のラップされた関数オブジェクトへの完全転送をサポートするようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/iterator/issues/75&#34; target=&#34;_blank&#34;&gt;GitHub #75&lt;/a&gt; 別の &lt;code&gt;function_input_iterator&lt;/code&gt; の後置インクリメントの結果から &lt;code&gt;function_input_iterator&lt;/code&gt; を構築する際のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterator_facade&lt;/code&gt; に基づくイテレータの後置インクリメントの戻り値型が、&lt;code&gt;operator-&amp;gt;&lt;/code&gt; をサポートするようになりました。 &lt;code&gt;(it++)-&amp;gt;foo&lt;/code&gt; は、以前にサポートされていた &lt;code&gt;(*it++).foo&lt;/code&gt; と等価&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#json&#34; id=&#34;json&#34;&gt;JSON&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;object::stable_erase&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parse&lt;/code&gt;に&lt;code&gt;std::istream&lt;/code&gt;のオーバーロードを追加、&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value&lt;/code&gt;のオーバーロードを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;に右辺値修飾のアクセッサを追加&lt;/li&gt;
&lt;li&gt;Conversion traitsを再設計&lt;/li&gt;
&lt;li&gt;describedなクラス、enum、&lt;code&gt;std::optional&lt;/code&gt;、&lt;code&gt;std::variant&lt;/code&gt;、null-likeな型 (&lt;code&gt;std::nullptr_t&lt;/code&gt;, &lt;code&gt;std::nullopt_t&lt;/code&gt;, &lt;code&gt;std::monotype&lt;/code&gt;を含む) の変換をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;からユーザー定義型への例外を投げない変換を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#locale&#34; id=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;いくつかの破壊的変更を含むメジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C++11 のサポートが必要になった。C++03 以前のサポートは廃止された&lt;/li&gt;
&lt;li&gt;一部のenumはenum classに変換された。名前の競合を回避する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sICU_LINK_LOCALE&lt;/code&gt; と &lt;code&gt;-sICU_LINK&lt;/code&gt; を、Boost.RegEx で行われるように、きめの細かい設定オプションに置き換える&lt;/li&gt;
&lt;li&gt;libiconv の検出を修正し、一部のプラットフォームで Boost.Locale を (再び) ビルドできるようにしました。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt; の使用とサポートを削除&lt;/li&gt;
&lt;li&gt;Windows で &lt;code&gt;wchar_t&lt;/code&gt; を使用して &lt;code&gt;codecvt&lt;/code&gt; が UTF-16 エンコーディングを想定・使用するようにした&lt;/li&gt;
&lt;li&gt;パフォーマンスを向上: &lt;code&gt;basic_format&lt;/code&gt;、&lt;code&gt;date_time&lt;/code&gt;、&lt;code&gt;hold_ptr&lt;/code&gt;をムーブ可能にし、フォーマットキャッシュの使用を修正&lt;/li&gt;
&lt;li&gt;Boost.Locale をより多くの ICU バージョンと互換性を持たせるようにした (特にテスト)&lt;/li&gt;
&lt;li&gt;一部のクラスの RTTI 定義を修正 (可視性の問題)&lt;/li&gt;
&lt;li&gt;一部の libc++ バージョンとの ICU バックエンドの互換性を修正&lt;/li&gt;
&lt;li&gt;一部の演算子の戻り値を修正して、const でない &lt;code&gt;*this&lt;/code&gt; を正しく返すようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date_time&lt;/code&gt; の負のロールの int-overflow を修正&lt;/li&gt;
&lt;li&gt;ビルドログをきれいにする多くの警告を処理または抑制&lt;/li&gt;
&lt;li&gt;より多くの Windows コードページのサポートを追加&lt;/li&gt;
&lt;li&gt;ISO-2022-JP などの Windows コードページのサポートを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#multi-index&#34; id=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス作業&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#nowide&#34; id=&#34;nowide&#34;&gt;Nowide&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVCのテストがビルド失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#stl-interfaces&#34; id=&#34;stl-interfaces&#34;&gt;STLInterfaces&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const value_type&lt;/code&gt;を持つC++20より前のイテレータの2つの&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;な形式の&lt;code&gt;iterator_interface&lt;/code&gt;演算子を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#system&#34; id=&#34;system&#34;&gt;System&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;マクロ &lt;code&gt;BOOST_SYSTEM_DISABLE_THREADS&lt;/code&gt; を定義して、&lt;code&gt;&amp;lt;mutex&amp;gt;&lt;/code&gt; の使用を無効にできるようになった (例: シングルスレッドの libstdc++)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;value_type&lt;/code&gt;, &lt;code&gt;error_type&lt;/code&gt;, &lt;code&gt;in_place_value&lt;/code&gt;, &lt;code&gt;in_place_error&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result&amp;lt;&amp;gt;&lt;/code&gt;に&lt;code&gt;emplace()&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#unordered&#34; id=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;メジャーアップデート&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;オープンアドレッシングに基づく高速なコンテナとして&lt;code&gt;boost::unordered_flat_map&lt;/code&gt;と&lt;code&gt;boost::unordered_flat_set&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;すべてのコンテナにCTAD推論ガイドを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cplusplus.github.io/LWG/issue2713&#34; target=&#34;_blank&#34;&gt;LWG issue 2713&lt;/a&gt;で規定された、不足していたコンストラクタを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_81_0.html#variant2&#34; id=&#34;variant2&#34;&gt;Variant2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::json::value_from&lt;/code&gt;と&lt;code&gt;boost::json::value_to&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.6.3, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.7.3, 4.8.5, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12&lt;/li&gt;
&lt;li&gt;GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++17: 11.0.3&lt;/li&gt;
&lt;li&gt;Apple Clang, C++20: 11.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>