<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2017-04-05T23:03:26.840491</updated>
  <id>bed45369-3591-4e04-814b-b3428a3fed2a</id>

  
    <entry>
      <title>Boost 1.64.0リリースノート -- 1.64.0リリースノート: processを追加, close #152</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>5fa4ee22e2bcd4d4866f9decdba8af7c16b0e944:document/version/1_64_0.md</id>
      <updated>2017-04-01 13:13:56 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/process&#34; target=&#34;_blank&#34;&gt;Process&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Klemens D. MorgensternによるProcessライブラリは、以下のようなことをクロスプラットフォームに提供する&lt;ul&gt;
&lt;li&gt;子プロセスの生成&lt;/li&gt;
&lt;li&gt;子プロセスのためのストリーム生成&lt;/li&gt;
&lt;li&gt;ストリームを通じての子プロセスとの通信（同期、もしくは非同期に）&lt;/li&gt;
&lt;li&gt;子プロセスの終了を待機（同期、もしくは非同期に）&lt;/li&gt;
&lt;li&gt;子プロセスの終了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;既知の問題&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/klemens-morgenstern/boost-process/issues/67&#34; target=&#34;_blank&#34;&gt;GitHub #67&lt;/a&gt; &lt;code&gt;group.wait()&lt;/code&gt;が処理を返さない&lt;ul&gt;
&lt;li&gt;訳者註: 実際に問題が発生しているのはWindows環境でのみとされている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロ&lt;code&gt;BOOST_NO_CXX11_SFINAE_EXPR&lt;/code&gt;を追加。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_SFINAE_EXPR&lt;/code&gt;は以前からあったが、&lt;code&gt;CXX11&lt;/code&gt;が名前に含まれたマクロがなかった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12749&#34; target=&#34;_blank&#34;&gt;Trac #12749&lt;/a&gt; &lt;code&gt;container::pmr::polymorphic_allocator&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11333&#34; target=&#34;_blank&#34;&gt;Trac #11333&lt;/a&gt; &lt;code&gt;boost::container::basic_string&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;を相互運用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;emplace_back&lt;/code&gt;は&lt;code&gt;*end()&lt;/code&gt;ではなく&lt;code&gt;back()&lt;/code&gt;を返すべき&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいAPIとして&lt;code&gt;call/cc&lt;/code&gt;を実装した&lt;ul&gt;
&lt;li&gt;訳者註: いわゆるSchemeなどに代表されるCall with Current Continuationのことである&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;execution-context&lt;/code&gt;が(v1,v2ともに)廃止予定となった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12719&#34; target=&#34;_blank&#34;&gt;#12719&lt;/a&gt; &lt;code&gt;mingw-w64&lt;/code&gt;でセグメンテーションフォルトする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/38&#34; target=&#34;_blank&#34;&gt;#38&lt;/a&gt; macOSで&lt;code&gt;context_entry()&lt;/code&gt;がクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/39&#34; target=&#34;_blank&#34;&gt;#39&lt;/a&gt; Clang 3.8でサポートされない&lt;code&gt;.cpu&lt;/code&gt;ディレクティブがAArch64で使われていたことによってビルド出来なかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11の&lt;code&gt;constexpr&lt;/code&gt;とC++11のSFINAE式を実装したコンパイラにおいて、&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した (Glen Fernandes氏に感謝)
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した (Bjorn Reese氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/4&#34; target=&#34;_blank&#34;&gt;#4&lt;/a&gt; &lt;code&gt;coroutine2&amp;lt;&amp;gt;&lt;/code&gt;が&lt;code&gt;std::bind&lt;/code&gt;を受け取れなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows CEでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;ポインタからシンボルの位置を取得する&lt;code&gt;boost:dll::symbol_location_ptr&lt;/code&gt;関数を追加。(たとえば&lt;code&gt;void*&lt;/code&gt;からの)間接参照ではシンボル位置を取得できなかった&lt;/li&gt;
&lt;li&gt;メンバポインタに対する&lt;code&gt;detail::aggressive_ptr_cast&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;実験的なスマートインポートでのリークを修正&lt;/li&gt;
&lt;li&gt;警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/100&#34; target=&#34;_blank&#34;&gt;#100&lt;/a&gt; ASIO: &lt;code&gt;notify&lt;/code&gt;での処理が足りないことで他のファイバーが実行されなくなる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/106&#34; target=&#34;_blank&#34;&gt;#106&lt;/a&gt; &lt;code&gt;fixed_stack&lt;/code&gt;アロケータを&lt;code&gt;async&lt;/code&gt;や&lt;code&gt;packaged_task&lt;/code&gt;に渡すことが出来なかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/111&#34; target=&#34;_blank&#34;&gt;#111&lt;/a&gt; &lt;code&gt;buffered_channel::try_value_pop()&lt;/code&gt;の内部で無限ループする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(un)bounded_channel&amp;lt;&amp;gt;&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual C++の新しいバージョンで削除された関数オブジェクトを使用するのをやめた。(C++11で非推奨化され、C++17で削除されることになった&lt;code&gt;std::unary_function&lt;/code&gt;と&lt;code&gt;std::binary_function&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12617&#34; target=&#34;_blank&#34;&gt;Trac #12617&lt;/a&gt; OS X 10.11での&lt;code&gt;clock_gettime&lt;/code&gt;がないというコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12744&#34; target=&#34;_blank&#34;&gt;Trac #12744&lt;/a&gt; Windowsにおいて、&lt;code&gt;boost::interprocess::ipcdetail::spin_wait&lt;/code&gt;内で&lt;code&gt;winapi::set_timer_resolution&lt;/code&gt;が使われていたために、おかしな分解能の変換が行われていた。&lt;code&gt;winapi::query_timer_resolution&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub Pull #32&lt;/a&gt; &lt;code&gt;std::pointer_traits&lt;/code&gt;の要件に準拠するよう修正。C++11以降の環境では、&lt;code&gt;offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;::other&lt;/code&gt;ではなく&lt;code&gt;offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;&lt;/code&gt;で型をとれるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/33&#34; target=&#34;_blank&#34;&gt;GitHub Pull #33&lt;/a&gt; 64/32ビットプロセス間の共有において、基本クラスの&lt;code&gt;offset_ptr&lt;/code&gt;から派生クラスの&lt;code&gt;offset_ptr&lt;/code&gt;に正しく変換できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/34&#34; target=&#34;_blank&#34;&gt;GitHub Pull #34&lt;/a&gt; サンプルコードで&lt;code&gt;BOOST_MULTI_INDEX_MEMBER&lt;/code&gt;の代わりに&lt;code&gt;multi_index::member&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub Pull #35&lt;/a&gt; クロスコンパイルのオプションを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windowsシステムからの新たな実験的オプション&lt;code&gt;BOOST_INTERPROCESS_BOOTSTAMP_IS_SESSION_MANAGER_BASED&lt;/code&gt;を追加。このオプションは、セッションマネージャに関連付けられたレジストリの値から、共有メモリが置かれるフォルダ名として使用される一意なブートスタンプに由来する。このオプションはVista以降で動作し、デフォルトバージョンはこれ以降の安定バージョンとなるだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12745&#34; target=&#34;_blank&#34;&gt;Trac #12745&lt;/a&gt; &lt;code&gt;key_nodeptr_comp&lt;/code&gt;のキー型が&lt;code&gt;void*&lt;/code&gt;のときコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12761&#34; target=&#34;_blank&#34;&gt;Trac #12761&lt;/a&gt; &lt;code&gt;intrusive::set::swap&lt;/code&gt;で(状態を持つ)比較関数が入れ替わらない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel C/C++コンパイラのバージョン仕様を修正&lt;/li&gt;
&lt;li&gt;Boostの有効なバージョン番号から各要素を取り出すためのマクロ&lt;code&gt;BOOST_VERSION_NUMBER_MAJOR&lt;/code&gt;、&lt;code&gt;BOOST_VERSION_NUMBER_MINOR&lt;/code&gt;、&lt;code&gt;BOOST_VERSION_NUMBER_PATCH&lt;/code&gt;を追加。それぞれ、Boostのメジャーバージョン、マイナーバージョン、パッチバージョンを取得できる&lt;/li&gt;
&lt;li&gt;Visual Studioバージョンの番号付けを変更。VS2015以降は、多様なプロダクトバージョンの代わりに、コンパイラバージョンを使用するようにした &lt;a href=&#34;https://github.com/boostorg/predef/commit/0d56819d68e7bf5f411cd6240136657ebd47f672&#34; target=&#34;_blank&#34;&gt;commit 0d56819&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; 値の&lt;code&gt;boost::optional&lt;/code&gt;への書き込みをサポートした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;allocate_shared&lt;/code&gt;と&lt;code&gt;make_shared&lt;/code&gt;の配列版を、より最適でメンテナンスしやすい実装に書き直した (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;li&gt;ポインタをキャストする関数のムーブ版を追加 (Chris Glover氏に感謝)&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0390r0.htm&#34; target=&#34;_blank&#34;&gt;P0390R0 A Proposal to Add Pointer Cast Functions with Move Semantics to the Standard Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.5&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新機能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ユーザー定義型をロギングするカスタマイゼーションポイントを提供するようにした。そのためには、型と同じ名前空間で、以下の関数を定義する：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost_test_print_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ostr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArgumentType&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JUnitの出力フォーマットが&lt;code&gt;/log-level/&lt;/code&gt;を持つようにした&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;JUnitの出力フォーマットは、テストモジュールが多くのチェックを持つ場合、良いパフォーマンスはでません&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バグ修正&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/107&#34; target=&#34;_blank&#34;&gt;GitHub #107&lt;/a&gt; &lt;code&gt;throw_exception&lt;/code&gt;関数内で使用する例外無効指定の検出をするマクロのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/108&#34; target=&#34;_blank&#34;&gt;GitHub #108&lt;/a&gt; &lt;code&gt;runtime_config&lt;/code&gt;の文字列定数の命名規則を、大文字アンダースコア区切りから、小文字アンダースコア区切りに修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11756&#34; target=&#34;_blank&#34;&gt;Trac #11756&lt;/a&gt; &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;標準ヘッダがない環境で、&lt;code&gt;FE_*&lt;/code&gt;系マクロを使用したコードのコンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12540&#34; target=&#34;_blank&#34;&gt;Trac #12540&lt;/a&gt; ユーザー定義型をロギングするカスタマイゼーションポイントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12712&#34; target=&#34;_blank&#34;&gt;Trac #12712&lt;/a&gt; 同じ名前を持つテストケースで競合が発生していたため、&lt;code&gt;BOOST_AUTO_TEST_SUITE&lt;/code&gt;でのユニークな名前の生成に、&lt;code&gt;__COUNTER__&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12748&#34; target=&#34;_blank&#34;&gt;Trac #12748&lt;/a&gt; &lt;code&gt;VERSION&lt;/code&gt;という名前の変数を定義していたことにより発生していたコンパイルエラーを修正。小文字の変数にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12778&#34; target=&#34;_blank&#34;&gt;Trac #12778&lt;/a&gt; &lt;code&gt;nullptr&lt;/code&gt;をサポートした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17のメンバ関数サポートを開始した：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_map&lt;/code&gt;に&lt;code&gt;insert_or_assign&lt;/code&gt;と&lt;code&gt;try_emplace&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;全てのコンテナに&lt;code&gt;merge&lt;/code&gt;と&lt;code&gt;extract&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Kohei Takahashi</name>
        <email>flast@flast.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.55.0 リリースノート -- fenced code block のインデントを、CommonMarkの仕様に合わせた</title>
      <link href="https://boostjp.github.io/document/version/1_55_0.html"/>
      <id>040974f4ee993d11e233b07374fda5cffd5257c2:document/version/1_55_0.md</id>
      <updated>2017-03-29 13:42:28 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.55.0 リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/svn/boost/website/public_html/live/feed/history/boost_1_55_0.qbk&#34; target=&#34;_blank&#34;&gt;https://svn.boost.org/svn/boost/website/public_html/live/feed/history/boost_1_55_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_55_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_55_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Predef&lt;ul&gt;
&lt;li&gt;Rene Rivera氏作のこのライブラリには、C、C++、Objective C、Objective C++で提供されているマクロや、それらに存在するヘッダ内で定義されているマクロをまとめた情報をもとに、コンパイラやアーキテクチャ、OS、ライブラリ、その他のヴァージョン番号がひととおり定義されている。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#accumulators&#34;&gt;Accumulators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#circular-buffer&#34;&gt;Circular Buffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#geometry&#34;&gt;Geometory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#msm&#34;&gt;Meta State Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#multi-index&#34;&gt;Multi-index Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#mpi&#34;&gt;MPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#polygon&#34;&gt;Polygon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#property-map&#34;&gt;PropertyMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#rational&#34;&gt;Rational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#smart-pointer&#34;&gt;SmartPtr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#thread&#34;&gt;Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#timer&#34;&gt;Timer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#wave&#34;&gt;Wave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#xpressive&#34;&gt;Xpressive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ツール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Quickbook(#quickbook)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ニュース&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;本バージョンよりいくつかの古いコンパイラのサポートが終了した&lt;/li&gt;
&lt;li&gt;新しくサポートされる最低環境は以下の通り。なお他のコンパイラに変更はない&lt;ul&gt;
&lt;li&gt;Digitial Mars 8.41&lt;/li&gt;
&lt;li&gt;GCC 3.3&lt;/li&gt;
&lt;li&gt;Intel 6.0&lt;/li&gt;
&lt;li&gt;Visual C++ 7.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;なお、更に以下のコンパイラのサポートを終了することも考えている。もし使用しているのであればメーリングリストで知らせてほしい&lt;ul&gt;
&lt;li&gt;Metrowoks C++ (ie. codewarrior)&lt;/li&gt;
&lt;li&gt;SunPro 5.3 またはそれ以前&lt;/li&gt;
&lt;li&gt;Borland C++ Builder 2006 (bcc 5.82) またはそれ以前&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Visual Studio 2013／Visual C++ 12.0での既知の問題&lt;/h2&gt;
&lt;p&gt;Visual Studio 2013がリリースされた時期が、Boostのリリースプロセスの遅い段階であったため、いくつかの未解決問題が存在する。これは以下の通り：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serializationがコンパイルできない。&lt;code&gt;&amp;lt;algorithm&amp;gt;&lt;/code&gt;のインクルードが不足しているためである。&lt;/li&gt;
&lt;li&gt;Boost.Containerの&lt;code&gt;allocator_traits&lt;/code&gt;から&lt;code&gt;has_member_function_callable_with&lt;/code&gt;を使用するとコンパイルエラーになる(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9332&#34; target=&#34;_blank&#34;&gt;#9332&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;いくつかのライブラリで&lt;code&gt;initializer_list&lt;/code&gt;のオーバーロードが曖昧になり、コンパイルエラーになる。これはVisual C++のバグであり、現在有効な回避策は見つかっていない。UnorderedとMulti-Indexの関数オーバーロードでその問題が発生する。&lt;/li&gt;
&lt;li&gt;Threadの&lt;code&gt;ex_scoped_thread&lt;/code&gt;がコンパイルに失敗する(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9333&#34; target=&#34;_blank&#34;&gt;#9333&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#accumulators&#34; name=&#34;accumulators&#34;&gt;Accumulators&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントの誤字を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7915&#34; target=&#34;_blank&#34;&gt;#7915&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MSVCでの警告を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8850&#34; target=&#34;_blank&#34;&gt;#8850&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;average&lt;/code&gt;を&lt;code&gt;fdiv&lt;/code&gt;に名称変更 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8262&#34; target=&#34;_blank&#34;&gt;#8262&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bad_any_cast&lt;/code&gt;を、モジュール間で見えるようにした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8751&#34; target=&#34;_blank&#34;&gt;#8751&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear()&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;li&gt;不足していた&lt;code&gt;BOOST_NOEXCEPT&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt; rvaluesの問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9215&#34; target=&#34;_blank&#34;&gt;#9215&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#asio&#34; name=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windowsランタイム向けに、限定的なポートを実装した。このサポートは、言語拡張機能を有効にする必要がある。ポートはWindowsランタイムAPIによって公開される制限機能により、以下の制限事項も付いてくる：&lt;ul&gt;
&lt;li&gt;コア機能である&lt;code&gt;io_service&lt;/code&gt;、&lt;code&gt;strand&lt;/code&gt;、バッファ、複合操作、タイマー等は、今まで通り動作する。&lt;/li&gt;
&lt;li&gt;ソケットは、クライアントTCP側のみサポートする。&lt;/li&gt;
&lt;li&gt;クライアント側TCPソケットの明示的なバインディングは、サポートされない。&lt;/li&gt;
&lt;li&gt;ソケットでは&lt;code&gt;cancel()&lt;/code&gt;関数をサポートしない。非同期操作は、クローズによってのみキャンセルを行うことになるだろう。&lt;/li&gt;
&lt;li&gt;null bufferを使用した操作はサポートされない。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcp::no_delay&lt;/code&gt;、&lt;code&gt;socket_base::keep_alive&lt;/code&gt;オプションのみサポートされる。&lt;/li&gt;
&lt;li&gt;名前解決はサーバー名をサポートせず、番号のみ。例として、&#34;http&#34;ではなく&#34;80&#34;を使用する必要がある。&lt;/li&gt;
&lt;li&gt;ほとんどの名前解決クエリフラグは、効果を持たない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Boost 1.54.0から導入された)レギュレッションテストを、いくつかの環境向けに修正。&lt;code&gt;async_connect()&lt;/code&gt;からのエラーが完了ハンドラに伝達されていなかった(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8795&#34; target=&#34;_blank&#34;&gt;#8795&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;(Boost 1.54.0から導入された)Windows向けの、&lt;code&gt;io_service&lt;/code&gt;が複数スレッドから着火されるケースのレギュレッションテストを修正。バグが発生した際、非同期操作の結果は正しくないとして破棄され、代わりに&lt;code&gt;0&lt;/code&gt;が使用されていた。TCPソケットでは、見かけ上(spurious)のファイル終端通知で起きていた(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8933&#34; target=&#34;_blank&#34;&gt;#8933&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;ハンドラトラッキングのバグを修正。いくつかのハンドラIDが正しく出力されていなかった(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8808&#34; target=&#34;_blank&#34;&gt;#8808&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;非同期&lt;code&gt;accept&lt;/code&gt;操作のテストに使用する比較がコンパイルエラーになっていた問題を修正。符号なしソケット記述子が正しく動作するようになった(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8752&#34; target=&#34;_blank&#34;&gt;#8752&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;すでに発生されたシグナルに対する&lt;code&gt;async_wait&lt;/code&gt;を開始した際、完了ハンドラにシグナル番号が正しく確実に渡されるようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8738&#34; target=&#34;_blank&#34;&gt;#8738&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;GCC 4.8の、未使用&lt;code&gt;typedef&lt;/code&gt;警告を抑制(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8980&#34; target=&#34;_blank&#34;&gt;#8980&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;default invocation hookで使用するハンドラの、ムーブ最適化を有効にした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8624&#34; target=&#34;_blank&#34;&gt;#8624&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;重複する&lt;code&gt;async_write_at&lt;/code&gt;操作を発行すべきではない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8669&#34; target=&#34;_blank&#34;&gt;#8669&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Windowsの&lt;code&gt;HANDLE&lt;/code&gt;を、同期&lt;code&gt;read&lt;/code&gt;の&lt;code&gt;GetOverlappedResult&lt;/code&gt;によって返される、非致命的な&lt;code&gt;ERROR_MORE_DATA&lt;/code&gt;を取り扱うように変更。&lt;/li&gt;
&lt;li&gt;Visual C++は言語拡張として「&lt;code&gt;generic&lt;/code&gt;」をキーワードとして扱う。これを回避するために、名前空間名を&lt;code&gt;cpp_generic&lt;/code&gt;に変更。&lt;/li&gt;
&lt;li&gt;Boost 1.54でサポートされた&lt;code&gt;async_result&lt;/code&gt;の結果を取り逃すという、いくつかの非同期操作の問題を修正。とくに、buffer streamテンプレートを、現在のハンドラパターンに従うように更新した(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9000&#34; target=&#34;_blank&#34;&gt;#9000&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9001&#34; target=&#34;_blank&#34;&gt;#9001&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Visual Studio 2012向けに、ムーブサポートを有効にした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8959&#34; target=&#34;_blank&#34;&gt;#8959&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Visual Studio 2012向けに、&lt;code&gt;use_future&lt;/code&gt;サポートを追加した。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8758&#34; target=&#34;_blank&#34;&gt;#8758&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;いくつかの、不要なハンドラのコピーを排除した。&lt;/li&gt;
&lt;li&gt;その他、コードとドキュメントの小さな問題を修正した。&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8347&#34; target=&#34;_blank&#34;&gt;#8347&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8950&#34; target=&#34;_blank&#34;&gt;#8950&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8953&#34; target=&#34;_blank&#34;&gt;#8953&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8965&#34; target=&#34;_blank&#34;&gt;#8965&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8997&#34; target=&#34;_blank&#34;&gt;#8997&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;x86ターゲットのGCC、MSVCおよびその互換コンパイラに対して、64ビットアトミック操作のサポートを追加。このサポートは、ターゲットCPUの要求するインストラクションがコンパイル時にわかる場合に有効になる&lt;/li&gt;
&lt;li&gt;x86-64ターゲットのGCCと互換コンパイラに対して、128ビットアトミック操作のサポートを追加。このサポートは、ターゲットCPUの要求するインストラクションがコンパイル時にわかる場合に有効になる。このサポートは、新たなマクロ&lt;code&gt;BOOST_ATOMIC_INT128_LOCK_FREE&lt;/code&gt;でテストできる&lt;/li&gt;
&lt;li&gt;GCC環境で、より効率的な&lt;code&gt;atomic&amp;lt;&amp;gt;&lt;/code&gt;の実装を追加。これはGCC 4.7以降で導入された&lt;code&gt;__atomic*&lt;/code&gt;インストラクションを使用する&lt;/li&gt;
&lt;li&gt;ARM v7のサポートを追加。Thumb 2のサポートを改善&lt;/li&gt;
&lt;li&gt;GCCとその互換コンパイラに、x32ターゲットのサポートを追加(たとえば、64ビット x86で32ビットポインタを使用できるような環境)&lt;/li&gt;
&lt;li&gt;Boost.Threadへの依存を削除&lt;/li&gt;
&lt;li&gt;False Sharingを避けるために、内部的なロックプールに適切なパディングとアラインメントが含まれるようになった&lt;/li&gt;
&lt;li&gt;Windows上のIntelコンパイラのコンパイル問題を修正。Windows上の重複した内部マクロを削除&lt;/li&gt;
&lt;li&gt;いくつかのコードを、使用可能な場合にC++11機能を使用するようリファクタリング&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#chrono&#34; name=&#34;chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.52と1.53でchrono_ioが文字列を正しくパースできていない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7868&#34; target=&#34;_blank&#34;&gt;#7868&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/chrono/stopwatches/formatters/base_formatter.hpp&lt;/code&gt;のtypoを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9028&#34; target=&#34;_blank&#34;&gt;#9028&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;[訳者註]: &lt;code&gt;=&lt;/code&gt;とするべきところ&lt;code&gt;==&lt;/code&gt;としていたため、&lt;code&gt;duration_style&lt;/code&gt;を変更出来ないでいた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;std::tmを初期化していなかったのを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9147&#34; target=&#34;_blank&#34;&gt;#9147&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#circular-buffer&#34; name=&#34;circular-buffer&#34;&gt;Circular Buffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Moveによりムーブセマンティクスをサポートした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7888&#34; target=&#34;_blank&#34;&gt;#7888&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;これによりCircular Bufferはムーブ可能かつコピー不可能な型をサポートする&lt;/li&gt;
&lt;li&gt;ただし&lt;code&gt;noexcept&lt;/code&gt;なムーブコンストラクタかつムーブ代入演算子の両方が実装されている必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ドキュメントの改良&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;指定されているとコンパイル出来ない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5362&#34; target=&#34;_blank&#34;&gt;#5362&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;不要な&lt;code&gt;const&lt;/code&gt;に対する警告を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7025&#34; target=&#34;_blank&#34;&gt;#7025&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MSVCにおいて、Circular Buffer以外で定義されたコンマ演算子によって警告が出るのを抑制 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7950&#34; target=&#34;_blank&#34;&gt;#7950&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;： 古いコンパイラのサポートを終了した&lt;/li&gt;
&lt;li&gt;新しいサポート対象は以下のバージョン及びそれ以後のみである。なお、他のコンパイラに変更はない&lt;ul&gt;
&lt;li&gt;Digital Mars 8.41&lt;/li&gt;
&lt;li&gt;GCC 3.3&lt;/li&gt;
&lt;li&gt;Intel C++ 6.0&lt;/li&gt;
&lt;li&gt;Visual C++ 7.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#config&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SCARYイテレータを実装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flat_set&lt;/code&gt;と&lt;code&gt;flat_map&lt;/code&gt;のイテレータがランダムアクセスイテレータであることが言及されていないのを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8269&#34; target=&#34;_blank&#34;&gt;#8269&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;clangの&lt;code&gt;-Wimplicit-fallthrough&lt;/code&gt;によってswitch-caseでwarningが出力されるのを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8473&#34; target=&#34;_blank&#34;&gt;#8473&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;[訳者註] warningを抑制する&lt;code&gt;BOOST_FALLTHROUGH&lt;/code&gt;マクロが (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8408&#34; target=&#34;_blank&#34;&gt;#8408&lt;/a&gt;) で提案されている。用例は次の通り：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;:
    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;BOOST_FALLTHROUGH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;:
    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++11で&lt;code&gt;std::map&lt;/code&gt;に新規追加されたコンストラクタと同様のものを追加 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8892&#34; target=&#34;_blank&#34;&gt;#8892&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;[訳者註] 例えば次のようなものである&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;explicit&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flat_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Allocator&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flat_set::insert&lt;/code&gt;の呼び出しが曖昧になっていた問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9009&#34; target=&#34;_blank&#34;&gt;#9009&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scoped_allocator_adaptor&lt;/code&gt;とともに使用した場合、コピーでSEGVる問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9064&#34; target=&#34;_blank&#34;&gt;#9064&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ソート済みの非ユニークなシーケンスをflat_setに挿入するとクラッシュする問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9092&#34; target=&#34;_blank&#34;&gt;#9092&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flat_multimap::insert(itr,itr)&lt;/code&gt;でリークする問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9108&#34; target=&#34;_blank&#34;&gt;#9108&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;スタックが正しくアラインメントされていないことにより、SSE2のIntrinsic命令によってセグメンテーションフォルトが起きる問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8650&#34; target=&#34;_blank&#34;&gt;#8650&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#coroutine&#34; name=&#34;coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;新しいインターフェイス(unidirectional data transfer)を追加&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_55_0/libs/coroutine/doc/html/unidirect.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/1_55_0/libs/coroutine/doc/html/unidirect.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;所謂Generatorの実装である。以下に簡単なコード例を示す&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coroutines&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coroutine&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pull_type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[](&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coroutines&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coroutine&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yield&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;yield&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;…&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;これまでのように&lt;code&gt;coroutine&lt;/code&gt;の&lt;code&gt;caller&lt;/code&gt;から&lt;code&gt;callee&lt;/code&gt;に値を渡すことができない単方向(unidirectional)のインターフェイスとなる&lt;/p&gt;
&lt;p&gt;このインターフェイスを実装したことにより、従来の双方向なインターフェイスは &lt;strong&gt;非推奨&lt;/strong&gt; となった
ただし、&lt;code&gt;BOOST_COROUTINES_OLD&lt;/code&gt;マクロを定義することで古いインターフェイスも従来通り使用可能となる。
- Jamfile.v2でのターゲット名が間違っていることによって、ビルドができない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8782&#34; target=&#34;_blank&#34;&gt;#8782&lt;/a&gt;)
- Windows環境でのauto-linkを有効にした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8801&#34; target=&#34;_blank&#34;&gt;#8801&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#filesystem&#34; name=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Android環境でコンパイルエラーになる問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8706&#34; target=&#34;_blank&#34;&gt;#8706&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fusion::map&lt;/code&gt;の&lt;code&gt;convert&lt;/code&gt;がコンパイルエラーになる問題を修正。&lt;code&gt;map_tag&lt;/code&gt;に対する&lt;code&gt;convert_impl&lt;/code&gt;の特殊化を実装 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8759&#34; target=&#34;_blank&#34;&gt;#8759&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#geometry&#34; name=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;機能追加&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;centroid()&lt;/code&gt;に、&lt;code&gt;segment type&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intersects()&lt;/code&gt;と&lt;code&gt;disjoints()&lt;/code&gt;に、Segment-BoxとLinestring-Boxのサポートを追加&lt;/li&gt;
&lt;li&gt;パッキングアルゴリズムを使用した&lt;code&gt;rtee&lt;/code&gt;の作成を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contains()&lt;/code&gt;と&lt;code&gt;covers()&lt;/code&gt;に、空間クエリ述語(spatial query predicates)を追加&lt;/li&gt;
&lt;li&gt;イテレーティブクエリを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;いくつかのケースで、コンセプトに違反して&lt;code&gt;.back()&lt;/code&gt;と&lt;code&gt;.clear()&lt;/code&gt;が呼ばれていた。報告された例を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cart_intersect&lt;/code&gt;、&lt;code&gt;get_turn_info&lt;/code&gt;、&lt;code&gt;handle_tangencies&lt;/code&gt;、&lt;code&gt;enrich_intersection_info&lt;/code&gt;で、一貫性のあるサイド情報を使用するようにした。これは(必要に応じて)6ポイントのみの整数、4 or 3セグメント上でのズームに切り替えることによって行われる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;スパイクによって引き起こされる、Intersectionで自己交差が生成される問題を修正した (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6958&#34; target=&#34;_blank&#34;&gt;#6958&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;直前ステップのスパイクによって引き起こされる、不正な入力例外(invalid input exception)問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8364&#34; target=&#34;_blank&#34;&gt;#8364&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8365&#34; target=&#34;_blank&#34;&gt;#8365&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::geometry::model::point&lt;/code&gt;の単一引数コンストラクタに、&lt;code&gt;explicit&lt;/code&gt;を付けた (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8969&#34; target=&#34;_blank&#34;&gt;#8369&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントにメンバ変数が記載されるよう、doxygen_xml2qbkツールを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8825&#34; target=&#34;_blank&#34;&gt;#8825&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;スパイクによって引き起こされる、triangle-triangleのintersectionが失敗する問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8652&#34; target=&#34;_blank&#34;&gt;#8652&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;boost/geometry/strategies/intersection.hpp&amp;gt;&lt;/code&gt;が自身のファイルをインクルードしていたので修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9047&#34; target=&#34;_blank&#34;&gt;#9047&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#graph&#34; name=&#34;graph&#34;&gt;Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バンドルプロパティとして&lt;code&gt;void&lt;/code&gt;型は許可していなかったが、指定できてしまっていた(たとえば、&lt;code&gt;VertexProperties&lt;/code&gt;テンプレートパラメータへのグラフ型指定で)。現在は、静的アサートで完全に禁止した。代わりに&lt;code&gt;boost::no_property&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;&lt;code&gt;depth_first_search&lt;/code&gt;に、ビジターイベントポイント&lt;code&gt;finish_edge&lt;/code&gt;のサポートを追加。この変更は、そのメンバ関数を持たないビジターとの下位互換性を持つ (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5269&#34; target=&#34;_blank&#34;&gt;#5269&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sunコンパイラでのビルドテストを無効にした&lt;/li&gt;
&lt;li&gt;マルチソース頂点のサポートを、非名前付きパラメータ版の&lt;code&gt;breadth_first_visit&lt;/code&gt;、&lt;code&gt;breadth_first_search&lt;/code&gt;、&lt;code&gt;dijkstra_shortest_paths&lt;/code&gt;、&lt;code&gt;dijkstra_shortest_paths_no_init&lt;/code&gt;に追加した。これはまだドキュメントに記載していない。これを使用する場合は、それらの関数の単一頂点パラメータを、同じ型を指す2つのInput Iteratorで置き換える&lt;/li&gt;
&lt;li&gt;Louis Dionneのコントリビュートにより、Hawick circuitsアルゴリズムを追加した (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8433&#34; target=&#34;_blank&#34;&gt;#8433&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Maciej Piechotkaのコントリビュートにより、edge coloringアルゴリズムを追加した (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8317&#34; target=&#34;_blank&#34;&gt;#8317&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Piotr Wygockiのコントリビュートにより、min-cost max-flowアルゴリズムを追加した&lt;/li&gt;
&lt;li&gt;以下のバグ、および機能リクエストを修正した：&lt;ul&gt;
&lt;li&gt;ヘッダーファイルのインクルード順に依存していた問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8791&#34; target=&#34;_blank&#34;&gt;#8791&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCCでの未使用変数警告を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8877&#34; target=&#34;_blank&#34;&gt;#8877&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8986&#34; target=&#34;_blank&#34;&gt;#8986&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prim_minimum_spanning_tree&lt;/code&gt;に、辺の重みとして負の値を入れると、予期しないエラーが発生する問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9012&#34; target=&#34;_blank&#34;&gt;#9012&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dijkstra_shortest_paths&lt;/code&gt;の擬似コードが間違っていたので修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9080&#34; target=&#34;_blank&#34;&gt;#9080&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sunコンパイラが複雑なSFINAE構文をコンパイル出来なかった問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8822&#34; target=&#34;_blank&#34;&gt;#8822&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;SVCで無限ループとして推論され警告されてしまうのを抑制 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8568&#34; target=&#34;_blank&#34;&gt;#8568&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MSVCのSTLの実装の問題によりリークする問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7156&#34; target=&#34;_blank&#34;&gt;#7156&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interprocess::shared_ptr&lt;/code&gt;の代入演算子の実装の問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7164&#34; target=&#34;_blank&#34;&gt;#7164&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントの修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8277&#34; target=&#34;_blank&#34;&gt;#8277&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCCにてコンパイルできない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8976&#34; target=&#34;_blank&#34;&gt;#8976&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;マルチプロセスなブラウザを開くと&lt;code&gt;condition_variable&lt;/code&gt;が加速する問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9008&#34; target=&#34;_blank&#34;&gt;#9008&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;PPCのCASに渡す引数の順番が正しくなかったのを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9065&#34; target=&#34;_blank&#34;&gt;#9065&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MSVCにて&lt;code&gt;realloc&lt;/code&gt;という関数が意図しないマクロ置き換えされるのを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9073&#34; target=&#34;_blank&#34;&gt;#9073&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;[訳者註] この&lt;code&gt;realloc&lt;/code&gt;は標準の&lt;code&gt;realloc&lt;/code&gt;ではなく、Interprocessの内部で定義される関数である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;splay&lt;/code&gt;コンテナの &lt;code&gt;xxx_dont_splay&lt;/code&gt;関数を廃止した。また、&lt;code&gt;splay_set_hook&lt;/code&gt;も廃止した。この代替として、&lt;code&gt;bs_set_hook&lt;/code&gt;を利用すること。いずれもBoost 1.56で削除予定である&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;ABI変更&lt;/strong&gt;&lt;/span&gt; ハッシュコンテナの&lt;code&gt;end&lt;/code&gt;イテレータがバケット配列の&lt;code&gt;end&lt;/code&gt;よりひとつ後ろを指すよう実装されていた (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8698&#34; target=&#34;_blank&#34;&gt;#8698&lt;/a&gt;)。このため、バケット配列の隣に値を挿入したときにひどいバグが発生していた。&lt;code&gt;end&lt;/code&gt;イテレータはバケット配列の先頭を指すように修正した&lt;/li&gt;
&lt;li&gt;テンプレートおよびデバッグシンボルの削減のために大規模なリファクタリングを行った。MSVCのデバッグモードで生成されるテストオブジェクトファイルサイズが約半分になった。Identical COMDAT Folding (ICF)がないコンパイラでもサイズ削減に寄与するはずである&lt;/li&gt;
&lt;li&gt;SCARYイテレータを実装した &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#lexical-cast&#34; name=&#34;lexical-cast&#34;&gt;Lexical cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::bad_alloc&lt;/code&gt;例外は&lt;code&gt;boost::bad_lexical_cast&lt;/code&gt;に変換されなくなった。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8966&#34; target=&#34;_blank&#34;&gt;#8966&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::numeric_limits&lt;/code&gt;の128bit整数型に対する特殊化された値が変換のために必要になった場合に、それをチェックする&lt;code&gt;static assert&lt;/code&gt;を追加。128bit整数型をサポートしているかどうかを判定するために&lt;code&gt;BOOST_HAS_INT128&lt;/code&gt;を使用するように変更。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8790&#34; target=&#34;_blank&#34;&gt;#8790&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントを改善し、さらに多くの使用例を追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;修正点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_LOG_WITHOUT_DEFAULT_FACTORIES&lt;/code&gt;環境設定マクロを追加した。このマクロを定義すると、設定パーサでのフォーマッタファクトリとデフォルトフィルタのコンパイルをしないようになる。これにより、設定パーサのサポートを維持したままバイナリサイズを削減できる可能性がある&lt;/li&gt;
&lt;li&gt;パーサを書きなおして生成されるバイナリサイズを削減した。この修正により、あいまいな入力や正しくない入力の検出精度が向上し、より堅牢になった&lt;/li&gt;
&lt;li&gt;以下のヘッダを廃止予定にした。これらのヘッダは将来のリリースで削除される。また、内容については他のライブラリに移譲した&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/intrusive_ref_counter.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/explicit_operator_bool.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/empty_deleter.hpp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows上で&lt;code&gt;QueryPerformanceCounter&lt;/code&gt; APIを利用した場合、激しいスレッド間競合により、&lt;code&gt;timer&lt;/code&gt;アトリビュートが間違った時間になってしまう問題を修正&lt;/li&gt;
&lt;li&gt;パース済みフィルターとあるアトリビュートの組み合わせを防止するフィルターパーサのバグを修正&lt;/li&gt;
&lt;li&gt;デフォルトシンクとフォーマッタ間でスレッドIDの書式が違う問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;完了したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android上で&lt;code&gt;posix_memalign&lt;/code&gt;が宣言されていない (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8815&#34; target=&#34;_blank&#34;&gt;#8815&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Mingw w64上でコンパイルできない (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8819&#34; target=&#34;_blank&#34;&gt;#8819&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/detail/spin_mutex.hpp&lt;/code&gt;が&lt;code&gt;pthread_&lt;/code&gt;系関数からのエラーを完全に無視している (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8915&#34; target=&#34;_blank&#34;&gt;#8915&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libs/log/src/once_block.cpp&lt;/code&gt;が&lt;code&gt;pthread_&lt;/code&gt;系関数からのエラーをほとんど無視している (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8917&#34; target=&#34;_blank&#34;&gt;#8917&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sun Studio 12.3で&lt;code&gt;attribute_value_set.cpp&lt;/code&gt;がコンパイルできない (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9139&#34; target=&#34;_blank&#34;&gt;#9139&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sun Studio 12.3で&lt;code&gt;boost/log/detail/snprintf.hpp&lt;/code&gt;が&lt;code&gt;snprintf&lt;/code&gt;と&lt;code&gt;vsnprintf&lt;/code&gt;が定義されていないためコンパイルできない (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9140&#34; target=&#34;_blank&#34;&gt;#9140&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sun Studio 12.3で&lt;code&gt;boost::log::aux::light_function&lt;/code&gt;がビルドできない (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9153&#34; target=&#34;_blank&#34;&gt;#9153&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;solaris studio 12.3でstlport4を利用するとき、&lt;code&gt;&amp;lt;cstudio&amp;gt;&lt;/code&gt;をインクルードすれば&lt;code&gt;fflush&lt;/code&gt;は&lt;code&gt;std&lt;/code&gt;名前空間にあるが、&lt;code&gt;&amp;lt;stdio.h&amp;gt;&lt;/code&gt;をインクルードしても&lt;code&gt;std&lt;/code&gt;名前空間にある(&lt;code&gt;using&lt;/code&gt;しているだけ)ので、&lt;code&gt;std::&lt;/code&gt;を指定しなければならない (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9155&#34; target=&#34;_blank&#34;&gt;#9155&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;詳細は&lt;a href=&#34;http://www.boost.org/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;変更履歴&lt;/a&gt;を参照のこと&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;多数の警告を抑制。（主にGCC-4.8とMSVCからのもの）(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8384&#34; target=&#34;_blank&#34;&gt;#8384&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8855&#34; target=&#34;_blank&#34;&gt;#8855&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9107&#34; target=&#34;_blank&#34;&gt;#9107&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9109&#34; target=&#34;_blank&#34;&gt;#9109&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;PGIでのコンパイルエラーを修正。 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8333&#34; target=&#34;_blank&#34;&gt;#8333&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;PGIで、&lt;code&gt;erf&lt;/code&gt;関数が不正な値を生成する原因となる、定数初期化の問題を修正。 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8621&#34; target=&#34;_blank&#34;&gt;#8621&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++の関数と同じ名前で定義されているC99のいくつかのマクロでマクロ展開されてしまうのを防止。 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8732&#34; target=&#34;_blank&#34;&gt;#8732&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8733&#34; target=&#34;_blank&#34;&gt;#8733&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;自由度が巨大な（&lt;code&gt;integer&lt;/code&gt;で表現可能な値よりも大きな）場合でもStudentのT分布が正しく振る舞うように修正。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8873&#34; target=&#34;_blank&#34;&gt;#8873&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;プラットフォームで&lt;code&gt;long double&lt;/code&gt;がサポートされていない場合でも、いくつかのコア関数で&lt;code&gt;long double&lt;/code&gt;が使用できるようにした。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8940&#34; target=&#34;_blank&#34;&gt;#8940&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;確率変数が無限大の時に不正な尺度母数や位置母数のエラーを捕捉できるように、分布関数のエラーハンドリングを修正。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9126&#34; target=&#34;_blank&#34;&gt;#9126&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Intel C++ 14の不完全な&lt;code&gt;&amp;lt;tuple&amp;gt;&lt;/code&gt;のためのワークアラウンドを追加。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9083&#34; target=&#34;_blank&#34;&gt;#9083&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;楕円積分の中で行われる、引数を約分する処理の整合性を向上。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9104&#34; target=&#34;_blank&#34;&gt;#9104&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ベータ関数がarcsineもしくはStudentのT分布である時に、逆不完全ベータ関数の結果で桁落ちが発生してしまうバグを修正。([訳注]：訳に自信ないのでダブルチェックお願いします)&lt;/li&gt;
&lt;li&gt;一種のベッセル関数ならびにK関数の連分数で擬似的な(Spurious)オーバーフローやアンダーフローが発生する問題を修正。([訳注]：訳に自信ないのでダブルチェックお願いします)&lt;/li&gt;
&lt;li&gt;Thomas Luuによる、非中央のカイ二乗分布変位値の改善を追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#move&#34; name=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントの誤りを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7952&#34; target=&#34;_blank&#34;&gt;#7952&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MoveのTraitsを改善 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8764&#34; target=&#34;_blank&#34;&gt;#8764&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::move&lt;/code&gt;と&lt;code&gt;boost::forward&lt;/code&gt;に&lt;code&gt;noexcept&lt;/code&gt;指定をつけた (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8765&#34; target=&#34;_blank&#34;&gt;#8765&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++98/03で&lt;code&gt;BOOST_MOVABLE_BUT_NOT_COPYABLE&lt;/code&gt;マクロを適用すると正しく動作しない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8842&#34; target=&#34;_blank&#34;&gt;#8842&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/move/algorithm.hpp&lt;/code&gt;で自身をインクルードしていた (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8979&#34; target=&#34;_blank&#34;&gt;#8979&lt;/a&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#msm&#34; name=&#34;msm&#34;&gt;Meta State Machine&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;新機能&lt;/strong&gt; : interrupt stateは中断を終了させるためのイベント列をサポートした。&lt;/li&gt;
&lt;li&gt;例外を無効にしたgcc-4.2でコンパイルが通らなかった問題を修正。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8686&#34; target=&#34;_blank&#34;&gt;#8686&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Serialization サポートの追加&lt;/li&gt;
&lt;li&gt;GCC による警告を抑制 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8872&#34; target=&#34;_blank&#34;&gt;#8872&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pow&lt;/code&gt; の引数に大きな値を設定した際に発生するバグを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8809&#34; target=&#34;_blank&#34;&gt;#8809&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pow&lt;/code&gt; で &lt;code&gt;0&lt;/code&gt; のべき乗を計算した場合のバグを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8798&#34; target=&#34;_blank&#34;&gt;#8798&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt; の IO で &lt;code&gt;CHAR_BIT&lt;/code&gt; 以下の値の出力 (文字列への変換) が正常に行われていなかった問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8745&#34; target=&#34;_blank&#34;&gt;#8745&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt; で固定サイズのときに左シフトをするとオーバフローが発生する問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8741&#34; target=&#34;_blank&#34;&gt;#8741&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt; で発生する警告を抑制 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8748&#34; target=&#34;_blank&#34;&gt;#8748&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C99 のマクロが必要になる関数を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8732&#34; target=&#34;_blank&#34;&gt;#8732&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_int&lt;/code&gt; で &lt;code&gt;INT_MIN&lt;/code&gt;, &lt;code&gt;LONG_MIN&lt;/code&gt; 等の構築が失敗する問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8711&#34; target=&#34;_blank&#34;&gt;#8711&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#multi-index&#34; name=&#34;multi-index&#34;&gt;Multi-Index Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.MultiIndexのC++11標準準拠度向上&lt;ul&gt;
&lt;li&gt;&lt;code&gt;multi_index_container&lt;/code&gt;を効率的にムーヴできるようになった&lt;/li&gt;
&lt;li&gt;Initializer listのサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace&lt;/code&gt;系関数のサポート&lt;/li&gt;
&lt;li&gt;コピー不可の要素(&lt;code&gt;std::unique_ptr&amp;lt;T&amp;gt;&lt;/code&gt;など)をサポート。また、要素と互換性のある型のイテレータについて、無駄なコピーをせず、&lt;code&gt;[first,last)&lt;/code&gt;の形式で範囲挿入できるようになった&lt;/li&gt;
&lt;li&gt;ランダムアクセスインデックスへの&lt;code&gt;shrink_to_fit()&lt;/code&gt;実装&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++11以前のコンパイラでの制限については&lt;a href=&#34;http://www.boost.org//libs/multi_index/doc/compiler_specifics.htmll&#34; target=&#34;_blank&#34;&gt;compiler specifics&lt;/a&gt;参照のこと&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以下のクラスは&lt;strong&gt;非推奨&lt;/strong&gt;になった：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://www.boost.org/libs/multi_index/doc/reference/key_extraction.html#member_offset&#34; target=&#34;_blank&#34;&gt;member_offset&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://www.boost.org/libs/multi_index/doc/reference/key_extraction.html#const_mem_fun_explicit&#34; target=&#34;_blank&#34;&gt;const_mem_fun_explicit&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://www.boost.org/libs/multi_index/doc/reference/key_extraction.html#const_mem_fun_explicit&#34; target=&#34;_blank&#34;&gt;mem_fun_explicit&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://www.boost.org/libs/multi_index/doc/reference/key_extraction.html#composite_key_result_equal_to&#34; target=&#34;_blank&#34;&gt;composite_key_result_equal_to&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://www.boost.org/libs/multi_index/doc/reference/key_extraction.html#composite_key_result_less&#34; target=&#34;_blank&#34;&gt;composite_key_result_less&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://www.boost.org/libs/multi_index/doc/reference/key_extraction.html#composite_key_result_greater&#34; target=&#34;_blank&#34;&gt;composite_key_result_greater&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://www.boost.org/libs/multi_index/doc/reference/key_extraction.html#composite_key_result_hash&#34; target=&#34;_blank&#34;&gt;composite_key_result_hash&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#mpi&#34; name=&#34;mpi&#34;&gt;MPI&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MPI の非推奨な関数を入れ替え&lt;/li&gt;
&lt;li&gt;マルチスレッド初期化のサポートを追加&lt;/li&gt;
&lt;li&gt;in-prace collectives の追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#phoenix&#34; name=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;phonenix::funcion&lt;/code&gt;のコンストラクタを&lt;code&gt;constexpr&lt;/code&gt;にした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9049&#34; target=&#34;_blank&#34;&gt;#9049&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#polygon&#34; name=&#34;polygon&#34;&gt;Polygon&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sebastien Loriotによるパッチで、VoronoiベンチマークのCGAL部分を更新した。&lt;/li&gt;
&lt;li&gt;(Intelからのパッチにより、)&lt;code&gt;polygon_90_set_data&lt;/code&gt;に多角形分解機能(polygon decomposition capability)を追加した。&lt;/li&gt;
&lt;li&gt;Tracチケットのバグ修正：&lt;ul&gt;
&lt;li&gt;Polygonと&lt;code&gt;range/algorithm&lt;/code&gt;が衝突する問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8197&#34; target=&#34;_blank&#34;&gt;#8197&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#property-map&#34; name=&#34;property-map&#34;&gt;Property Map&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dynamic_properties&lt;/code&gt;オブジェクトを非破壊的に &lt;code&gt;.property(name, pm)&lt;/code&gt; メソッドチェインで構築できるようになった&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dynamic_properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;color&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;pos&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;position_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生ポインタをプロパティマップとして利用できないようにした。これは以前、Visual Studioでしばしば失敗したためである。このような用法はBoost.Graphの例やテストにあったが全て削除した。&lt;code&gt;graph&lt;/code&gt;で&lt;code&gt;vertex&lt;/code&gt;プロパティを使う際(この機能のもっとも一般的な利用法である)には次のように記述する：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make_iterator_property_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pointer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;container&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertex_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;graph&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;(註：このコードで&lt;code&gt;get()&lt;/code&gt;の名前空間が省略されているのはコードを汎化する上で重要である)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;graph&lt;/code&gt;以外では、以下のように記述するとよい&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make_iterator_property_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pointer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;typed_identity_property_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;boost/property_map/property_map.hpp&amp;gt;&lt;/code&gt;の151行目と159行目にはコメントアウトした&lt;code&gt;static&lt;/code&gt;アサーションがあるが、これを有効にすることで、ユーザーコード中にあるこのような廃止予定のポインタの用法を検出することができる&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#rational&#34; name=&#34;rational&#34;&gt;Rational&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11モードでコンパイルする場合、Boost.Testが&lt;code&gt;lowest&lt;/code&gt;と&lt;code&gt;max_digits10&lt;/code&gt;のどちらかを参照するため、C++11で追加された&lt;code&gt;std::numeric_limits&lt;/code&gt;のメンバ、&lt;code&gt;lowest&lt;/code&gt;と&lt;code&gt;max_digits10&lt;/code&gt;をユニットテストコードに追加した。&lt;/li&gt;
&lt;li&gt;C++11でナローイングがエラーになるため、内部変数の初期化でナローイングがおこらないように修正した。これにより &lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/5855&#34; target=&#34;_blank&#34;&gt;#5855&lt;/a&gt; が解決された。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#smart-pointer&#34; name=&#34;smart-pointer&#34;&gt;SmartPtr&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Logから抽出された&lt;code&gt;boost/smart_ptr/intrusive_ref_counter.hpp&lt;/code&gt;ヘッダーが加えられた。このヘッダーはユーザーのクラスに&lt;code&gt;intrusive_ptr&lt;/code&gt;サポートを加えるミックスイン基底クラスを実装する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#thread&#34; name=&#34;thread&#34;&gt;Thread&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;機能追加&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8519&#34; target=&#34;_blank&#34;&gt;#8519&lt;/a&gt; 同期: completion function（バリアの待機完了時に呼ばれる関数）の機能を追加して&lt;code&gt;barrier&lt;/code&gt;クラスを更新。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8515&#34; target=&#34;_blank&#34;&gt;#8515&lt;/a&gt; 非同期: &lt;code&gt;shared_future::then&lt;/code&gt;を追加。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8615&#34; target=&#34;_blank&#34;&gt;#8615&lt;/a&gt; 非同期: &lt;code&gt;make_future&lt;/code&gt;/&lt;code&gt;make_shared_future&lt;/code&gt;を&lt;code&gt;make_ready_future&lt;/code&gt;に置き換え。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8627&#34; target=&#34;_blank&#34;&gt;#8627&lt;/a&gt; 非同期: &lt;code&gt;future&amp;lt;&amp;gt;::unwrap&lt;/code&gt;メンバ関数と&lt;code&gt;unwrap&lt;/code&gt;するコンストラクタを追加。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8677&#34; target=&#34;_blank&#34;&gt;#8677&lt;/a&gt; 非同期: &lt;code&gt;future&amp;lt;&amp;gt;::get_or&lt;/code&gt;を追加。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8678&#34; target=&#34;_blank&#34;&gt;#8678&lt;/a&gt; 非同期: &lt;code&gt;future&amp;lt;&amp;gt;::fallback_to&lt;/code&gt;を追加。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8891&#34; target=&#34;_blank&#34;&gt;#8891&lt;/a&gt; &lt;code&gt;upgrade_to_unique_lock&lt;/code&gt;に&lt;code&gt;mutex()&lt;/code&gt;メンバ関数が無かったので追加。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8955&#34; target=&#34;_blank&#34;&gt;#8955&lt;/a&gt; &lt;code&gt;future&lt;/code&gt;から効率的に&lt;code&gt;exception_ptr&lt;/code&gt;を取得したいという要望に対応。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7461&#34; target=&#34;_blank&#34;&gt;#7461&lt;/a&gt; &lt;code&gt;count_to_release&lt;/code&gt;が&lt;code&gt;0&lt;/code&gt;のときに&lt;code&gt;detail::win32::ReleaseSemaphore&lt;/code&gt;が呼ばれてしまう問題を修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8070&#34; target=&#34;_blank&#34;&gt;#8070&lt;/a&gt; &lt;code&gt;GetTickCount&lt;/code&gt;より適切な&lt;code&gt;GetTickCount64&lt;/code&gt;を使用するように変更。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8768&#34; target=&#34;_blank&#34;&gt;#8768&lt;/a&gt; win32で稀に&lt;code&gt;condition_variable&lt;/code&gt;が永遠に&lt;code&gt;wait&lt;/code&gt;してしまう問題を修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8817&#34; target=&#34;_blank&#34;&gt;#8817&lt;/a&gt; Windows CE用のコードによって、mingw w64環境でコンパイルができない問題を修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8943&#34; target=&#34;_blank&#34;&gt;#8943&lt;/a&gt; Window上のIntel C++ Composer XE 2013で&lt;code&gt;boost::call_once&lt;/code&gt;を使用したコードのコンパイルに失敗する問題を修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8931&#34; target=&#34;_blank&#34;&gt;#8931&lt;/a&gt; &lt;code&gt;external_locking&lt;/code&gt;のリファレンスにtypoがあったのを修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9029&#34; target=&#34;_blank&#34;&gt;#9029&lt;/a&gt; ドキュメントの誤植を修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9073&#34; target=&#34;_blank&#34;&gt;#9037&lt;/a&gt; gcc &lt;code&gt;-Wshadow&lt;/code&gt;でコンパイルしたときに&lt;code&gt;conditional_variable{,_fwd}.hpp&lt;/code&gt;で警告が発生する問題を修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9041&#34; target=&#34;_blank&#34;&gt;#9041&lt;/a&gt; Boost.Threadの動的共有オブジェクトがBoost.Atomicへのシンボル参照を解決できない問題を修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9048&#34; target=&#34;_blank&#34;&gt;#9048&lt;/a&gt; &lt;code&gt;boost::scoped_thread&lt;/code&gt;の可変長テンプレート引数を使用するコンストラクタが使いにくい問題を修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9079&#34; target=&#34;_blank&#34;&gt;#9079&lt;/a&gt; Windows環境で、Condition variableが永遠にwaitしてしまう問題を修正。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#timer&#34; name=&#34;timer&#34;&gt;Timer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel compilerで&lt;code&gt;progress.hpp&lt;/code&gt;がコンパイルできない問題を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8956&#34; target=&#34;_blank&#34;&gt;#8956&lt;/a&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#type-traits&#34; name=&#34;type-traits&#34;&gt;Type Traits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;is_copy_contructible&lt;/code&gt;トレイト追加 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8802&#34; target=&#34;_blank&#34;&gt;#8802&lt;/a&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;以下の警告を修正&lt;ul&gt;
&lt;li&gt;未使用の変数への警告 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8851&#34; target=&#34;_blank&#34;&gt;#8851&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;未使用の&lt;code&gt;typedef&lt;/code&gt;への警告 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8874&#34; target=&#34;_blank&#34;&gt;#8874&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;いくつかの&lt;code&gt;detail&lt;/code&gt;な関数がADLによってエクスポートされてしまうのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#utility&#34; name=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::result_of&lt;/code&gt;で、デフォルトでTR1のプロトコルを使うようにし、もしこの関数オブジェクトがサポートしていない場合(たとえばC++11のラムダ関数)には&lt;code&gt;decltype&lt;/code&gt;を使うように設定できるようになった。このモードを利用するには&lt;code&gt;BOOST_RESULT_OF_USE_TR1_WITH_DECLTYPE_FALLBACK&lt;/code&gt;環境設定マクロを定義する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::base_from_member&lt;/code&gt;クラステンプレートのC++11対応度向上。このクラスはコンパイラが右辺値参照、可変引数テンプレート、関数テンプレートのデフォルト実引数機能を備えている際に、コンストラクタ実引数の完全転送を実装する&lt;/li&gt;
&lt;li&gt;Boost.Logから&lt;code&gt;boost/utility/explicit_operator_bool.hpp&lt;/code&gt;と&lt;code&gt;boost/utility/empty_deleter.hpp&lt;/code&gt;を受け継いだ。それぞれ、&lt;code&gt;bool&lt;/code&gt;への明示的な型変換演算子となにもしないデリータを定義するためのユーティリティである&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt; rvalueをコンストラクタ/代入演算子の仮引数にしたときコンパイルできない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8988&#34; target=&#34;_blank&#34;&gt;#8988&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ある&lt;code&gt;variant&lt;/code&gt;クラステンプレートが&lt;code&gt;nothrow&lt;/code&gt;コピーコンストラクタと例外を送出するムーヴコンストラクタを持っている場合に、ムーヴ代入演算子がコンパイルできない問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8772&#34; target=&#34;_blank&#34;&gt;#8772&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;例外が無効の環境下でのコンパイルに対応 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8717&#34; target=&#34;_blank&#34;&gt;#8717&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;到達不能コード警告を解消 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8665&#34; target=&#34;_blank&#34;&gt;#8665&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;重複したコードを削除 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7601&#34; target=&#34;_blank&#34;&gt;#7601&lt;/a&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#wave&#34; name=&#34;wave&#34;&gt;Wave&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Waveドライバーが0xFFFFui64トークンを不適切に処理する問題を修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8848&#34; target=&#34;_blank&#34;&gt;#8848&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントに&lt;code&gt;--c++0x&lt;/code&gt;オプションが記載されていたが、実際には不正なオプションになる。ドキュメント表記を&lt;code&gt;--c++11&lt;/code&gt;に修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9098&#34; target=&#34;_blank&#34;&gt;#9098&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#xpressive&#34; name=&#34;xpressive&#34;&gt;Xpressive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;不完全なキャラクタセットについて&lt;code&gt;assert&lt;/code&gt;ではなく例外を投げるようにした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8843&#34; target=&#34;_blank&#34;&gt;#8843&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;未使用の&lt;code&gt;typedef&lt;/code&gt;削除 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8880&#34; target=&#34;_blank&#34;&gt;#8880&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sequence_stack.hpp&lt;/code&gt;で&lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt;のかわりにRAIIを使うようにした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8882&#34; target=&#34;_blank&#34;&gt;#8882&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;clangの&lt;code&gt;-Wimplicit-fallthrough&lt;/code&gt;診断がきちんと動くようにした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8474&#34; target=&#34;_blank&#34;&gt;#8474&lt;/a&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_55_0.html#quickbook&#34; name=&#34;quickbook&#34;&gt;Quickbook&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Quickbook 1.6の言語実装を完了した。詳細は以下を参照&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/doc/html/quickbook/versions.html#quickbook.versions.1_6&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/release/doc/html/quickbook/versions.html#quickbook.versions.1_6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;＜ライブラリ名＞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt; (必要であれば分類分けをする)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;＜追加、変更、削除内容＞ (&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/0&#34; target=&#34;_blank&#34;&gt;#0&lt;/a&gt;) (←svn.boost.orgのissuesへのリンク)&lt;/li&gt;
&lt;li&gt;＜追加、変更、削除内容＞ (&lt;a href=&#34;https://svn.boost.org/trac/boost/changeset/0&#34; target=&#34;_blank&#34;&gt;r0&lt;/a&gt;) (←svn.boost.orgのcommitへのリンク)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;： 赤文字+ボールドではっきりと分かるように&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;ABI変更&lt;/strong&gt;&lt;/span&gt;： これも赤文字で&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[訳注] 本家ノートの記述が不十分であると考えるときは、適宜注釈を入れる&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;参照： &lt;a href=&#34;http://blog.example.com/path/to/references&#34; target=&#34;_blank&#34;&gt;必要であれば外部の文献へのリンクを挿入する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:
- Linux:
    - Clang: 3.3, 3.2, 3.1, 3.0
    - Clang, C++11, libc++: 3.4, 3.3
    - GCC: 4.8.1, 4.7.3, 4.6.3, 4.5.3, 4.4.7
    - GCC, C++11: 4.8.1
    - GCC, C++98: 4.8.1
- OS X:
    - GCC: 4.2
    - Apple Clang: 5.0
    - Apple Clang, C++11: 5.0
- Windows:
    - GCC, mingw: 4.8.0, 4.7.2, 4.6.3, 4.5.4, 4.4.7
    - Visual C++: 11.0, 10.0, 9.0&lt;/p&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang: 5.0&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11: 5.0&lt;/li&gt;
&lt;li&gt;Clang: trunk&lt;/li&gt;
&lt;li&gt;Clang, C++11: trunk&lt;/li&gt;
&lt;li&gt;GCC: 4.2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.3, 3.2, 3.1, 3.0, trunk&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++11, libc++: 3.4, 3.3&lt;/li&gt;
&lt;li&gt;GCC: 4.9.0 (experimental), 4.8.1, 4.7.3, 4.6.4, 4.5.3, 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++98: 4.8.1&lt;/li&gt;
&lt;li&gt;Intel: 13.0.1, 12.1.6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw: 4.8.0, 4.7.2, 4.6.3, 4.5.4, 4.4.7&lt;/li&gt;
&lt;li&gt;Visual C++: 11.0, 10.0, 9.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;Akira Takahashi, Kohei Takahashi, Yuta Hirokawa, zak, sscrisk, hotwatermorning&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.58.0リリースノート -- fenced code block のインデントを、CommonMarkの仕様に合わせた</title>
      <link href="https://boostjp.github.io/document/version/1_58_0.html"/>
      <id>040974f4ee993d11e233b07374fda5cffd5257c2:document/version/1_58_0.md</id>
      <updated>2017-03-29 13:42:28 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.58.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_58_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_58_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_58_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_58_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の不具合&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Pythonは次のバージョン向けにビルドすることが出来ない: 3.0.X, 3.1.X, 3.2.X, 3.3.X&lt;ul&gt;
&lt;li&gt;2.Xもしくは3.4以降にはこの問題はない&lt;/li&gt;
&lt;li&gt;Git上では次の&lt;a href=&#34;https://github.com/boostorg/python/commit/3e405b6fd5db5615bbef241763de070118222ca7&#34; target=&#34;_blank&#34;&gt;コミット&lt;/a&gt;で修正された&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Boost.Fusionはconstexprに出来ない型との間にリグレッションが存在する &lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11211&#34; target=&#34;_blank&#34;&gt;#11211&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;これは次のpull requestで修正された: &lt;a href=&#34;https://github.com/boostorg/fusion/pull/70&#34; target=&#34;_blank&#34;&gt;GitHub PR #70&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/71&#34; target=&#34;_blank&#34;&gt;GitHub PR #71&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/72&#34; target=&#34;_blank&#34;&gt;GitHub PR #72&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パッチ&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/patches/1_58_0/0001-Fix-exec_file-for-Python-3-3.4.patch&#34; target=&#34;_blank&#34;&gt;0001-Fix-exec_file-for-Python-3-3.4.patch&lt;/a&gt; (libs/python ディレクトリ以下で適用する)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/patches/1_58_0/0002-Fix-a-regression-with-non-constexpr-types.patch&#34; target=&#34;_blank&#34;&gt;0002-Fix-a-regression-with-non-constexpr-types.patch&lt;/a&gt; (libs/fusion ディレクトリ以下で適用する)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/endian/&#34; target=&#34;_blank&#34;&gt;Endian&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;プロセッサのエンディアンに関係なく、適切なバイトオーダーに変換する型と関数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/sort/&#34; target=&#34;_blank&#34;&gt;Sort&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;一般的な状況でO(n*log(n))よりも高速な、ハイブリッドな基数ソートであるスプレッドソート(spreadsort)を含む。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#function&#34;&gt;Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#functional-factory&#34;&gt;Functional/Factory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#random&#34;&gt;Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#thread&#34;&gt;Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#type_erasure&#34;&gt;TypeErasure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#units&#34;&gt;Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#asio&#34; name=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10744&#34; target=&#34;_blank&#34;&gt;#10744&lt;/a&gt; Windowsの&lt;code&gt;ConnextEx&lt;/code&gt;関数によって生成されるエラー値を、他の環境でも使えるようマッピングした&lt;/li&gt;
&lt;li&gt;新たなマクロ&lt;code&gt;BOOST_ASIO_DISABLE_CONNECTEX&lt;/code&gt;を追加した。これを使用することによって、&lt;code&gt;ConnectEx&lt;/code&gt;を明示的に無効にできる。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10624&#34; target=&#34;_blank&#34;&gt;#10624&lt;/a&gt; &lt;code&gt;windows::object_handle&lt;/code&gt;の競合状態を修正。これは、破棄に対する操作待ちで起きていた。&lt;/li&gt;
&lt;li&gt;FreeBSD環境でのIPv6アドレスの構文解析を修正。末尾にスコープIDが付いているときに、変換時に&lt;code&gt;EINVAL&lt;/code&gt;が原因で失敗していた。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9465&#34; target=&#34;_blank&#34;&gt;#9465&lt;/a&gt;, &lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11070&#34; target=&#34;_blank&#34;&gt;#11070&lt;/a&gt; Asioのデフォルト可視性を使用した際に起こる、共有ライブラリの可視性問題について回避策を導入。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10828&#34; target=&#34;_blank&#34;&gt;#10828&lt;/a&gt; メモリ内のキーを読み込む際に、パスワードのコールバックを呼び出すようSSLラッパーを変更。&lt;/li&gt;
&lt;li&gt;SSLのエラーキューが各操作の前にクリアした際に起こる、SSLエラーの誤報を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl::stream&amp;lt;&amp;gt;&lt;/code&gt;が擬似的(spurious)に「短く読み込んだ(short read)」エラーを出力する可能性があったバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10088&#34; target=&#34;_blank&#34;&gt;#10088&lt;/a&gt; SSLエンジンの冗長なヌルポインタチェックを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10690&#34; target=&#34;_blank&#34;&gt;#10690&lt;/a&gt; TLS v1.1と1.2を無効にするオプションを追加&lt;/li&gt;
&lt;li&gt;非推奨だったOpenSSLの&lt;code&gt;ERR_remove_state&lt;/code&gt;関数の使用を削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/8835&#34; target=&#34;_blank&#34;&gt;#8835&lt;/a&gt;, &lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10884&#34; target=&#34;_blank&#34;&gt;#10884&lt;/a&gt; ClangでのC++11機能の欠陥を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10982&#34; target=&#34;_blank&#34;&gt;#10982&lt;/a&gt; g++での、C++11の&lt;code&gt;std::addressof&lt;/code&gt;の欠陥を修正&lt;/li&gt;
&lt;li&gt;マルチキャストのテストでの、&lt;code&gt;join_group&lt;/code&gt;の失敗を非致命的に変更&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11116&#34; target=&#34;_blank&#34;&gt;#11116&lt;/a&gt; AsioのテストをBoost.Testから分離した&lt;/li&gt;
&lt;li&gt;チュートリアルで、結果をフラッシュするために&lt;code&gt;std::endl&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;Clangのinteger sanitizerで報告された、符号なし整数のオーバーフローを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yield_context&lt;/code&gt;を使用した非同期操作で、ムーブのみ可能な型を返せるようにした&lt;/li&gt;
&lt;li&gt;初期化関数から完了ハンドラを再入的(reentrant)に呼び出せるようにするため、&lt;code&gt;yield_context&lt;/code&gt;を変更した&lt;/li&gt;
&lt;li&gt;最新のWindows SDKで動作するように、Windows Runtimeの検出方法を更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#chrono&#34; name=&#34;chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン2.0.5&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10778&#34; target=&#34;_blank&#34;&gt;#10778&lt;/a&gt; &lt;code&gt;boost::chrono&lt;/code&gt;の&lt;code&gt;duration&lt;/code&gt;クラスが、&lt;code&gt;TriviallyCopyable&lt;/code&gt;でないために&lt;code&gt;std::atomic&lt;/code&gt;に格納できない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10840&#34; target=&#34;_blank&#34;&gt;#10840&lt;/a&gt; テストコードtest_7868.cppにおいて、&lt;code&gt;puts()&lt;/code&gt;関数の呼び出しが&lt;code&gt;std::&lt;/code&gt;修飾されていなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10851&#34; target=&#34;_blank&#34;&gt;#10851&lt;/a&gt; テストコードtime_point_output.cppにおいて、&lt;code&gt;puts()&lt;/code&gt;関数の呼び出しが&lt;code&gt;std::&lt;/code&gt;修飾されていなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10893&#34; target=&#34;_blank&#34;&gt;#10893&lt;/a&gt; ドキュメントの細かな誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10992&#34; target=&#34;_blank&#34;&gt;#10992&lt;/a&gt; ChronoのIO state saverが、Boost.IO state saverと一貫していない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10995&#34; target=&#34;_blank&#34;&gt;#10995&lt;/a&gt; &lt;code&gt;duration_put::put_value()&lt;/code&gt;で、少数が切り捨てられる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11006&#34; target=&#34;_blank&#34;&gt;#11006&lt;/a&gt; &lt;code&gt;time_fmt_io_saver&lt;/code&gt;のインスタンス化がコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11012&#34; target=&#34;_blank&#34;&gt;#11012&lt;/a&gt; chrono_io v2において、&lt;code&gt;boost::chrono::duration&amp;lt; boost::rational&amp;lt;int&amp;gt; &amp;gt;&lt;/code&gt;がコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;実験的に&lt;code&gt;small_vector&lt;/code&gt;クラスを追加&lt;ul&gt;
&lt;li&gt;小さな要素数に最適化された&lt;code&gt;vector&lt;/code&gt;。テンプレートパラメータで指定された要素数の領域を事前に確保することにより、その要素数を超えない限り、&lt;code&gt;insert()&lt;/code&gt;／&lt;code&gt;push_back()&lt;/code&gt;でメモリ確保を行わない。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static_vector&lt;/code&gt;とは異なり、フリーストアからメモリ確保し、キャパシティを超えた領域の拡張が可能。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://llvm.org/docs/ProgrammersManual.html#llvm-adt-smallvector-h&#34; target=&#34;_blank&#34;&gt;LLVMのSmallVectorクラス&lt;/a&gt;を参考にしている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;依存関係を大規模に見なおした。現在、Boost.Containerは、とても基本的なユーティリティのみをBoost.CoreとBoost.Intrusiveに依存する。プリプロセスされたコードのサイズが小さくなっているため、コンパイル時間が改善する。&lt;/li&gt;
&lt;li&gt;ランダムアクセスイテレータを持つコンテナ(&lt;code&gt;basic_string&lt;/code&gt;以外)に、&lt;code&gt;nth()&lt;/code&gt;、&lt;code&gt;index_of()&lt;/code&gt;メンバ関数を追加。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nth()&lt;/code&gt;は、指定されたインデックスの要素を指すイテレータを取得するメンバ関数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index_of()&lt;/code&gt;は、指定されたイテレータが指す要素のインデックスを取得するメンバ関数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++17の&lt;code&gt;allocator_traits&amp;lt;Allocator&amp;gt;::is_always_equal&lt;/code&gt;を追加。&lt;/li&gt;
&lt;li&gt;コンテナのコンストラクタを、以下の仕様に基づいて更新：&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2210&#34; target=&#34;_blank&#34;&gt;2210. Missing allocator-extended constructor for allocator-aware containers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9931&#34; target=&#34;_blank&#34;&gt;#9931&lt;/a&gt; 再度開かれたチケット「&lt;code&gt;flat_map::insert(ordered_unique_range_t...)&lt;/code&gt;に&lt;code&gt;move_iterator&lt;/code&gt;を渡せない」を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11076&#34; target=&#34;_blank&#34;&gt;#11076&lt;/a&gt; container/detail/copy_move_algo.hppで、&lt;code&gt;memmove()&lt;/code&gt;と&lt;code&gt;memcpy()&lt;/code&gt;を名前空間修飾なしに呼び出していた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10790&#34; target=&#34;_blank&#34;&gt;#10790&lt;/a&gt; Boost.Containerのコンテナに&lt;code&gt;long long&lt;/code&gt;を指定するとコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10808&#34; target=&#34;_blank&#34;&gt;#10808&lt;/a&gt; &lt;code&gt;vector&lt;/code&gt;の等値比較演算子が壊れていたので修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;ソースの破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scoped_allocator_adaptor&lt;/code&gt;クラスの&lt;code&gt;propagate_on_container_copy_assignment&lt;/code&gt;、&lt;code&gt;propagate_on_container_move_assignment&lt;/code&gt;、&lt;code&gt;propagate_on_container_swap&lt;/code&gt;が、&lt;code&gt;::boost::integral_constant&amp;lt;bool, true/false&amp;gt;&lt;/code&gt;ではなくなった。これは、MPLへの依存を減らすため、および&lt;code&gt;std::integral_constant&lt;/code&gt;との相互運用保証がなかったためである。&lt;code&gt;boost::true_type&lt;/code&gt;／&lt;code&gt;boost::false_type&lt;/code&gt;を仮定したコードはコンパイルが通らなくなる。ワークアラウンドとして、内部の&lt;code&gt;::value&lt;/code&gt;定数を使用して&lt;code&gt;::boost::integral_constant&amp;lt;bool, scoped_allocator_adaptor&amp;lt;Allocator&amp;gt;::propagate_on_container_move_assignment::value&amp;gt;&lt;/code&gt;のように書くことで、問題を回避できる。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ARM/iOS (32ビット + 64ビット) をサポート&lt;/li&gt;
&lt;li&gt;C++14向けに&lt;code&gt;execution_context&lt;/code&gt;クラスを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10780&#34; target=&#34;_blank&#34;&gt;#10780&lt;/a&gt; &lt;code&gt;polymorphic_pointer_downcast()&lt;/code&gt;関数と&lt;code&gt;polymorphic_pointer_cast()&lt;/code&gt;関数を追加した(Boris Rasin氏に感謝)&lt;/li&gt;
&lt;li&gt;例外を送出する全ての関数が、&lt;code&gt;boost::throw_exception()&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;ドキュメントを更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#datetime&#34; name=&#34;datetime&#34;&gt;DateTime&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;to_time_t()&lt;/code&gt;関数を復活&lt;/li&gt;
&lt;li&gt;変数&lt;code&gt;v_type&lt;/code&gt;の名前を&lt;code&gt;var_type&lt;/code&gt;に変更。AIXのシステム変数と衝突していたため。&lt;/li&gt;
&lt;li&gt;ドキュメントを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#flyweight&#34; name=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::hash&lt;/code&gt;と&lt;code&gt;boost::hash&lt;/code&gt;でのハッシュサポートを追加。&lt;ul&gt;
&lt;li&gt;この機能は&lt;code&gt;BOOST_FLYWEIGHT_DISABLE_HASH_SUPPORT&lt;/code&gt;をdefineすることによって無効化できる。この無効化機能は、ユーザーが&lt;code&gt;flyweight&lt;/code&gt;クラスを自前でハッシュサポートしていた場合のためにある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正をいくつか行った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#function&#34; name=&#34;function&#34;&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10585&#34; target=&#34;_blank&#34;&gt;#10585&lt;/a&gt; C++11の右辺値、Boost.Moveの右辺値、両方の関数を受け取れるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#functional-factory&#34; name=&#34;functional-factory&#34;&gt;Functional/Factory&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;小さな破壊的変更&lt;/strong&gt;&lt;/span&gt; : アロケータを使用すべきでないことを示すためのデフォルトテンプレートパラメータを、&lt;code&gt;boost::none_t&lt;/code&gt;から&lt;code&gt;void&lt;/code&gt;に変更。これは、Boost.Optionalへの依存をなくすための変更。&lt;ul&gt;
&lt;li&gt;引き続き&lt;code&gt;boost::none_t&lt;/code&gt;を使用したい場合は、&lt;code&gt;BOOST_FUNCTIONAL_FACTORY_SUPPORT_NONE_T&lt;/code&gt;をdefineすること。ただし、この互換性のための機能は、将来のリリースから削除される可能性があることに注意。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/12&#34; target=&#34;_blank&#34;&gt;GitHub PR #12&lt;/a&gt; Fusionのシーケンスを&lt;code&gt;boost::hash&lt;/code&gt;で使えるように&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/51&#34; target=&#34;_blank&#34;&gt;GitHub PR #51&lt;/a&gt; &lt;code&gt;std::reference_wrapper&lt;/code&gt; をサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::tuple&lt;/code&gt; をサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;convert&lt;/code&gt;、&lt;code&gt;mpl::clear&lt;/code&gt;の実装を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/54&#34; target=&#34;_blank&#34;&gt;GitHub PR #54&lt;/a&gt;&lt;/code&gt; Fusionアダプタでの暗黙的な型推論をサポート&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ADAPT_STRUCT&lt;/code&gt;、&lt;code&gt;ADAPT_ADT&lt;/code&gt;、&lt;code&gt;ADAPT_ASSOC_&lt;/code&gt;マクロで、メンバ変数の型を書かなくてよくなった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9813&#34; target=&#34;_blank&#34;&gt;ticket 9813&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/14&#34; target=&#34;_blank&#34;&gt;GitHub PR #14&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/23&#34; target=&#34;_blank&#34;&gt;GitHub PR #23&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub PR #26&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/58&#34; target=&#34;_blank&#34;&gt;GitHub PR #58&lt;/a&gt; C++11/14 constexprのサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10190&#34; target=&#34;_blank&#34;&gt;ticket 10190&lt;/a&gt; &lt;code&gt;std::declval()&lt;/code&gt;の代わりに&lt;code&gt;boost::declval()&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8622&#34; target=&#34;_blank&#34;&gt;ticket 8622&lt;/a&gt; &lt;code&gt;boost::blank&lt;/code&gt;を使用するのをやめた&lt;/li&gt;
&lt;li&gt;いくつかの&lt;code&gt;result_of&lt;/code&gt;をSFINAE-friendlyに&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10443&#34; target=&#34;_blank&#34;&gt;ticket 10443&lt;/a&gt; &lt;code&gt;fusion::result_of::invoke&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub PR #35&lt;/a&gt; &lt;code&gt;fusion::result_of::copy&lt;/code&gt;、&lt;code&gt;fusion::result_of::move&lt;/code&gt;、&lt;code&gt;fusion::result_of::swap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fusion/pull/41&#34; target=&#34;_blank&#34;&gt;GitHub PR #41&lt;/a&gt; &lt;code&gt;fusion::result_of::at_c&lt;/code&gt;、&lt;code&gt;fusion::result_of::at&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7304&#34; target=&#34;_blank&#34;&gt;ticket 7304&lt;/a&gt; &lt;code&gt;result_of::size::value&lt;/code&gt;と&lt;code&gt;result_of::size::type::value&lt;/code&gt;の型が同じになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6507&#34; target=&#34;_blank&#34;&gt;ticket 6507&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7651&#34; target=&#34;_blank&#34;&gt;ticket 7651&lt;/a&gt; &lt;code&gt;result_of::at&amp;lt;Seq, N&amp;gt;::type&lt;/code&gt;は、&lt;code&gt;N&lt;/code&gt;がシーケンスの要素数未満の場合にのみ定義されるようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8457&#34; target=&#34;_blank&#34;&gt;ticket 8457&lt;/a&gt; インクルード漏れを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6090&#34; target=&#34;_blank&#34;&gt;ticket 6090&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5324&#34; target=&#34;_blank&#34;&gt;ticket 5324&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/33&#34; target=&#34;_blank&#34;&gt;GitHub PR #33&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/53&#34; target=&#34;_blank&#34;&gt;GitHub PR #53&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/56&#34; target=&#34;_blank&#34;&gt;GitHub PR #56&lt;/a&gt; 多くのドキュメントを修正 &amp;amp; 改善&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下の記事も参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://flast.hateblo.jp/entry/2015/03/07/181046&#34; target=&#34;_blank&#34;&gt;Boost.Fusion 1.58 updates - にゃははー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#geometry&#34; name=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新たなアルゴリズム&lt;code&gt;num_segments&lt;/code&gt;を追加。このアルゴリズムは、ジオメトリのセグメント数を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_valid&lt;/code&gt;アルゴリズムに、新たなオーバーロードを追加。これは2番目の引数で&lt;code&gt;string&lt;/code&gt;の参照を受け取り、ジオメトリの有効性と無効正に関するメッセージで埋める。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_valid&lt;/code&gt;アルゴリズムに、新たなオーバーロードを追加。これは2番目の引数で&lt;code&gt;enum&lt;/code&gt;の参照を受け取り、ジオメトリの有効性と無効性に関する値を設定する。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disjoint&lt;/code&gt;と&lt;code&gt;intersects&lt;/code&gt;に、以下のジオメトリの組み合わせサポートを追加：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;point&lt;/code&gt;/&lt;code&gt;multipoint&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multipoint&lt;/code&gt;/&lt;code&gt;multipoint&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multipoint&lt;/code&gt;/&lt;code&gt;segment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multipoint&lt;/code&gt;/&lt;code&gt;box&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Buffer&lt;/code&gt;に、&lt;code&gt;linestring&lt;/code&gt;のためのflat-endサポートを追加。&lt;ul&gt;
&lt;li&gt;Buffer now supports flat-ends for linestrings with a bend close to the start (such that buffered segment crosses flat-end).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Buffer&lt;/code&gt;のパフォーマンスを大幅に向上させた。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Polygon&lt;/code&gt;の&lt;code&gt;Partition&lt;/code&gt;のパフォーマンスを大幅に向上させた。全てのオーバーレイ操作が改善する可能性がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8379&#34; target=&#34;_blank&#34;&gt;#8379&lt;/a&gt; 行列式の比較結果が間違っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10108&#34; target=&#34;_blank&#34;&gt;#10108&lt;/a&gt; ジオメトリの一つの点にtouchする特定の状況において、オーバーレイ操作がエラーになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10201&#34; target=&#34;_blank&#34;&gt;#10201&lt;/a&gt; 座標系の比較に、別な関数を使用する提案(wontfix : 問題はあるけれど、いまは修正できない)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10467&#34; target=&#34;_blank&#34;&gt;#10467&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10863&#34; target=&#34;_blank&#34;&gt;#10863&lt;/a&gt; テンプレートパラメータ名がtermios.hの&lt;code&gt;B0&lt;/code&gt;マクロと衝突している&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10640&#34; target=&#34;_blank&#34;&gt;#10640&lt;/a&gt; CCW Polygonにおいて、&lt;code&gt;buffer()&lt;/code&gt;の結果が間違っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10666&#34; target=&#34;_blank&#34;&gt;#10666&lt;/a&gt; MSVCコンパイラの警告C4127 : 「条件式が定数になっている」を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10747&#34; target=&#34;_blank&#34;&gt;#10747&lt;/a&gt; 再スケジューリングが、areal/arealの設定操作が原因でエラーになっている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10770&#34; target=&#34;_blank&#34;&gt;#10770&lt;/a&gt; &lt;code&gt;Buffer&lt;/code&gt;が巨大な距離、もしくはrough round joinで失敗する。失敗する場所は、凹所(concavities)の交差しないところ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10658&#34; target=&#34;_blank&#34;&gt;#10658&lt;/a&gt; &lt;code&gt;sym_difference&lt;/code&gt;が、&lt;code&gt;int&lt;/code&gt;のポリゴンに対して間違った結果を生成する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10835&#34; target=&#34;_blank&#34;&gt;#10835&lt;/a&gt; &lt;code&gt;multilinestring&lt;/code&gt;と&lt;code&gt;polygon&lt;/code&gt;の&lt;code&gt;difference&lt;/code&gt;が、間違った結果を生成する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10861&#34; target=&#34;_blank&#34;&gt;#10861&lt;/a&gt; &lt;code&gt;Rtree&lt;/code&gt;の&lt;code&gt;Value&lt;/code&gt;がポインタを含む&lt;code&gt;pair&lt;/code&gt;もしくは&lt;code&gt;tuple&lt;/code&gt;であり、&lt;code&gt;Geometry&lt;/code&gt;デフォルト比較の&lt;code&gt;equal_to&lt;/code&gt;を使用している場合に、コンパイルエラーになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10887&#34; target=&#34;_blank&#34;&gt;#10887&lt;/a&gt; &lt;code&gt;Linear&lt;/code&gt;/&lt;code&gt;MultiPolygon&lt;/code&gt;の&lt;code&gt;within()&lt;/code&gt;と&lt;code&gt;relate()&lt;/code&gt;が、不正な結果になる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10890&#34; target=&#34;_blank&#34;&gt;#10890&lt;/a&gt; &lt;code&gt;Point&lt;/code&gt;/&lt;code&gt;Segment&lt;/code&gt;の&lt;code&gt;disjoint()&lt;/code&gt;が不正な結果になる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10904&#34; target=&#34;_blank&#34;&gt;#10904&lt;/a&gt; &lt;code&gt;relate_cartesian_segments&lt;/code&gt;戦略において、最上位次元のセグメントの計算が間違っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10912&#34; target=&#34;_blank&#34;&gt;#10912&lt;/a&gt; &lt;code&gt;Areal&lt;/code&gt;/&lt;code&gt;Areal&lt;/code&gt;の&lt;code&gt;within()&lt;/code&gt;と&lt;code&gt;relate()&lt;/code&gt;が、不正な結果になる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10951&#34; target=&#34;_blank&#34;&gt;#10951&lt;/a&gt; WindowsのIntelコンパイラにおいて、&lt;code&gt;/bigobj&lt;/code&gt;フラグを設定するとテストに失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10957&#34; target=&#34;_blank&#34;&gt;#10957&lt;/a&gt; 様々な関係操作において、アサーションが失敗し、不正な結果を出力する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10958&#34; target=&#34;_blank&#34;&gt;#10958&lt;/a&gt; &lt;code&gt;L&lt;/code&gt;/&lt;code&gt;L&lt;/code&gt;と&lt;code&gt;L&lt;/code&gt;/&lt;code&gt;A&lt;/code&gt;の&lt;code&gt;dijoint()&lt;/code&gt;が、不正な結果になる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10959&#34; target=&#34;_blank&#34;&gt;#10959&lt;/a&gt; &lt;code&gt;no_rescale_policy&lt;/code&gt;を使用すると、&lt;code&gt;get_turns()&lt;/code&gt;がアサーションに失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10960&#34; target=&#34;_blank&#34;&gt;#10960&lt;/a&gt; &lt;code&gt;L&lt;/code&gt;/&lt;code&gt;A&lt;/code&gt;の&lt;code&gt;get_turns()&lt;/code&gt;が不正な結果になる。turnが不足している。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10961&#34; target=&#34;_blank&#34;&gt;#10961&lt;/a&gt; &lt;code&gt;L&lt;/code&gt;/&lt;code&gt;A&lt;/code&gt;の&lt;code&gt;get_turns()&lt;/code&gt;が不正な結果になる。linear spikeのtrunが不正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11112&#34; target=&#34;_blank&#34;&gt;#11112&lt;/a&gt; Solarisプラットフォームのマクロ名との衝突により、コンパイルエラーになる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11121&#34; target=&#34;_blank&#34;&gt;#11121&lt;/a&gt; 整数座標系(integral coordinates)の&lt;code&gt;difference()&lt;/code&gt;が不正な結果になる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;multipoint&lt;/code&gt;/&lt;code&gt;polygon&lt;/code&gt;、&lt;code&gt;multipoint&lt;/code&gt;/&lt;code&gt;multipolygon&lt;/code&gt;の距離の計算でのバグを修正(point内部のarealジオメトリを誤って検出していた)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flatten_iterator&lt;/code&gt;の代入演算子で、アクセス違反するバグを修正&lt;/li&gt;
&lt;li&gt;Cartesian segment-segmentの交差戦略のバグを修正。ひとつのセグメントの点への縮退(degenerate)が、ほかへの縮退をしないセグメントと同一線上にあるときに起こる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;centroid()&lt;/code&gt;のバグを修正。たとえばゼロ面積のようなものを計算したときに、非決定的な結果になる&lt;/li&gt;
&lt;li&gt;限られたポイント数のjoinでの、&lt;code&gt;buffer&lt;/code&gt;のバグを修正。&lt;/li&gt;
&lt;li&gt;鋭いコーナーの周りにある限られたポイント数のround joinでの、&lt;code&gt;buffer&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;大きなバッファ距離のjoinでの、&lt;code&gt;buffer&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;ポイント数を追加するround endでの、&lt;code&gt;buffer&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;大きなバッファ距離のflat endでの、&lt;code&gt;buffer&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;大きな負のバッファ距離のinterior ringでの、&lt;code&gt;buffer&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;input rangeが空である場合に、&lt;code&gt;closing_iterator&lt;/code&gt;が動作しないバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multilinestring&lt;/code&gt;を含む閉じたシンプルなlinestringがハンドリングされない、&lt;code&gt;is_simple&lt;/code&gt;のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;の、イテレータの組もしくはRangeを受け取るコンストラクタ(パッキングアルゴリズム)のバグを修正。破棄済みの一時オブジェクトへの参照を使用していた。これは、&lt;code&gt;distance()&lt;/code&gt;と&lt;code&gt;comparable_distance()&lt;/code&gt;にも影響する。このバグは、&lt;code&gt;rtree&lt;/code&gt;もしくは&lt;code&gt;distance()&lt;/code&gt;アルゴリズムで、アサーション失敗やセグメンテーションフォルトなど、予期しない動作をする可能性がある。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;の&lt;code&gt;count()&lt;/code&gt;メンバ関数のバグを修正。破棄済みの一時オブジェクトの参照を使用していた。このバグが起こると、大きの場合に&lt;code&gt;0&lt;/code&gt;が返る。&lt;/li&gt;
&lt;li&gt;Rangeのハンドリング関係のバグを修正。いくつかのアルゴリズムで、非コンテナのRangeをジオメトリとして扱った場合に、コンパイルが通ってしまうことを防止する(Samuel Debionneに感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/functional/pull/3&#34; target=&#34;_blank&#34;&gt;GitHub PR #3&lt;/a&gt; strict aliasing違反を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;コンパイル時の依存関係を削減した。Boost.Containerの変更に対する更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub PR #13&lt;/a&gt; HaikuはXSI共有メモリを持っていないため、このライブラリを使用できない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;とくにフックとイテレータのために、コンパイルの依存関係、ヘッダ、Boost.Preprocessorの使用を削減。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6720&#34; target=&#34;_blank&#34;&gt;Boost Trac #6720&lt;/a&gt; statelessラムダを使用すると、VC11 Beta環境において&lt;code&gt;intrusive::unordered_set::clear_and_dispose&lt;/code&gt;のコンパイルに失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10771&#34; target=&#34;_blank&#34;&gt;#10771&lt;/a&gt; &lt;code&gt;slist&lt;/code&gt;の&lt;code&gt;remove_if&lt;/code&gt;が壊れている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10853&#34; target=&#34;_blank&#34;&gt;#10853&lt;/a&gt; 提案文書に従って&lt;code&gt;pointer_traits&lt;/code&gt;のドキュメントを記載&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10987&#34; target=&#34;_blank&#34;&gt;#10987&lt;/a&gt; &lt;code&gt;any_xxx_node_traits&lt;/code&gt;は参照を返すべきではない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#lexical-cast&#34; name=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5660&#34; target=&#34;_blank&#34;&gt;ticket 5660&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6975&#34; target=&#34;_blank&#34;&gt;ticket 6975&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10639&#34; target=&#34;_blank&#34;&gt;ticket 10639&lt;/a&gt; 浮動小数点数の変換に&lt;code&gt;std::stream&lt;/code&gt;を使用するようにした。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#log&#34; name=&#34;Log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;スレッドIDのフォーマットを修正&lt;/li&gt;
&lt;li&gt;プロセスIDのフォーマットを修正&lt;/li&gt;
&lt;li&gt;GNU Hurdでのビルド失敗を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11016&#34; target=&#34;_blank&#34;&gt;ticket 11016&lt;/a&gt; ファイルシステムの空き領域が使い尽くされている場合の、text file sink backendの間違った挙動を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11106&#34; target=&#34;_blank&#34;&gt;ticket 11106&lt;/a&gt; &lt;code&gt;attribute_set::insert()&lt;/code&gt;がいくつかの場合で正しくない挙動をしており、以前に挿入した要素を見つけられなくなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11148&#34; target=&#34;_blank&#34;&gt;ticket 11148&lt;/a&gt; 属性値集合に多くの属性値が挿入された際に &lt;code&gt;attribute_value_set::size()&lt;/code&gt; が正しくない挙動をしていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;より詳細な変更は、&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;Changelog&lt;/a&gt;を参照。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2つの特殊関数&lt;code&gt;trigamma()&lt;/code&gt;と&lt;code&gt;polygamma()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;楕円積分のコード(Elliptic integral code)に、Carlsonの最新アルゴリズムを使うよう、大規模な更新を行った。この変更によって、以前よりも安定し、より正確になり、若干高速になるはずだ。CarlsonのRG積分のサポートも追加した。&lt;/li&gt;
&lt;li&gt;楕円積分の機能として、&lt;code&gt;ellint_d()&lt;/code&gt;、&lt;code&gt;jacobi_zeta()&lt;/code&gt;、&lt;code&gt;heuman_lambda()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;名前空間内で定義している定数は、&lt;code&gt;constexpr&lt;/code&gt;に準拠したコンパイラであれば&lt;code&gt;constexpr&lt;/code&gt;定数として定義するようにした(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10901&#34; target=&#34;_blank&#34;&gt;#10901&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ベータ関数、ガンマ関数、および楕円積分で、見かけ上のアンダーフローとオーバーフローが起こる様々なケースを修正。Rocco Romeo氏に感謝。&lt;/li&gt;
&lt;li&gt;3引数版の&lt;code&gt;legendre_p()&lt;/code&gt;と&lt;code&gt;legendre_q()&lt;/code&gt;関数に、最後の引数としてポリシーが指定されなかった場合に、オーバーロードされないように修正した。&lt;/li&gt;
&lt;li&gt;不完全な&lt;code&gt;beta()&lt;/code&gt;関数の、いくつかの死んだコードを整理(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10985&#34; target=&#34;_blank&#34;&gt;#10985&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;極値pdfの巨大な値の入力を修正(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10938&#34; target=&#34;_blank&#34;&gt;#10938&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ドキュメントに使用しているグラフと方程式の画像を、PNGからSVGに切り替えた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#move&#34; name=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_MOVE_BASE&lt;/code&gt;ユーティリティを追加した&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adl_move_swap()&lt;/code&gt;ユーティリティを追加した&lt;/li&gt;
&lt;li&gt;他のBoostライブラリへの依存関係を削減し、軽量化した。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11044&#34; target=&#34;_blank&#34;&gt;#11044&lt;/a&gt; &lt;code&gt;boost::rv&lt;/code&gt;が&lt;code&gt;union&lt;/code&gt;から継承するケースがあったので修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#multi-index&#34; name=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;検索で&lt;code&gt;key_type&lt;/code&gt;の一時オブジェクトが作られる状況を効率化した。以下のようなケースだ：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multi_index_container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;indexed_by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ordered_unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;multi_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;multi_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;boost&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// std::stringではなくconst char*として渡される&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;これまでのバージョンでは、&lt;code&gt;find&lt;/code&gt;操作では&lt;code&gt;std::string&lt;/code&gt;型の一時オブジェクトがいくつか作られていた。十分に高度なコンパイラでは、一時オブジェクトはひとつだけ作られるようになった。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;メンテナンス上の修正を行った&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10993&#34; target=&#34;_blank&#34;&gt;#10993&lt;/a&gt; &lt;code&gt;frexp()&lt;/code&gt;関数は、Expression templateを常に使わないようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10924&#34; target=&#34;_blank&#34;&gt;#10924&lt;/a&gt; Cygwinやその他のプラットフォームでの&lt;code&gt;cpp_dec_float&lt;/code&gt;のサポートを改善した。&lt;code&gt;long double&lt;/code&gt;のサポートが欠如していた。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10990&#34; target=&#34;_blank&#34;&gt;#10990&lt;/a&gt; &lt;code&gt;noexcept&lt;/code&gt;のサポートを改善し、さらなるテストを追加した。&lt;/li&gt;
&lt;li&gt;Intel 15.0とSolaris 12.4向けの、様々なワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#optional&#34; name=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントの改善および、IO操作とヘッダファイルについての記載&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::none_t&lt;/code&gt;は即値の&lt;code&gt;0&lt;/code&gt;から変換できなくなった。これは&lt;code&gt;optional&amp;lt;rational&amp;lt;int&amp;gt;&amp;gt; oi = 0&lt;/code&gt;の様な例で値を格納していないoptionalのオブジェクトが生成されるのを防ぐためである&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_OPTIONAL_CONFIG_NO_RVALUE_REFERENCES&lt;/code&gt;を定義することでムーヴセマンティックスを無効化できるようにした。これは&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10399&#34; target=&#34;_blank&#34;&gt;ticket 10399&lt;/a&gt;のためのワークアラウンドである&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10825&#34; target=&#34;_blank&#34;&gt;ticket 10825&lt;/a&gt; &lt;code&gt;optional_io.hpp&lt;/code&gt;のインクルードを忘れていた際に、&lt;code&gt;optional&lt;/code&gt;をストリームに渡すとリンクタイムエラーとなっていたのをコンパイルエラーとするように改良&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11087&#34; target=&#34;_blank&#34;&gt;ticket 11087&lt;/a&gt; &lt;code&gt;U&lt;/code&gt;が&lt;code&gt;T&lt;/code&gt;に代入若しくは変換できない場合に&lt;code&gt;optional&amp;lt;U&amp;gt;&lt;/code&gt;を&lt;code&gt;optional&amp;lt;T&amp;gt;&lt;/code&gt;に代入できてしまっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10839&#34; target=&#34;_blank&#34;&gt;ticket 10839&lt;/a&gt; &lt;code&gt;optional&amp;lt;T&amp;amp;&amp;gt;&lt;/code&gt;の値をmoveできなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#phoenix&#34; name=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン3.2.0&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;オプショナルな拡張として、遅延リストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新たなコード例&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::bind()&lt;/code&gt;と&lt;code&gt;boost::phoenix::bind()&lt;/code&gt;の互換性を示すためのコード例&lt;code&gt;bind_goose&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10927&#34; target=&#34;_blank&#34;&gt;#10927&lt;/a&gt; &lt;code&gt;phoenix/test/stdlib/cmath.cpp&lt;/code&gt;での&lt;code&gt;fabs()&lt;/code&gt;関数の呼び出しに、&lt;code&gt;std::&lt;/code&gt;修飾が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11085&#34; target=&#34;_blank&#34;&gt;#11085&lt;/a&gt; &lt;code&gt;phoenix/test/function/function_tests.cpp&lt;/code&gt;での&lt;code&gt;pow()&lt;/code&gt;関数の呼び出しに、&lt;code&gt;std::&lt;/code&gt;修飾が抜けていた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bind&lt;/code&gt;と&lt;code&gt;lambda&lt;/code&gt;と&lt;code&gt;let&lt;/code&gt;の、いくつかのテストケースが失敗していたので修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン1.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio 2015のバージョン番号が間違っていたので修正&lt;/li&gt;
&lt;li&gt;Haiku OSを判定するためのマクロ名が&lt;code&gt;BOOST_OS_BEOS&lt;/code&gt;になっていたので、&lt;code&gt;BOOST_OS_HAIKU&lt;/code&gt;に修正。&lt;/li&gt;
&lt;li&gt;Android OSでのエンディアン判定が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;predef_check&lt;/code&gt;プログラムと、ビルド構成チェックのためのBBv2インテグレーションを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#random&#34; name=&#34;random&#34;&gt;Random&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E9%9D%9E%E5%BF%83%E3%82%AB%E3%82%A4%E4%BA%8C%E4%B9%97%E5%88%86%E5%B8%83&#34; target=&#34;_blank&#34;&gt;非心カイ二乗分布&lt;/a&gt;である&lt;code&gt;non_central_chi_squared_distribution&lt;/code&gt;クラスを追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/smart-pointers&#34; name=&#34;smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enable_shared_from_this&lt;/code&gt;クラスに、&lt;code&gt;this&lt;/code&gt;を指す&lt;code&gt;weak_ptr&lt;/code&gt;を返す&lt;code&gt;weak_from_this()&lt;/code&gt;メンバ関数を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#thread&#34; name=&#34;thread&#34;&gt;Thread&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン4.5.0&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;実験的な新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9600&#34; target=&#34;_blank&#34;&gt;#9600&lt;/a&gt; Async: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4088.pdf&#34; target=&#34;_blank&#34;&gt;n4088&lt;/a&gt;ベースの&lt;code&gt;task_region&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10611&#34; target=&#34;_blank&#34;&gt;#10611&lt;/a&gt; emplace版の&lt;code&gt;promise::set_value&lt;/code&gt;と&lt;code&gt;emplace make_ready_future&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10826&#34; target=&#34;_blank&#34;&gt;#10826&lt;/a&gt; スケジューラによるExecutorを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11048&#34; target=&#34;_blank&#34;&gt;#11048&lt;/a&gt; 継続ベースの&lt;code&gt;serial_executor&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6787&#34; target=&#34;_blank&#34;&gt;#6787&lt;/a&gt; システム時刻が巻き戻った時に&lt;code&gt;boost::thread::sleep()&lt;/code&gt;がハングしていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10734&#34; target=&#34;_blank&#34;&gt;#10734&lt;/a&gt; &lt;code&gt;submit&lt;/code&gt;関数が異なるExecutorで異なる挙動をしていたのを修正。方や例外を投げ、方やエラーを握りつぶしていた(thread_executorとinline_executor)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10736&#34; target=&#34;_blank&#34;&gt;#10736&lt;/a&gt; タスクが投げた例外を握りつぶしていた。一貫性の為に&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3785.pdf&#34; target=&#34;_blank&#34;&gt;N3785&lt;/a&gt;で提案された様に&lt;code&gt;std::terminate&lt;/code&gt;を呼ぶ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10737&#34; target=&#34;_blank&#34;&gt;#10737&lt;/a&gt; &lt;code&gt;serial_executor&lt;/code&gt;において、タスクが例外を投げた場合に永遠に待ち続けるのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10822&#34; target=&#34;_blank&#34;&gt;#10822&lt;/a&gt; AndroidでBoost.Threadがコンパイル出来なかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10824&#34; target=&#34;_blank&#34;&gt;#10824&lt;/a&gt; 1.57において、Windows XP SP2以前との互換性に問題があったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10963&#34; target=&#34;_blank&#34;&gt;#10963&lt;/a&gt; &lt;code&gt;future&amp;lt;future&amp;lt;T&amp;gt;&amp;gt;::then&lt;/code&gt;を実装した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10964&#34; target=&#34;_blank&#34;&gt;#10964&lt;/a&gt; &lt;code&gt;future&amp;lt;future&amp;lt;T&amp;gt;&amp;gt;::unwrap().then()&lt;/code&gt;のデッドロックを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10968&#34; target=&#34;_blank&#34;&gt;#10968&lt;/a&gt; &lt;code&gt;async()&lt;/code&gt;が返す&lt;code&gt;future&lt;/code&gt;への&lt;code&gt;future::then()&lt;/code&gt;はブロックしなくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10971&#34; target=&#34;_blank&#34;&gt;#10971&lt;/a&gt; &lt;code&gt;shared_future::get()&lt;/code&gt;と&lt;code&gt;shared_future::get_or()&lt;/code&gt;はconst修飾された&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10972&#34; target=&#34;_blank&#34;&gt;#10972&lt;/a&gt; &lt;code&gt;shared_future::then()&lt;/code&gt;を複数回呼んでも問題なくなった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10979&#34; target=&#34;_blank&#34;&gt;#10979&lt;/a&gt; &lt;code&gt;make_ready_future&lt;/code&gt;に渡された&lt;code&gt;reference_wrapper&amp;lt;T&amp;gt;&lt;/code&gt;を&lt;code&gt;T&amp;amp;&lt;/code&gt;に推論するようになった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10996&#34; target=&#34;_blank&#34;&gt;#10996&lt;/a&gt; Windowsで&lt;code&gt;thread::physical_concurrency()&lt;/code&gt;が失敗していたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11035&#34; target=&#34;_blank&#34;&gt;#11035&lt;/a&gt; Androidで&lt;code&gt;BOOST_HAS_PTHREAD_MUTEXATTR_SETTYPE&lt;/code&gt;が定義されていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11053&#34; target=&#34;_blank&#34;&gt;#11053&lt;/a&gt; &lt;code&gt;run_thread_exit_callbacks&lt;/code&gt;で純粋仮想関数の呼び出しが行われていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#type_erasure&#34; name=&#34;type_erasure&#34;&gt;TypeErasure&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC12でのコンパイルエラーを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;プラットフォームがサポートしている場合、リンク時のアサーションを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#units&#34; name=&#34;units&#34;&gt;Units&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;任意の次元における基底単位を修正(&lt;a href=&#34;https://github.com/boostorg/units/commit/423adb31c1eb9687d21a8af5506830a0de53a464&#34; target=&#34;_blank&#34;&gt;commit 423adb&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;状態を持ったアロケータを使った際のmove代入演算子の修正 (&lt;code&gt;propagate_on_container_move_assign&lt;/code&gt;) (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10777&#34; target=&#34;_blank&#34;&gt;#10777&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;バケットの数を計算する際にオーバーフローする可能性があったのを修正 &lt;a href=&#34;https://github.com/boostorg/unordered/pull/4&#34; target=&#34;_blank&#34;&gt;pull request 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;その他の変更については&lt;a href=&#34;http://www.boost.org/doc/libs/master/doc/html/unordered/changes.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_58_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;: 取得関数(&lt;code&gt;boost::get&amp;lt;U&amp;gt;(VariantT)&lt;/code&gt;及び&lt;code&gt;boost::polymorphic_get&amp;lt;U&amp;gt;(VariantT)&lt;/code&gt;)について、コンパイル時に検査を行う様に変更。新しい取得関数は&lt;code&gt;U&lt;/code&gt;が&lt;code&gt;VariantT&lt;/code&gt;に格納でき無い場合コンパイルエラーとなる。&lt;code&gt;BOOST_VARIANT_USE_RELAXED_GET_BY_DEFAULT&lt;/code&gt;を定義することでデフォルトの挙動を戻すことが出来る。&lt;code&gt;get.hpp&lt;/code&gt;、&lt;code&gt;polymorphic_get.hpp&lt;/code&gt;及び&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/547&#34; target=&#34;_blank&#34;&gt;#547&lt;/a&gt;を参照のこと&lt;/li&gt;
&lt;li&gt;不足していた比較関数を追加 &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8620&#34; target=&#34;_blank&#34;&gt;#8620&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10811&#34; target=&#34;_blank&#34;&gt;#10811&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ドキュメントの修正 &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10273&#34; target=&#34;_blank&#34;&gt;#10273&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10653&#34; target=&#34;_blank&#34;&gt;#10653&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clangで可変長テンプレートを有効に &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10832&#34; target=&#34;_blank&#34;&gt;#10832&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VisitorにてC++14の自動的な戻り値の型推論をできるようにした。これにより&lt;code&gt;boost::apply_visitor&lt;/code&gt;でgeneric lambdasを使用することができるようになる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;  &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply_visitor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;[](&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexical_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;variant_instance&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.9.2&lt;/li&gt;
&lt;li&gt;GCC, C++98: 4.8.1, 4.8.2&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.8.4, 4.9.2&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw: 4.4.7, 4.5.4, 4.6.3, 4.7.3, 4.8.2&lt;/li&gt;
&lt;li&gt;Visual C++: 8.0, 9.0, 10.0, 11.0, 12.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC: 4.2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5, 3.6&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.6.4, 4.7.3, 4.8.1, 4.9.2, 5.0.0 (experimental)&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.8.4, 4.9.2&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw: 4.4.7, 4.5.4, 4.6.4, 4.7.3&lt;/li&gt;
&lt;li&gt;Visual C++: 8.0, 9.0, 10.0, 11.0, 12.0, 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.5&lt;/li&gt;
&lt;li&gt;GCC: 4.8, 4.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC: 4.2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.59.0リリースノート -- fenced code block のインデントを、CommonMarkの仕様に合わせた</title>
      <link href="https://boostjp.github.io/document/version/1_59_0.html"/>
      <id>040974f4ee993d11e233b07374fda5cffd5257c2:document/version/1_59_0.md</id>
      <updated>2017-03-29 13:42:28 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.59.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_59_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_59_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_59_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_59_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;既知の不具合&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11549&#34; target=&#34;_blank&#34;&gt;#11549&lt;/a&gt; Logライブラリに、いくつかのロギング文のコンパイルが通らない問題がある。この問題は、以下のコミットで修正された &lt;a href=&#34;https://github.com/boostorg/log/commit/7da193fde1a9c1bc925ee980339f4df2e1a66fa7&#34; target=&#34;_blank&#34;&gt;commit 7da193f&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/convert&#34; target=&#34;_blank&#34;&gt;Convert&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;拡張性のある型変換フレームワーク&lt;/li&gt;
&lt;li&gt;Vladimir Batov作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/libs/coroutine2&#34; target=&#34;_blank&#34;&gt;Coroutine2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++14で記述されたコルーチンライブラリ&lt;ul&gt;
&lt;li&gt;訳註: 既に存在するBoost.Coroutineはdeprecatedとなり、メンテナンスのみ行うという宣言がOliverよりされている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Oliver Kowalke作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#property-tree&#34;&gt;Property Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/26&#34; target=&#34;_blank&#34;&gt;GitHub #26&lt;/a&gt;: &lt;code&gt;stable_vector::capacity()&lt;/code&gt;のバグを修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/timsong-cpp&#34; target=&#34;_blank&#34;&gt;Arindam Mukerjee&lt;/a&gt;に感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/27&#34; target=&#34;_blank&#34;&gt;GitHub #27&lt;/a&gt;: &lt;code&gt;stable_vector::index_of&lt;/code&gt;のdoxygenコメントを修正&lt;ul&gt;
&lt;li&gt;kariya-mitsuruに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11380&#34; target=&#34;_blank&#34;&gt;#11380&lt;/a&gt;: &lt;code&gt;gcc&lt;/code&gt;と&lt;code&gt;libc++&lt;/code&gt;の組み合わせ下において&lt;code&gt;std_fwd.hpp&lt;/code&gt;内のコンテナの前方宣言が正しくなかったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11388&#34; target=&#34;_blank&#34;&gt;#11388&lt;/a&gt;: Visual Studio 2010において&lt;code&gt;boost::container::list::emplace_back&lt;/code&gt;が壊れていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11339&#34; target=&#34;_blank&#34;&gt;#11339&lt;/a&gt;: &lt;code&gt;VC12 LNK2005 error&lt;/code&gt;が&lt;code&gt;boost::container::adaptive_pool&lt;/code&gt;で起きていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11223&#34; target=&#34;_blank&#34;&gt;#11223&lt;/a&gt; &lt;code&gt;std::integer_sequence&lt;/code&gt;サポートのチェックを追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_USE_WINFIBERS&lt;/code&gt;をdefineすると、&lt;code&gt;execution_context&lt;/code&gt;の内部でWindowsのFiberを使用するようにした&lt;/li&gt;
&lt;li&gt;32ビットWindows上のMinGWでのアセンブラをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#coroutine&#34; name=&#34;coroutine&#34;&gt;Coroutine&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10978&#34; target=&#34;_blank&#34;&gt;#10978&lt;/a&gt; 不要なセミコロンを削除&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11230&#34; target=&#34;_blank&#34;&gt;#11230&lt;/a&gt; &lt;code&gt;coroutine_error&lt;/code&gt;のエラーメッセージがダングリングポインタとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11234&#34; target=&#34;_blank&#34;&gt;#11234&lt;/a&gt; &lt;code&gt;boost::range::algorithms&lt;/code&gt;との組み合わせでコンパイルエラーとなっていたのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11356&#34; target=&#34;_blank&#34;&gt;#11356&lt;/a&gt;  &lt;code&gt;BOOST_USE_SEGMENTED_STACKS&lt;/code&gt;でコルーチンがセグメンテーションフォルトしていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいコンセプトが追加された。シーケンスには&lt;code&gt;Unbounded Sequence&lt;/code&gt;、イテレータには&lt;code&gt;Unbounded Iterator&lt;/code&gt;が追加された (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/85&#34; target=&#34;_blank&#34;&gt;pull-request 85&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;現在、&lt;code&gt;Unbounded Sequence&lt;/code&gt;は&lt;code&gt;fusion::(value_)at(_c)&lt;/code&gt;及び&lt;code&gt;fusion::(value_)at_key&lt;/code&gt;の挙動に影響を与える&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unbounded Iterator&lt;/code&gt;は現在効果を持たない（今後のリリースのために予約されている）&lt;/li&gt;
&lt;li&gt;詳細はそれぞれ次のドキュメントを参照のこと：&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/libs/fusion/doc/html/fusion/sequence/concepts/unbounded_sequence.html&#34; target=&#34;_blank&#34;&gt;Unbounded Sequence&lt;/a&gt;及び&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/libs/fusion/doc/html/fusion/iterator/concepts/unbounded_iterator.html&#34; target=&#34;_blank&#34;&gt;Unbounded Iterator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::list&lt;/code&gt;がC++11の可変長テンプレートに対応した (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/84&#34; target=&#34;_blank&#34;&gt;pull-request 84&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;utility&amp;gt;&lt;/code&gt;のインクルード忘れを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11161&#34; target=&#34;_blank&#34;&gt;#11161&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;いくつかの&lt;code&gt;constexpr&lt;/code&gt;のサポートを差し戻した (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11211&#34; target=&#34;_blank&#34;&gt;#11211&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11267&#34; target=&#34;_blank&#34;&gt;#11267&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;インクルード忘れによる&lt;code&gt;fold&lt;/code&gt;のコンパイルエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11249&#34; target=&#34;_blank&#34;&gt;#11249&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;空の構造体がアダプトできなくなっていたのを修正 (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11269&#34; target=&#34;_blank&#34;&gt;#11269&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;古すぎる（そして既に正しくない）回避策を削除。これはMSVC-8もしくはそれ以前にのみ影響がある (&lt;a href=&#34;https://github.com/boostorg/fusion/pull/78&#34; target=&#34;_blank&#34;&gt;pull-request 78&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::list&lt;/code&gt;から派生したシーケンスをコピーする際に起こっていたコンパイルエラーを修正 (&lt;strong&gt;1.58.0でのリグレッション&lt;/strong&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/87&#34; target=&#34;_blank&#34;&gt;pull-request 87&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::tuple&lt;/code&gt;をコピーする際のコンパイルエラーを修正 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11140&#34; target=&#34;_blank&#34;&gt;#11141&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GCC 4.6用の回避策を追加 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11517&#34; target=&#34;_blank&#34;&gt;#11517&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#geometry&#34; name=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boost.Rangeをサポートするために、&lt;code&gt;rtree&lt;/code&gt;に、&lt;code&gt;const_iterator&lt;/code&gt;、&lt;code&gt;begin()&lt;/code&gt;、&lt;code&gt;end()&lt;/code&gt;を追加。&lt;/li&gt;
&lt;li&gt;C++11の&lt;code&gt;initializer_list&lt;/code&gt;をサポート。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disjoint()&lt;/code&gt;と&lt;code&gt;intersects()&lt;/code&gt;に、以下の組み合わせサポートを追加：&lt;ul&gt;
&lt;li&gt;multipoint/linestring&lt;/li&gt;
&lt;li&gt;multipoint/multilinestring&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;relate()&lt;/code&gt;、&lt;code&gt;relation()&lt;/code&gt;アルゴリズムを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intersection()&lt;/code&gt;に、pointlikeとlinearの組み合わせサポートを追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difference(pointlike, linear)&lt;/code&gt;の実装を追加。&lt;/li&gt;
&lt;li&gt;新アルゴリズム&lt;code&gt;is_empty()&lt;/code&gt;を追加。これはジオメトリが空集合を持つ場合に&lt;code&gt;true&lt;/code&gt;を返す。&lt;/li&gt;
&lt;li&gt;spherical equatorial座標系の&lt;code&gt;envelope()&lt;/code&gt;アルゴリズムに、pointlikeとlinearの組み合わせサポートを追加。&lt;/li&gt;
&lt;li&gt;geographic座標系の&lt;code&gt;envelope()&lt;/code&gt;アルゴリズムに、pointlikeジオメトリのサポートを追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;改善点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rtree&lt;/code&gt;の&lt;code&gt;const_query_iterator&lt;/code&gt;を、ForwardIteratorの分類にした。&lt;/li&gt;
&lt;li&gt;multi-point周りのbufferの、bufferのパフォーマンスを大幅に改善した。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;buffer side strategyが、&lt;code&gt;bool&lt;/code&gt;の代わりに&lt;code&gt;error_code&lt;/code&gt;を返すようになった。site strategyを自分用にカスタマイズするのであれば、これに適応させる必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11113&#34; target=&#34;_blank&#34;&gt;#11113&lt;/a&gt; &lt;code&gt;rtree&lt;/code&gt;を&lt;code&gt;BOOST_FOREACH&lt;/code&gt;で回せるようにする&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11232&#34; target=&#34;_blank&#34;&gt;#11232&lt;/a&gt; &lt;code&gt;relate()&lt;/code&gt;機能のリクエスト&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11236&#34; target=&#34;_blank&#34;&gt;#11236&lt;/a&gt; 整数座標系で、&lt;code&gt;centroid()&lt;/code&gt;の結果が間違っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11268&#34; target=&#34;_blank&#34;&gt;#11268&lt;/a&gt; &lt;code&gt;intersection()&lt;/code&gt;の&lt;code&gt;multi_linestring&lt;/code&gt;と&lt;code&gt;box&lt;/code&gt;に対する組み合わせのレギュレッションを修正。1.57と1.55でコンパイルが通らなかった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11332&#34; target=&#34;_blank&#34;&gt;#11332&lt;/a&gt; 極端な座標値の&lt;code&gt;buffer&lt;/code&gt;でアサーションに失敗する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11346&#34; target=&#34;_blank&#34;&gt;#11346&lt;/a&gt; segment iteratorが参照ではなく値を返すため、Rangeで動作しなかった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11436&#34; target=&#34;_blank&#34;&gt;#11436&lt;/a&gt; &lt;code&gt;sym_difference(py1, py2, mpy)&lt;/code&gt;が間違った&lt;code&gt;multipolygon&lt;/code&gt;を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Buffer&lt;/code&gt; : &lt;code&gt;intersection()&lt;/code&gt;を計算する、より強力な方法を使用することによって、バッファ生成時のいくつかのエラーを修正。&lt;/li&gt;
&lt;li&gt;2つのセグメントの交差(intersection)において、セグメントの選択がIPから行われていたのを修正。segment-pointの近傍のpoint、もしくは他の最短のセグメントを選択するようになった。これは、(ほとんど発生しない)無効な出力ポリゴンを作る小さな三角形の生成を回避する。&lt;/li&gt;
&lt;li&gt;整数グリッドに丸める代わりに、roundの再スケーリングを行うようにした。(この修正は、これまでのジオメトリ生成にいくつかの影響がある)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;detail::has_spikes()&lt;/code&gt;の、無限ループになる可能性があった部分を修正した。(このループは、渡されたpointがNaN座標を持っているときに起こり得た)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5139&#34; target=&#34;_blank&#34;&gt;#5139&lt;/a&gt; &lt;code&gt;boost::interprocess::basic_vectorstream&lt;/code&gt;の初期位置が不正だったのを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/19&#34; target=&#34;_blank&#34;&gt;GitHub Pull #19&lt;/a&gt; 例外オブジェクトの可視性を修正&lt;ul&gt;
&lt;li&gt;Romain-Geisslerに感謝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;mapとmulti_mapに似たインターフェースを実装&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/1_59_0/doc/html/intrusive/map_multimap.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/doc/libs/1_59_0/doc/html/intrusive/map_multimap.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;テンプレートの実体化を減らすためにハッシュテーブルを使うコンテナをリファクタリング&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#lexical-cast&#34; name=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;警告を修正&lt;/li&gt;
&lt;li&gt;メタプログラムを整理し、簡易化した(Edward Diener氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;全体的な変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gcc.gnu.org/wiki/Visibility&#34; target=&#34;_blank&#34;&gt;シンボル可視性&lt;/a&gt;をサポートし、このライブラリの内部的なシンボルを隠した。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的な変更&lt;/strong&gt;&lt;/span&gt; : このライブラリの下層の型(underlying types)の管理に、Boost.TypeIndexを使用するようにした。これによって、以下のpublicインタフェースが影響を受ける：&lt;ul&gt;
&lt;li&gt;このライブラリでは、問題のある型の説明のために&lt;code&gt;invalid_type&lt;/code&gt;例外を送出しているが、それに&lt;code&gt;typeindex::type_index&lt;/code&gt;が付加されるようになった。これまでは、&lt;code&gt;type_info_wrapper&lt;/code&gt;型を使用していた。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type_info_info&lt;/code&gt;例外のエラー情報には、&lt;code&gt;type_info_wrapper&lt;/code&gt;の代わりに&lt;code&gt;typeindex::type_index&lt;/code&gt;を含めるようになった。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attribute_value::get_type()&lt;/code&gt;関数は、&lt;code&gt;type_info_wrapper&lt;/code&gt;の代わりに&lt;code&gt;typeindex::type_index&lt;/code&gt;を返すようになった。また、ユーザー定義の属性値の実装も同様に、変更する必要がある。(&lt;code&gt;attribute_value::impl::get_type()&lt;/code&gt;仮想メンバ関数も、&lt;code&gt;typeindex::type_index&lt;/code&gt;型を返すようになった)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type_info_wrapper&lt;/code&gt;コンポーネントは非推奨となり、詳細のリリースから削除される予定。代わりに、Boost.TypeIndexを推奨する。&lt;/li&gt;
&lt;li&gt;以前から非推奨だった、以下のヘッダを削除：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/intrusive_ref_counter.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/explicit_operator_bool.hpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost/log/utility/empty_deleter.hpp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11446&#34; target=&#34;_blank&#34;&gt;#11446&lt;/a&gt; OpenBSDのビルドをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11398&#34; target=&#34;_blank&#34;&gt;#11398&lt;/a&gt; イベント同期プリミティブの内部実装に、非同期ログを使用するよう改善した。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11190&#34; target=&#34;_blank&#34;&gt;#11190&lt;/a&gt; いくつかのケースで、&lt;code&gt;attribute_value_set::insert()&lt;/code&gt;関数と&lt;code&gt;attribute_value_set&lt;/code&gt;のコンストラクタがおかしい動作をしていたのを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらなる詳細は、&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;Changelog&lt;/a&gt;を参照。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#move&#34; name=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unique_ptr&lt;/code&gt;の変換コンストラクタを、C++03では値でパラメータを受け取るよう変更した。&lt;ul&gt;
&lt;li&gt;C++03 : &lt;code&gt;unique_ptr(unique_ptr&amp;lt;U, E&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;C++11 : &lt;code&gt;unique_ptr(unique_ptr&amp;lt;U, E&amp;gt;&amp;amp;&amp;amp;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11229&#34; target=&#34;_blank&#34;&gt;#11229&lt;/a&gt; &lt;code&gt;vector&lt;/code&gt;がムーブのみ可能な型に対して&lt;code&gt;memcpy&lt;/code&gt;していた問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#multi-index&#34; name=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ranked indicesを追加&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;predef_check&lt;/code&gt;機能のさまざまな問題を修正&lt;/li&gt;
&lt;li&gt;Oracleからの最新バージョンのコンパイラに合わせて、SunProの検出機能を更新&lt;/li&gt;
&lt;li&gt;Boost.Build側に対する&lt;code&gt;predef_check&lt;/code&gt;式に、&lt;code&gt;and&lt;/code&gt;と&lt;code&gt;or&lt;/code&gt;の論理演算子を追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ARCH_PARISC&lt;/code&gt;の綴りを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MAKE_YYYYM&lt;/code&gt;マクロの、月を正しく制限するよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#property-tree&#34; name=&#34;property-tree&#34;&gt;Property Tree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいJSONパーサーで、Unicodeを完全サポートした。&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; 新しいパーサーでは、JSONファイル中のコメントや文字列連結をサポートしない。古いパーサーの非標準機能が削除されたため、それらの機能に依存したコードが壊れる可能性がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVCとMinGW環境下において、&lt;code&gt;dllexport&lt;/code&gt;が無いことによる警告とコンパイルエラーを修正 (Daniela Engert, Marcel Raad)&lt;/li&gt;
&lt;li&gt;未初期化のフィールドを修正 (Zoey Greer)&lt;/li&gt;
&lt;li&gt;暗黙の値を持ったオプションがそれ以上トークンを処理するのを抑止 (Michael John Decker)&lt;/li&gt;
&lt;li&gt;複数のトークンを受け取るオプションの上限を32k個ではなくintのmaxに緩和 (Hans Hohenfeld)&lt;ul&gt;
&lt;li&gt;訳者註: intのmaxではなくunsigned intのmaxが使用される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;コードの整形とドキュメントの修正 (Jurko Gospodnetić, Lauri Nurmi)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no-rtti&lt;/code&gt;の最低限のサポート (Minmin Gong)&lt;/li&gt;
&lt;li&gt;環境変数のポインタをendの次までインクリメントしてしまうのを修正 (Vladimir Prus)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン3に、メジャーアップデート&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;汎用的なテストマクロ&lt;code&gt;BOOST_TEST&lt;/code&gt;を追加。&lt;ul&gt;
&lt;li&gt;たとえば、&lt;code&gt;BOOST_CHECK_EQUAL(a, b)&lt;/code&gt;の代わりに&lt;code&gt;BOOST_TEST(a == b)&lt;/code&gt;を使用できる。&lt;/li&gt;
&lt;li&gt;このマクロには、任意の条件式を指定できる。ただし、&lt;code&gt;||&lt;/code&gt;演算子および&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;は直接使用できないため、&lt;code&gt;BOOST_TEST((true || false))&lt;/code&gt;のように丸カッコで条件式を囲む必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;データ駆動のテストケース(パラメタライズドテスト)
  &lt;br /&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;BOOST_TEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;124&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;BOOST_AUTO_TEST_CASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_case1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;…&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// パラメータ&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 各パラメータをtest1()関数に渡してテストを実行&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BOOST_PARAM_TEST_CASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;テストの細かな挙動を制御するための「属性(attribute)」機能を追加&lt;ul&gt;
&lt;li&gt;たとえば、論理グループ化、テストの依存関係、テストの有効化・無効化などに使用する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CLIから学んだ、色付けのための&lt;code&gt;colour_output&lt;/code&gt;、テストケースのリストアップのための&lt;code&gt;list_content&lt;/code&gt;、および拡張ユニットテストフィルタリング(否定、ラベル)を追加&lt;/li&gt;
&lt;li&gt;Quickbookを使用して、ドキュメントのリファクタと書き直しを行った。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;取り組んだ問題&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2018&#34; target=&#34;_blank&#34;&gt;#2018&lt;/a&gt; 「実行時パラメータのリファレンス」章のドキュメントにおける、英語文法的な間違い、およびコマンドライン引数名の間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2450&#34; target=&#34;_blank&#34;&gt;#2450&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、数式が正しく表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2018&#34; target=&#34;_blank&#34;&gt;#2717&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_EQUAL_COLLECTION&lt;/code&gt;ドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/2759&#34; target=&#34;_blank&#34;&gt;#2759&lt;/a&gt; new-year-resolution.htmlドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3182&#34; target=&#34;_blank&#34;&gt;#3182&lt;/a&gt; メモリリークの検出レポートを出力するファイルを、指定できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3316&#34; target=&#34;_blank&#34;&gt;#3316&lt;/a&gt; &lt;code&gt;init_tests_func()&lt;/code&gt;からログを出力しようとするとアクセス違反が起こる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3392&#34; target=&#34;_blank&#34;&gt;#3392&lt;/a&gt; &lt;code&gt;BOOST_TEST_PASSPOINT&lt;/code&gt;マクロのドキュメントが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3402&#34; target=&#34;_blank&#34;&gt;#3402&lt;/a&gt; ドキュメントに記載されているマクロ名が間違っていたので修正(#2717と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3445&#34; target=&#34;_blank&#34;&gt;#3445&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3463&#34; target=&#34;_blank&#34;&gt;#3463&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;のドキュメントで&lt;code&gt;&amp;gt;=&lt;/code&gt;を使用すると書いていたため、&lt;code&gt;&amp;gt;&lt;/code&gt;での比較に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3542&#34; target=&#34;_blank&#34;&gt;#3542&lt;/a&gt; コマンドライン引数の名前が&lt;code&gt;build_info&lt;/code&gt;となっていたが、正しくは&lt;code&gt;detect_memory_leak&lt;/code&gt;。(#2018と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3592&#34; target=&#34;_blank&#34;&gt;#3592&lt;/a&gt; &lt;code&gt;under_debugger()&lt;/code&gt;が無限ループする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3595&#34; target=&#34;_blank&#34;&gt;#3595&lt;/a&gt; マクロ名の誤字を修正(#2759と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3623&#34; target=&#34;_blank&#34;&gt;#3623&lt;/a&gt; マクロ名の誤字を修正(#2759と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3664&#34; target=&#34;_blank&#34;&gt;#3664&lt;/a&gt; &lt;code&gt;SIGCHLDP&lt;/code&gt;が致命的なエラーとなることを考慮するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3784&#34; target=&#34;_blank&#34;&gt;#3784&lt;/a&gt; Execution Monitor Compilationのドキュメント間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3785&#34; target=&#34;_blank&#34;&gt;#3785&lt;/a&gt; Program Execution Monitor implementationのドキュメント間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3811&#34; target=&#34;_blank&#34;&gt;#3811&lt;/a&gt; グローバル名前空間で定義するCリンケージの関数に、名前衝突を避けるために&lt;code&gt;boost_&lt;/code&gt;プレフィックスを付けた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3834&#34; target=&#34;_blank&#34;&gt;#3834&lt;/a&gt; HTMLが正しく表示されない問題を修正(#2450と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3896&#34; target=&#34;_blank&#34;&gt;#3896&lt;/a&gt; コマンドライン引数の説明が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3932&#34; target=&#34;_blank&#34;&gt;#3932&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;の説明が間違っていたので修正(#3463と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3938&#34; target=&#34;_blank&#34;&gt;#3938&lt;/a&gt; ドキュメントのマクロ名が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3964&#34; target=&#34;_blank&#34;&gt;#3964&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_CLOSE_FRACTION&lt;/code&gt;のドキュメントが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3978&#34; target=&#34;_blank&#34;&gt;#3978&lt;/a&gt; テストログのファイルへのリダイレクトが失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3979&#34; target=&#34;_blank&#34;&gt;#3979&lt;/a&gt; &lt;code&gt;&amp;lt;boost/test/exception_safety.hpp&amp;gt;&lt;/code&gt;がさらなるインクルードを要求する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4161&#34; target=&#34;_blank&#34;&gt;#4161&lt;/a&gt; ドキュメントのスペルミスを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4275&#34; target=&#34;_blank&#34;&gt;#4275&lt;/a&gt; ドキュメントの間違いを修正(#2717と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4389&#34; target=&#34;_blank&#34;&gt;#4389&lt;/a&gt; 依存するテストの実行を有効にできるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4434&#34; target=&#34;_blank&#34;&gt;#4434&lt;/a&gt; ドキュメントの誤字&lt;code&gt;BOOST_AUTO_EST_CASE&lt;/code&gt;を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4587&#34; target=&#34;_blank&#34;&gt;#4587&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4806&#34; target=&#34;_blank&#34;&gt;#4806&lt;/a&gt; ドキュメントのリンク間違いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4911&#34; target=&#34;_blank&#34;&gt;#4911&lt;/a&gt; 例外発生時に、例外の本来の型名を出力するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4923&#34; target=&#34;_blank&#34;&gt;#4923&lt;/a&gt; ドキュメントのサンプルコードにセミコロンが不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4924&#34; target=&#34;_blank&#34;&gt;#4924&lt;/a&gt; ドキュメントの小さな誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4982&#34; target=&#34;_blank&#34;&gt;#4982&lt;/a&gt; ドキュメントに記載されている、作者Gennadiy Rozentalのメールアドレスが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5008&#34; target=&#34;_blank&#34;&gt;#5008&lt;/a&gt; テストケースの開始と終了のチェックポイントを挿入&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5036&#34; target=&#34;_blank&#34;&gt;#5036&lt;/a&gt; メモリリークのレポートを、VCでは&lt;code&gt;stdout&lt;/code&gt;に対して書き込んでいたが、&lt;code&gt;strerr&lt;/code&gt;に書き込むよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5262&#34; target=&#34;_blank&#34;&gt;#5262&lt;/a&gt; run_testに、否定(negation)のサポートを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5374&#34; target=&#34;_blank&#34;&gt;#5374&lt;/a&gt; VS2010で、エラーのリストが表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5412&#34; target=&#34;_blank&#34;&gt;#5412&lt;/a&gt; 内部で使用しているXMLフォーマッターの、サブシーケンスを処理する文字列が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5563&#34; target=&#34;_blank&#34;&gt;#5563&lt;/a&gt; グローバルなフィクスチャの中でテストマクロを使用するとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5582&#34; target=&#34;_blank&#34;&gt;#5582&lt;/a&gt; &lt;code&gt;BOOST_AUTO_TEST_CASE_TEMPLATE&lt;/code&gt;のメモリリークを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5599&#34; target=&#34;_blank&#34;&gt;#5599&lt;/a&gt; ドキュメントの導入がイケてない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5718&#34; target=&#34;_blank&#34;&gt;#5718&lt;/a&gt; 単体テストフレームワークのソースコード例へのリンクが壊れていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5729&#34; target=&#34;_blank&#34;&gt;#5729&lt;/a&gt; &lt;code&gt;fpt_limits&lt;/code&gt;の中で&lt;code&gt;static_cast&lt;/code&gt;が不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5870&#34; target=&#34;_blank&#34;&gt;#5870&lt;/a&gt; 警告の制御にスタックが使われていなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5972&#34; target=&#34;_blank&#34;&gt;#5972&lt;/a&gt; 出力ストリームにテストツリーをテキストでダンプするオプションをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6002&#34; target=&#34;_blank&#34;&gt;#6002&lt;/a&gt; テストログのファイルへのリダイレクトが失敗する問題を修正(#3978と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6071&#34; target=&#34;_blank&#34;&gt;#6071&lt;/a&gt; Boost Test (Boost 1.46.0) + GCC 4.6.1で、&lt;code&gt;operator[]&lt;/code&gt;のオーバーロードが曖昧であるというコンパイルエラーが発生していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6074&#34; target=&#34;_blank&#34;&gt;#6074&lt;/a&gt; 警告をエラーとして扱うオプションが、Boost.Testのリリースモードで扱えない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6161&#34; target=&#34;_blank&#34;&gt;#6161&lt;/a&gt; SunOS環境で、&lt;code&gt;putenv()&lt;/code&gt;の宣言がコンパイルエラーになっていたので修正(#6766と重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6766&#34; target=&#34;_blank&#34;&gt;#6766&lt;/a&gt; config.hppの&lt;code&gt;putenv()&lt;/code&gt;が間違っていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6712&#34; target=&#34;_blank&#34;&gt;#6712&lt;/a&gt; GCCの警告を除去&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6748&#34; target=&#34;_blank&#34;&gt;#6748&lt;/a&gt; ドキュメントのリンクが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7046&#34; target=&#34;_blank&#34;&gt;#7046&lt;/a&gt; 例外のエラーメッセージが512文字を超えていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7397&#34; target=&#34;_blank&#34;&gt;#7397&lt;/a&gt; Boost.Testが、1.48.0で非推奨になったBoost.Timerのクラスを使っていたので、新しいクラスを使用するよう更新した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7410&#34; target=&#34;_blank&#34;&gt;#7410&lt;/a&gt; テストケースが&lt;code&gt;__FILE__&lt;/code&gt;と&lt;code&gt;__LINE__&lt;/code&gt;をキャプチャするようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/8862&#34; target=&#34;_blank&#34;&gt;#8862&lt;/a&gt; ドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9179&#34; target=&#34;_blank&#34;&gt;#9179&lt;/a&gt; ドキュメントのリンクが壊れていたので修正(const_string.hpp/const_string_test.cppが見つからない)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9272&#34; target=&#34;_blank&#34;&gt;#9272&lt;/a&gt; &lt;code&gt;BOOST_&amp;lt;level&amp;gt;_GT&lt;/code&gt;のドキュメントバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9390&#34; target=&#34;_blank&#34;&gt;#9390&lt;/a&gt; &lt;code&gt;BOOST_TEST_DONT_PRINT_LOG_VALUE&lt;/code&gt;が、一部のマクロに対して使用できなかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9409&#34; target=&#34;_blank&#34;&gt;#9409&lt;/a&gt; いくつかのサンプルコードが不足していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9537&#34; target=&#34;_blank&#34;&gt;#9537&lt;/a&gt; const_string_testのサンプルコードが失敗していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9539&#34; target=&#34;_blank&#34;&gt;#9539&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、数式が正しく表示されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9581&#34; target=&#34;_blank&#34;&gt;#9581&lt;/a&gt; 浮動小数点数の比較アルゴリズムに関するドキュメントで、Squassabiaへのリンクが壊れていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10318&#34; target=&#34;_blank&#34;&gt;#10318&lt;/a&gt; ドキュメントの小さな修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10888&#34; target=&#34;_blank&#34;&gt;#10888&lt;/a&gt; アサーションの失敗が、VS 2010、VS 2012、VS 2013でエラーウィンドウに表示されない問題を修正(重複)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11054&#34; target=&#34;_blank&#34;&gt;#11054&lt;/a&gt; Expression Templateを有効にすると、多倍長の浮動小数点数に対する比較が失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11347&#34; target=&#34;_blank&#34;&gt;#11347&lt;/a&gt; &lt;code&gt;DS&lt;/code&gt;識別子が原因で、&lt;code&gt;doc/examples/dataset_example*.cpp&lt;/code&gt;のテストが失敗していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11358&#34; target=&#34;_blank&#34;&gt;#11358&lt;/a&gt; signedとunsignedの比較で警告が出ていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11359&#34; target=&#34;_blank&#34;&gt;#11359&lt;/a&gt; &lt;code&gt;BOOST_CHECK_EQUAL_COLLECTIONS&lt;/code&gt;マクロで、出力演算子の制御ができない問題を修正(#9390と重複)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#type-index&#34; name=&#34;type-index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;コンパイル時間とモジュール性を改善するために、いくつかのBoostライブラリへの依存関係を削除&lt;/li&gt;
&lt;li&gt;テストの警告を修正し、メンテナンス上の改善をいくつか行った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_59_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11196&#34; target=&#34;_blank&#34;&gt;#11196&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11283&#34; target=&#34;_blank&#34;&gt;#11283&lt;/a&gt; element_index.hppでの、インクルード不足を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11251&#34; target=&#34;_blank&#34;&gt;#11251&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11285&#34; target=&#34;_blank&#34;&gt;#11285&lt;/a&gt; C++14での&lt;code&gt;aplly_visitor&lt;/code&gt;のサンプルコードとconst参照を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get&amp;lt;reference&amp;gt;(variant_variable)&lt;/code&gt;のコンパイル時チェックを緩和(Nicolas Cornu氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.6&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.8.2, 4.9.3&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3&lt;/li&gt;
&lt;li&gt;Intel: 15.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;Visual C++: 8.0, 9.0, 10.0, 11.0, 12.0, 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6&lt;/li&gt;
&lt;li&gt;GCC: 4.8, 4.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Sun: 6.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.6, 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.4, 4.7.3, 4.8.1, 5.1.0, 6.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.1&lt;/li&gt;
&lt;li&gt;Intel: 15.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6&lt;/li&gt;
&lt;li&gt;4.8, 4.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.4.1&lt;/li&gt;
&lt;li&gt;GCC: 4.8.5, 5.1.0, 6.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.60.0リリースノート -- fenced code block のインデントを、CommonMarkの仕様に合わせた</title>
      <link href="https://boostjp.github.io/document/version/1_60_0.html"/>
      <id>040974f4ee993d11e233b07374fda5cffd5257c2:document/version/1_60_0.md</id>
      <updated>2017-03-29 13:42:28 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.60.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_60_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_60_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_60_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_60_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Hanaのリリースは延期&lt;/h2&gt;
&lt;p&gt;時間的な制約により、&lt;a href=&#34;https://github.com/boostorg/hana&#34; target=&#34;_blank&#34;&gt;Hana&lt;/a&gt;のリリースは、Boostの以降のリリースに延期となった。&lt;/p&gt;
&lt;p&gt;これによって、HanaがBoostの一部として正式にリリースする前に、いくつかの既知の問題に対処できる。詳細はメーリングリストを参照。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://article.gmane.org/gmane.comp.lib.boost.devel/263964&#34; target=&#34;_blank&#34;&gt;http://article.gmane.org/gmane.comp.lib.boost.devel/263964&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Boost.DLLのリリースは延期&lt;/h2&gt;
&lt;p&gt;めずらしいツールセットとプラットフォームのサポートを提供するために、Boost.DLLのリリースは、Boostの以降のリリースに延期となった。&lt;/p&gt;
&lt;p&gt;これによって、&lt;code&gt;boost::dll::shared_library&lt;/code&gt;インスタンスのコピー構築とコピー代入の機能も追加されてより良いテストができるようになり、非デフォルトの呼び出し規約の関数をインポートするサンプルも提供される。&lt;/p&gt;
&lt;p&gt;このライブラリの最新バージョンと開発ドキュメントは、以下のリポジトリにある：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/dll&#34; target=&#34;_blank&#34;&gt;boostorg/dll - GitHubリポジトリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windowsユーザーへの注記&lt;/h2&gt;
&lt;p&gt;このリリースでのBoostは、コンパイラが最新のWindows SDKをサポートしていてWindows XP以外の場合に、Windows Vista/Windows Server 2008をデフォルトコンパイルとする。古いバージョンのWindowsでは、デフォルトのオプションでコンパイルされたバイナリを実行できなくなる。&lt;/p&gt;
&lt;p&gt;Windows APIのバージョン番号を&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;マクロを定義することによって、対象のWindowsバージョンを明示的に指定することもできる。たとえば、Windows XP向けにBoostをコンパイルするには、次のコマンドを使用する：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;b2 release define=BOOST_USE_WINAPI_VERSION=0x0501
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Windows APIのバージョン番号の一覧は、以下のページで確認できる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/6sehtctf.aspx&#34; target=&#34;_blank&#34;&gt;Modifying &lt;code&gt;WINVER&lt;/code&gt; and &lt;code&gt;_WIN32_WINNT&lt;/code&gt; - MSDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この変更は、BoostのWindows APIに対する抽象レイヤーを使用しているライブラリだけに影響する。現在は、以下のライブラリが対象である： Boost.Chrono、Boost.Dll、Boost.Log、Boost.UUID。これらのライブラリに依存するライブラリも対象となる。&lt;/p&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/vmd/&#34; target=&#34;_blank&#34;&gt;VMD&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;可変引数マクロデータライブラリ(Variadic Macro Data Library)&lt;/li&gt;
&lt;li&gt;作者 : Edward Diener&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#lexical-cast&#34;&gt;Lexical-Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#locale&#34;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#move&#34;&gt;Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#thread&#34;&gt;Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#uuid&#34;&gt;UUID&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;atomic&amp;lt;&amp;gt;&lt;/code&gt;のストレージに、適切なアラインメントを設定した。これによって、ネイティブのワードサイズより大きいデータ単位に対するアトミック操作のサポートに関する問題が修正される。&lt;/li&gt;
&lt;li&gt;IBM XL C++コンパイラでのPowerPC向けのコンパイルエラーを修正。PowerPCアセンブラのメモリバリアを正しいものにした。&lt;/li&gt;
&lt;li&gt;MSVC-8でのARM向けのコンパイルエラーを修正。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10994&#34; target=&#34;_blank&#34;&gt;#10994&lt;/a&gt; 128ビットアトミック操作を使用したときの、gcc 4.4でのx86-64向けのコンパイルエラーを修正。&lt;/li&gt;
&lt;li&gt;x86/x86-64向けのgccアセンブラブロックを最適化し、使用するレジスタ数を減らした。これはbinutils 2.10以降を必要とする。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#chrono&#34; name=&#34;chrono&#34;&gt;Chrono&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン2.0.5&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10778&#34; target=&#34;_blank&#34;&gt;#10778&lt;/a&gt; VC14 CTP4において、&lt;code&gt;boost::chrono&lt;/code&gt;の&lt;code&gt;duration&lt;/code&gt;が&lt;code&gt;TriviallyCopyable&lt;/code&gt;ではないために、それを要素とする&lt;code&gt;atomic&lt;/code&gt;のコンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10840&#34; target=&#34;_blank&#34;&gt;#10840&lt;/a&gt; test_7868.cppで、&lt;code&gt;puts()&lt;/code&gt;関数の呼び出しが&lt;code&gt;std::&lt;/code&gt;修飾されていない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10851&#34; target=&#34;_blank&#34;&gt;#10851&lt;/a&gt; time_point_output.cppで、&lt;code&gt;puts()&lt;/code&gt;関数の呼び出しが&lt;code&gt;std::&lt;/code&gt;修飾されていない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10893&#34; target=&#34;_blank&#34;&gt;#10893&lt;/a&gt; ドキュメントの誤字を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10992&#34; target=&#34;_blank&#34;&gt;#10992&lt;/a&gt; ChronoのIO State Saverが、Boost.IO State Saverと異なるインタフェースだったのを修正。コンストラクタの第1パラメータを、&lt;code&gt;state_type&lt;/code&gt;から&lt;code&gt;state_type&amp;amp;&lt;/code&gt;に変更した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10995&#34; target=&#34;_blank&#34;&gt;#10995&lt;/a&gt; &lt;code&gt;duration_put::put_value()&lt;/code&gt;で、小数部が切り詰められる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11006&#34; target=&#34;_blank&#34;&gt;#11006&lt;/a&gt; &lt;code&gt;time_fmt_io_saver&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11012&#34; target=&#34;_blank&#34;&gt;#11012&lt;/a&gt; chrono_io v2で、&lt;code&gt;boost::chrono::duration &amp;lt; boost::rational &amp;lt;int&amp;gt;&amp;gt;&lt;/code&gt;のコンパイルに失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;標準C++に提案されている、Polymorphic Memory Resourcesを実装した&lt;ul&gt;
&lt;li&gt;標準のドキュメントは以下：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4480.html&#34; target=&#34;_blank&#34;&gt;C++ Extensions for Library Fundamentals (最新のドラフト仕様: N4480)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://isocpp.org/files/papers/N3916.pdf&#34; target=&#34;_blank&#34;&gt;N3916 Polymorphic Memory Resources (r2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_ASSERT&lt;/code&gt;での事前条件のチェックを強化した(&lt;code&gt;pop_back()&lt;/code&gt;, &lt;code&gt;pop_front()&lt;/code&gt;, &lt;code&gt;back()&lt;/code&gt;, &lt;code&gt;front()&lt;/code&gt;、その他)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;basic_string&lt;/code&gt;に、C++11の&lt;code&gt;back()&lt;/code&gt;と&lt;code&gt;front()&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11627&#34; target=&#34;_blank&#34;&gt;Trac #11627&lt;/a&gt; &lt;code&gt;small_vector&amp;lt;T,n&amp;gt;::swap( )&lt;/code&gt;が壊れていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11628&#34; target=&#34;_blank&#34;&gt;Trac #11628&lt;/a&gt; 要素のデストラクタを呼ぶ必要のない&lt;code&gt;small_vector&amp;lt;int,n&amp;gt;&lt;/code&gt;で、要素のデストラクタが個別に呼び出されていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11697&#34; target=&#34;_blank&#34;&gt;Trac #11697&lt;/a&gt; 可変引数テンプレートのツールとして作成したタプルの初期化が、tail -&amp;gt; headの順になっていたので、head -&amp;gt; tailの順になるよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11698&#34; target=&#34;_blank&#34;&gt;Trac #11698&lt;/a&gt; &lt;code&gt;static_storage_allocator&lt;/code&gt;の&lt;code&gt;return&lt;/code&gt;文漏れを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;flat_map&lt;/code&gt;のドキュメントで、計算量が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/31&#34; target=&#34;_blank&#34;&gt;GitHub #31&lt;/a&gt; dlmallocの実装で、アドレス取得がヌルチェックの中で行われていたために、アドレスを間接参照できない場合があったので修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11603&#34; target=&#34;_blank&#34;&gt;#11603&lt;/a&gt; PPC32/MACH-Oアセンブラの誤字を修正&lt;/li&gt;
&lt;li&gt;Cygwinをサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シンボルのデマングルツールに、Android NDKのgabi++ ABIのサポートを追加&lt;/li&gt;
&lt;li&gt;入れ子型の存在をSFINAEチェックするためのツールとして、&lt;code&gt;enable_if_has_type&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#filesystem&#34; name=&#34;filesystem&#34;&gt;Filesystem&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;以下の関数を追加した&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;path::lexically_normal()&lt;/code&gt; : パスの正規化を行う。正規化では、冗長なカレントディレクトリ(ドット)の指定や親ディレクトリ(ドット-ドット)の削除を行う。例：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;foo/./bar/..&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_normal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;foo/.///bar/../&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_normal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;foo/.&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;path::lexically_relative()&lt;/code&gt; : パラメータで指定されたパスから&lt;code&gt;*this&lt;/code&gt;のパスへの相対パスを求める。例：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;/a/d&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;/a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;../../d&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;/a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;/a/d&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;../b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c/x/y&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;../..&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b/c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;.&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;a/b&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lexically_relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;c/d&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;relative()&lt;/code&gt; : 第2パラメータのパスから第1パラメータのパスへの、相対パスを求める&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weakly_canonical()&lt;/code&gt; : パラメータで指定されたパスのシンボリックリンクを解決し、正規化した結果のパスを返す&lt;/li&gt;
&lt;li&gt;上記4関数の追加で協力してくれたJamie Allsop氏に、多大な感謝をする&lt;/li&gt;
&lt;li&gt;これによって解決したチケットは以下： &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/1976&#34; target=&#34;_blank&#34;&gt;#1976&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5897&#34; target=&#34;_blank&#34;&gt;#5897&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6249&#34; target=&#34;_blank&#34;&gt;#6249&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;path&lt;/code&gt;クラスに、&lt;code&gt;reverse_iterator&lt;/code&gt;と&lt;code&gt;const_reverse_iterator&lt;/code&gt;型を追加し、&lt;code&gt;rbegin()&lt;/code&gt;、&lt;code&gt;rend()&lt;/code&gt;メンバ関数を追加した&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Filesystem TSによって規定された、C++11の&lt;code&gt;noexcept&lt;/code&gt;を付加(コンパイラが&lt;code&gt;noexcept&lt;/code&gt;をサポートしていれば)&lt;/li&gt;
&lt;li&gt;Filesystem TSによって規定された、C++11のムーブコンストラクタとムーブ代入演算子を追加(コンパイラがムーブをサポートしていれば)&lt;/li&gt;
&lt;li&gt;Filesystem TSの規定に従って、関数の名前をいくつか変更した。現在は、古い名前と新しい名前、両方をサポートしている。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;クラスに&lt;code&gt;size()&lt;/code&gt;メンバ関数を追加(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6874&#34; target=&#34;_blank&#34;&gt;#6874&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;チケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11733&#34; target=&#34;_blank&#34;&gt;#11733&lt;/a&gt; boost/libs/filesystem/src/unique_path.cppでのunistd.hのインクルード漏れを修正。Idar Tollefsen氏によるパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/5706&#34; target=&#34;_blank&#34;&gt;#5706&lt;/a&gt; WindowsのTemporary User Profilesで&lt;code&gt;unique_path()&lt;/code&gt;が失敗する問題を修正。Sebastian Redl氏によるpull requestを適用した(&lt;a href=&#34;https://github.com/boostorg/filesystem/pull/15&#34; target=&#34;_blank&#34;&gt;pull request #15&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10591&#34; target=&#34;_blank&#34;&gt;#10591&lt;/a&gt; このライブラリを、iOS 8でビルドできない問題を修正。Daniel Seither氏のパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/9454&#34; target=&#34;_blank&#34;&gt;#9454&lt;/a&gt; &lt;code&gt;BOOST_FILESYSTEM_NO_DEPRECATED&lt;/code&gt;がdefineされていると、このライブラリをビルドできない問題を修正。Makesim氏のパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11447&#34; target=&#34;_blank&#34;&gt;#11447&lt;/a&gt; &lt;code&gt;__OpenBSD__&lt;/code&gt;マクロ名が間違っていたのを修正。Jasper Lievisse Adriaanse氏のパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11288&#34; target=&#34;_blank&#34;&gt;#11288&lt;/a&gt; 文字列の冗長なメモリ確保を回避した。Yevhen Ivannikov氏のパッチを適用した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11175&#34; target=&#34;_blank&#34;&gt;#11175&lt;/a&gt; 古いドキュメントが原因で、このライブラリが例外を無効にして使用できるとユーザーに期待させてしまっていた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11166&#34; target=&#34;_blank&#34;&gt;#11166&lt;/a&gt; &lt;code&gt;remove()&lt;/code&gt;関数の、競合の可能性を減らした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7258&#34; target=&#34;_blank&#34;&gt;#7258&lt;/a&gt; &lt;code&gt;create_directories()&lt;/code&gt;関数に指定されたパスの最後がスラッシュの場合に、&lt;code&gt;false&lt;/code&gt;を返してしまっていたので修正。それにともなって、パスに「&lt;code&gt;.&lt;/code&gt;」もしくは「&lt;code&gt;..&lt;/code&gt;」が含まれていた場合のテストを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10766&#34; target=&#34;_blank&#34;&gt;#10766&lt;/a&gt; 冗長な区切り文字が付いたパスに対して&lt;code&gt;parent_path()&lt;/code&gt;を呼び出すと、間違った値が返されていたという問題が報告されたが、これは動作としては正しかったので、ドキュメントにその動作を記載した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7607&#34; target=&#34;_blank&#34;&gt;#7607&lt;/a&gt; スラッシュで終わるパスのファイル名が「&lt;code&gt;.&lt;/code&gt;」であると推論される問題。この問題は、&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7258&#34; target=&#34;_blank&#34;&gt;#7258&lt;/a&gt;と&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10766&#34; target=&#34;_blank&#34;&gt;#10766&lt;/a&gt;で解決した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11061&#34; target=&#34;_blank&#34;&gt;#11061&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11062&#34; target=&#34;_blank&#34;&gt;#11062&lt;/a&gt; パスを逆順に辿ることができないという問題だが、これはreverse iterator機能の追加によって解決した&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;その他修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCCのいくつかの警告を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_status&lt;/code&gt;と&lt;code&gt;recursive_directory_iterator&lt;/code&gt;のバグを修正 : 1引数以外のコンストラクタを非&lt;code&gt;explicit&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;リファレンスドキュメントを整理した : 残りのドキュメントにも、同じスタイルシートを適用した。タブのフォントサイズを調整した。テーブル内の長すぎる行を修正した&lt;/li&gt;
&lt;li&gt;Jonathan Wakely氏とMarcel Raad氏からのpull requestを含む、小さい修正を行った。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#flyweight&#34; name=&#34;flyweight&#34;&gt;Flyweight&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メンテナンス上の修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全てのFusionコンテナとジェネレータはC++11の可変長テンプレートをサポートした。(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/89&#34; target=&#34;_blank&#34;&gt;pull-request 89&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/97&#34; target=&#34;_blank&#34;&gt;pull-request 97&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/fusion/pull/100&#34; target=&#34;_blank&#34;&gt;pull-request 100&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fusion::vector&lt;/code&gt;に関する注意&lt;ul&gt;
&lt;li&gt;実装上の理由により、番号付きのvector(つまり&lt;code&gt;fusion::vectorN&lt;/code&gt;の形)はC++11のエイリアステンプレートを使って提供され、C++11以降ではdeprecatedとなる。
  この場合、いくつかの部分特殊化がコンパイルエラーとなる為、&lt;code&gt;BOOST_FUSION_HAS_VARIADIC_VECTOR&lt;/code&gt;マクロを使用して実装を切り替えなければならない(&lt;a href=&#34;https://github.com/boostorg/spirit/pull/158/files#diff-250ce096dee927d2b7eb5a4e24afb8cd&#34; target=&#34;_blank&#34;&gt;Spiritへのpull request&lt;/a&gt;を参照されたい)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::nview&lt;/code&gt;はC++11の可変長テンプレートをサポートした。(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/90&#34; target=&#34;_blank&#34;&gt;pull-request 90&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fusion::fold&lt;/code&gt;がSFINAE-friendlyとなった。(&lt;a href=&#34;https://github.com/boostorg/fusion/pull/102&#34; target=&#34;_blank&#34;&gt;pull-request 102&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Fusionシーケンスを&lt;code&gt;fusion::deque&lt;/code&gt;へ変換できなかった。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11572&#34; target=&#34;_blank&#34;&gt;#11572&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;(ドキュメント) 関数の戻り値の型が正しくなかった。(&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3358&#34; target=&#34;_blank&#34;&gt;#3358&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#geometry&#34; name=&#34;geometry&#34;&gt;Geometry&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;解決したチケット&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10803&#34; target=&#34;_blank&#34;&gt;#10803&lt;/a&gt; &lt;code&gt;union_()&lt;/code&gt;アルゴリズムが、不正なジオメトリを返す問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11522&#34; target=&#34;_blank&#34;&gt;#11522&lt;/a&gt; &lt;code&gt;traits::detail&lt;/code&gt;名前空間の&lt;code&gt;buffer&lt;/code&gt;が名前衝突していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11533&#34; target=&#34;_blank&#34;&gt;#11533&lt;/a&gt; &lt;code&gt;rtree&lt;/code&gt;の最小要素数が1の場合に&lt;code&gt;remove()&lt;/code&gt;関数を呼び出すと、アサートに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11607&#34; target=&#34;_blank&#34;&gt;#11607&lt;/a&gt; &lt;code&gt;geometry::exception::what()&lt;/code&gt;が&lt;code&gt;private&lt;/code&gt;になっていたので、&lt;code&gt;public&lt;/code&gt;に修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11709&#34; target=&#34;_blank&#34;&gt;#11709&lt;/a&gt; &lt;code&gt;is_simple()&lt;/code&gt;でセグメンテーション違反が発生する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11710&#34; target=&#34;_blank&#34;&gt;#11710&lt;/a&gt; &lt;code&gt;is_simple()&lt;/code&gt;に空のジオメトリを与えるとセグメンテーション違反が発生していたので、&lt;code&gt;true&lt;/code&gt;を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11711&#34; target=&#34;_blank&#34;&gt;#11711&lt;/a&gt; &lt;code&gt;is_simple()&lt;/code&gt;と&lt;code&gt;is_valid()&lt;/code&gt;に、NaNやInfinityを含むジオメトリを与えても&lt;code&gt;true&lt;/code&gt;が返ってきていたので、&lt;code&gt;false&lt;/code&gt;を返すよう修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ほかのポリゴンにtouchする部分の、interior ringとexterior ringのコロケーション(colocations)を修正&lt;/li&gt;
&lt;li&gt;空の&lt;code&gt;rtree&lt;/code&gt;に対して&lt;code&gt;remove()&lt;/code&gt;関数を呼び出した際に、アサート失敗するのではなく、何もせずに&lt;code&gt;0&lt;/code&gt;を返すよう修正&lt;/li&gt;
&lt;li&gt;空のジオメトリをひとつだけ含むmulti geometriesに対する&lt;code&gt;centroid()&lt;/code&gt;の呼び出しによって、セグメンテーション違反が発生する問題を修正(Jiri Drbalek氏に感謝)&lt;/li&gt;
&lt;li&gt;整数座標系の&lt;code&gt;liang_barsky&lt;/code&gt; strategyを修正(Dane Springmeyer氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;offset_ptr&lt;/code&gt;のパフォーマンスを改善し、あらゆる未定義動作を削除した。異なるコンパイラでの特殊ケースが必要なくなった。&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11699&#34; target=&#34;_blank&#34;&gt;Trac #11699&lt;/a&gt; Visual Studio 2015のバグにより、標準クラステンプレートの先行宣言がコンパイルエラーになっていたので、ワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;順序付き連想コンテナでの「&lt;a href=&#34;http://www.boost.org/doc/libs/release/doc/html/intrusive/advanced_lookups_insertions.html&#34; target=&#34;_blank&#34;&gt;高度な検索と挿入&lt;/a&gt;」に、比較関数のサポートを追加した。&lt;code&gt;key_compare&lt;/code&gt;と同じ「狭義の弱順序(strict weak ordering)」を提供することなしに、比較関数オブジェクトでコンテナを分割できる。&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11701&#34; target=&#34;_blank&#34;&gt;Boost Trac #11701&lt;/a&gt; &lt;code&gt;boost::intrusive::set::equal_range&lt;/code&gt;のレギュレッション&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11765&#34; target=&#34;_blank&#34;&gt;Boost Trac #11765&lt;/a&gt; sgtreeのテストコードが不正だったので修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#lexical-cast&#34; name=&#34;lexical-cast&#34;&gt;Lexical Cast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ムーブのみできる型を使用することができなくなっていたのを修正 &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11570&#34; target=&#34;_blank&#34;&gt;#11570&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_LCAST_NO_COMPILE_TIME_PRECISION&lt;/code&gt;が定義されていた際にクラッシュしていたのを修正 &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11669&#34; target=&#34;_blank&#34;&gt;#11669&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11570&#34; target=&#34;_blank&#34;&gt;#11570&lt;/a&gt;と&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/4946&#34; target=&#34;_blank&#34;&gt;#4946&lt;/a&gt;で指摘されていた幾つかの警告を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#locale&#34; name=&#34;locale&#34;&gt;Locale&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ジェネリックな&lt;code&gt;codecvt&lt;/code&gt;ファセットと、汎用的な目的に使用できる&lt;code&gt;utf8_codecvt&lt;/code&gt;ファセットを実装した&lt;/li&gt;
&lt;li&gt;FreeBSD 10.0と上記の機能向けに、POSIXのロケールをサポートした&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10017&#34; target=&#34;_blank&#34;&gt;#10017&lt;/a&gt; &lt;code&gt;sun&lt;/code&gt;をSunOSに向けて再定義した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11163&#34; target=&#34;_blank&#34;&gt;#11163&lt;/a&gt; &lt;code&gt;set_default_messages_domain()&lt;/code&gt;の不正な振る舞いを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11673&#34; target=&#34;_blank&#34;&gt;#11673&lt;/a&gt; ビルドの問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;最新のICUバージョンでのテストを修正&lt;/li&gt;
&lt;li&gt;libc++の問題へのワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;新たなマクロ&lt;code&gt;BOOST_LOCALE_ENABLE_CHAR16_T&lt;/code&gt;と&lt;code&gt;BOOST_LOCALE_ENABLE_CHAR32_T&lt;/code&gt;を追加。これは、C++11が有効であれば&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;に置き換えられる。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;全体的な変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows環境で、構成マクロ&lt;code&gt;BOOST_LOG_USE_WINNT6_API&lt;/code&gt;は使われなくなる。ターゲット環境を設定するマクロ&lt;code&gt;BOOST_USE_WINAPI_VERSION&lt;/code&gt;を定義することによって、Windowsのバージョンを設定する必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11559&#34; target=&#34;_blank&#34;&gt;#11559&lt;/a&gt; AndroidでのGoogle NDKのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11549&#34; target=&#34;_blank&#34;&gt;#11549&lt;/a&gt; ロギング文のいくつかのコンパイルエラーを修正。ストリームに入れる最初のオブジェクトは、&lt;code&gt;formatting_ostream&lt;/code&gt;がサポートされていなかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11549&#34; target=&#34;_blank&#34;&gt;#11549&lt;/a&gt; Solaris Studio 12.4向けのワークアラウンドを追加。&lt;code&gt;formatting_ostream&lt;/code&gt;のコンパイルエラーが修正される&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11541&#34; target=&#34;_blank&#34;&gt;#11541&lt;/a&gt; ネイティブの&lt;code&gt;wchar_t&lt;/code&gt;を無効にしたときのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;POSIXライクシステム上での、&lt;code&gt;boost_log_setup&lt;/code&gt;ライブラリからのエクスポートシンボルを修正&lt;/li&gt;
&lt;li&gt;character decoratorsのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11691&#34; target=&#34;_blank&#34;&gt;#11691&lt;/a&gt; ファイル名にdate/timeのプレースホルダが含まれている場合に、text file sink backendで不正なファイル名であると判定される問題に対するワークアラウンドを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらなる詳細は、&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/log/doc/html/log/changelog.html&#34; target=&#34;_blank&#34;&gt;changelog&lt;/a&gt;を参照。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#move&#34; name=&#34;move&#34;&gt;Move&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正 &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11615&#34; target=&#34;_blank&#34;&gt;#11615&lt;/a&gt;: type_traits.hppで&lt;code&gt;std::size_t&lt;/code&gt;を完全修飾せず使っている場所があったので修正&lt;ul&gt;
&lt;li&gt;訳者註: &lt;code&gt;&amp;lt;cstddef&amp;gt;&lt;/code&gt; ヘッダをインクルードしてもグローバル名前空間に&lt;code&gt;size_t&lt;/code&gt;が存在するとは限らない為、一部の標準ライブラリ実装ではコンパイルできない問題があった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#multi-index&#34; name=&#34;multi-index&#34;&gt;Multi-index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;オプショナルな定義である&lt;code&gt;foreach&lt;/code&gt;マクロ名による、&lt;a href=&#34;http://www.qt.io/&#34; target=&#34;_blank&#34;&gt;Qtフレームワーク&lt;/a&gt;との相互運用の問題を修正&lt;/li&gt;
&lt;li&gt;メンテナンス上の修正を行った&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#odeint&#34; name=&#34;odeint&#34;&gt;Odeint&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;あまりにも多くのODEステップが実行された場合に、例外を送出する機能を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%80%E3%83%97%E3%83%86%E3%82%A3%E3%83%96%E6%9C%89%E9%99%90%E8%A6%81%E7%B4%A0%E6%B3%95&#34; target=&#34;_blank&#34;&gt;アダプティブ法(adaptive method)&lt;/a&gt;の最大ステップサイズを制限する機能を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;いくつかのバグを修正 : &lt;a href=&#34;https://github.com/headmyshoulder/odeint-v2/issues&#34; target=&#34;_blank&#34;&gt;https://github.com/headmyshoulder/odeint-v2/issues&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;訳注 : どのバージョンでなにが直ったのかわからなかったので、バグ修正の詳細は記載しない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#optional&#34; name=&#34;optional&#34;&gt;Optional&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11203&#34; target=&#34;_blank&#34;&gt;#11203&lt;/a&gt; &lt;code&gt;boost::none&lt;/code&gt;の実装を再度変更した。内部リンケージの&lt;code&gt;const&lt;/code&gt;オブジェクトとした。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン1.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SIMDハードウェアの検出機能を追加。&lt;code&gt;BOOST_HW_*&lt;/code&gt;マクロを使用する(Charly Chevalier氏に感謝)&lt;/li&gt;
&lt;li&gt;クロスコンパイルのチェックを行うための、コンパイルのみ行うユーティリティを追加&lt;/li&gt;
&lt;li&gt;テストの警告を修正&lt;/li&gt;
&lt;li&gt;Windowsプラットフォームの、&lt;code&gt;AVAILABLE&lt;/code&gt;マクロの誤字を修正(Vemund Handeland氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン3.1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コマンドラインのインタフェースを改善&lt;/li&gt;
&lt;li&gt;データセットのAPIを改善 : データセットの生成に初期化子リストを使用できるようにし、データセットの構築をより容易にした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正とリクエスト&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/3384&#34; target=&#34;_blank&#34;&gt;#3384&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6032&#34; target=&#34;_blank&#34;&gt;#6032&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/10317&#34; target=&#34;_blank&#34;&gt;#10317&lt;/a&gt; ダブルクォーテーションで囲まれた引数が、スペースで分割されてしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/6859&#34; target=&#34;_blank&#34;&gt;#6859&lt;/a&gt; コマンドラインの、最後の空パラメータが無視される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11279&#34; target=&#34;_blank&#34;&gt;#11279&lt;/a&gt; 不正なパラメータを渡した際に、それが報告されない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11478&#34; target=&#34;_blank&#34;&gt;#11478&lt;/a&gt; アサーションの失敗で送出される例外のメッセージが固定文言のため、原因がわからなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11571&#34; target=&#34;_blank&#34;&gt;#11571&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11625&#34; target=&#34;_blank&#34;&gt;#11625&lt;/a&gt; &lt;code&gt;BOOST_TEST( ..., per_element() )&lt;/code&gt;で、コンテナの比較ができない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11623&#34; target=&#34;_blank&#34;&gt;#11623&lt;/a&gt; Clangで&lt;code&gt;BOOST_TEST()&lt;/code&gt;のコンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11624&#34; target=&#34;_blank&#34;&gt;#11624&lt;/a&gt; C++11モードのGCCとClangで、&lt;code&gt;BOOST_TEST( 0.0 == 0.0 )&lt;/code&gt;というテストが失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#thread&#34; name=&#34;thread&#34;&gt;Thread&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;バージョン4.6.0&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;実験的な新機能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11231&#34; target=&#34;_blank&#34;&gt;#11231&lt;/a&gt; &lt;code&gt;future&lt;/code&gt;のデストラクタをブロッキングしないよう設定する機能を追加。&lt;code&gt;BOOST_THREAD_FUTURE_BLOCKING&lt;/code&gt;をdefineする&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11424&#34; target=&#34;_blank&#34;&gt;#11424&lt;/a&gt; &lt;code&gt;shared_mutex&lt;/code&gt;の名前変更として&lt;code&gt;shared_timed_mutex&lt;/code&gt;を提供し、元のtimed mutex機能付きの&lt;code&gt;shared_mutex&lt;/code&gt;を非推奨とした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11734&#34; target=&#34;_blank&#34;&gt;#11734&lt;/a&gt; &lt;code&gt;future::then(Cont)&lt;/code&gt;を、可能であればスレッドを引き継いで実行するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11736&#34; target=&#34;_blank&#34;&gt;#11736&lt;/a&gt; &lt;code&gt;launch::executor&lt;/code&gt;を&lt;code&gt;future::then(launch::executor, cont)&lt;/code&gt;のように使用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11737&#34; target=&#34;_blank&#34;&gt;#11737&lt;/a&gt; &lt;code&gt;launch::inherit&lt;/code&gt;ポリシーを追加した。これを使用することにより、親の&lt;code&gt;then()&lt;/code&gt;で指定されたポリシーを引き継げるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/3926&#34; target=&#34;_blank&#34;&gt;#3926&lt;/a&gt; &lt;code&gt;thread_specific_ptr&lt;/code&gt;とdlopenライブラリの組み合わせでセグメンテーションフォルトとなる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6377&#34; target=&#34;_blank&#34;&gt;#6377&lt;/a&gt; 時間が変更されると条件変数がブロックする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/6787&#34; target=&#34;_blank&#34;&gt;#6787&lt;/a&gt; システム時間が逆行すると、&lt;code&gt;boost::thread::sleep()&lt;/code&gt;がハングする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/7665&#34; target=&#34;_blank&#34;&gt;#7665&lt;/a&gt; &lt;code&gt;this_thread::sleep_for()&lt;/code&gt;が&lt;code&gt;steady_clock&lt;/code&gt;を使用していなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/7720&#34; target=&#34;_blank&#34;&gt;#7720&lt;/a&gt; &lt;code&gt;mutex&lt;/code&gt;の集中的なロック取得／解除で&lt;code&gt;lock_error&lt;/code&gt;例外が送出される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/9309&#34; target=&#34;_blank&#34;&gt;#9309&lt;/a&gt; clang-darwin-tot11環境で、test_latchがたまに失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/10788&#34; target=&#34;_blank&#34;&gt;#10788&lt;/a&gt; &lt;code&gt;GetLogicalProcessor&lt;/code&gt;が、Windowsプラットフォームの&lt;code&gt;0x0502&lt;/code&gt;以下では使用できなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11090&#34; target=&#34;_blank&#34;&gt;#11090&lt;/a&gt; ex_future_unwrapが、ThreadSanitizerによると、ロック取得の順番によってデッドロックする可能性があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11158&#34; target=&#34;_blank&#34;&gt;#11158&lt;/a&gt; pthreadのスレッドが、faketimeを使用するとデッドロックする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11174&#34; target=&#34;_blank&#34;&gt;#11174&lt;/a&gt; &lt;code&gt;boost::condition_variable::timed_wait()&lt;/code&gt;で無限に待つと、述語が突然起床することがある問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11185&#34; target=&#34;_blank&#34;&gt;#11185&lt;/a&gt; ドキュメントのURLリダイレクトが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11192&#34; target=&#34;_blank&#34;&gt;#11192&lt;/a&gt; &lt;code&gt;boost::future::then()&lt;/code&gt;と&lt;code&gt;executor&lt;/code&gt;を組み合わせると、コンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11250&#34; target=&#34;_blank&#34;&gt;#11250&lt;/a&gt; &lt;code&gt;make_exceptional()&lt;/code&gt;で作った&lt;code&gt;future&lt;/code&gt;オブジェクトが、そのデストラクタでアサーション失敗していたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11256&#34; target=&#34;_blank&#34;&gt;#11256&lt;/a&gt; 継続関数内で&lt;code&gt;future&amp;lt;&amp;gt;::is_ready() == false&lt;/code&gt;となる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11261&#34; target=&#34;_blank&#34;&gt;#11261&lt;/a&gt; &lt;code&gt;basic_thread_pool&lt;/code&gt;内でスコープ付きスレッドの使い方が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11262&#34; target=&#34;_blank&#34;&gt;#11262&lt;/a&gt; &lt;code&gt;shared_state_nullary_task&lt;/code&gt;内で直接的なポインタの使い方が間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11263&#34; target=&#34;_blank&#34;&gt;#11263&lt;/a&gt; いくつかのアンロック操作が不足していたために、&lt;code&gt;lock()&lt;/code&gt;関数で「すれにロックされている」という例外が発生する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11266&#34; target=&#34;_blank&#34;&gt;#11266&lt;/a&gt; &lt;code&gt;boost::packaged_task&lt;/code&gt;クラスの可変引数シグニチャが間違っていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11302&#34; target=&#34;_blank&#34;&gt;#11302&lt;/a&gt; &lt;code&gt;BOOST_THREAD_PATCH&lt;/code&gt;をdefineするとビルドが通らなかったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11322&#34; target=&#34;_blank&#34;&gt;#11322&lt;/a&gt; &lt;code&gt;sleep_for()&lt;/code&gt;のナノ秒オーバーロードを使用すると、Windows上で返ってくるのが早すぎる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11329&#34; target=&#34;_blank&#34;&gt;#11329&lt;/a&gt; &lt;code&gt;GetProcessHeap()&lt;/code&gt;のusingディレクティブが失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11368&#34; target=&#34;_blank&#34;&gt;#11368&lt;/a&gt; sleep操作で起床しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11377&#34; target=&#34;_blank&#34;&gt;#11377&lt;/a&gt; pthread環境上でシステム時間を変更すると、条件変数が永遠に待ってしまう問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11435&#34; target=&#34;_blank&#34;&gt;#11435&lt;/a&gt; future.hppの、GCCでの警告を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11555&#34; target=&#34;_blank&#34;&gt;#11555&lt;/a&gt; devector.hppが、&lt;code&gt;allocator_traits_type&lt;/code&gt;の存在を前提としていたので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11562&#34; target=&#34;_blank&#34;&gt;#11562&lt;/a&gt; タイマー起動後にシステム時間を設定すると、タイマーがすぐに切れる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11672&#34; target=&#34;_blank&#34;&gt;#11672&lt;/a&gt; 内部実装で、&lt;code&gt;auto_ptr&lt;/code&gt;の代わりに&lt;code&gt;unique_ptr&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11688&#34; target=&#34;_blank&#34;&gt;#11688&lt;/a&gt; &lt;code&gt;thread::try_join_until()&lt;/code&gt;で、システム時間が変更された場合のbusy waitを待機&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.boost.org/trac/boost/ticket/11672&#34; target=&#34;_blank&#34;&gt;#11716&lt;/a&gt; &lt;code&gt;then()&lt;/code&gt;が、親のexecutorを引き継ぐようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_60_0.html#uuid&#34; name=&#34;uuid&#34;&gt;UUID&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;UUIDを比較する際にクラッシュを引き起こす可能性のあるMSVC codegenのバグに対する、ワークアラウンドを追加&lt;/li&gt;
&lt;li&gt;MSVCのコンパイラスイッチを使って、AVXが有効かどうかを検出できるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.4, 3.6&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.8.4, 4.9.3, 5.1.0, 5.2.1&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, C++03, mingw: 3.4.5&lt;/li&gt;
&lt;li&gt;GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14, mingw: 4.9.3, 5.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.9.0, 5.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.4, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.1, 3.2, 3.3, 3.4.2, 3.6.0, 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.7.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.4, 4.7.3, 4.8.1, 4.9.3, 5.1.0, 6.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.2.1&lt;/li&gt;
&lt;li&gt;IBM XL C++: 13.1.2.0&lt;/li&gt;
&lt;li&gt;Intel: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 7.0.0&lt;/li&gt;
&lt;li&gt;GCC: 5.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, C++03, mingw: 3.4.5&lt;/li&gt;
&lt;li&gt;GCC, C++11, mingw: 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14, mingw: 4.9.3, 5.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7&lt;/li&gt;
&lt;li&gt;GCC: 4.9.0, 5.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang, C++11: 3.4.1, 3.7&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.8.5, 5.2.0, 6.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC: 4.4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.4, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.64.0リリースノート -- Fix typo</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>febe1d4727dc0202cee8cca061b208e38e37dbb2:document/version/1_64_0.md</id>
      <updated>2017-03-26 19:26:21 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロ&lt;code&gt;BOOST_NO_CXX11_SFINAE_EXPR&lt;/code&gt;を追加。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_SFINAE_EXPR&lt;/code&gt;は以前からあったが、&lt;code&gt;CXX11&lt;/code&gt;が名前に含まれたマクロがなかった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12749&#34; target=&#34;_blank&#34;&gt;Trac #12749&lt;/a&gt; &lt;code&gt;container::pmr::polymorphic_allocator&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11333&#34; target=&#34;_blank&#34;&gt;Trac #11333&lt;/a&gt; &lt;code&gt;boost::container::basic_string&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;を相互運用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;emplace_back&lt;/code&gt;は&lt;code&gt;*end()&lt;/code&gt;ではなく&lt;code&gt;back()&lt;/code&gt;を返すべき&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいAPIとして&lt;code&gt;call/cc&lt;/code&gt;を実装した&lt;ul&gt;
&lt;li&gt;訳者註: いわゆるSchemeなどに代表されるCall with Current Continuationのことである&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;execution-context&lt;/code&gt;が(v1,v2ともに)廃止予定となった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12719&#34; target=&#34;_blank&#34;&gt;#12719&lt;/a&gt; &lt;code&gt;mingw-w64&lt;/code&gt;でセグメンテーションフォルトする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/38&#34; target=&#34;_blank&#34;&gt;#38&lt;/a&gt; macOSで&lt;code&gt;context_entry()&lt;/code&gt;がクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/39&#34; target=&#34;_blank&#34;&gt;#39&lt;/a&gt; Clang 3.8でサポートされない&lt;code&gt;.cpu&lt;/code&gt;ディレクティブがAArch64で使われていたことによってビルド出来なかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11の&lt;code&gt;constexpr&lt;/code&gt;とC++11のSFINAE式を実装したコンパイラにおいて、&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した (Glen Fernandes氏に感謝)
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した (Bjorn Reese氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/4&#34; target=&#34;_blank&#34;&gt;#4&lt;/a&gt; &lt;code&gt;coroutine2&amp;lt;&amp;gt;&lt;/code&gt;が&lt;code&gt;std::bind&lt;/code&gt;を受け取れなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows CEでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;ポインタからシンボルの位置を取得する&lt;code&gt;boost:dll::symbol_location_ptr&lt;/code&gt;関数を追加。(たとえば&lt;code&gt;void*&lt;/code&gt;からの)間接参照ではシンボル位置を取得できなかった&lt;/li&gt;
&lt;li&gt;メンバポインタに対する&lt;code&gt;detail::aggressive_ptr_cast&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;実験的なスマートインポートでのリークを修正&lt;/li&gt;
&lt;li&gt;警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/100&#34; target=&#34;_blank&#34;&gt;#100&lt;/a&gt; ASIO: &lt;code&gt;notify&lt;/code&gt;での処理が足りないことで他のファイバーが実行されなくなる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/106&#34; target=&#34;_blank&#34;&gt;#106&lt;/a&gt; &lt;code&gt;fixed_stack&lt;/code&gt;アロケータを&lt;code&gt;async&lt;/code&gt;や&lt;code&gt;packaged_task&lt;/code&gt;に渡すことが出来なかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/111&#34; target=&#34;_blank&#34;&gt;#111&lt;/a&gt; &lt;code&gt;buffered_channel::try_value_pop()&lt;/code&gt;の内部で無限ループする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(un)bounded_channel&amp;lt;&amp;gt;&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual C++の新しいバージョンで削除された関数オブジェクトを使用するのをやめた。(C++11で非推奨化され、C++17で削除されることになった&lt;code&gt;std::unary_function&lt;/code&gt;と&lt;code&gt;std::binary_function&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12617&#34; target=&#34;_blank&#34;&gt;Trac #12617&lt;/a&gt; OS X 10.11での&lt;code&gt;clock_gettime&lt;/code&gt;がないというコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12744&#34; target=&#34;_blank&#34;&gt;Trac #12744&lt;/a&gt; Windowsにおいて、&lt;code&gt;boost::interprocess::ipcdetail::spin_wait&lt;/code&gt;内で&lt;code&gt;winapi::set_timer_resolution&lt;/code&gt;が使われていたために、おかしな分解能の変換が行われていた。&lt;code&gt;winapi::query_timer_resolution&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub Pull #32&lt;/a&gt; &lt;code&gt;std::pointer_traits&lt;/code&gt;の要件に準拠するよう修正。C++11以降の環境では、&lt;code&gt;offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;::other&lt;/code&gt;ではなく&lt;code&gt;offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;&lt;/code&gt;で型をとれるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/33&#34; target=&#34;_blank&#34;&gt;GitHub Pull #33&lt;/a&gt; 64/32ビットプロセス間の共有において、基本クラスの&lt;code&gt;offset_ptr&lt;/code&gt;から派生クラスの&lt;code&gt;offset_ptr&lt;/code&gt;に正しく変換できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/34&#34; target=&#34;_blank&#34;&gt;GitHub Pull #34&lt;/a&gt; サンプルコードで&lt;code&gt;BOOST_MULTI_INDEX_MEMBER&lt;/code&gt;の代わりに&lt;code&gt;multi_index::member&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub Pull #35&lt;/a&gt; クロスコンパイルのオプションを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windowsシステムからの新たな実験的オプション&lt;code&gt;BOOST_INTERPROCESS_BOOTSTAMP_IS_SESSION_MANAGER_BASED&lt;/code&gt;を追加。このオプションは、セッションマネージャに関連付けられたレジストリの値から、共有メモリが置かれるフォルダ名として使用される一意なブートスタンプに由来する。このオプションはVista以降で動作し、デフォルトバージョンはこれ以降の安定バージョンとなるだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12745&#34; target=&#34;_blank&#34;&gt;Trac #12745&lt;/a&gt; &lt;code&gt;key_nodeptr_comp&lt;/code&gt;のキー型が&lt;code&gt;void*&lt;/code&gt;のときコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12761&#34; target=&#34;_blank&#34;&gt;Trac #12761&lt;/a&gt; &lt;code&gt;intrusive::set::swap&lt;/code&gt;で(状態を持つ)比較関数が入れ替わらない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel C/C++コンパイラのバージョン仕様を修正&lt;/li&gt;
&lt;li&gt;Boostの有効なバージョン番号から各要素を取り出すためのマクロ&lt;code&gt;BOOST_VERSION_NUMBER_MAJOR&lt;/code&gt;、&lt;code&gt;BOOST_VERSION_NUMBER_MINOR&lt;/code&gt;、&lt;code&gt;BOOST_VERSION_NUMBER_PATCH&lt;/code&gt;を追加。それぞれ、Boostのメジャーバージョン、マイナーバージョン、パッチバージョンを取得できる&lt;/li&gt;
&lt;li&gt;Visual Studioバージョンの番号付けを変更。VS2015以降は、多様なプロダクトバージョンの代わりに、コンパイラバージョンを使用するようにした &lt;a href=&#34;https://github.com/boostorg/predef/commit/0d56819d68e7bf5f411cd6240136657ebd47f672&#34; target=&#34;_blank&#34;&gt;commit 0d56819&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; 値の&lt;code&gt;boost::optional&lt;/code&gt;への書き込みをサポートした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;allocate_shared&lt;/code&gt;と&lt;code&gt;make_shared&lt;/code&gt;の配列版を、より最適でメンテナンスしやすい実装に書き直した (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;li&gt;ポインタをキャストする関数のムーブ版を追加 (Chris Glover氏に感謝)&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0390r0.htm&#34; target=&#34;_blank&#34;&gt;P0390R0 A Proposal to Add Pointer Cast Functions with Move Semantics to the Standard Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.5&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新機能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ユーザー定義型をロギングするカスタマイゼーションポイントを提供するようにした。そのためには、型と同じ名前空間で、以下の関数を定義する：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost_test_print_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ostr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArgumentType&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JUnitの出力フォーマットが&lt;code&gt;/log-level/&lt;/code&gt;を持つようにした&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;JUnitの出力フォーマットは、テストモジュールが多くのチェックを持つ場合、良いパフォーマンスはでません&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バグ修正&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/107&#34; target=&#34;_blank&#34;&gt;GitHub #107&lt;/a&gt; &lt;code&gt;throw_exception&lt;/code&gt;関数内で使用する例外無効指定の検出をするマクロのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/108&#34; target=&#34;_blank&#34;&gt;GitHub #108&lt;/a&gt; &lt;code&gt;runtime_config&lt;/code&gt;の文字列定数の命名規則を、大文字アンダースコア区切りから、小文字アンダースコア区切りに修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11756&#34; target=&#34;_blank&#34;&gt;Trac #11756&lt;/a&gt; &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;標準ヘッダがない環境で、&lt;code&gt;FE_*&lt;/code&gt;系マクロを使用したコードのコンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12540&#34; target=&#34;_blank&#34;&gt;Trac #12540&lt;/a&gt; ユーザー定義型をロギングするカスタマイゼーションポイントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12712&#34; target=&#34;_blank&#34;&gt;Trac #12712&lt;/a&gt; 同じ名前を持つテストケースで競合が発生していたため、&lt;code&gt;BOOST_AUTO_TEST_SUITE&lt;/code&gt;でのユニークな名前の生成に、&lt;code&gt;__COUNTER__&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12748&#34; target=&#34;_blank&#34;&gt;Trac #12748&lt;/a&gt; &lt;code&gt;VERSION&lt;/code&gt;という名前の変数を定義していたことにより発生していたコンパイルエラーを修正。小文字の変数にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12778&#34; target=&#34;_blank&#34;&gt;Trac #12778&lt;/a&gt; &lt;code&gt;nullptr&lt;/code&gt;をサポートした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17のメンバ関数サポートを開始した：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_map&lt;/code&gt;に&lt;code&gt;insert_or_assign&lt;/code&gt;と&lt;code&gt;try_emplace&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;全てのコンテナに&lt;code&gt;merge&lt;/code&gt;と&lt;code&gt;extract&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>I</name>
        <email>wx257osn2@yahoo.co.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.64.0リリースノート -- Merge branch &#39;master&#39; of github.com:boostjp/site
</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>c89905d5c866c47a353a1996e3dfe1a78bbec886:document/version/1_64_0.md</id>
      <updated>2017-03-26 18:46:23 +0900
</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロ&lt;code&gt;BOOST_NO_CXX11_SFINAE_EXPR&lt;/code&gt;を追加。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_SFINAE_EXPR&lt;/code&gt;は以前からあったが、&lt;code&gt;CXX11&lt;/code&gt;が名前に含まれたマクロがなかった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12749&#34; target=&#34;_blank&#34;&gt;Trac #12749&lt;/a&gt; &lt;code&gt;container::pmr::polymorphic_allocator&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11333&#34; target=&#34;_blank&#34;&gt;Trac #11333&lt;/a&gt; &lt;code&gt;boost::container::basic_string&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;を相互運用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;emplace_back&lt;/code&gt;は&lt;code&gt;*end()&lt;/code&gt;ではなく&lt;code&gt;back()&lt;/code&gt;を返すべき&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいAPIとして&lt;code&gt;call/cc&lt;/code&gt;を実装した&lt;ul&gt;
&lt;li&gt;訳者註: いわゆるSchemeなどに代表されるCall with Current Continuationのことである&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;execution-context&lt;/code&gt;が(v1,v2ともに)廃止予定となった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12719&#34; target=&#34;_blank&#34;&gt;#12719&lt;/a&gt; &lt;code&gt;mingw-w64&lt;/code&gt;でセグメンテーションフォルトする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/38&#34; target=&#34;_blank&#34;&gt;#38&lt;/a&gt; macOSで&lt;code&gt;context_entry()&lt;/code&gt;がクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/39&#34; target=&#34;_blank&#34;&gt;#39&lt;/a&gt; Clang 3.8でサポートされない&lt;code&gt;.cpu&lt;/code&gt;ディレクティブがAArch64で使われていたことによってビルド出来なかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11の&lt;code&gt;constexpr&lt;/code&gt;とC++11のSFINAE式を実装したコンパイラにおいて、&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した (Glen Fernandes氏に感謝)
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した (Bjorn Reese氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/4&#34; target=&#34;_blank&#34;&gt;#4&lt;/a&gt; &lt;code&gt;coroutine2&amp;lt;&amp;gt;&lt;/code&gt;が&lt;code&gt;std::bind&lt;/code&gt;を受け取れなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows CEでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;ポインタからシンボルの位置を取得する&lt;code&gt;boost:dll::symbol_location_ptr&lt;/code&gt;関数を追加。(たとえば&lt;code&gt;void*&lt;/code&gt;からの)間接参照ではシンボル位置を取得できなかった&lt;/li&gt;
&lt;li&gt;メンバポインタに対する&lt;code&gt;detail::aggressive_ptr_cast&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;実験的なスマートインポートでのリークを修正&lt;/li&gt;
&lt;li&gt;警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/100&#34; target=&#34;_blank&#34;&gt;#100&lt;/a&gt; ASIO: &lt;code&gt;notify&lt;/code&gt;での処理が足りないことで他のファイバーが実行されなくなる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/106&#34; target=&#34;_blank&#34;&gt;#106&lt;/a&gt; &lt;code&gt;fixed_stack&lt;/code&gt;アロケータを&lt;code&gt;async&lt;/code&gt;や&lt;code&gt;packaged_task&lt;/code&gt;に渡すことが出来なかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/111&#34; target=&#34;_blank&#34;&gt;#111&lt;/a&gt; &lt;code&gt;buffered_channel::try_value_pop()&lt;/code&gt;の内部で無限ループする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(un)bounded_channel&amp;lt;&amp;gt;&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual C++の新しいバージョンで削除された関数オブジェクトを使用するのをやめた。(C++11で非推奨化され、C++17で削除されることになった&lt;code&gt;std::unary_function&lt;/code&gt;と&lt;code&gt;std::binary_function&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12617&#34; target=&#34;_blank&#34;&gt;Trac #12617&lt;/a&gt; OS X 10.11での&lt;code&gt;clock_gettime&lt;/code&gt;がないというコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12744&#34; target=&#34;_blank&#34;&gt;Trac #12744&lt;/a&gt; Windowsにおいて、&lt;code&gt;boost::interprocess::ipcdetail::spin_wait&lt;/code&gt;内で&lt;code&gt;winapi::set_timer_resolution&lt;/code&gt;が使われていたために、おかしな分解能の変換が行われていた。&lt;code&gt;winapi::query_timer_resolution&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub Pull #32&lt;/a&gt; &lt;code&gt;std::pointer_traits&lt;/code&gt;の要件に準拠するよう修正。C++11以降の環境では、&lt;code&gt;offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;::other&lt;/code&gt;ではなく&lt;code&gt;`offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;&lt;/code&gt;で型をとれるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/33&#34; target=&#34;_blank&#34;&gt;GitHub Pull #33&lt;/a&gt; 64/32ビットプロセス間の共有において、基本クラスの&lt;code&gt;offset_ptr&lt;/code&gt;から派生クラスの&lt;code&gt;offset_ptr&lt;/code&gt;に正しく変換できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/34&#34; target=&#34;_blank&#34;&gt;GitHub Pull #34&lt;/a&gt; サンプルコードで&lt;code&gt;BOOST_MULTI_INDEX_MEMBER&lt;/code&gt;の代わりに&lt;code&gt;multi_index::member&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub Pull #35&lt;/a&gt; クロスコンパイルのオプションを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windowsシステムからの新たな実験的オプション&lt;code&gt;BOOST_INTERPROCESS_BOOTSTAMP_IS_SESSION_MANAGER_BASED&lt;/code&gt;を追加。このオプションは、セッションマネージャに関連付けられたレジストリの値から、共有メモリが置かれるフォルダ名として使用される一意なブートスタンプに由来する。このオプションはVista以降で動作し、デフォルトバージョンはこれ以降の安定バージョンとなるだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12745&#34; target=&#34;_blank&#34;&gt;Trac #12745&lt;/a&gt; &lt;code&gt;key_nodeptr_comp&lt;/code&gt;のキー型が&lt;code&gt;void*&lt;/code&gt;のときコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12761&#34; target=&#34;_blank&#34;&gt;Trac #12761&lt;/a&gt; &lt;code&gt;intrusive::set::swap&lt;/code&gt;で(状態を持つ)比較関数が入れ替わらない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel C/C++コンパイラのバージョン仕様を修正&lt;/li&gt;
&lt;li&gt;Boostの有効なバージョン番号から各要素を取り出すためのマクロ&lt;code&gt;BOOST_VERSION_NUMBER_MAJOR&lt;/code&gt;、&lt;code&gt;BOOST_VERSION_NUMBER_MINOR&lt;/code&gt;、&lt;code&gt;BOOST_VERSION_NUMBER_PATCH&lt;/code&gt;を追加。それぞれ、Boostのメジャーバージョン、マイナーバージョン、パッチバージョンを取得できる&lt;/li&gt;
&lt;li&gt;Visual Studioバージョンの番号付けを変更。VS2015以降は、多様なプロダクトバージョンの代わりに、コンパイラバージョンを使用するようにした &lt;a href=&#34;https://github.com/boostorg/predef/commit/0d56819d68e7bf5f411cd6240136657ebd47f672&#34; target=&#34;_blank&#34;&gt;commit 0d56819&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; 値の&lt;code&gt;boost::optional&lt;/code&gt;への書き込みをサポートした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;allocate_shared&lt;/code&gt;と&lt;code&gt;make_shared&lt;/code&gt;の配列版を、より最適でメンテナンスしやすい実装に書き直した (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;li&gt;ポインタをキャストする関数のムーブ版を追加 (Chris Glover氏に感謝)&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0390r0.htm&#34; target=&#34;_blank&#34;&gt;P0390R0 A Proposal to Add Pointer Cast Functions with Move Semantics to the Standard Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.5&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新機能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ユーザー定義型をロギングするカスタマイゼーションポイントを提供するようにした。そのためには、型と同じ名前空間で、以下の関数を定義する：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost_test_print_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ostr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArgumentType&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JUnitの出力フォーマットが&lt;code&gt;/log-level/&lt;/code&gt;を持つようにした&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;JUnitの出力フォーマットは、テストモジュールが多くのチェックを持つ場合、良いパフォーマンスはでません&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バグ修正&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/107&#34; target=&#34;_blank&#34;&gt;GitHub #107&lt;/a&gt; &lt;code&gt;throw_exception&lt;/code&gt;関数内で使用する例外無効指定の検出をするマクロのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/108&#34; target=&#34;_blank&#34;&gt;GitHub #108&lt;/a&gt; &lt;code&gt;runtime_config&lt;/code&gt;の文字列定数の命名規則を、大文字アンダースコア区切りから、小文字アンダースコア区切りに修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11756&#34; target=&#34;_blank&#34;&gt;Trac #11756&lt;/a&gt; &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;標準ヘッダがない環境で、&lt;code&gt;FE_*&lt;/code&gt;系マクロを使用したコードのコンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12540&#34; target=&#34;_blank&#34;&gt;Trac #12540&lt;/a&gt; ユーザー定義型をロギングするカスタマイゼーションポイントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12712&#34; target=&#34;_blank&#34;&gt;Trac #12712&lt;/a&gt; 同じ名前を持つテストケースで競合が発生していたため、&lt;code&gt;BOOST_AUTO_TEST_SUITE&lt;/code&gt;でのユニークな名前の生成に、&lt;code&gt;__COUNTER__&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12748&#34; target=&#34;_blank&#34;&gt;Trac #12748&lt;/a&gt; &lt;code&gt;VERSION&lt;/code&gt;という名前の変数を定義していたことにより発生していたコンパイルエラーを修正。小文字の変数にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12778&#34; target=&#34;_blank&#34;&gt;Trac #12778&lt;/a&gt; &lt;code&gt;nullptr&lt;/code&gt;をサポートした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17のメンバ関数サポートを開始した：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_map&lt;/code&gt;に&lt;code&gt;insert_or_assign&lt;/code&gt;と&lt;code&gt;try_emplace&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;全てのコンテナに&lt;code&gt;merge&lt;/code&gt;と&lt;code&gt;extract&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Kohei Takahashi
</name>
        <email>flast@flast.jp
</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.64.0リリースノート -- 1.64.0リリースノート: Fiber, close #134</title>
      <link href="https://boostjp.github.io/document/version/1_64_0.html"/>
      <id>6285690001abe8316ca7d1d57d4684c7e95f1fe3:document/version/1_64_0.md</id>
      <updated>2017-03-26 18:46:13 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.64.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_64_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_64_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_64_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34;&gt;Any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#any&#34; name=&#34;any&#34;&gt;Any&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一時オブジェクトへの参照をreturnで返す際の、誤った警告を抑制した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12615&#34; target=&#34;_blank&#34;&gt;#12615&lt;/a&gt; オブジェクトのアドレスを直接取得する代わりに、&lt;code&gt;boost::addressof&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12053&#34; target=&#34;_blank&#34;&gt;#12053&lt;/a&gt; インクルードするBoostのヘッダファイルは、ダブルクォートで囲むのをやめて山カッコで囲むようにした&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;li&gt;テストを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#atomic&#34; name=&#34;atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.7以前の32bit x86コンパイラで正しくない64bitアトミック命令が出力されてしまう問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロ&lt;code&gt;BOOST_NO_CXX11_SFINAE_EXPR&lt;/code&gt;を追加。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_SFINAE_EXPR&lt;/code&gt;は以前からあったが、&lt;code&gt;CXX11&lt;/code&gt;が名前に含まれたマクロがなかった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#container&#34; name=&#34;container&#34;&gt;Container&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12749&#34; target=&#34;_blank&#34;&gt;Trac #12749&lt;/a&gt; &lt;code&gt;container::pmr::polymorphic_allocator&lt;/code&gt;のコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11333&#34; target=&#34;_blank&#34;&gt;Trac #11333&lt;/a&gt; &lt;code&gt;boost::container::basic_string&lt;/code&gt;と&lt;code&gt;boost::basic_string_view&lt;/code&gt;を相互運用できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/container/pull/45&#34; target=&#34;_blank&#34;&gt;GitHub #45&lt;/a&gt; &lt;code&gt;emplace_back&lt;/code&gt;は&lt;code&gt;*end()&lt;/code&gt;ではなく&lt;code&gt;back()&lt;/code&gt;を返すべき&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しいAPIとして&lt;code&gt;call/cc&lt;/code&gt;を実装した&lt;ul&gt;
&lt;li&gt;訳者註: いわゆるSchemeなどに代表されるCall with Current Continuationのことである&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;execution-context&lt;/code&gt;が(v1,v2ともに)廃止予定となった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12719&#34; target=&#34;_blank&#34;&gt;#12719&lt;/a&gt; &lt;code&gt;mingw-w64&lt;/code&gt;でセグメンテーションフォルトする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/38&#34; target=&#34;_blank&#34;&gt;#38&lt;/a&gt; macOSで&lt;code&gt;context_entry()&lt;/code&gt;がクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/39&#34; target=&#34;_blank&#34;&gt;#39&lt;/a&gt; Clang 3.8でサポートされない&lt;code&gt;.cpu&lt;/code&gt;ディレクティブがAArch64で使われていたことによってビルド出来なかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#conversion&#34; name=&#34;conversion&#34;&gt;Conversion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドキュメントをQuickbookに移行した (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;テストでのメモリリークを修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11の&lt;code&gt;constexpr&lt;/code&gt;とC++11のSFINAE式を実装したコンパイラにおいて、&lt;code&gt;constexpr&lt;/code&gt;修飾された&lt;code&gt;addressof&lt;/code&gt;を実装した (Glen Fernandes氏に感謝)
  サポートされない場合には&lt;code&gt;BOOST_CORE_NO_CONSTEXPR_ADDRESSOF&lt;/code&gt;マクロが定義される&lt;/li&gt;
&lt;li&gt;コンテナ要素をテストするための&lt;code&gt;BOOST_TEST_ALL_EQ&lt;/code&gt;マクロと&lt;code&gt;BOOST_TEST_ALL_WITH&lt;/code&gt;マクロを&lt;code&gt;lightweight_test.hpp&lt;/code&gt;に追加した (Bjorn Reese氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/coroutine2/issues/4&#34; target=&#34;_blank&#34;&gt;#4&lt;/a&gt; &lt;code&gt;coroutine2&amp;lt;&amp;gt;&lt;/code&gt;が&lt;code&gt;std::bind&lt;/code&gt;を受け取れなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows CEでのコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;ポインタからシンボルの位置を取得する&lt;code&gt;boost:dll::symbol_location_ptr&lt;/code&gt;関数を追加。(たとえば&lt;code&gt;void*&lt;/code&gt;からの)間接参照ではシンボル位置を取得できなかった&lt;/li&gt;
&lt;li&gt;メンバポインタに対する&lt;code&gt;detail::aggressive_ptr_cast&lt;/code&gt;の未定義動作を修正&lt;/li&gt;
&lt;li&gt;実験的なスマートインポートでのリークを修正&lt;/li&gt;
&lt;li&gt;警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/100&#34; target=&#34;_blank&#34;&gt;#100&lt;/a&gt; ASIO: &lt;code&gt;notify&lt;/code&gt;での処理が足りないことで他のファイバーが実行されなくなる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/106&#34; target=&#34;_blank&#34;&gt;#106&lt;/a&gt; &lt;code&gt;fixed_stack&lt;/code&gt;アロケータを&lt;code&gt;async&lt;/code&gt;や&lt;code&gt;packaged_task&lt;/code&gt;に渡すことが出来なかった問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/111&#34; target=&#34;_blank&#34;&gt;#111&lt;/a&gt; &lt;code&gt;buffered_channel::try_value_pop()&lt;/code&gt;の内部で無限ループする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(un)bounded_channel&amp;lt;&amp;gt;&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visual C++の新しいバージョンで削除された関数オブジェクトを使用するのをやめた。(C++11で非推奨化され、C++17で削除されることになった&lt;code&gt;std::unary_function&lt;/code&gt;と&lt;code&gt;std::binary_function&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#interprocess&#34; name=&#34;interprocess&#34;&gt;Interprocess&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12617&#34; target=&#34;_blank&#34;&gt;Trac #12617&lt;/a&gt; OS X 10.11での&lt;code&gt;clock_gettime&lt;/code&gt;がないというコンパイルエラーを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12744&#34; target=&#34;_blank&#34;&gt;Trac #12744&lt;/a&gt; Windowsにおいて、&lt;code&gt;boost::interprocess::ipcdetail::spin_wait&lt;/code&gt;内で&lt;code&gt;winapi::set_timer_resolution&lt;/code&gt;が使われていたために、おかしな分解能の変換が行われていた。&lt;code&gt;winapi::query_timer_resolution&lt;/code&gt;を使用するよう修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/32&#34; target=&#34;_blank&#34;&gt;GitHub Pull #32&lt;/a&gt; &lt;code&gt;std::pointer_traits&lt;/code&gt;の要件に準拠するよう修正。C++11以降の環境では、&lt;code&gt;offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;::other&lt;/code&gt;ではなく&lt;code&gt;`offset_ptr&amp;lt;T&amp;gt;::rebind&amp;lt;U&amp;gt;&lt;/code&gt;で型をとれるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/33&#34; target=&#34;_blank&#34;&gt;GitHub Pull #33&lt;/a&gt; 64/32ビットプロセス間の共有において、基本クラスの&lt;code&gt;offset_ptr&lt;/code&gt;から派生クラスの&lt;code&gt;offset_ptr&lt;/code&gt;に正しく変換できるようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/34&#34; target=&#34;_blank&#34;&gt;GitHub Pull #34&lt;/a&gt; サンプルコードで&lt;code&gt;BOOST_MULTI_INDEX_MEMBER&lt;/code&gt;の代わりに&lt;code&gt;multi_index::member&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/interprocess/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub Pull #35&lt;/a&gt; クロスコンパイルのオプションを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windowsシステムからの新たな実験的オプション&lt;code&gt;BOOST_INTERPROCESS_BOOTSTAMP_IS_SESSION_MANAGER_BASED&lt;/code&gt;を追加。このオプションは、セッションマネージャに関連付けられたレジストリの値から、共有メモリが置かれるフォルダ名として使用される一意なブートスタンプに由来する。このオプションはVista以降で動作し、デフォルトバージョンはこれ以降の安定バージョンとなるだろう&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#intrusive&#34; name=&#34;intrusive&#34;&gt;Intrusive&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12745&#34; target=&#34;_blank&#34;&gt;Trac #12745&lt;/a&gt; &lt;code&gt;key_nodeptr_comp&lt;/code&gt;のキー型が&lt;code&gt;void*&lt;/code&gt;のときコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12761&#34; target=&#34;_blank&#34;&gt;Trac #12761&lt;/a&gt; &lt;code&gt;intrusive::set::swap&lt;/code&gt;で(状態を持つ)比較関数が入れ替わらない問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#lexical_cast&#34; name=&#34;lexical_cast&#34;&gt;LexicalCast&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11842&#34; target=&#34;_blank&#34;&gt;#11842&lt;/a&gt; いくつかの警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#math&#34; name=&#34;math&#34;&gt;Math&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C99にあるすべての関数がAnnex F (IEC 60559) と互換があることを確実にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12066&#34; target=&#34;_blank&#34;&gt;#12066&lt;/a&gt; ベッセル関数I0、I1、K0、K1の精度を改善した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#multiprecision&#34; name=&#34;multiprecision&#34;&gt;Multiprecision&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; 非正規化数の&lt;code&gt;cpp_bin_float&lt;/code&gt;を&lt;code&gt;double&lt;/code&gt;や&lt;code&gt;float&lt;/code&gt;に変換する際に、丸めが二重に行われる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12559&#34; target=&#34;_blank&#34;&gt;#12559&lt;/a&gt; 小さい整数に対する整数平方根のバグを修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpp_bin_float&lt;/code&gt;の符号付きゼロの変換を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12527&#34; target=&#34;_blank&#34;&gt;#12527&lt;/a&gt; &lt;code&gt;cpp_bin_float&lt;/code&gt;の丸めコードを修正し、任意の場所で丸められるようにした。それを変換で使用できる&lt;/li&gt;
&lt;li&gt;128ビットのビットスキャン操作のパフォーマンスを改善&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12580&#34; target=&#34;_blank&#34;&gt;#12580&lt;/a&gt; 非常に小さな&lt;code&gt;cpp_bin_float&lt;/code&gt;の減算を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12581&#34; target=&#34;_blank&#34;&gt;#12581&lt;/a&gt; C99 Annex F (IEC 60559)互換となるようエラーハンドリングを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12627&#34; target=&#34;_blank&#34;&gt;#12627&lt;/a&gt; &lt;code&gt;cpp_int&lt;/code&gt;の自明なビット取り出しを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12625&#34; target=&#34;_blank&#34;&gt;#12625&lt;/a&gt; 一貫性のために、&lt;code&gt;ilogb&lt;/code&gt; (とそれを使用するコード) の引数がゼロのときに指数型の最小値を返すよう修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__float128&lt;/code&gt;から&lt;code&gt;cpp_bin_float&lt;/code&gt;への変換を許可&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12790&#34; target=&#34;_blank&#34;&gt;#12790&lt;/a&gt; ビットが失われる問題の原因となっていた&lt;code&gt;cpp_int&lt;/code&gt;の左シフトバグを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12798&#34; target=&#34;_blank&#34;&gt;#12798&lt;/a&gt; 境界はあるが可変精度な&lt;code&gt;cpp_int&lt;/code&gt;において、過度に積極的な&lt;code&gt;constexpr&lt;/code&gt;最適化によって起こっていたバグを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; 値の&lt;code&gt;boost::optional&lt;/code&gt;への書き込みをサポートした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#regex&#34; name=&#34;regex&#34;&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oracle C++ toolsetでのコンパイルで、静的リンクすべしという制限をなくした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12818&#34; target=&#34;_blank&#34;&gt;#12818&lt;/a&gt; 大きな成果として、libFuzzerを使用してライブラリの脆弱性と認定問題(identified issue)を修正した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;allocate_shared&lt;/code&gt;と&lt;code&gt;make_shared&lt;/code&gt;の配列版を、より最適でメンテナンスしやすい実装に書き直した (Glen Fernandes氏に感謝)&lt;/li&gt;
&lt;li&gt;ポインタをキャストする関数のムーブ版を追加 (Chris Glover氏に感謝)&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0390r0.htm&#34; target=&#34;_blank&#34;&gt;P0390R0 A Proposal to Add Pointer Cast Functions with Move Semantics to the Standard Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.5&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新機能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ユーザー定義型をロギングするカスタマイゼーションポイントを提供するようにした。そのためには、型と同じ名前空間で、以下の関数を定義する：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boost_test_print_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ostr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArgumentType&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JUnitの出力フォーマットが&lt;code&gt;/log-level/&lt;/code&gt;を持つようにした&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;JUnitの出力フォーマットは、テストモジュールが多くのチェックを持つ場合、良いパフォーマンスはでません&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バグ修正&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/107&#34; target=&#34;_blank&#34;&gt;GitHub #107&lt;/a&gt; &lt;code&gt;throw_exception&lt;/code&gt;関数内で使用する例外無効指定の検出をするマクロのtypoを修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/108&#34; target=&#34;_blank&#34;&gt;GitHub #108&lt;/a&gt; &lt;code&gt;runtime_config&lt;/code&gt;の文字列定数の命名規則を、大文字アンダースコア区切りから、小文字アンダースコア区切りに修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11756&#34; target=&#34;_blank&#34;&gt;Trac #11756&lt;/a&gt; &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;標準ヘッダがない環境で、&lt;code&gt;FE_*&lt;/code&gt;系マクロを使用したコードのコンパイルが通らない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12540&#34; target=&#34;_blank&#34;&gt;Trac #12540&lt;/a&gt; ユーザー定義型をロギングするカスタマイゼーションポイントを追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12712&#34; target=&#34;_blank&#34;&gt;Trac #12712&lt;/a&gt; 同じ名前を持つテストケースで競合が発生していたため、&lt;code&gt;BOOST_AUTO_TEST_SUITE&lt;/code&gt;でのユニークな名前の生成に、&lt;code&gt;__COUNTER__&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12748&#34; target=&#34;_blank&#34;&gt;Trac #12748&lt;/a&gt; &lt;code&gt;VERSION&lt;/code&gt;という名前の変数を定義していたことにより発生していたコンパイルエラーを修正。小文字の変数にした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12778&#34; target=&#34;_blank&#34;&gt;Trac #12778&lt;/a&gt; &lt;code&gt;nullptr&lt;/code&gt;をサポートした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_index&#34; name=&#34;type_index&#34;&gt;TypeIndex&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/13&#34; target=&#34;_blank&#34;&gt;GitHub #13&lt;/a&gt; &lt;code&gt;BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST&lt;/code&gt;マクロを追加。これは&lt;code&gt;runtime_cast&lt;/code&gt;の実装のための機能だが、その目的のために使用していた&lt;code&gt;BOOST_TYPE_INDEX_REGISTER_CLASS&lt;/code&gt;マクロにその機能は含まれていなかった (実装者のChris Glover氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12739&#34; target=&#34;_blank&#34;&gt;#12739&lt;/a&gt; stl_type_index.hppでの未定義マクロによる警告を修正&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#type_traits&#34; name=&#34;type_traits&#34;&gt;TypeTraits&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新しい型特性、&lt;code&gt;make_void&lt;/code&gt;を追加&lt;ul&gt;
&lt;li&gt;訳者註: これはC++17で実装される&lt;code&gt;std::void_t&lt;/code&gt;に相当し、テンプレートエイリアスが実装されたコンパイラでは&lt;code&gt;boost::void_t&lt;/code&gt;も提供される。
  &lt;code&gt;boost::make_void&lt;/code&gt;は可変長テンプレートをサポートしないコンパイラでも提供されるが、その場合は5要素を上限とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++17のメンバ関数サポートを開始した：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_map&lt;/code&gt;に&lt;code&gt;insert_or_assign&lt;/code&gt;と&lt;code&gt;try_emplace&lt;/code&gt;を追加&lt;/li&gt;
&lt;li&gt;全てのコンテナに&lt;code&gt;merge&lt;/code&gt;と&lt;code&gt;extract&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_64_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12508&#34; target=&#34;_blank&#34;&gt;#12508&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12645&#34; target=&#34;_blank&#34;&gt;#12645&lt;/a&gt; &lt;code&gt;recursive_variant_&lt;/code&gt;から&lt;code&gt;variant&lt;/code&gt;の構築でコンパイルエラーになる問題を修正 (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12236&#34; target=&#34;_blank&#34;&gt;#12236&lt;/a&gt; MSVC 2015 Update 1で可変引数テンプレートを有効にしていない場合にまだ問題があったので修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12680&#34; target=&#34;_blank&#34;&gt;#12680&lt;/a&gt; &lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7120&#34; target=&#34;_blank&#34;&gt;#7120&lt;/a&gt; GCC6でクラッシュする問題に対してワークアラウンドを入れた (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boost::polymorphic_*get&lt;/code&gt;が&lt;code&gt;boost::*get&lt;/code&gt;として動作するよう、ドキュメント化していない境界値テスト(border tests)と固定値テスト(fixed tests)を作った&lt;/li&gt;
&lt;li&gt;CIのテストで、&lt;code&gt;address&lt;/code&gt;、&lt;code&gt;leak&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;のサニタイザーを走らせるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Kohei Takahashi</name>
        <email>flast@flast.jp</email>
      </author>
    </entry>
  
</feed>