<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2017-08-20T23:03:26.642224</updated>
  <id>0ad14705-f849-4a0e-9f40-d9735c28c44a</id>

  
    <entry>
      <title>Boost 1.65.0リリースノート -- 1.65.0リリースノート : チケット番号の書き忘れ #180</title>
      <link href="https://boostjp.github.io/document/version/1_65_0.html"/>
      <id>b4b9ff451bdd177655359780eba8272014c01ef5:document/version/1_65_0.md</id>
      <updated>2017-08-17T23:33:48+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.65.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_65_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_65_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/poly_collection&#34; target=&#34;_blank&#34;&gt;PolyCollection&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Joaquín M López Muñoz氏による、多相オブジェクトに対して高速に動作するコンテナのライブラリ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/stacktrace&#34; target=&#34;_blank&#34;&gt;Stacktrace&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Antony Polukhin氏による、バックトレースの収集、コピー、表示をするライブラリ&lt;/li&gt;
&lt;li&gt;既知の問題として、MinGWでこのライブラリを使用した場合に、空のバックトレースが生成される可能性がある (&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#asio&#34; name=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13121&#34; target=&#34;_blank&#34;&gt;Trac #13121&lt;/a&gt; g++ 4.6でのリンクエラーを修正するため、標準アトミックを使用するための要件をg++ 4.7以上とした&lt;/li&gt;
&lt;li&gt;最近のMSVCのバージョンで、&lt;code&gt;constexpr&lt;/code&gt;と可変引数テンプレートを有効にした&lt;/li&gt;
&lt;li&gt;Linuxのepollバックエンドでの競合状態を修正。これは、epollで別のスレッドがブロックされているときに、ソケットやディスクリプタを閉じたときに発生していた&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;auto_ptr&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;li&gt;リアクティブな&lt;code&gt;async_accept&lt;/code&gt;の実装での、&lt;code&gt;asio_handler_is_continuation&lt;/code&gt;の間違った使用を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12419&#34; target=&#34;_blank&#34;&gt;Trac #12419&lt;/a&gt; いくつかの現代的なPOSIXプラットフォームで、&lt;code&gt;sys/poll.h&lt;/code&gt;ではなく&lt;code&gt;poll.h&lt;/code&gt;を使用するよう変更&lt;/li&gt;
&lt;li&gt;MSVCでのインテリセンス検出を修正&lt;/li&gt;
&lt;li&gt;android/clang/x86ターゲットで、拡張キーワード&lt;code&gt;__thread&lt;/code&gt;の使用を無効にした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;call/ccがucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;call/ccがWindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;call/ccがオンデマンドgrowing stack (セグメント化スタック／分割スタック) をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12719&#34; target=&#34;_blank&#34;&gt;Trac #12719&lt;/a&gt; mingw-w64ツールチェインで、テストケースとサンプルがセグメンテーションフォルトになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; g++-4.9でcallccテストのビルドが失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロとして、以下を追加：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX11_POINTER_TRAITS&lt;/code&gt; : C++11の&lt;code&gt;std::pointer_traits&lt;/code&gt;クラス&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_FOLD_EXPRESSIONS&lt;/code&gt; : C++17の畳み込み式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_INLINE_VARIABLES&lt;/code&gt; : C++17のインライン変数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_STRUCTURED_BINDINGS&lt;/code&gt; : C++17の構造化束縛&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03以降向けに&lt;code&gt;pointer_traits&lt;/code&gt;を実装した。これには、&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html&#34; target=&#34;_blank&#34;&gt;P0653r0&lt;/a&gt;のポインタへの変換関数が含まれる (実装者のGlen Fernandes氏に感謝)。この実装は、Align、Circular Buffer、Fiber、Geometryなどの他のライブラリで使われている&lt;/li&gt;
&lt;li&gt;Lightweight testに&lt;code&gt;BOOST_TEST_GT&lt;/code&gt; (&lt;code&gt;operator&amp;gt;&lt;/code&gt;による比較) と&lt;code&gt;BOOST_TEST_GE&lt;/code&gt; (&lt;code&gt;operator&amp;gt;=&lt;/code&gt;による比較)を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13064&#34; target=&#34;_blank&#34;&gt;Trac #13064&lt;/a&gt; CoroutineとCoroutine2の異なる振る舞いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非WindowsプラットフォームでのPEのパースを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ハードウェアトランザクショナルメモリ (Intel TSX) をサポート&lt;/li&gt;
&lt;li&gt;NUMAをサポート&lt;/li&gt;
&lt;li&gt;ucontext-API (swapcontext) をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;オンデマンドgrowing stackをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; GCC 4.8のC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/123&#34; target=&#34;_blank&#34;&gt;GitHub #123&lt;/a&gt; &lt;code&gt;schedule_from_remote&lt;/code&gt;がアサーション失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/125&#34; target=&#34;_blank&#34;&gt;GitHub #125&lt;/a&gt; テストでクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/126&#34; target=&#34;_blank&#34;&gt;GitHUb #126&lt;/a&gt; 内部で使用しているメモリオーダーが間違っていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11標準の&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;、&lt;code&gt;std::u16string&lt;/code&gt;、&lt;code&gt;std::u32string&lt;/code&gt;をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC 14.1は未対応となっていた次の可変長テンプレートベースのコンテナをサポートした: &lt;code&gt;fusion::vector&lt;/code&gt;, &lt;code&gt;fusion::deque&lt;/code&gt;, &lt;code&gt;fusion::map&lt;/code&gt;, &lt;code&gt;fusion::set&lt;/code&gt;, および &lt;code&gt;fusion::tuple&lt;/code&gt;. (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12986&#34; target=&#34;_blank&#34;&gt;#12986&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Solaris互換を改善。異なるプラットフォームを統一的に扱うビルドスクリプトを更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#phoenix&#34; name=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;幾つかのドキュメントを修正 (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/50&#34; target=&#34;_blank&#34;&gt;PR#50&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11以降かつ連想コンテナで &lt;code&gt;phoenix::erase&lt;/code&gt; を使用した際にイテレータを返すように変更 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7423&#34; target=&#34;_blank&#34;&gt;#7423&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::set&lt;/code&gt; および &lt;code&gt;std::multiset&lt;/code&gt; はphoenixが提供する遅延関数で動作するようになった (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/52&#34; target=&#34;_blank&#34;&gt;PR#52&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++17以降では &lt;code&gt;phoenix::random_shuffle&lt;/code&gt; を無効化した (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/53&#34; target=&#34;_blank&#34;&gt;PR#53&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;前方宣言ではなく適切なヘッダをインクルードするようにした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11875&#34; target=&#34;_blank&#34;&gt;#11875&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel C/C++コンパイラの値が9999だった場合に、コンパイラバージョン12.1.0となるよう修正&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ワークアラウンド検出のために、&lt;code&gt;BOOST_PREDEF_WORKAROUND&lt;/code&gt;マクロと&lt;code&gt;BOOST_PREDEF_TESTED_AT&lt;/code&gt;マクロを追加
  &lt;br /&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// #define BOOST_PREDEF_WORKAROUND(symbol,comp,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_WORKAROUND(BOOST_COMP_CLANG,&amp;lt;,3,0,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clangコンパイラの古いバージョン向けのワークアラウンドをここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// BOOST_PREDEF_TESTED_AT(symbol,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_TESTED_AT(BOOST_COMP_CLANG,3,5,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clang 3.5.0以上での検証をここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ARM64 MSVC SIMDの検出を追加 (Minmin Gong氏に感謝)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;iOSシミュレータとデバイスの検出を、プラットフォーム選択として追加 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;li&gt;MinGWでのインクルードガードが間違っていた問題を修正 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;に値を保存できるようにした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/issues/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 値なしでオプションを指定した場合のデフォルト値であるimplicit valueの解析において、次のトークンから値を使用できるようにした。1.59.0以降で、&lt;code&gt;--option_name option_value&lt;/code&gt;構文でのimplicit valueが許可されなくなり、&lt;code&gt;--option_name=option_value&lt;/code&gt;の構文を使用する必要があった。これによって&lt;code&gt;--option_name option_value&lt;/code&gt;構文の意味が変わってしまっていたために、以前の状態に戻し、両方の構文を許可するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34; name=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::python::str&lt;/code&gt;の&lt;code&gt;eval()&lt;/code&gt;、&lt;code&gt;exec()&lt;/code&gt;、&lt;code&gt;exec_statement()&lt;/code&gt;関数の引数として&lt;code&gt;const char*&lt;/code&gt;をとれるようにした&lt;/li&gt;
&lt;li&gt;廃止していた&lt;code&gt;boost::python::numeric&lt;/code&gt;のAPIを削除した。代わりに&lt;code&gt;boost::python::numpy&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;MSVCとPython3でのビルド問題をいくつか修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;atomic_shared_ptr&lt;/code&gt;を追加。これは、&lt;code&gt;shared_ptr&lt;/code&gt;上にスレッドセーフなアトミックポインタ操作を提供する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;local_shared_ptr&lt;/code&gt;を追加。これは、非アトミック操作によって参照カウントを更新する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocate_shared()&lt;/code&gt;と&lt;code&gt;make_shared()&lt;/code&gt;の配列版を、さらに最適化 (作者Glen Fernandes)&lt;/li&gt;
&lt;li&gt;ドキュメントをAsciidocフォーマットで書き直した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.6&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;C++17互換にした (VS2017でテストした) (&lt;a href=&#34;https://github.com/DanielaE&#34; target=&#34;_blank&#34;&gt;Daniela Engert&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST&lt;/code&gt;マクロで、C配列を直接比較できるようにした&lt;/li&gt;
&lt;li&gt;より良いグローバルフィクスチャの仕組みとして、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;マクロを追加。グローバル初期化のために&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;マクロを追加し、従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化。&lt;/li&gt;
&lt;li&gt;フィクスチャのサポートを改善。&lt;code&gt;setup()&lt;/code&gt; / &lt;code&gt;teardown()&lt;/code&gt;メンバ関数について、teadown時間のチェックをより良いものにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; いくつかのAPIをロガーのためにインタフェースを変更した&lt;/li&gt;
&lt;li&gt;従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化し、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;と&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;に分割した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5282&#34; target=&#34;_blank&#34;&gt;Trac #5282&lt;/a&gt; テストフィクスチャが仮想継承をサポートしていないという問題。対応なし&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5563&#34; target=&#34;_blank&#34;&gt;Trac #5563&lt;/a&gt; &lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;マクロで、デストラクタでテストに失敗するとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11471&#34; target=&#34;_blank&#34;&gt;Trac #11471&lt;/a&gt; C配列を扱えない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11962&#34; target=&#34;_blank&#34;&gt;Trac #11962&lt;/a&gt; フィクスチャのコンストラクタで&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正なXMLが出力される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12228&#34; target=&#34;_blank&#34;&gt;Trac #12228&lt;/a&gt; いくつかのヘッダがコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; &lt;code&gt;BOOST_DATA_TEST_CASE&lt;/code&gt;で&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正な出力になる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13011&#34; target=&#34;_blank&#34;&gt;Trac #13011&lt;/a&gt; &lt;code&gt;BOOST_TEST&lt;/code&gt;マクロの浮動小数点数の比較が壊れていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/106&#34; target=&#34;_blank&#34;&gt;GitHub #106&lt;/a&gt; 非推奨になっていたC++標準ライブラリの関数を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34; name=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13009&#34; target=&#34;_blank&#34;&gt;Trac #13009&lt;/a&gt; &lt;code&gt;&amp;lt;boost/functional/hash.hpp&amp;gt;&lt;/code&gt;のインクルードが抜けていたところを修正 (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13027&#34; target=&#34;_blank&#34;&gt;Trac #13027&lt;/a&gt; C++11をサポートしているコンパイラでは、&lt;code&gt;hash_code()&lt;/code&gt;の計算に&lt;code&gt;std::type_info::hash_code()&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; GCC 7以降での&lt;code&gt;ctti_type_index&lt;/code&gt;を修正 (Benjamin Buch氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_set&lt;/code&gt;、&lt;code&gt;unordered_multiset&lt;/code&gt;、&lt;code&gt;unordered_map&lt;/code&gt;、&lt;code&gt;unordered_multimap&lt;/code&gt;で同じデータ構造を使用するようにした。これはC++17において、マージ(merge)と抽出(extract)操作のノードがコンテナ間で互換である必要があったため&lt;/li&gt;
&lt;li&gt;非推奨だった関数にdeprecated属性を追加&lt;/li&gt;
&lt;li&gt;C++11コンパイラに対して、&lt;code&gt;pair&lt;/code&gt;のpiecewise構築において&lt;code&gt;allocator_traits&lt;/code&gt;、&lt;code&gt;construct&lt;/code&gt;、&lt;code&gt;destroy&lt;/code&gt;の使用を改善し、ふさわしい動作にした&lt;/li&gt;
&lt;li&gt;新しいOracleコンパイラに対して、ワークアラウンドを減らした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 未初期化メモリへのポインタ間接参照を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34; name=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10847&#34; target=&#34;_blank&#34;&gt;Trac #10847&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13002&#34; target=&#34;_blank&#34;&gt;Trac #13002&lt;/a&gt; Boost 1.57.0から&lt;code&gt;boost::next()&lt;/code&gt;と&lt;code&gt;boost::prior()&lt;/code&gt;がSFINAEフレンドリーでなくなっていた。互換性のために元に戻した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13018&#34; target=&#34;_blank&#34;&gt;Trac #13018&lt;/a&gt; &lt;code&gt;boost::get()&lt;/code&gt;に右辺値参照版を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13037&#34; target=&#34;_blank&#34;&gt;Trac #13037&lt;/a&gt; &lt;code&gt;&amp;lt;boost/variant/polymorphic_get.hpp&amp;gt;&lt;/code&gt;にインクルードが不足していた (Adam Badura氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8554&#34; target=&#34;_blank&#34;&gt;Trac #8554&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10041&#34; target=&#34;_blank&#34;&gt;Trac #10041&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub #35&lt;/a&gt; &lt;code&gt;boost::make_variant_over&lt;/code&gt;を修正し、viewや他のForward Sequenceに対して動作するようになった (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++1z: 6.3.0&lt;/li&gt;
&lt;li&gt;Intel: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++11: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 8.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7, 3.8&lt;/li&gt;
&lt;li&gt;GCC: 4.9, 5.4&lt;/li&gt;
&lt;li&gt;GCC, C++14: 6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC, C++11: 4.7.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.5_next, 12.5&lt;/li&gt;
&lt;li&gt;Oracle Solaris Studio, C++11: 12.5_next, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.1, 6.2.0, 6.3.0, 7.1.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++1z: 6.3.0&lt;/li&gt;
&lt;li&gt;Intel: 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++11: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 8.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7, 3.8&lt;/li&gt;
&lt;li&gt;GCC: 4.9, 5.4&lt;/li&gt;
&lt;li&gt;GCC, C++14: 6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.5_next, 12.5&lt;/li&gt;
&lt;li&gt;Oracle Solaris Studio, C++11: 12.5_next, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.65.0リリースノート -- 1.65.0リリースノート : Asioを追加 (close #180)</title>
      <link href="https://boostjp.github.io/document/version/1_65_0.html"/>
      <id>399a220091954a59626e00c8fbf68ce7ddbbb593:document/version/1_65_0.md</id>
      <updated>2017-08-17T23:31:07+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.65.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_65_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_65_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/poly_collection&#34; target=&#34;_blank&#34;&gt;PolyCollection&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Joaquín M López Muñoz氏による、多相オブジェクトに対して高速に動作するコンテナのライブラリ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/stacktrace&#34; target=&#34;_blank&#34;&gt;Stacktrace&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Antony Polukhin氏による、バックトレースの収集、コピー、表示をするライブラリ&lt;/li&gt;
&lt;li&gt;既知の問題として、MinGWでこのライブラリを使用した場合に、空のバックトレースが生成される可能性がある (&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#asio&#34;&gt;Asio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#asio&#34; name=&#34;asio&#34;&gt;Asio&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13121&#34; target=&#34;_blank&#34;&gt;#13121&lt;/a&gt; g++ 4.6でのリンクエラーを修正するため、標準アトミックを使用するための要件をg++ 4.7以上とした&lt;/li&gt;
&lt;li&gt;最近のMSVCのバージョンで、&lt;code&gt;constexpr&lt;/code&gt;と可変引数テンプレートを有効にした&lt;/li&gt;
&lt;li&gt;Linuxのepollバックエンドでの競合状態を修正。これは、epollで別のスレッドがブロックされているときに、ソケットやディスクリプタを閉じたときに発生していた&lt;/li&gt;
&lt;li&gt;非推奨だった&lt;code&gt;auto_ptr&lt;/code&gt;の使用をやめた&lt;/li&gt;
&lt;li&gt;リアクティブな&lt;code&gt;async_accept&lt;/code&gt;の実装での、&lt;code&gt;asio_handler_is_continuation&lt;/code&gt;の間違った使用を修正&lt;/li&gt;
&lt;li&gt;いくつかの現代的なPOSIXプラットフォームで、&lt;code&gt;sys/poll.h&lt;/code&gt;ではなく&lt;code&gt;poll.h&lt;/code&gt;を使用するよう変更&lt;/li&gt;
&lt;li&gt;MSVCでのインテリセンス検出を修正&lt;/li&gt;
&lt;li&gt;android/clang/x86ターゲットで、拡張キーワード&lt;code&gt;__thread&lt;/code&gt;の使用を無効にした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;call/ccがucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;call/ccがWindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;call/ccがオンデマンドgrowing stack (セグメント化スタック／分割スタック) をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12719&#34; target=&#34;_blank&#34;&gt;Trac #12719&lt;/a&gt; mingw-w64ツールチェインで、テストケースとサンプルがセグメンテーションフォルトになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; g++-4.9でcallccテストのビルドが失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロとして、以下を追加：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX11_POINTER_TRAITS&lt;/code&gt; : C++11の&lt;code&gt;std::pointer_traits&lt;/code&gt;クラス&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_FOLD_EXPRESSIONS&lt;/code&gt; : C++17の畳み込み式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_INLINE_VARIABLES&lt;/code&gt; : C++17のインライン変数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_STRUCTURED_BINDINGS&lt;/code&gt; : C++17の構造化束縛&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03以降向けに&lt;code&gt;pointer_traits&lt;/code&gt;を実装した。これには、&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html&#34; target=&#34;_blank&#34;&gt;P0653r0&lt;/a&gt;のポインタへの変換関数が含まれる (実装者のGlen Fernandes氏に感謝)。この実装は、Align、Circular Buffer、Fiber、Geometryなどの他のライブラリで使われている&lt;/li&gt;
&lt;li&gt;Lightweight testに&lt;code&gt;BOOST_TEST_GT&lt;/code&gt; (&lt;code&gt;operator&amp;gt;&lt;/code&gt;による比較) と&lt;code&gt;BOOST_TEST_GE&lt;/code&gt; (&lt;code&gt;operator&amp;gt;=&lt;/code&gt;による比較)を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13064&#34; target=&#34;_blank&#34;&gt;Trac #13064&lt;/a&gt; CoroutineとCoroutine2の異なる振る舞いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非WindowsプラットフォームでのPEのパースを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ハードウェアトランザクショナルメモリ (Intel TSX) をサポート&lt;/li&gt;
&lt;li&gt;NUMAをサポート&lt;/li&gt;
&lt;li&gt;ucontext-API (swapcontext) をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;オンデマンドgrowing stackをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; GCC 4.8のC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/123&#34; target=&#34;_blank&#34;&gt;GitHub #123&lt;/a&gt; &lt;code&gt;schedule_from_remote&lt;/code&gt;がアサーション失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/125&#34; target=&#34;_blank&#34;&gt;GitHub #125&lt;/a&gt; テストでクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/126&#34; target=&#34;_blank&#34;&gt;GitHUb #126&lt;/a&gt; 内部で使用しているメモリオーダーが間違っていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11標準の&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;、&lt;code&gt;std::u16string&lt;/code&gt;、&lt;code&gt;std::u32string&lt;/code&gt;をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC 14.1は未対応となっていた次の可変長テンプレートベースのコンテナをサポートした: &lt;code&gt;fusion::vector&lt;/code&gt;, &lt;code&gt;fusion::deque&lt;/code&gt;, &lt;code&gt;fusion::map&lt;/code&gt;, &lt;code&gt;fusion::set&lt;/code&gt;, および &lt;code&gt;fusion::tuple&lt;/code&gt;. (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12986&#34; target=&#34;_blank&#34;&gt;#12986&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Solaris互換を改善。異なるプラットフォームを統一的に扱うビルドスクリプトを更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#phoenix&#34; name=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;幾つかのドキュメントを修正 (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/50&#34; target=&#34;_blank&#34;&gt;PR#50&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11以降かつ連想コンテナで &lt;code&gt;phoenix::erase&lt;/code&gt; を使用した際にイテレータを返すように変更 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7423&#34; target=&#34;_blank&#34;&gt;#7423&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::set&lt;/code&gt; および &lt;code&gt;std::multiset&lt;/code&gt; はphoenixが提供する遅延関数で動作するようになった (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/52&#34; target=&#34;_blank&#34;&gt;PR#52&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++17以降では &lt;code&gt;phoenix::random_shuffle&lt;/code&gt; を無効化した (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/53&#34; target=&#34;_blank&#34;&gt;PR#53&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;前方宣言ではなく適切なヘッダをインクルードするようにした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11875&#34; target=&#34;_blank&#34;&gt;#11875&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel C/C++コンパイラの値が9999だった場合に、コンパイラバージョン12.1.0となるよう修正&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ワークアラウンド検出のために、&lt;code&gt;BOOST_PREDEF_WORKAROUND&lt;/code&gt;マクロと&lt;code&gt;BOOST_PREDEF_TESTED_AT&lt;/code&gt;マクロを追加
  &lt;br /&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// #define BOOST_PREDEF_WORKAROUND(symbol,comp,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_WORKAROUND(BOOST_COMP_CLANG,&amp;lt;,3,0,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clangコンパイラの古いバージョン向けのワークアラウンドをここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// BOOST_PREDEF_TESTED_AT(symbol,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_TESTED_AT(BOOST_COMP_CLANG,3,5,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clang 3.5.0以上での検証をここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ARM64 MSVC SIMDの検出を追加 (Minmin Gong氏に感謝)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;iOSシミュレータとデバイスの検出を、プラットフォーム選択として追加 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;li&gt;MinGWでのインクルードガードが間違っていた問題を修正 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;に値を保存できるようにした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/issues/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 値なしでオプションを指定した場合のデフォルト値であるimplicit valueの解析において、次のトークンから値を使用できるようにした。1.59.0以降で、&lt;code&gt;--option_name option_value&lt;/code&gt;構文でのimplicit valueが許可されなくなり、&lt;code&gt;--option_name=option_value&lt;/code&gt;の構文を使用する必要があった。これによって&lt;code&gt;--option_name option_value&lt;/code&gt;構文の意味が変わってしまっていたために、以前の状態に戻し、両方の構文を許可するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34; name=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::python::str&lt;/code&gt;の&lt;code&gt;eval()&lt;/code&gt;、&lt;code&gt;exec()&lt;/code&gt;、&lt;code&gt;exec_statement()&lt;/code&gt;関数の引数として&lt;code&gt;const char*&lt;/code&gt;をとれるようにした&lt;/li&gt;
&lt;li&gt;廃止していた&lt;code&gt;boost::python::numeric&lt;/code&gt;のAPIを削除した。代わりに&lt;code&gt;boost::python::numpy&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;MSVCとPython3でのビルド問題をいくつか修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;atomic_shared_ptr&lt;/code&gt;を追加。これは、&lt;code&gt;shared_ptr&lt;/code&gt;上にスレッドセーフなアトミックポインタ操作を提供する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;local_shared_ptr&lt;/code&gt;を追加。これは、非アトミック操作によって参照カウントを更新する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocate_shared()&lt;/code&gt;と&lt;code&gt;make_shared()&lt;/code&gt;の配列版を、さらに最適化 (作者Glen Fernandes)&lt;/li&gt;
&lt;li&gt;ドキュメントをAsciidocフォーマットで書き直した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.6&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;C++17互換にした (VS2017でテストした) (&lt;a href=&#34;https://github.com/DanielaE&#34; target=&#34;_blank&#34;&gt;Daniela Engert&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST&lt;/code&gt;マクロで、C配列を直接比較できるようにした&lt;/li&gt;
&lt;li&gt;より良いグローバルフィクスチャの仕組みとして、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;マクロを追加。グローバル初期化のために&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;マクロを追加し、従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化。&lt;/li&gt;
&lt;li&gt;フィクスチャのサポートを改善。&lt;code&gt;setup()&lt;/code&gt; / &lt;code&gt;teardown()&lt;/code&gt;メンバ関数について、teadown時間のチェックをより良いものにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; いくつかのAPIをロガーのためにインタフェースを変更した&lt;/li&gt;
&lt;li&gt;従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化し、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;と&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;に分割した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5282&#34; target=&#34;_blank&#34;&gt;Trac #5282&lt;/a&gt; テストフィクスチャが仮想継承をサポートしていないという問題。対応なし&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5563&#34; target=&#34;_blank&#34;&gt;Trac #5563&lt;/a&gt; &lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;マクロで、デストラクタでテストに失敗するとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11471&#34; target=&#34;_blank&#34;&gt;Trac #11471&lt;/a&gt; C配列を扱えない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11962&#34; target=&#34;_blank&#34;&gt;Trac #11962&lt;/a&gt; フィクスチャのコンストラクタで&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正なXMLが出力される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12228&#34; target=&#34;_blank&#34;&gt;Trac #12228&lt;/a&gt; いくつかのヘッダがコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; &lt;code&gt;BOOST_DATA_TEST_CASE&lt;/code&gt;で&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正な出力になる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13011&#34; target=&#34;_blank&#34;&gt;Trac #13011&lt;/a&gt; &lt;code&gt;BOOST_TEST&lt;/code&gt;マクロの浮動小数点数の比較が壊れていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/106&#34; target=&#34;_blank&#34;&gt;GitHub #106&lt;/a&gt; 非推奨になっていたC++標準ライブラリの関数を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34; name=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13009&#34; target=&#34;_blank&#34;&gt;Trac #13009&lt;/a&gt; &lt;code&gt;&amp;lt;boost/functional/hash.hpp&amp;gt;&lt;/code&gt;のインクルードが抜けていたところを修正 (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13027&#34; target=&#34;_blank&#34;&gt;Trac #13027&lt;/a&gt; C++11をサポートしているコンパイラでは、&lt;code&gt;hash_code()&lt;/code&gt;の計算に&lt;code&gt;std::type_info::hash_code()&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; GCC 7以降での&lt;code&gt;ctti_type_index&lt;/code&gt;を修正 (Benjamin Buch氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_set&lt;/code&gt;、&lt;code&gt;unordered_multiset&lt;/code&gt;、&lt;code&gt;unordered_map&lt;/code&gt;、&lt;code&gt;unordered_multimap&lt;/code&gt;で同じデータ構造を使用するようにした。これはC++17において、マージ(merge)と抽出(extract)操作のノードがコンテナ間で互換である必要があったため&lt;/li&gt;
&lt;li&gt;非推奨だった関数にdeprecated属性を追加&lt;/li&gt;
&lt;li&gt;C++11コンパイラに対して、&lt;code&gt;pair&lt;/code&gt;のpiecewise構築において&lt;code&gt;allocator_traits&lt;/code&gt;、&lt;code&gt;construct&lt;/code&gt;、&lt;code&gt;destroy&lt;/code&gt;の使用を改善し、ふさわしい動作にした&lt;/li&gt;
&lt;li&gt;新しいOracleコンパイラに対して、ワークアラウンドを減らした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 未初期化メモリへのポインタ間接参照を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34; name=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10847&#34; target=&#34;_blank&#34;&gt;Trac #10847&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13002&#34; target=&#34;_blank&#34;&gt;Trac #13002&lt;/a&gt; Boost 1.57.0から&lt;code&gt;boost::next()&lt;/code&gt;と&lt;code&gt;boost::prior()&lt;/code&gt;がSFINAEフレンドリーでなくなっていた。互換性のために元に戻した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13018&#34; target=&#34;_blank&#34;&gt;Trac #13018&lt;/a&gt; &lt;code&gt;boost::get()&lt;/code&gt;に右辺値参照版を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13037&#34; target=&#34;_blank&#34;&gt;Trac #13037&lt;/a&gt; &lt;code&gt;&amp;lt;boost/variant/polymorphic_get.hpp&amp;gt;&lt;/code&gt;にインクルードが不足していた (Adam Badura氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8554&#34; target=&#34;_blank&#34;&gt;Trac #8554&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10041&#34; target=&#34;_blank&#34;&gt;Trac #10041&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub #35&lt;/a&gt; &lt;code&gt;boost::make_variant_over&lt;/code&gt;を修正し、viewや他のForward Sequenceに対して動作するようになった (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++1z: 6.3.0&lt;/li&gt;
&lt;li&gt;Intel: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++11: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 8.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7, 3.8&lt;/li&gt;
&lt;li&gt;GCC: 4.9, 5.4&lt;/li&gt;
&lt;li&gt;GCC, C++14: 6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC, C++11: 4.7.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.5_next, 12.5&lt;/li&gt;
&lt;li&gt;Oracle Solaris Studio, C++11: 12.5_next, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.1, 6.2.0, 6.3.0, 7.1.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++1z: 6.3.0&lt;/li&gt;
&lt;li&gt;Intel: 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++11: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 8.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7, 3.8&lt;/li&gt;
&lt;li&gt;GCC: 4.9, 5.4&lt;/li&gt;
&lt;li&gt;GCC, C++14: 6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.5_next, 12.5&lt;/li&gt;
&lt;li&gt;Oracle Solaris Studio, C++11: 12.5_next, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.65.0リリースノート -- 1.65.0リリースノート: FusionとPhoenix</title>
      <link href="https://boostjp.github.io/document/version/1_65_0.html"/>
      <id>ec6682f5e3e9c9adcd174e3381be800e04559667:document/version/1_65_0.md</id>
      <updated>2017-08-14T10:18:54+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.65.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_65_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_65_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/poly_collection&#34; target=&#34;_blank&#34;&gt;PolyCollection&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Joaquín M López Muñoz氏による、多相オブジェクトに対して高速に動作するコンテナのライブラリ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/stacktrace&#34; target=&#34;_blank&#34;&gt;Stacktrace&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Antony Polukhin氏による、バックトレースの収集、コピー、表示をするライブラリ&lt;/li&gt;
&lt;li&gt;既知の問題として、MinGWでこのライブラリを使用した場合に、空のバックトレースが生成される可能性がある (&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;call/ccがucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;call/ccがWindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;call/ccがオンデマンドgrowing stack (セグメント化スタック／分割スタック) をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12719&#34; target=&#34;_blank&#34;&gt;Trac #12719&lt;/a&gt; mingw-w64ツールチェインで、テストケースとサンプルがセグメンテーションフォルトになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; g++-4.9でcallccテストのビルドが失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロとして、以下を追加：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX11_POINTER_TRAITS&lt;/code&gt; : C++11の&lt;code&gt;std::pointer_traits&lt;/code&gt;クラス&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_FOLD_EXPRESSIONS&lt;/code&gt; : C++17の畳み込み式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_INLINE_VARIABLES&lt;/code&gt; : C++17のインライン変数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_STRUCTURED_BINDINGS&lt;/code&gt; : C++17の構造化束縛&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03以降向けに&lt;code&gt;pointer_traits&lt;/code&gt;を実装した。これには、&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html&#34; target=&#34;_blank&#34;&gt;P0653r0&lt;/a&gt;のポインタへの変換関数が含まれる (実装者のGlen Fernandes氏に感謝)。この実装は、Align、Circular Buffer、Fiber、Geometryなどの他のライブラリで使われている&lt;/li&gt;
&lt;li&gt;Lightweight testに&lt;code&gt;BOOST_TEST_GT&lt;/code&gt; (&lt;code&gt;operator&amp;gt;&lt;/code&gt;による比較) と&lt;code&gt;BOOST_TEST_GE&lt;/code&gt; (&lt;code&gt;operator&amp;gt;=&lt;/code&gt;による比較)を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13064&#34; target=&#34;_blank&#34;&gt;Trac #13064&lt;/a&gt; CoroutineとCoroutine2の異なる振る舞いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非WindowsプラットフォームでのPEのパースを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ハードウェアトランザクショナルメモリ (Intel TSX) をサポート&lt;/li&gt;
&lt;li&gt;NUMAをサポート&lt;/li&gt;
&lt;li&gt;ucontext-API (swapcontext) をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;オンデマンドgrowing stackをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; GCC 4.8のC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/123&#34; target=&#34;_blank&#34;&gt;GitHub #123&lt;/a&gt; &lt;code&gt;schedule_from_remote&lt;/code&gt;がアサーション失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/125&#34; target=&#34;_blank&#34;&gt;GitHub #125&lt;/a&gt; テストでクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/126&#34; target=&#34;_blank&#34;&gt;GitHUb #126&lt;/a&gt; 内部で使用しているメモリオーダーが間違っていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11標準の&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;、&lt;code&gt;std::u16string&lt;/code&gt;、&lt;code&gt;std::u32string&lt;/code&gt;をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fusion&#34; name=&#34;fusion&#34;&gt;Fusion&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MSVC 14.1は未対応となっていた次の可変長テンプレートベースのコンテナをサポートした: &lt;code&gt;fusion::vector&lt;/code&gt;, &lt;code&gt;fusion::deque&lt;/code&gt;, &lt;code&gt;fusion::map&lt;/code&gt;, &lt;code&gt;fusion::set&lt;/code&gt;, および &lt;code&gt;fusion::tuple&lt;/code&gt;. (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/12986&#34; target=&#34;_blank&#34;&gt;#12986&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Solaris互換を改善。異なるプラットフォームを統一的に扱うビルドスクリプトを更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#phoenix&#34; name=&#34;phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;幾つかのドキュメントを修正 (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/50&#34; target=&#34;_blank&#34;&gt;PR#50&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++11以降かつ連想コンテナで &lt;code&gt;phoenix::erase&lt;/code&gt; を使用した際にイテレータを返すように変更 (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7423&#34; target=&#34;_blank&#34;&gt;#7423&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::set&lt;/code&gt; および &lt;code&gt;std::multiset&lt;/code&gt; はphoenixが提供する遅延関数で動作するようになった (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/52&#34; target=&#34;_blank&#34;&gt;PR#52&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++17以降では &lt;code&gt;phoenix::random_shuffle&lt;/code&gt; を無効化した (&lt;a href=&#34;https://github.com/boostorg/phoenix/pull/53&#34; target=&#34;_blank&#34;&gt;PR#53&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;前方宣言ではなく適切なヘッダをインクルードするようにした (&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/11875&#34; target=&#34;_blank&#34;&gt;#11875&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel C/C++コンパイラの値が9999だった場合に、コンパイラバージョン12.1.0となるよう修正&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ワークアラウンド検出のために、&lt;code&gt;BOOST_PREDEF_WORKAROUND&lt;/code&gt;マクロと&lt;code&gt;BOOST_PREDEF_TESTED_AT&lt;/code&gt;マクロを追加
  &lt;br /&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// #define BOOST_PREDEF_WORKAROUND(symbol,comp,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_WORKAROUND(BOOST_COMP_CLANG,&amp;lt;,3,0,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clangコンパイラの古いバージョン向けのワークアラウンドをここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// BOOST_PREDEF_TESTED_AT(symbol,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_TESTED_AT(BOOST_COMP_CLANG,3,5,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clang 3.5.0以上での検証をここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ARM64 MSVC SIMDの検出を追加 (Minmin Gong氏に感謝)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;iOSシミュレータとデバイスの検出を、プラットフォーム選択として追加 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;li&gt;MinGWでのインクルードガードが間違っていた問題を修正 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;に値を保存できるようにした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/issues/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 値なしでオプションを指定した場合のデフォルト値であるimplicit valueの解析において、次のトークンから値を使用できるようにした。1.59.0以降で、&lt;code&gt;--option_name option_value&lt;/code&gt;構文でのimplicit valueが許可されなくなり、&lt;code&gt;--option_name=option_value&lt;/code&gt;の構文を使用する必要があった。これによって&lt;code&gt;--option_name option_value&lt;/code&gt;構文の意味が変わってしまっていたために、以前の状態に戻し、両方の構文を許可するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34; name=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::python::str&lt;/code&gt;の&lt;code&gt;eval()&lt;/code&gt;、&lt;code&gt;exec()&lt;/code&gt;、&lt;code&gt;exec_statement()&lt;/code&gt;関数の引数として&lt;code&gt;const char*&lt;/code&gt;をとれるようにした&lt;/li&gt;
&lt;li&gt;廃止していた&lt;code&gt;boost::python::numeric&lt;/code&gt;のAPIを削除した。代わりに&lt;code&gt;boost::python::numpy&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;MSVCとPython3でのビルド問題をいくつか修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;atomic_shared_ptr&lt;/code&gt;を追加。これは、&lt;code&gt;shared_ptr&lt;/code&gt;上にスレッドセーフなアトミックポインタ操作を提供する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;local_shared_ptr&lt;/code&gt;を追加。これは、非アトミック操作によって参照カウントを更新する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocate_shared()&lt;/code&gt;と&lt;code&gt;make_shared()&lt;/code&gt;の配列版を、さらに最適化 (作者Glen Fernandes)&lt;/li&gt;
&lt;li&gt;ドキュメントをAsciidocフォーマットで書き直した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.6&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;C++17互換にした (VS2017でテストした) (&lt;a href=&#34;https://github.com/DanielaE&#34; target=&#34;_blank&#34;&gt;Daniela Engert&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST&lt;/code&gt;マクロで、C配列を直接比較できるようにした&lt;/li&gt;
&lt;li&gt;より良いグローバルフィクスチャの仕組みとして、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;マクロを追加。グローバル初期化のために&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;マクロを追加し、従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化。&lt;/li&gt;
&lt;li&gt;フィクスチャのサポートを改善。&lt;code&gt;setup()&lt;/code&gt; / &lt;code&gt;teardown()&lt;/code&gt;メンバ関数について、teadown時間のチェックをより良いものにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; いくつかのAPIをロガーのためにインタフェースを変更した&lt;/li&gt;
&lt;li&gt;従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化し、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;と&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;に分割した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5282&#34; target=&#34;_blank&#34;&gt;Trac #5282&lt;/a&gt; テストフィクスチャが仮想継承をサポートしていないという問題。対応なし&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5563&#34; target=&#34;_blank&#34;&gt;Trac #5563&lt;/a&gt; &lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;マクロで、デストラクタでテストに失敗するとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11471&#34; target=&#34;_blank&#34;&gt;Trac #11471&lt;/a&gt; C配列を扱えない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11962&#34; target=&#34;_blank&#34;&gt;Trac #11962&lt;/a&gt; フィクスチャのコンストラクタで&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正なXMLが出力される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12228&#34; target=&#34;_blank&#34;&gt;Trac #12228&lt;/a&gt; いくつかのヘッダがコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; &lt;code&gt;BOOST_DATA_TEST_CASE&lt;/code&gt;で&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正な出力になる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13011&#34; target=&#34;_blank&#34;&gt;Trac #13011&lt;/a&gt; &lt;code&gt;BOOST_TEST&lt;/code&gt;マクロの浮動小数点数の比較が壊れていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/106&#34; target=&#34;_blank&#34;&gt;GitHub #106&lt;/a&gt; 非推奨になっていたC++標準ライブラリの関数を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34; name=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13009&#34; target=&#34;_blank&#34;&gt;Trac #13009&lt;/a&gt; &lt;code&gt;&amp;lt;boost/functional/hash.hpp&amp;gt;&lt;/code&gt;のインクルードが抜けていたところを修正 (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13027&#34; target=&#34;_blank&#34;&gt;Trac #13027&lt;/a&gt; C++11をサポートしているコンパイラでは、&lt;code&gt;hash_code()&lt;/code&gt;の計算に&lt;code&gt;std::type_info::hash_code()&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; GCC 7以降での&lt;code&gt;ctti_type_index&lt;/code&gt;を修正 (Benjamin Buch氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_set&lt;/code&gt;、&lt;code&gt;unordered_multiset&lt;/code&gt;、&lt;code&gt;unordered_map&lt;/code&gt;、&lt;code&gt;unordered_multimap&lt;/code&gt;で同じデータ構造を使用するようにした。これはC++17において、マージ(merge)と抽出(extract)操作のノードがコンテナ間で互換である必要があったため&lt;/li&gt;
&lt;li&gt;非推奨だった関数にdeprecated属性を追加&lt;/li&gt;
&lt;li&gt;C++11コンパイラに対して、&lt;code&gt;pair&lt;/code&gt;のpiecewise構築において&lt;code&gt;allocator_traits&lt;/code&gt;、&lt;code&gt;construct&lt;/code&gt;、&lt;code&gt;destroy&lt;/code&gt;の使用を改善し、ふさわしい動作にした&lt;/li&gt;
&lt;li&gt;新しいOracleコンパイラに対して、ワークアラウンドを減らした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 未初期化メモリへのポインタ間接参照を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34; name=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10847&#34; target=&#34;_blank&#34;&gt;Trac #10847&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13002&#34; target=&#34;_blank&#34;&gt;Trac #13002&lt;/a&gt; Boost 1.57.0から&lt;code&gt;boost::next()&lt;/code&gt;と&lt;code&gt;boost::prior()&lt;/code&gt;がSFINAEフレンドリーでなくなっていた。互換性のために元に戻した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13018&#34; target=&#34;_blank&#34;&gt;Trac #13018&lt;/a&gt; &lt;code&gt;boost::get()&lt;/code&gt;に右辺値参照版を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13037&#34; target=&#34;_blank&#34;&gt;Trac #13037&lt;/a&gt; &lt;code&gt;&amp;lt;boost/variant/polymorphic_get.hpp&amp;gt;&lt;/code&gt;にインクルードが不足していた (Adam Badura氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8554&#34; target=&#34;_blank&#34;&gt;Trac #8554&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10041&#34; target=&#34;_blank&#34;&gt;Trac #10041&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub #35&lt;/a&gt; &lt;code&gt;boost::make_variant_over&lt;/code&gt;を修正し、viewや他のForward Sequenceに対して動作するようになった (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++1z: 6.3.0&lt;/li&gt;
&lt;li&gt;Intel: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++11: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 8.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7, 3.8&lt;/li&gt;
&lt;li&gt;GCC: 4.9, 5.4&lt;/li&gt;
&lt;li&gt;GCC, C++14: 6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC, C++11: 4.7.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.5_next, 12.5&lt;/li&gt;
&lt;li&gt;Oracle Solaris Studio, C++11: 12.5_next, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.1, 6.2.0, 6.3.0, 7.1.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++1z: 6.3.0&lt;/li&gt;
&lt;li&gt;Intel: 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++11: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 8.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7, 3.8&lt;/li&gt;
&lt;li&gt;GCC: 4.9, 5.4&lt;/li&gt;
&lt;li&gt;GCC, C++14: 6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.5_next, 12.5&lt;/li&gt;
&lt;li&gt;Oracle Solaris Studio, C++11: 12.5_next, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Flast&#34; target=&#34;_blank&#34;&gt;Kohei Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Kohei Takahashi</name>
        <email>flast@flast.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.65.0リリースノート -- 1.65.0リリースノート : テストコンパイラを記載 (close #176)</title>
      <link href="https://boostjp.github.io/document/version/1_65_0.html"/>
      <id>7d0fd46103b067231c99a78ce3374c06449fbd7b:document/version/1_65_0.md</id>
      <updated>2017-08-07T14:56:22+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.65.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_65_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_65_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/poly_collection&#34; target=&#34;_blank&#34;&gt;PolyCollection&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Joaquín M López Muñoz氏による、多相オブジェクトに対して高速に動作するコンテナのライブラリ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/stacktrace&#34; target=&#34;_blank&#34;&gt;Stacktrace&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Antony Polukhin氏による、バックトレースの収集、コピー、表示をするライブラリ&lt;/li&gt;
&lt;li&gt;既知の問題として、MinGWでこのライブラリを使用した場合に、空のバックトレースが生成される可能性がある (&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;call/ccがucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;call/ccがWindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;call/ccがオンデマンドgrowing stack (セグメント化スタック／分割スタック) をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12719&#34; target=&#34;_blank&#34;&gt;Trac #12719&lt;/a&gt; mingw-w64ツールチェインで、テストケースとサンプルがセグメンテーションフォルトになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; g++-4.9でcallccテストのビルドが失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロとして、以下を追加：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX11_POINTER_TRAITS&lt;/code&gt; : C++11の&lt;code&gt;std::pointer_traits&lt;/code&gt;クラス&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_FOLD_EXPRESSIONS&lt;/code&gt; : C++17の畳み込み式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_INLINE_VARIABLES&lt;/code&gt; : C++17のインライン変数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_STRUCTURED_BINDINGS&lt;/code&gt; : C++17の構造化束縛&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03以降向けに&lt;code&gt;pointer_traits&lt;/code&gt;を実装した。これには、&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html&#34; target=&#34;_blank&#34;&gt;P0653r0&lt;/a&gt;のポインタへの変換関数が含まれる (実装者のGlen Fernandes氏に感謝)。この実装は、Align、Circular Buffer、Fiber、Geometryなどの他のライブラリで使われている&lt;/li&gt;
&lt;li&gt;Lightweight testに&lt;code&gt;BOOST_TEST_GT&lt;/code&gt; (&lt;code&gt;operator&amp;gt;&lt;/code&gt;による比較) と&lt;code&gt;BOOST_TEST_GE&lt;/code&gt; (&lt;code&gt;operator&amp;gt;=&lt;/code&gt;による比較)を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13064&#34; target=&#34;_blank&#34;&gt;Trac #13064&lt;/a&gt; CoroutineとCoroutine2の異なる振る舞いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非WindowsプラットフォームでのPEのパースを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ハードウェアトランザクショナルメモリ (Intel TSX) をサポート&lt;/li&gt;
&lt;li&gt;NUMAをサポート&lt;/li&gt;
&lt;li&gt;ucontext-API (swapcontext) をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;オンデマンドgrowing stackをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; GCC 4.8のC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/123&#34; target=&#34;_blank&#34;&gt;GitHub #123&lt;/a&gt; &lt;code&gt;schedule_from_remote&lt;/code&gt;がアサーション失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/125&#34; target=&#34;_blank&#34;&gt;GitHub #125&lt;/a&gt; テストでクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/126&#34; target=&#34;_blank&#34;&gt;GitHUb #126&lt;/a&gt; 内部で使用しているメモリオーダーが間違っていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11標準の&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;、&lt;code&gt;std::u16string&lt;/code&gt;、&lt;code&gt;std::u32string&lt;/code&gt;をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Solaris互換を改善。異なるプラットフォームを統一的に扱うビルドスクリプトを更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel C/C++コンパイラの値が9999だった場合に、コンパイラバージョン12.1.0となるよう修正&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ワークアラウンド検出のために、&lt;code&gt;BOOST_PREDEF_WORKAROUND&lt;/code&gt;マクロと&lt;code&gt;BOOST_PREDEF_TESTED_AT&lt;/code&gt;マクロを追加
  &lt;br /&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// #define BOOST_PREDEF_WORKAROUND(symbol,comp,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_WORKAROUND(BOOST_COMP_CLANG,&amp;lt;,3,0,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clangコンパイラの古いバージョン向けのワークアラウンドをここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// BOOST_PREDEF_TESTED_AT(symbol,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_TESTED_AT(BOOST_COMP_CLANG,3,5,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clang 3.5.0以上での検証をここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ARM64 MSVC SIMDの検出を追加 (Minmin Gong氏に感謝)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;iOSシミュレータとデバイスの検出を、プラットフォーム選択として追加 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;li&gt;MinGWでのインクルードガードが間違っていた問題を修正 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;に値を保存できるようにした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/issues/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 値なしでオプションを指定した場合のデフォルト値であるimplicit valueの解析において、次のトークンから値を使用できるようにした。1.59.0以降で、&lt;code&gt;--option_name option_value&lt;/code&gt;構文でのimplicit valueが許可されなくなり、&lt;code&gt;--option_name=option_value&lt;/code&gt;の構文を使用する必要があった。これによって&lt;code&gt;--option_name option_value&lt;/code&gt;構文の意味が変わってしまっていたために、以前の状態に戻し、両方の構文を許可するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34; name=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::python::str&lt;/code&gt;の&lt;code&gt;eval()&lt;/code&gt;、&lt;code&gt;exec()&lt;/code&gt;、&lt;code&gt;exec_statement()&lt;/code&gt;関数の引数として&lt;code&gt;const char*&lt;/code&gt;をとれるようにした&lt;/li&gt;
&lt;li&gt;廃止していた&lt;code&gt;boost::python::numeric&lt;/code&gt;のAPIを削除した。代わりに&lt;code&gt;boost::python::numpy&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;MSVCとPython3でのビルド問題をいくつか修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;atomic_shared_ptr&lt;/code&gt;を追加。これは、&lt;code&gt;shared_ptr&lt;/code&gt;上にスレッドセーフなアトミックポインタ操作を提供する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;local_shared_ptr&lt;/code&gt;を追加。これは、非アトミック操作によって参照カウントを更新する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocate_shared()&lt;/code&gt;と&lt;code&gt;make_shared()&lt;/code&gt;の配列版を、さらに最適化 (作者Glen Fernandes)&lt;/li&gt;
&lt;li&gt;ドキュメントをAsciidocフォーマットで書き直した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.6&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;C++17互換にした (VS2017でテストした) (&lt;a href=&#34;https://github.com/DanielaE&#34; target=&#34;_blank&#34;&gt;Daniela Engert&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST&lt;/code&gt;マクロで、C配列を直接比較できるようにした&lt;/li&gt;
&lt;li&gt;より良いグローバルフィクスチャの仕組みとして、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;マクロを追加。グローバル初期化のために&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;マクロを追加し、従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化。&lt;/li&gt;
&lt;li&gt;フィクスチャのサポートを改善。&lt;code&gt;setup()&lt;/code&gt; / &lt;code&gt;teardown()&lt;/code&gt;メンバ関数について、teadown時間のチェックをより良いものにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; いくつかのAPIをロガーのためにインタフェースを変更した&lt;/li&gt;
&lt;li&gt;従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化し、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;と&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;に分割した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5282&#34; target=&#34;_blank&#34;&gt;Trac #5282&lt;/a&gt; テストフィクスチャが仮想継承をサポートしていないという問題。対応なし&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5563&#34; target=&#34;_blank&#34;&gt;Trac #5563&lt;/a&gt; &lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;マクロで、デストラクタでテストに失敗するとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11471&#34; target=&#34;_blank&#34;&gt;Trac #11471&lt;/a&gt; C配列を扱えない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11962&#34; target=&#34;_blank&#34;&gt;Trac #11962&lt;/a&gt; フィクスチャのコンストラクタで&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正なXMLが出力される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12228&#34; target=&#34;_blank&#34;&gt;Trac #12228&lt;/a&gt; いくつかのヘッダがコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; &lt;code&gt;BOOST_DATA_TEST_CASE&lt;/code&gt;で&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正な出力になる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13011&#34; target=&#34;_blank&#34;&gt;Trac #13011&lt;/a&gt; &lt;code&gt;BOOST_TEST&lt;/code&gt;マクロの浮動小数点数の比較が壊れていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/106&#34; target=&#34;_blank&#34;&gt;GitHub #106&lt;/a&gt; 非推奨になっていたC++標準ライブラリの関数を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34; name=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13009&#34; target=&#34;_blank&#34;&gt;Trac #13009&lt;/a&gt; &lt;code&gt;&amp;lt;boost/functional/hash.hpp&amp;gt;&lt;/code&gt;のインクルードが抜けていたところを修正 (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13027&#34; target=&#34;_blank&#34;&gt;Trac #13027&lt;/a&gt; C++11をサポートしているコンパイラでは、&lt;code&gt;hash_code()&lt;/code&gt;の計算に&lt;code&gt;std::type_info::hash_code()&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; GCC 7以降での&lt;code&gt;ctti_type_index&lt;/code&gt;を修正 (Benjamin Buch氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_set&lt;/code&gt;、&lt;code&gt;unordered_multiset&lt;/code&gt;、&lt;code&gt;unordered_map&lt;/code&gt;、&lt;code&gt;unordered_multimap&lt;/code&gt;で同じデータ構造を使用するようにした。これはC++17において、マージ(merge)と抽出(extract)操作のノードがコンテナ間で互換である必要があったため&lt;/li&gt;
&lt;li&gt;非推奨だった関数にdeprecated属性を追加&lt;/li&gt;
&lt;li&gt;C++11コンパイラに対して、&lt;code&gt;pair&lt;/code&gt;のpiecewise構築において&lt;code&gt;allocator_traits&lt;/code&gt;、&lt;code&gt;construct&lt;/code&gt;、&lt;code&gt;destroy&lt;/code&gt;の使用を改善し、ふさわしい動作にした&lt;/li&gt;
&lt;li&gt;新しいOracleコンパイラに対して、ワークアラウンドを減らした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 未初期化メモリへのポインタ間接参照を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34; name=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10847&#34; target=&#34;_blank&#34;&gt;Trac #10847&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13002&#34; target=&#34;_blank&#34;&gt;Trac #13002&lt;/a&gt; Boost 1.57.0から&lt;code&gt;boost::next()&lt;/code&gt;と&lt;code&gt;boost::prior()&lt;/code&gt;がSFINAEフレンドリーでなくなっていた。互換性のために元に戻した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13018&#34; target=&#34;_blank&#34;&gt;Trac #13018&lt;/a&gt; &lt;code&gt;boost::get()&lt;/code&gt;に右辺値参照版を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13037&#34; target=&#34;_blank&#34;&gt;Trac #13037&lt;/a&gt; &lt;code&gt;&amp;lt;boost/variant/polymorphic_get.hpp&amp;gt;&lt;/code&gt;にインクルードが不足していた (Adam Badura氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8554&#34; target=&#34;_blank&#34;&gt;Trac #8554&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10041&#34; target=&#34;_blank&#34;&gt;Trac #10041&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub #35&lt;/a&gt; &lt;code&gt;boost::make_variant_over&lt;/code&gt;を修正し、viewや他のForward Sequenceに対して動作するようになった (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++1z: 6.3.0&lt;/li&gt;
&lt;li&gt;Intel: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++11: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 8.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7, 3.8&lt;/li&gt;
&lt;li&gt;GCC: 4.9, 5.4&lt;/li&gt;
&lt;li&gt;GCC, C++14: 6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC, C++11: 4.7.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.5_next, 12.5&lt;/li&gt;
&lt;li&gt;Oracle Solaris Studio, C++11: 12.5_next, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang: 3.0, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 4.0.0&lt;/li&gt;
&lt;li&gt;GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++14: 5.4.1, 6.2.0, 6.3.0, 7.1.0, 8.0.0&lt;/li&gt;
&lt;li&gt;GCC, C++17: 7.1.0&lt;/li&gt;
&lt;li&gt;GCC, C++1z: 6.3.0&lt;/li&gt;
&lt;li&gt;Intel: 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++11: 16.0, 17.0&lt;/li&gt;
&lt;li&gt;Intel, C++14: 16.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Clang: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 8.1.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 8.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4&lt;/li&gt;
&lt;li&gt;GCC, C++11: 4.6.4, 4.7.3, 4.8.1&lt;/li&gt;
&lt;li&gt;GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0&lt;/li&gt;
&lt;li&gt;Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;Clang: 3.6, 3.7, 3.8&lt;/li&gt;
&lt;li&gt;GCC: 4.9, 5.4&lt;/li&gt;
&lt;li&gt;GCC, C++14: 6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;Clang: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++11: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++14: 3.8.0&lt;/li&gt;
&lt;li&gt;Clang, C++1z: 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SunOS:&lt;ul&gt;
&lt;li&gt;Oracle Solaris Studio: 12.5_next, 12.5&lt;/li&gt;
&lt;li&gt;Oracle Solaris Studio, C++11: 12.5_next, 12.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.65.0リリースノート -- 1.65.0リリースノート : Pythonを追加 #179</title>
      <link href="https://boostjp.github.io/document/version/1_65_0.html"/>
      <id>b27b5eb9ed15cacea702e64cc134b883c023a467:document/version/1_65_0.md</id>
      <updated>2017-08-01T15:23:31+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;Boost 1.65.0リリースノート&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_65_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_65_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_65_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/poly_collection&#34; target=&#34;_blank&#34;&gt;PolyCollection&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Joaquín M López Muñoz氏による、多相オブジェクトに対して高速に動作するコンテナのライブラリ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/stacktrace&#34; target=&#34;_blank&#34;&gt;Stacktrace&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Antony Polukhin氏による、バックトレースの収集、コピー、表示をするライブラリ&lt;/li&gt;
&lt;li&gt;既知の問題として、MinGWでこのライブラリを使用した場合に、空のバックトレースが生成される可能性がある (&lt;a href=&#34;https://github.com/boostorg/stacktrace/issues/14&#34; target=&#34;_blank&#34;&gt;GitHub #14&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34;&gt;DLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34;&gt;Hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34;&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34;&gt;Predef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34;&gt;Variant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#context&#34; name=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;call/ccがucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;call/ccがWindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;call/ccがオンデマンドgrowing stack (セグメント化スタック／分割スタック) をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12719&#34; target=&#34;_blank&#34;&gt;Trac #12719&lt;/a&gt; mingw-w64ツールチェインで、テストケースとサンプルがセグメンテーションフォルトになっていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/context/issues/52&#34; target=&#34;_blank&#34;&gt;GitHub #52&lt;/a&gt; g++-4.9でcallccテストのビルドが失敗する問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#config&#34; name=&#34;config&#34;&gt;Config&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欠陥検出マクロとして、以下を追加：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX11_POINTER_TRAITS&lt;/code&gt; : C++11の&lt;code&gt;std::pointer_traits&lt;/code&gt;クラス&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_FOLD_EXPRESSIONS&lt;/code&gt; : C++17の畳み込み式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_INLINE_VARIABLES&lt;/code&gt; : C++17のインライン変数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_NO_CXX17_STRUCTURED_BINDINGS&lt;/code&gt; : C++17の構造化束縛&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#core&#34; name=&#34;core&#34;&gt;Core&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++03以降向けに&lt;code&gt;pointer_traits&lt;/code&gt;を実装した。これには、&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html&#34; target=&#34;_blank&#34;&gt;P0653r0&lt;/a&gt;のポインタへの変換関数が含まれる (実装者のGlen Fernandes氏に感謝)。この実装は、Align、Circular Buffer、Fiber、Geometryなどの他のライブラリで使われている&lt;/li&gt;
&lt;li&gt;Lightweight testに&lt;code&gt;BOOST_TEST_GT&lt;/code&gt; (&lt;code&gt;operator&amp;gt;&lt;/code&gt;による比較) と&lt;code&gt;BOOST_TEST_GE&lt;/code&gt; (&lt;code&gt;operator&amp;gt;=&lt;/code&gt;による比較)を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#coroutine2&#34; name=&#34;coroutine2&#34;&gt;Coroutine2&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ucontext-API (swapcontext)をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13064&#34; target=&#34;_blank&#34;&gt;Trac #13064&lt;/a&gt; CoroutineとCoroutine2の異なる振る舞いを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#dll&#34; name=&#34;dll&#34;&gt;DLL&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;非WindowsプラットフォームでのPEのパースを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#fiber&#34; name=&#34;fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ハードウェアトランザクショナルメモリ (Intel TSX) をサポート&lt;/li&gt;
&lt;li&gt;NUMAをサポート&lt;/li&gt;
&lt;li&gt;ucontext-API (swapcontext) をサポート&lt;/li&gt;
&lt;li&gt;WindowsのFiber APIをサポート&lt;/li&gt;
&lt;li&gt;オンデマンドgrowing stackをサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/121&#34; target=&#34;_blank&#34;&gt;GitHub #121&lt;/a&gt; GCC 4.8のC++11モードでコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/123&#34; target=&#34;_blank&#34;&gt;GitHub #123&lt;/a&gt; &lt;code&gt;schedule_from_remote&lt;/code&gt;がアサーション失敗する問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/125&#34; target=&#34;_blank&#34;&gt;GitHub #125&lt;/a&gt; テストでクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/fiber/issues/126&#34; target=&#34;_blank&#34;&gt;GitHUb #126&lt;/a&gt; 内部で使用しているメモリオーダーが間違っていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#hash&#34; name=&#34;hash&#34;&gt;Hash&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11標準の&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;、&lt;code&gt;std::u16string&lt;/code&gt;、&lt;code&gt;std::u32string&lt;/code&gt;をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#log&#34; name=&#34;log&#34;&gt;Log&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Solaris互換を改善。異なるプラットフォームを統一的に扱うビルドスクリプトを更新した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#predef&#34; name=&#34;predef&#34;&gt;Predef&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel C/C++コンパイラの値が9999だった場合に、コンパイラバージョン12.1.0となるよう修正&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ワークアラウンド検出のために、&lt;code&gt;BOOST_PREDEF_WORKAROUND&lt;/code&gt;マクロと&lt;code&gt;BOOST_PREDEF_TESTED_AT&lt;/code&gt;マクロを追加
  &lt;br /&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// #define BOOST_PREDEF_WORKAROUND(symbol,comp,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_WORKAROUND(BOOST_COMP_CLANG,&amp;lt;,3,0,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clangコンパイラの古いバージョン向けのワークアラウンドをここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// BOOST_PREDEF_TESTED_AT(symbol,major,minor,patch)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#if BOOST_PREDEF_TESTED_AT(BOOST_COMP_CLANG,3,5,0)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Clang 3.5.0以上での検証をここに書く&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ARM64 MSVC SIMDの検出を追加 (Minmin Gong氏に感謝)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;iOSシミュレータとデバイスの検出を、プラットフォーム選択として追加 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;li&gt;MinGWでのインクルードガードが間違っていた問題を修正 (Ruslan Baratov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#program_options&#34; name=&#34;program_options&#34;&gt;Program Options&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac/boost/ticket/7495&#34; target=&#34;_blank&#34;&gt;Trac #7495&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/program_options/pull/18&#34; target=&#34;_blank&#34;&gt;GitHub #18&lt;/a&gt; &lt;code&gt;boost::optional&lt;/code&gt;に値を保存できるようにした (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/program_options/issues/25&#34; target=&#34;_blank&#34;&gt;GitHub #25&lt;/a&gt; 値なしでオプションを指定した場合のデフォルト値であるimplicit valueの解析において、次のトークンから値を使用できるようにした。1.59.0以降で、&lt;code&gt;--option_name option_value&lt;/code&gt;構文でのimplicit valueが許可されなくなり、&lt;code&gt;--option_name=option_value&lt;/code&gt;の構文を使用する必要があった。これによって&lt;code&gt;--option_name option_value&lt;/code&gt;構文の意味が変わってしまっていたために、以前の状態に戻し、両方の構文を許可するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#python&#34; name=&#34;python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boost::python::str&lt;/code&gt;の&lt;code&gt;eval()&lt;/code&gt;、&lt;code&gt;exec()&lt;/code&gt;、&lt;code&gt;exec_statement()&lt;/code&gt;関数の引数として&lt;code&gt;const char*&lt;/code&gt;をとれるようにした&lt;/li&gt;
&lt;li&gt;廃止していた&lt;code&gt;boost::python::numeric&lt;/code&gt;のAPIを削除した。代わりに&lt;code&gt;boost::python::numpy&lt;/code&gt;を使用すること&lt;/li&gt;
&lt;li&gt;MSVCとPython3でのビルド問題をいくつか修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#smart_ptr&#34; name=&#34;smart_ptr&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;atomic_shared_ptr&lt;/code&gt;を追加。これは、&lt;code&gt;shared_ptr&lt;/code&gt;上にスレッドセーフなアトミックポインタ操作を提供する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;新たなクラステンプレート&lt;code&gt;local_shared_ptr&lt;/code&gt;を追加。これは、非アトミック操作によって参照カウントを更新する (作者Peter Dimov)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocate_shared()&lt;/code&gt;と&lt;code&gt;make_shared()&lt;/code&gt;の配列版を、さらに最適化 (作者Glen Fernandes)&lt;/li&gt;
&lt;li&gt;ドキュメントをAsciidocフォーマットで書き直した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#test&#34; name=&#34;test&#34;&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost Test v3.6&lt;ul&gt;
&lt;li&gt;詳細は&lt;a href=&#34;http://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/change_log.html&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;を参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新機能&lt;ul&gt;
&lt;li&gt;C++17互換にした (VS2017でテストした) (&lt;a href=&#34;https://github.com/DanielaE&#34; target=&#34;_blank&#34;&gt;Daniela Engert&lt;/a&gt;氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_TEST&lt;/code&gt;マクロで、C配列を直接比較できるようにした&lt;/li&gt;
&lt;li&gt;より良いグローバルフィクスチャの仕組みとして、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;マクロを追加。グローバル初期化のために&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;マクロを追加し、従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化。&lt;/li&gt;
&lt;li&gt;フィクスチャのサポートを改善。&lt;code&gt;setup()&lt;/code&gt; / &lt;code&gt;teardown()&lt;/code&gt;メンバ関数について、teadown時間のチェックをより良いものにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; いくつかのAPIをロガーのためにインタフェースを変更した&lt;/li&gt;
&lt;li&gt;従来の&lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;を非推奨化し、&lt;code&gt;BOOST_TEST_GLOBAL_FIXTURE&lt;/code&gt;と&lt;code&gt;BOOST_TEST_GLOBAL_CONFIGURATION&lt;/code&gt;に分割した&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5282&#34; target=&#34;_blank&#34;&gt;Trac #5282&lt;/a&gt; テストフィクスチャが仮想継承をサポートしていないという問題。対応なし&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/5563&#34; target=&#34;_blank&#34;&gt;Trac #5563&lt;/a&gt; &lt;code&gt;BOOST_GLOBAL_FIXTURE&lt;/code&gt;マクロで、デストラクタでテストに失敗するとクラッシュする問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11471&#34; target=&#34;_blank&#34;&gt;Trac #11471&lt;/a&gt; C配列を扱えない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/11962&#34; target=&#34;_blank&#34;&gt;Trac #11962&lt;/a&gt; フィクスチャのコンストラクタで&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正なXMLが出力される問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12228&#34; target=&#34;_blank&#34;&gt;Trac #12228&lt;/a&gt; いくつかのヘッダがコンパイルエラーになる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/12631&#34; target=&#34;_blank&#34;&gt;Trac #12631&lt;/a&gt; &lt;code&gt;BOOST_DATA_TEST_CASE&lt;/code&gt;で&lt;code&gt;BOOST_TEST_MESSAGE&lt;/code&gt;マクロを使用すると、不正な出力になる問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13011&#34; target=&#34;_blank&#34;&gt;Trac #13011&lt;/a&gt; &lt;code&gt;BOOST_TEST&lt;/code&gt;マクロの浮動小数点数の比較が壊れていた問題を修正&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/test/pull/106&#34; target=&#34;_blank&#34;&gt;GitHub #106&lt;/a&gt; 非推奨になっていたC++標準ライブラリの関数を置き換えた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#type_index&#34; name=&#34;type_index&#34;&gt;Type Index&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13009&#34; target=&#34;_blank&#34;&gt;Trac #13009&lt;/a&gt; &lt;code&gt;&amp;lt;boost/functional/hash.hpp&amp;gt;&lt;/code&gt;のインクルードが抜けていたところを修正 (Ed Catmur氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13027&#34; target=&#34;_blank&#34;&gt;Trac #13027&lt;/a&gt; C++11をサポートしているコンパイラでは、&lt;code&gt;hash_code()&lt;/code&gt;の計算に&lt;code&gt;std::type_info::hash_code()&lt;/code&gt;を使用するようにした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/type_index/pull/16&#34; target=&#34;_blank&#34;&gt;GitHub #16&lt;/a&gt; GCC 7以降での&lt;code&gt;ctti_type_index&lt;/code&gt;を修正 (Benjamin Buch氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#unordered&#34; name=&#34;unordered&#34;&gt;Unordered&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unordered_set&lt;/code&gt;、&lt;code&gt;unordered_multiset&lt;/code&gt;、&lt;code&gt;unordered_map&lt;/code&gt;、&lt;code&gt;unordered_multimap&lt;/code&gt;で同じデータ構造を使用するようにした。これはC++17において、マージ(merge)と抽出(extract)操作のノードがコンテナ間で互換である必要があったため&lt;/li&gt;
&lt;li&gt;非推奨だった関数にdeprecated属性を追加&lt;/li&gt;
&lt;li&gt;C++11コンパイラに対して、&lt;code&gt;pair&lt;/code&gt;のpiecewise構築において&lt;code&gt;allocator_traits&lt;/code&gt;、&lt;code&gt;construct&lt;/code&gt;、&lt;code&gt;destroy&lt;/code&gt;の使用を改善し、ふさわしい動作にした&lt;/li&gt;
&lt;li&gt;新しいOracleコンパイラに対して、ワークアラウンドを減らした&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/unordered/pull/5&#34; target=&#34;_blank&#34;&gt;GitHub #5&lt;/a&gt; 未初期化メモリへのポインタ間接参照を回避&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#utility&#34; name=&#34;utility&#34;&gt;Utility&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/10847&#34; target=&#34;_blank&#34;&gt;Trac #10847&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/13002&#34; target=&#34;_blank&#34;&gt;Trac #13002&lt;/a&gt; Boost 1.57.0から&lt;code&gt;boost::next()&lt;/code&gt;と&lt;code&gt;boost::prior()&lt;/code&gt;がSFINAEフレンドリーでなくなっていた。互換性のために元に戻した&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_65_0.html#variant&#34; name=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13018&#34; target=&#34;_blank&#34;&gt;Trac #13018&lt;/a&gt; &lt;code&gt;boost::get()&lt;/code&gt;に右辺値参照版を追加&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/13037&#34; target=&#34;_blank&#34;&gt;Trac #13037&lt;/a&gt; &lt;code&gt;&amp;lt;boost/variant/polymorphic_get.hpp&amp;gt;&lt;/code&gt;にインクルードが不足していた (Adam Badura氏に感謝)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://svn.boost.org/trac10/ticket/8554&#34; target=&#34;_blank&#34;&gt;Trac #8554&lt;/a&gt;, &lt;a href=&#34;https://svn.boost.org/trac10/ticket/10041&#34; target=&#34;_blank&#34;&gt;Trac #10041&lt;/a&gt;, &lt;a href=&#34;https://github.com/boostorg/variant/pull/35&#34; target=&#34;_blank&#34;&gt;GitHub #35&lt;/a&gt; &lt;code&gt;boost::make_variant_over&lt;/code&gt;を修正し、viewや他のForward Sequenceに対して動作するようになった (Mikhail Maksimov氏に感謝)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/faithandbrave&#34; target=&#34;_blank&#34;&gt;Akira Takahashi&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>