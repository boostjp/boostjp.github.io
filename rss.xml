<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boostjp : Boost日本語情報サイト</title>
  <link href="https://boostjp.github.io" />
  <updated>2019-11-14T04:34:01.862260</updated>
  <id>b48d6485-2453-4c7b-97ec-e34b275a9775</id>

  
    <entry>
      <title>Boost 1.72.0リリースノート -- 1.72.0リリースノート : Outcomeを追加 (close #401)</title>
      <link href="https://boostjp.github.io/document/version/1_72_0.html"/>
      <id>3041bd792ba662f2ea63cad15c2eed741d71e1e8:document/version/1_72_0.md</id>
      <updated>2019-11-14T13:29:18+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.72.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_72_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_72_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#endian&#34;&gt;Endian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#functional-factory&#34;&gt;Functional/Factory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/circular_buffer/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;max_size()&lt;/code&gt;メンバ関数がアロケータの&lt;code&gt;max_size()&lt;/code&gt;を考慮するよう修正 (Glen Fernandes氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;s390xアーキテクチャをサポート&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;execution_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#endian&#34; id=&#34;endian&#34;&gt;Endian&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;endian_reverse&lt;/code&gt;、&lt;code&gt;conditional_reverse&lt;/code&gt;、および&lt;code&gt;\*\_to_*&lt;/code&gt;をGCCとClang向けに&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;便利な読み込み関数 (load) と書き込み関数 (store) を追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[load|store]_[big|little]_[s|u][16|24|32|40|48|56|64]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;便利な浮動小数点数型の別名を追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[big|little|native]_float[32|64]_[t|at]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非&lt;code&gt;const&lt;/code&gt;な&lt;code&gt;data()&lt;/code&gt;メンバ関数を追加し、戻り値型を&lt;code&gt;unsigned char*&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;利用可能な場合に&lt;code&gt;endian_reverse&lt;/code&gt;に&lt;code&gt;__int128&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;便利なヘッダ&lt;code&gt;boost/endian.hpp&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#functional-factory&#34; id=&#34;functional-factory&#34;&gt;Functional/Factory&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;factory&lt;/code&gt;と&lt;code&gt;value_factory&lt;/code&gt;の実装を、以下の機能に対応するよう書き換えた (Glen Fernandes氏) ：&lt;ul&gt;
&lt;li&gt;右辺値引数のサポート (可能な場合)&lt;/li&gt;
&lt;li&gt;可変引数テンプレートを使用した任意数の引数サポート (可能な場合)&lt;/li&gt;
&lt;li&gt;finalなアロケータのサポート&lt;/li&gt;
&lt;li&gt;fancy pointer (ポインタのように振る舞う機能) を使用するアロケータのサポート&lt;/li&gt;
&lt;li&gt;例外が無効化された設定をサポート (&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;コンパイル時間を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;以下の機能を削除した：&lt;ul&gt;
&lt;li&gt;C++03向けの&lt;code&gt;BOOST_FUNCTIONAL_VALUE_FACTORY_MAX_ARITY&lt;/code&gt;による引数の数に対する制限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FUNCTIONAL_FACTORY_SUPPORT_NONE_T&lt;/code&gt;による&lt;code&gt;void&lt;/code&gt;の代わりの&lt;code&gt;boost::none_t&lt;/code&gt;の使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#outcome&#34; id=&#34;outcome&#34;&gt;Outcome&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;強化&lt;ul&gt;
&lt;li&gt;スタンドアローン版のOutcomeが&lt;code&gt;make install&lt;/code&gt;ができるようになり、cmakeの&lt;code&gt;find_package()&lt;/code&gt;で見つけられるようになった。注意として、個別にインストールする必要があり、依存関係にある&lt;code&gt;quickcpplib&lt;/code&gt;をインストールしないと&lt;code&gt;find_package()&lt;/code&gt;が失敗する&lt;/li&gt;
&lt;li&gt;スタンドアローン版のOutcomeでは依存ライブラリの管理にgit submoduleを使用していたが、代わりにcmake superbuildの依存関係メカニズムを使用するようにした。cmake configureをすることで、quickcpplibの内部コピーがgit cloneされ、(内部で&lt;code&gt;find_package()&lt;/code&gt;によって) ビルドディレクトリにインストールされる。これは、configureされていないOutcomeリポジトリにとって破壊的変更となり、以下のいずれかを実行する必要がある：&lt;ul&gt;
&lt;li&gt;cmake buildのためのサブディレクトリとしてOutcomeを追加する&lt;/li&gt;
&lt;li&gt;cmake superbuildを使用してビルドとインストールを行う&lt;/li&gt;
&lt;li&gt;シングルヘッダ版を使用する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;スタンドアローン版のOutcomeにおいて、C++ Conceptがコンパイラで使用可能かをチェックし、使用できるなら有効にするようにした。cmake変数&lt;code&gt;CXX_CONCEPTS_FLAGS&lt;/code&gt;を空文字列に設定することで、この自動検出と有効化を防止できる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OUTCOME_TRY&lt;/code&gt;で、操作が成功する可能性が高いかをヒントとしてコンパイラに伝えられるようになった。「&lt;a href=&#34;https://wg21.link/P1886&#34; target=&#34;_blank&#34;&gt;P1886 &lt;em&gt;Error speed benchmarking&lt;/em&gt;&lt;/a&gt;」では、式が成功する可能性が高いかどうかをコンパイラに伝えることにより、非常に小さな関数にとってかなりの有益になることがわかった。&lt;code&gt;OUTCOME_TRY_FAILURE_LIKELY&lt;/code&gt;は操作が失敗する可能性が高いことをコンパイラに伝える。ヒントのない以前の動作に戻したい場合は、&lt;code&gt;OUTCOME_TRY_LIKELY(expr)&lt;/code&gt;の定義を&lt;code&gt;(!!expr)&lt;/code&gt;とすればよい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/199&#34; target=&#34;_blank&#34;&gt;GitHub #199&lt;/a&gt; C++コルーチンのサポートを追加。これには2種類あり、まず&lt;code&gt;TRY&lt;/code&gt;操作を行う&lt;code&gt;OUTCOME_CO_TRY()&lt;/code&gt;がある。もうひとつは、&lt;code&gt;outcome/coroutine_support.hpp&lt;/code&gt;ヘッダに&lt;code&gt;eager&amp;lt;OutcomeType&amp;gt;&lt;/code&gt;と&lt;code&gt;lazy&amp;lt;OutcomeType&amp;gt;&lt;/code&gt;の実装があり、C++コルーチン内から&lt;code&gt;basic_result&lt;/code&gt;と&lt;code&gt;basic_outcome&lt;/code&gt;をより自然で効率よく使える。具体的には、&lt;code&gt;result&lt;/code&gt;もしくは&lt;code&gt;outcome&lt;/code&gt;が例外ポインタから構築される場合、コルーチン内から送出された例外は、コルーチンマシンを介して例外を送出するのではなく、送出された例外を保持するオブジェクトをコルーチンreturnする。&lt;code&gt;earger&amp;lt;T&amp;gt;&lt;/code&gt;と&lt;code&gt;lazy&amp;lt;T&amp;gt;&lt;/code&gt;はどちらも&lt;code&gt;T&lt;/code&gt;を受けられる。どちらもVisual Studio 2019およびClang 9でテストし、動作することを確認している&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/210&#34; target=&#34;_blank&#34;&gt;GitHub #210&lt;/a&gt; &lt;code&gt;make_error_code()&lt;/code&gt;と&lt;code&gt;make_exception_ptr()&lt;/code&gt;が、&lt;code&gt;basic_result&amp;lt;&amp;gt;&lt;/code&gt;との互換性あるコピーとムーブの変換をさらに考慮するようになった。これにより、&lt;code&gt;basic_result&amp;lt;T, E&amp;gt;&lt;/code&gt;から&lt;code&gt;basic_result&amp;lt;T, error_code&amp;gt;&lt;/code&gt;を構築できるようになった。ここで&lt;code&gt;E&lt;/code&gt;は、ADLにより見つかった非メンバ関数&lt;code&gt;error_code make_error_code(E)&lt;/code&gt;を実装したカスタム型である。そうでない場合、&lt;code&gt;E&lt;/code&gt;は&lt;code&gt;error_code&lt;/code&gt;とは関連性がないものとされる。同じ機能が&lt;code&gt;exception_ptr&lt;/code&gt;にもあり、こちらはADLにより&lt;code&gt;make_exception_ptr()&lt;/code&gt;関数が探索される。&lt;code&gt;basic_outcome&amp;lt;&amp;gt;&lt;/code&gt;はコンストラクタの数を維持するために、&lt;code&gt;basic_result&amp;lt;&amp;gt;&lt;/code&gt;よりも小さなサポートとなり、&lt;code&gt;basic_result&amp;lt;&amp;gt;&lt;/code&gt;と&lt;code&gt;failure_type&amp;lt;&amp;gt;&lt;/code&gt;からの変換を受けられる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バグ修正&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ned14/outcome/issues/184&#34; target=&#34;_blank&#34;&gt;GitHub #184&lt;/a&gt; コンパイラの&lt;code&gt;[[nodiscard]]&lt;/code&gt;サポートの検出が壊れていた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.72.0リリースノート -- 1.72.0リリースノート : Functional/Factoryを追加 (close #400)</title>
      <link href="https://boostjp.github.io/document/version/1_72_0.html"/>
      <id>6082b98c2f831614ca9864024ac7c117d281b373:document/version/1_72_0.md</id>
      <updated>2019-11-13T23:38:43+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.72.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_72_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_72_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#endian&#34;&gt;Endian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#functional-factory&#34;&gt;Functional/Factory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/circular_buffer/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;max_size()&lt;/code&gt;メンバ関数がアロケータの&lt;code&gt;max_size()&lt;/code&gt;を考慮するよう修正 (Glen Fernandes氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;s390xアーキテクチャをサポート&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;execution_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#endian&#34; id=&#34;endian&#34;&gt;Endian&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;endian_reverse&lt;/code&gt;、&lt;code&gt;conditional_reverse&lt;/code&gt;、および&lt;code&gt;\*\_to_*&lt;/code&gt;をGCCとClang向けに&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;便利な読み込み関数 (load) と書き込み関数 (store) を追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[load|store]_[big|little]_[s|u][16|24|32|40|48|56|64]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;便利な浮動小数点数型の別名を追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[big|little|native]_float[32|64]_[t|at]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非&lt;code&gt;const&lt;/code&gt;な&lt;code&gt;data()&lt;/code&gt;メンバ関数を追加し、戻り値型を&lt;code&gt;unsigned char*&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;利用可能な場合に&lt;code&gt;endian_reverse&lt;/code&gt;に&lt;code&gt;__int128&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;便利なヘッダ&lt;code&gt;boost/endian.hpp&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#functional-factory&#34; id=&#34;functional-factory&#34;&gt;Functional/Factory&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;factory&lt;/code&gt;と&lt;code&gt;value_factory&lt;/code&gt;の実装を、以下の機能に対応するよう書き換えた (Glen Fernandes氏) ：&lt;ul&gt;
&lt;li&gt;右辺値引数のサポート (可能な場合)&lt;/li&gt;
&lt;li&gt;可変引数テンプレートを使用した任意数の引数サポート (可能な場合)&lt;/li&gt;
&lt;li&gt;finalなアロケータのサポート&lt;/li&gt;
&lt;li&gt;fancy pointer (ポインタのように振る舞う機能) を使用するアロケータのサポート&lt;/li&gt;
&lt;li&gt;例外が無効化された設定をサポート (&lt;code&gt;BOOST_NO_EXCEPTIONS&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;コンパイル時間を改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;以下の機能を削除した：&lt;ul&gt;
&lt;li&gt;C++03向けの&lt;code&gt;BOOST_FUNCTIONAL_VALUE_FACTORY_MAX_ARITY&lt;/code&gt;による引数の数に対する制限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BOOST_FUNCTIONAL_FACTORY_SUPPORT_NONE_T&lt;/code&gt;による&lt;code&gt;void&lt;/code&gt;の代わりの&lt;code&gt;boost::none_t&lt;/code&gt;の使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.72.0リリースノート -- 1.72.0リリースノート : Endianを追加 (close #399)</title>
      <link href="https://boostjp.github.io/document/version/1_72_0.html"/>
      <id>4a78987c42ecd9c485df7332f3c8a32b7fa0e2bc:document/version/1_72_0.md</id>
      <updated>2019-11-12T17:52:49+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.72.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_72_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_72_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#endian&#34;&gt;Endian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/circular_buffer/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;max_size()&lt;/code&gt;メンバ関数がアロケータの&lt;code&gt;max_size()&lt;/code&gt;を考慮するよう修正 (Glen Fernandes氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;s390xアーキテクチャをサポート&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;execution_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#endian&#34; id=&#34;endian&#34;&gt;Endian&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;endian_reverse&lt;/code&gt;、&lt;code&gt;conditional_reverse&lt;/code&gt;、および&lt;code&gt;\*\_to_*&lt;/code&gt;をGCCとClang向けに&lt;code&gt;constexpr&lt;/code&gt;にした&lt;/li&gt;
&lt;li&gt;便利な読み込み関数 (load) と書き込み関数 (store) を追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[load|store]_[big|little]_[s|u][16|24|32|40|48|56|64]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;便利な浮動小数点数型の別名を追加&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[big|little|native]_float[32|64]_[t|at]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非&lt;code&gt;const&lt;/code&gt;な&lt;code&gt;data()&lt;/code&gt;メンバ関数を追加し、戻り値型を&lt;code&gt;unsigned char*&lt;/code&gt;に変更&lt;/li&gt;
&lt;li&gt;利用可能な場合に&lt;code&gt;endian_reverse&lt;/code&gt;に&lt;code&gt;__int128&lt;/code&gt;のサポートを追加&lt;/li&gt;
&lt;li&gt;便利なヘッダ&lt;code&gt;boost/endian.hpp&lt;/code&gt;を追加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.72.0リリースノート -- 1.72.0リリースノート : Contextを追加 (close #398)</title>
      <link href="https://boostjp.github.io/document/version/1_72_0.html"/>
      <id>59f5bd2cef1bf2ac3d3c816d37802e84a1210c1c:document/version/1_72_0.md</id>
      <updated>2019-11-11T14:00:01+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.72.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_72_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_72_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/circular_buffer/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;max_size()&lt;/code&gt;メンバ関数がアロケータの&lt;code&gt;max_size()&lt;/code&gt;を考慮するよう修正 (Glen Fernandes氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#context&#34; id=&#34;context&#34;&gt;Context&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;s390xアーキテクチャをサポート&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;破壊的変更&lt;/strong&gt;&lt;/span&gt; &lt;code&gt;execution_context&lt;/code&gt;を削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Boost 1.72.0リリースノート -- 1.72.0リリースノート : CircularBufferを追加 (close #397)</title>
      <link href="https://boostjp.github.io/document/version/1_72_0.html"/>
      <id>f81cc50f8f87d0add7945f1a19c8f4a74f1d824b:document/version/1_72_0.md</id>
      <updated>2019-11-06T13:35:40+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Boost 1.72.0リリースノート&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本家リリースノート：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/website/blob/master/feed/history/boost_1_72_0.qbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/history/version_1_72_0.html&#34; target=&#34;_blank&#34;&gt;http://www.boost.org/users/history/version_1_72_0.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/&#34; target=&#34;_blank&#34;&gt;https://github.com/boostorg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリからのビルド方法は、egtraさんのブログを参照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&#34;http://dev.activebasic.com/egtra/2013/12/03/620/&#34; target=&#34;_blank&#34;&gt;Modularized Boost（GitHubへ移行したリポジトリ）を使用する&lt;/a&gt;」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#newone&#34;&gt;NewOne&lt;/a&gt; # example&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更新ライブラリ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://boostjp.github.io/document/version/1_72_0.html#circular-buffer&#34; id=&#34;circular-buffer&#34;&gt;CircularBuffer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/circular_buffer/issues/29&#34; target=&#34;_blank&#34;&gt;GitHub #29&lt;/a&gt; &lt;code&gt;max_size()&lt;/code&gt;メンバ関数がアロケータの&lt;code&gt;max_size()&lt;/code&gt;を考慮するよう修正 (Glen Fernandes氏)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;テスト済みコンパイラ&lt;/h2&gt;
&lt;p&gt;主要なテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加して含まれるテストコンパイラ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;GCC, C++11:&lt;/li&gt;
&lt;li&gt;GCC, C++14:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;li&gt;Intel, C++11:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X:&lt;ul&gt;
&lt;li&gt;Apple Clang:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++11:&lt;/li&gt;
&lt;li&gt;Apple Clang, C++14:&lt;/li&gt;
&lt;li&gt;Clang:&lt;/li&gt;
&lt;li&gt;Clang, C++11:&lt;/li&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;li&gt;Intel:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;GCC, mingw:&lt;/li&gt;
&lt;li&gt;Visual C++:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FreeBSD:&lt;ul&gt;
&lt;li&gt;GCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QNX:&lt;ul&gt;
&lt;li&gt;QCC:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;翻訳&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Someone&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>